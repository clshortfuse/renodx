cbuffer SceneInfoUBO : register(b0, space0)
{
    float4 SceneInfo_m0[39] : packoffset(c0);
};

cbuffer EnvironmentInfoUBO : register(b1, space0)
{
    float4 EnvironmentInfo_m0[324] : packoffset(c0);
};

cbuffer HDRMappingUBO : register(b2, space0)
{
    float4 HDRMapping_m0[15] : packoffset(c0);
};

cbuffer GUIConstantUBO : register(b3, space0)
{
    float4 GUIConstant_m0[18] : packoffset(c0);
};

cbuffer UserMaterialUBO : register(b4, space0)
{
    float4 UserMaterial_m0[9] : packoffset(c0);
};

Texture2D<float4> Tex2D_0 : register(t0, space0);
Texture2D<float4> Tex2D_1 : register(t1, space0);
RWTexture2D<float> RWResult : register(u0, space0);
SamplerState BilinearWrap : register(s4, space32);

static uint3 gl_WorkGroupID;
static uint3 gl_LocalInvocationID;
struct SPIRV_Cross_Input
{
    uint3 gl_WorkGroupID : SV_GroupID;
    uint3 gl_LocalInvocationID : SV_GroupThreadID;
};

void comp_main()
{
    uint _59 = uint(gl_LocalInvocationID.x);
    uint _62 = _59 >> 1u;
    uint _66 = _59 >> 2u;
    uint _70 = _59 >> 3u;
    uint _81 = ((((_59 & 1u) | (uint(gl_WorkGroupID.x) << 4u)) | (_62 & 2u)) | (_66 & 4u)) | (_70 & 8u);
    uint _86 = ((((_62 & 1u) | (uint(gl_WorkGroupID.y) << 4u)) | (_66 & 2u)) | (_70 & 4u)) | ((_59 >> 4u) & 8u);
    float _89 = float(_81) + 0.5f;
    float _97 = _89 * SceneInfo_m0[23u].z;
    float _100 = (float(_86) + 0.5f) * SceneInfo_m0[23u].w;
    float _103 = ((SceneInfo_m0[23u].w * SceneInfo_m0[23u].x) * SceneInfo_m0[23u].z) * _89;
    float _108 = 1.0f - UserMaterial_m0[6u].x;
    float _112 = _103 * 2.75f;
    float _141 = (sin((_103 * 27.5f) + (frac(EnvironmentInfo_m0[4u].y * 4.9999998736893758177757263183594e-05f) * 6.280000209808349609375f)) * 0.010999999940395355224609375f) + (_100 * 2.75f);
    float _164 = Tex2D_0.SampleGrad(BilinearWrap, float2(((_103 * 4.0f) + (_108 * 0.20000000298023223876953125f)) + frac(EnvironmentInfo_m0[4u].y * (-0.0001000000047497451305389404296875f)), (((sin((_103 * 30.0f) + (frac(EnvironmentInfo_m0[4u].y * 0.0005000000237487256526947021484375f) * 6.280000209808349609375f)) * 0.010999999940395355224609375f) + _100) * 4.0f) + 1.0f), 0.0f.xx, 0.0f.xx).x * (1.10000002384185791015625f - UserMaterial_m0[6u].x);
    float _177 = 1.0f - _97;
    float _178 = _164 * 0.014999999664723873138427734375f;
    float _200 = clamp(_97 * 10.0f, 0.0f, 1.0f);
    float _205 = clamp(_177 * 10.0f, 0.0f, 1.0f);
    float _213 = exp2(log2(max(Tex2D_1.SampleGrad(BilinearWrap, float2(frac(EnvironmentInfo_m0[4u].y * (-7.6923075539525598287582397460938e-05f)) + _112, _141), 0.0f.xx, 0.0f.xx).x * Tex2D_1.SampleGrad(BilinearWrap, float2((_112 + (_108 * 0.0599999986588954925537109375f)) + frac(EnvironmentInfo_m0[4u].y * (-0.00012500000593718141317367553710938f)), _141 + 0.5f), 0.0f.xx, 0.0f.xx).x, 9.9999999747524270787835121154785e-07f)) * 13.0f);
    float4 _214 = Tex2D_0.SampleGrad(BilinearWrap, float2(_178 + (_103 * 2.0f), _178 + (_100 * 2.0f)), 0.0f.xx, 0.0f.xx);
    float _218 = _214.y;
    precise float _219 = _200 * _205;
    precise float _220 = _219 * _219;
    float _222 = ((3.0f - (_205 * 2.0f)) * (3.0f - (_200 * 2.0f))) * _220;
    float _225 = clamp(_97 * 20.0f, 0.0f, 1.0f);
    float _227 = 3.0f - (_225 * 2.0f);
    float _232 = clamp((_213 + (-0.0024999999441206455230712890625f)) * 57.142856597900390625f, 0.0f, 1.0f);
    float _236 = (_232 * _232) * (3.0f - (_232 * 2.0f));
    float _251 = clamp((0.800000011920928955078125f - _97) * 1.4285714626312255859375f, 0.0f, 1.0f);
    float _255 = (_251 * _251) * (3.0f - (_251 * 2.0f));
    float _265 = (_213 < 0.07999999821186065673828125f) ? 0.0f : 1.0f;
    float _266 = _218 * _164;
    float _276 = UserMaterial_m0[5u].x * _222;
    float _277 = _225 * _225;
    float _280 = ((_277 * _177) * _266) * _227;
    float _302 = (((_218 * _222) * UserMaterial_m0[5u].y) * (1.0f - _276)) + _276;
    float _305 = ((1.0f - _302) * _280) + _302;
    float _306 = clamp((_177 * 0.3019607961177825927734375f) + (_97 * 0.2941176593303680419921875f), 0.0f, 1.0f) + ((_255 * ((_236 * 0.098039217293262481689453125f) + _265)) * UserMaterial_m0[5u].z);
    float _308 = (clamp((_97 * 0.56078433990478515625f) + _177, 0.0f, 1.0f) + _280) + ((_255 * ((_236 * 0.6705882549285888671875f) + _265)) * UserMaterial_m0[5u].z);
    float _310 = (clamp((_177 * 0.949019610881805419921875f) + (_97 * 0.78823530673980712890625f), 0.0f, 1.0f) + (((_277 * (_177 * 0.6392157077789306640625f)) * _266) * _227)) + ((_255 * ((_236 * 0.698039233684539794921875f) + _265)) * UserMaterial_m0[5u].z);
    float _328;
    float _329;
    float _330;
    if (_305 > 0.0f)
    {
        float _324 = 1.0f / ((float((asuint(GUIConstant_m0[15u]).w >> 8u) & 1u) * (1.0f - _305)) + _305);
        _328 = _324 * _308;
        _329 = _324 * _310;
        _330 = _324 * _306;
    }
    else
    {
        _328 = _308;
        _329 = _310;
        _330 = _306;
    }
    bool _333 = max(max(_328, _329), _330) == 0.0f;
    bool _334 = _305 == 0.0f;
    if (!(_334 && _333))
    {
        float _342;
        float _344;
        float _346;
        if (asuint(HDRMapping_m0[14u]).y == 0u)
        {
            _342 = _328;
            _344 = _329;
            _346 = _330;
        }
        else
        {
            float _375 = exp2(log2(mad(0.0810546875f, _330, mad(0.623046875f, _329, _328 * 0.295654296875f)) * 0.00999999977648258209228515625f) * 0.1593017578125f);
            float _388 = clamp(exp2(log2(((_375 * 18.8515625f) + 0.8359375f) / ((_375 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
            float _392 = exp2(log2(mad(0.116455078125f, _330, mad(0.727294921875f, _329, _328 * 0.15625f)) * 0.00999999977648258209228515625f) * 0.1593017578125f);
            float _401 = clamp(exp2(log2(((_392 * 18.8515625f) + 0.8359375f) / ((_392 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
            float _405 = exp2(log2(mad(0.808349609375f, _330, mad(0.156494140625f, _329, _328 * 0.03515625f)) * 0.00999999977648258209228515625f) * 0.1593017578125f);
            float _414 = clamp(exp2(log2(((_405 * 18.8515625f) + 0.8359375f) / ((_405 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
            float _416 = (_401 + _388) * 0.5f;
            float _437 = exp2(log2(clamp(_416, 0.0f, 1.0f)) * 0.0126833133399486541748046875f);
            float _448 = exp2(log2(max(0.0f, _437 + (-0.8359375f)) / (18.8515625f - (_437 * 18.6875f))) * 6.277394771575927734375f) * 100.0f;
            float _463 = exp2(log2(((HDRMapping_m0[14u].z * 0.00999999977648258209228515625f) * _448) * ((((HDRMapping_m0[14u].z + (-1.0f)) * _305) * _448) + 1.0f)) * 0.1593017578125f);
            float _472 = clamp(exp2(log2(((_463 * 18.8515625f) + 0.8359375f) / ((_463 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
            float _475 = min(_416 / _472, _472 / _416);
            float _476 = ((dot(float3(_388, _401, _414), float3(6610.0f, -13613.0f, 7003.0f)) * 0.000244140625f) * HDRMapping_m0[14u].w) * _475;
            float _477 = ((dot(float3(_388, _401, _414), float3(17933.0f, -17390.0f, -543.0f)) * 0.000244140625f) * HDRMapping_m0[14u].w) * _475;
            float _493 = exp2(log2(clamp(mad(0.111000001430511474609375f, _477, mad(0.0089999996125698089599609375f, _476, _472)), 0.0f, 1.0f)) * 0.0126833133399486541748046875f);
            float _501 = exp2(log2(max(0.0f, _493 + (-0.8359375f)) / (18.8515625f - (_493 * 18.6875f))) * 6.277394771575927734375f);
            float _505 = exp2(log2(clamp(mad(-0.111000001430511474609375f, _477, mad(-0.0089999996125698089599609375f, _476, _472)), 0.0f, 1.0f)) * 0.0126833133399486541748046875f);
            float _514 = exp2(log2(max(0.0f, _505 + (-0.8359375f)) / (18.8515625f - (_505 * 18.6875f))) * 6.277394771575927734375f) * 100.0f;
            float _518 = exp2(log2(clamp(mad(-0.3210000097751617431640625f, _477, mad(0.560000002384185791015625f, _476, _472)), 0.0f, 1.0f)) * 0.0126833133399486541748046875f);
            float _527 = exp2(log2(max(0.0f, _518 + (-0.8359375f)) / (18.8515625f - (_518 * 18.6875f))) * 6.277394771575927734375f) * 100.0f;
            float _532 = mad(0.20700000226497650146484375f, _527, mad(-1.32700002193450927734375f, _514, _501 * 207.100006103515625f));
            float _538 = mad(-0.04500000178813934326171875f, _527, mad(0.6809999942779541015625f, _514, _501 * 36.5f));
            float _544 = mad(1.1879999637603759765625f, _527, mad(-0.0500000007450580596923828125f, _514, _501 * (-4.900000095367431640625f)));
            _342 = mad(-0.498610794544219970703125f, _544, mad(-1.53738319873809814453125f, _538, _532 * 3.2409698963165283203125f));
            _344 = mad(0.0415550954639911651611328125f, _544, mad(1.8759677410125732421875f, _538, _532 * (-0.969243705272674560546875f)));
            _346 = mad(1.05697143077850341796875f, _544, mad(-0.2039768397808074951171875f, _538, _532 * 0.0556300692260265350341796875f));
        }
        float _659;
        float _663;
        float _667;
        if (_305 == 1.0f)
        {
            float _569 = mad(0.043313600122928619384765625f, _346, mad(0.329281985759735107421875f, _344, _342 * 0.6274039745330810546875f));
            float _575 = mad(0.0113612003624439239501953125f, _346, mad(0.919539988040924072265625f, _344, _342 * 0.06909699738025665283203125f));
            float _581 = mad(0.895595014095306396484375f, _346, mad(0.0880132019519805908203125f, _344, _342 * 0.01639159955084323883056640625f));
            float _608 = 10000.0f / HDRMapping_m0[10u].y;
            float _618 = exp2(log2(clamp(exp2(log2((HDRMapping_m0[8u].y * (_342 - _569)) + _569) * HDRMapping_m0[7u].y) / _608, 0.0f, 1.0f)) * 0.1593017578125f);
            float _627 = clamp(exp2(log2(((_618 * 18.8515625f) + 0.8359375f) / ((_618 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
            float _630 = exp2(log2(clamp(exp2(log2((HDRMapping_m0[8u].y * (_344 - _575)) + _575) * HDRMapping_m0[7u].y) / _608, 0.0f, 1.0f)) * 0.1593017578125f);
            float _639 = clamp(exp2(log2(((_630 * 18.8515625f) + 0.8359375f) / ((_630 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
            float _642 = exp2(log2(clamp(exp2(log2((HDRMapping_m0[8u].y * (_346 - _581)) + _581) * HDRMapping_m0[7u].y) / _608, 0.0f, 1.0f)) * 0.1593017578125f);
            float _651 = clamp(exp2(log2(((_642 * 18.8515625f) + 0.8359375f) / ((_642 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
            float frontier_phi_9_7_ladder;
            float frontier_phi_9_7_ladder_1;
            float frontier_phi_9_7_ladder_2;
            if ((asuint(HDRMapping_m0[7u]).x & 2u) == 0u)
            {
                frontier_phi_9_7_ladder = _627;
                frontier_phi_9_7_ladder_1 = _639;
                frontier_phi_9_7_ladder_2 = _651;
            }
            else
            {
                float _685 = exp2(log2(clamp(HDRMapping_m0[0u].z * 9.9999997473787516355514526367188e-05f, 0.0f, 1.0f)) * 0.1593017578125f);
                float _694 = clamp(exp2(log2(((_685 * 18.8515625f) + 0.8359375f) / ((_685 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
                float _700 = exp2(log2(clamp(HDRMapping_m0[0u].w * 9.9999997473787516355514526367188e-05f, 0.0f, 1.0f)) * 0.1593017578125f);
                float _710 = _694 - clamp(exp2(log2(((_700 * 18.8515625f) + 0.8359375f) / ((_700 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
                float _714 = clamp(_627 / _694, 0.0f, 1.0f);
                float _715 = clamp(_639 / _694, 0.0f, 1.0f);
                float _716 = clamp(_651 / _694, 0.0f, 1.0f);
                frontier_phi_9_7_ladder = min((((2.0f - (_714 + _714)) * _710) + (_714 * _694)) * _714, _627);
                frontier_phi_9_7_ladder_1 = min((((2.0f - (_715 + _715)) * _710) + (_715 * _694)) * _715, _639);
                frontier_phi_9_7_ladder_2 = min((((2.0f - (_716 + _716)) * _710) + (_716 * _694)) * _716, _651);
            }
            _659 = frontier_phi_9_7_ladder;
            _663 = frontier_phi_9_7_ladder_1;
            _667 = frontier_phi_9_7_ladder_2;
        }
        else
        {
            bool _736;
            if (_334)
            {
                _736 = !_333;
            }
            else
            {
                _736 = false;
            }
            float4 _741 = RWResult[uint2(uint(_81), uint(_86))].xxxx;
            float _755 = exp2(log2(clamp(_741.x, 0.0f, 1.0f)) * 0.0126833133399486541748046875f);
            float _756 = exp2(log2(clamp(_741.y, 0.0f, 1.0f)) * 0.0126833133399486541748046875f);
            float _757 = exp2(log2(clamp(_741.z, 0.0f, 1.0f)) * 0.0126833133399486541748046875f);
            float _785 = 10000.0f / HDRMapping_m0[10u].y;
            float _786 = _785 * exp2(log2(max(0.0f, _755 + (-0.8359375f)) / (18.8515625f - (_755 * 18.6875f))) * 6.277394771575927734375f);
            float _787 = _785 * exp2(log2(max(0.0f, _756 + (-0.8359375f)) / (18.8515625f - (_756 * 18.6875f))) * 6.277394771575927734375f);
            float _788 = _785 * exp2(log2(max(0.0f, _757 + (-0.8359375f)) / (18.8515625f - (_757 * 18.6875f))) * 6.277394771575927734375f);
            float _793 = mad(-0.07285170257091522216796875f, _788, mad(-0.587639987468719482421875f, _787, _786 * 1.66049098968505859375f));
            float _799 = mad(-0.008348000235855579376220703125f, _788, mad(1.1328999996185302734375f, _787, _786 * (-0.12454999983310699462890625f)));
            float _805 = mad(1.11872994899749755859375f, _788, mad(-0.100579001009464263916015625f, _787, _786 * (-0.01815100014209747314453125f)));
            float _807;
            float _809;
            float _811;
            if (_736)
            {
                _807 = _342;
                _809 = _344;
                _811 = _346;
            }
            else
            {
                _807 = (_342 - _793) * _305;
                _809 = (_344 - _799) * _305;
                _811 = (_346 - _805) * _305;
            }
            float _813 = _807 + _793;
            float _814 = _809 + _799;
            float _815 = _811 + _805;
            float _818 = mad(0.043313600122928619384765625f, _815, mad(0.329281985759735107421875f, _814, _813 * 0.6274039745330810546875f));
            float _821 = mad(0.0113612003624439239501953125f, _815, mad(0.919539988040924072265625f, _814, _813 * 0.06909699738025665283203125f));
            float _824 = mad(0.895595014095306396484375f, _815, mad(0.0880132019519805908203125f, _814, _813 * 0.01639159955084323883056640625f));
            float _857 = exp2(log2(clamp(exp2(log2((HDRMapping_m0[8u].y * (_813 - _818)) + _818) * HDRMapping_m0[7u].y) / _785, 0.0f, 1.0f)) * 0.1593017578125f);
            float _662 = clamp(exp2(log2(((_857 * 18.8515625f) + 0.8359375f) / ((_857 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
            float _868 = exp2(log2(clamp(exp2(log2((HDRMapping_m0[8u].y * (_814 - _821)) + _821) * HDRMapping_m0[7u].y) / _785, 0.0f, 1.0f)) * 0.1593017578125f);
            float _666 = clamp(exp2(log2(((_868 * 18.8515625f) + 0.8359375f) / ((_868 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
            float _879 = exp2(log2(clamp(exp2(log2((HDRMapping_m0[8u].y * (_815 - _824)) + _824) * HDRMapping_m0[7u].y) / _785, 0.0f, 1.0f)) * 0.1593017578125f);
            float _670 = clamp(exp2(log2(((_879 * 18.8515625f) + 0.8359375f) / ((_879 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
            float frontier_phi_9_13_ladder;
            float frontier_phi_9_13_ladder_1;
            float frontier_phi_9_13_ladder_2;
            if ((asuint(HDRMapping_m0[7u]).x & 2u) == 0u)
            {
                frontier_phi_9_13_ladder = _662;
                frontier_phi_9_13_ladder_1 = _666;
                frontier_phi_9_13_ladder_2 = _670;
            }
            else
            {
                float _904 = exp2(log2(clamp(HDRMapping_m0[0u].z * 9.9999997473787516355514526367188e-05f, 0.0f, 1.0f)) * 0.1593017578125f);
                float _913 = clamp(exp2(log2(((_904 * 18.8515625f) + 0.8359375f) / ((_904 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
                float _919 = exp2(log2(clamp(HDRMapping_m0[0u].w * 9.9999997473787516355514526367188e-05f, 0.0f, 1.0f)) * 0.1593017578125f);
                float _929 = _913 - clamp(exp2(log2(((_919 * 18.8515625f) + 0.8359375f) / ((_919 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
                float _933 = clamp(_662 / _913, 0.0f, 1.0f);
                float _934 = clamp(_666 / _913, 0.0f, 1.0f);
                float _935 = clamp(_670 / _913, 0.0f, 1.0f);
                frontier_phi_9_13_ladder = min((((2.0f - (_933 + _933)) * _929) + (_933 * _913)) * _933, _662);
                frontier_phi_9_13_ladder_1 = min((((2.0f - (_934 + _934)) * _929) + (_934 * _913)) * _934, _666);
                frontier_phi_9_13_ladder_2 = min((((2.0f - (_935 + _935)) * _929) + (_935 * _913)) * _935, _670);
            }
            _659 = frontier_phi_9_13_ladder;
            _663 = frontier_phi_9_13_ladder_1;
            _667 = frontier_phi_9_13_ladder_2;
        }
        RWResult[uint2(uint(_81), uint(_86))] = float4(_659, _663, _667, _659).x;
    }
}

[numthreads(256, 1, 1)]
void main(SPIRV_Cross_Input stage_input)
{
    gl_WorkGroupID = stage_input.gl_WorkGroupID;
    gl_LocalInvocationID = stage_input.gl_LocalInvocationID;
    comp_main();
}
