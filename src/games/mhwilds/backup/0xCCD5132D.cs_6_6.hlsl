cbuffer HDRMappingUBO : register(b0, space0)
{
    float4 HDRMapping_m0[15] : packoffset(c0);
};

RWTexture2D<float4> RWResult : register(u0, space0);

static uint3 gl_WorkGroupID;
static uint3 gl_LocalInvocationID;
struct SPIRV_Cross_Input
{
    uint3 gl_WorkGroupID : SV_GroupID;
    uint3 gl_LocalInvocationID : SV_GroupThreadID;
};

void comp_main()
{
    uint _32 = uint(gl_LocalInvocationID.x);
    uint _35 = _32 >> 1u;
    uint _39 = _32 >> 2u;
    uint _43 = _32 >> 3u;
    float _69;
    float _72;
    float _74;
    if (asuint(HDRMapping_m0[14u]).y == 0u)
    {
        _69 = 0.0f;
        _72 = 0.0f;
        _74 = 1.0f;
    }
    else
    {
        float _200 = exp2(log2((HDRMapping_m0[14u].z * 0.00097388587892055511474609375f) * (((HDRMapping_m0[14u].z + (-1.0f)) * 0.097388587892055511474609375f) + 1.0f)) * 0.1593017578125f);
        float _209 = clamp(exp2(log2(((_200 * 18.8515625f) + 0.8359375f) / ((_200 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
        float _214 = min(0.297616779804229736328125f / _209, _209 * 3.3600256443023681640625f);
        float _215 = (HDRMapping_m0[14u].w * 0.25335991382598876953125f) * _214;
        float _216 = (HDRMapping_m0[14u].w * (-0.1477645337581634521484375f)) * _214;
        float _233 = exp2(log2(clamp(mad(0.111000001430511474609375f, _216, mad(0.0089999996125698089599609375f, _215, _209)), 0.0f, 1.0f)) * 0.0126833133399486541748046875f);
        float _243 = exp2(log2(max(0.0f, _233 + (-0.8359375f)) / (18.8515625f - (_233 * 18.6875f))) * 6.277394771575927734375f);
        float _247 = exp2(log2(clamp(mad(-0.111000001430511474609375f, _216, mad(-0.0089999996125698089599609375f, _215, _209)), 0.0f, 1.0f)) * 0.0126833133399486541748046875f);
        float _256 = exp2(log2(max(0.0f, _247 + (-0.8359375f)) / (18.8515625f - (_247 * 18.6875f))) * 6.277394771575927734375f) * 100.0f;
        float _261 = exp2(log2(clamp(mad(-0.3210000097751617431640625f, _216, mad(0.560000002384185791015625f, _215, _209)), 0.0f, 1.0f)) * 0.0126833133399486541748046875f);
        float _270 = exp2(log2(max(0.0f, _261 + (-0.8359375f)) / (18.8515625f - (_261 * 18.6875f))) * 6.277394771575927734375f) * 100.0f;
        float _275 = mad(0.20700000226497650146484375f, _270, mad(-1.32700002193450927734375f, _256, _243 * 207.100006103515625f));
        float _281 = mad(-0.04500000178813934326171875f, _270, mad(0.6809999942779541015625f, _256, _243 * 36.5f));
        float _287 = mad(1.1879999637603759765625f, _270, mad(-0.0500000007450580596923828125f, _256, _243 * (-4.900000095367431640625f)));
        _69 = mad(-0.498610794544219970703125f, _287, mad(-1.53738319873809814453125f, _281, _275 * 3.2409698963165283203125f));
        _72 = mad(0.0415550954639911651611328125f, _287, mad(1.8759677410125732421875f, _281, _275 * (-0.969243705272674560546875f)));
        _74 = mad(1.05697143077850341796875f, _287, mad(-0.2039768397808074951171875f, _281, _275 * 0.0556300692260265350341796875f));
    }
    float _86 = mad(0.043313600122928619384765625f, _74, mad(0.329281985759735107421875f, _72, _69 * 0.6274039745330810546875f));
    float _92 = mad(0.0113612003624439239501953125f, _74, mad(0.919539988040924072265625f, _72, _69 * 0.06909699738025665283203125f));
    float _98 = mad(0.895595014095306396484375f, _74, mad(0.0880132019519805908203125f, _72, _69 * 0.01639159955084323883056640625f));
    float _126 = 10000.0f / HDRMapping_m0[10u].y;
    float _137 = exp2(log2(clamp(exp2(log2((HDRMapping_m0[8u].y * (_69 - _86)) + _86) * HDRMapping_m0[7u].y) / _126, 0.0f, 1.0f)) * 0.1593017578125f);
    float _150 = clamp(exp2(log2(((_137 * 18.8515625f) + 0.8359375f) / ((_137 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
    float _153 = exp2(log2(clamp(exp2(log2((HDRMapping_m0[8u].y * (_72 - _92)) + _92) * HDRMapping_m0[7u].y) / _126, 0.0f, 1.0f)) * 0.1593017578125f);
    float _162 = clamp(exp2(log2(((_153 * 18.8515625f) + 0.8359375f) / ((_153 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
    float _165 = exp2(log2(clamp(exp2(log2((HDRMapping_m0[8u].y * (_74 - _98)) + _98) * HDRMapping_m0[7u].y) / _126, 0.0f, 1.0f)) * 0.1593017578125f);
    float _174 = clamp(exp2(log2(((_165 * 18.8515625f) + 0.8359375f) / ((_165 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
    float _304;
    float _306;
    float _308;
    if ((asuint(HDRMapping_m0[7u]).x & 2u) == 0u)
    {
        _304 = _150;
        _306 = _162;
        _308 = _174;
    }
    else
    {
        float _324 = exp2(log2(clamp(HDRMapping_m0[0u].z * 9.9999997473787516355514526367188e-05f, 0.0f, 1.0f)) * 0.1593017578125f);
        float _333 = clamp(exp2(log2(((_324 * 18.8515625f) + 0.8359375f) / ((_324 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
        float _339 = exp2(log2(clamp(HDRMapping_m0[0u].w * 9.9999997473787516355514526367188e-05f, 0.0f, 1.0f)) * 0.1593017578125f);
        float _349 = _333 - clamp(exp2(log2(((_339 * 18.8515625f) + 0.8359375f) / ((_339 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
        float _353 = clamp(_150 / _333, 0.0f, 1.0f);
        float _354 = clamp(_162 / _333, 0.0f, 1.0f);
        float _355 = clamp(_174 / _333, 0.0f, 1.0f);
        _304 = min((((2.0f - (_353 + _353)) * _349) + (_353 * _333)) * _353, _150);
        _306 = min((((2.0f - (_354 + _354)) * _349) + (_354 * _333)) * _354, _162);
        _308 = min((((2.0f - (_355 + _355)) * _349) + (_355 * _333)) * _355, _174);
    }
    RWResult[uint2(uint(((((_32 & 1u) | (uint(gl_WorkGroupID.x) << 4u)) | (_35 & 2u)) | (_39 & 4u)) | (_43 & 8u)), uint(((((_35 & 1u) | (uint(gl_WorkGroupID.y) << 4u)) | (_39 & 2u)) | (_43 & 4u)) | ((_32 >> 4u) & 8u)))] = float4(_304, _306, _308, _304);
}

[numthreads(256, 1, 1)]
void main(SPIRV_Cross_Input stage_input)
{
    gl_WorkGroupID = stage_input.gl_WorkGroupID;
    gl_LocalInvocationID = stage_input.gl_LocalInvocationID;
    comp_main();
}
