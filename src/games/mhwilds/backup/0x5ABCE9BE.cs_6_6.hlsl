cbuffer SceneInfoUBO : register(b0, space0)
{
    float4 SceneInfo_m0[39] : packoffset(c0);
};

cbuffer EnvironmentInfoUBO : register(b1, space0)
{
    float4 EnvironmentInfo_m0[324] : packoffset(c0);
};

cbuffer HDRMappingUBO : register(b2, space0)
{
    float4 HDRMapping_m0[15] : packoffset(c0);
};

cbuffer GUIConstantUBO : register(b3, space0)
{
    float4 GUIConstant_m0[18] : packoffset(c0);
};

cbuffer UserMaterialUBO : register(b4, space0)
{
    float4 UserMaterial_m0[5] : packoffset(c0);
};

Texture2D<float4> Tex2D_0 : register(t0, space0);
RWTexture2D<float> RWResult : register(u0, space0);
SamplerState BilinearWrap : register(s4, space32);

static uint3 gl_WorkGroupID;
static uint3 gl_LocalInvocationID;
struct SPIRV_Cross_Input
{
    uint3 gl_WorkGroupID : SV_GroupID;
    uint3 gl_LocalInvocationID : SV_GroupThreadID;
};

void comp_main()
{
    uint _58 = uint(gl_LocalInvocationID.x);
    uint _61 = _58 >> 1u;
    uint _65 = _58 >> 2u;
    uint _69 = _58 >> 3u;
    uint _80 = ((((_58 & 1u) | (uint(gl_WorkGroupID.x) << 4u)) | (_61 & 2u)) | (_65 & 4u)) | (_69 & 8u);
    uint _85 = ((((_61 & 1u) | (uint(gl_WorkGroupID.y) << 4u)) | (_65 & 2u)) | (_69 & 4u)) | ((_58 >> 4u) & 8u);
    float _88 = float(_80) + 0.5f;
    float _97 = (float(_85) + 0.5f) * SceneInfo_m0[23u].w;
    float _99 = (_88 * SceneInfo_m0[23u].z) * 3.0f;
    float _101 = _97 * 3.0f;
    float _106 = UserMaterial_m0[4u].y * 0.100000001490116119384765625f;
    float _117 = frac(EnvironmentInfo_m0[4u].y * 5.5000000429572537541389465332031e-06f);
    float _119 = _117 + _106;
    float _137 = Tex2D_0.SampleLevel(BilinearWrap, float2(_119 - _99, ((_106 + 0.300000011920928955078125f) + _117) - _101), 0.0f).x + Tex2D_0.SampleLevel(BilinearWrap, float2(((_106 + 0.5f) + _117) + _99, _119 + _101), 0.0f).x;
    float _142 = (_137 * 0.039999999105930328369140625f) - (UserMaterial_m0[4u].y * 0.02999999932944774627685546875f);
    float _147 = ((SceneInfo_m0[23u].z * 2.0f) * _88) + (-1.0f);
    float _149 = (_97 * 2.0f) + (-1.0f);
    float4 _156 = Tex2D_0.SampleLevel(BilinearWrap, float2(_142 + _99, (frac(EnvironmentInfo_m0[4u].y * (-1.5000000530562829226255416870117e-05f)) + _101) + _142), 0.0f);
    float _158 = _156.x;
    float _163 = _137 * 0.839999973773956298828125f;
    float _171 = (1.0f - UserMaterial_m0[4u].y) * 0.20000000298023223876953125f;
    float _179 = clamp((1.0499999523162841796875f - sqrt((_147 * _147) + (_149 * _149))) * 0.95238101482391357421875f, 0.0f, 1.0f);
    float _195 = clamp((_171 + 0.737254917621612548828125f) + ((_163 + 0.4000000059604644775390625f) * _158), 0.0f, 1.0f);
    float _196 = clamp((_171 + 0.81176471710205078125f) + ((_163 + 0.3176470696926116943359375f) * _158), 0.0f, 1.0f);
    float _197 = clamp(((_163 * _158) + 0.3019607961177825927734375f) + _171, 0.0f, 1.0f);
    float _200 = ((_179 * _179) * ((_97 > 0.5f) ? 0.0f : 1.0f)) * (3.0f - (_179 * 2.0f));
    float _218;
    float _219;
    float _220;
    if (_200 > 0.0f)
    {
        float _214 = 1.0f / ((float((asuint(GUIConstant_m0[15u]).w >> 8u) & 1u) * (1.0f - _200)) + _200);
        _218 = _214 * _195;
        _219 = _214 * _196;
        _220 = _214 * _197;
    }
    else
    {
        _218 = _195;
        _219 = _196;
        _220 = _197;
    }
    bool _223 = max(max(_218, _219), _220) == 0.0f;
    bool _224 = _200 == 0.0f;
    if (!(_224 && _223))
    {
        float _232;
        float _234;
        float _236;
        if (asuint(HDRMapping_m0[14u]).y == 0u)
        {
            _232 = _218;
            _234 = _219;
            _236 = _220;
        }
        else
        {
            float _265 = exp2(log2(mad(0.0810546875f, _220, mad(0.623046875f, _219, _218 * 0.295654296875f)) * 0.00999999977648258209228515625f) * 0.1593017578125f);
            float _278 = clamp(exp2(log2(((_265 * 18.8515625f) + 0.8359375f) / ((_265 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
            float _282 = exp2(log2(mad(0.116455078125f, _220, mad(0.727294921875f, _219, _218 * 0.15625f)) * 0.00999999977648258209228515625f) * 0.1593017578125f);
            float _291 = clamp(exp2(log2(((_282 * 18.8515625f) + 0.8359375f) / ((_282 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
            float _295 = exp2(log2(mad(0.808349609375f, _220, mad(0.156494140625f, _219, _218 * 0.03515625f)) * 0.00999999977648258209228515625f) * 0.1593017578125f);
            float _304 = clamp(exp2(log2(((_295 * 18.8515625f) + 0.8359375f) / ((_295 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
            float _306 = (_291 + _278) * 0.5f;
            float _327 = exp2(log2(clamp(_306, 0.0f, 1.0f)) * 0.0126833133399486541748046875f);
            float _338 = exp2(log2(max(0.0f, _327 + (-0.8359375f)) / (18.8515625f - (_327 * 18.6875f))) * 6.277394771575927734375f) * 100.0f;
            float _352 = exp2(log2(((HDRMapping_m0[14u].z * 0.00999999977648258209228515625f) * _338) * ((((HDRMapping_m0[14u].z + (-1.0f)) * _200) * _338) + 1.0f)) * 0.1593017578125f);
            float _361 = clamp(exp2(log2(((_352 * 18.8515625f) + 0.8359375f) / ((_352 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
            float _364 = min(_306 / _361, _361 / _306);
            float _365 = ((dot(float3(_278, _291, _304), float3(6610.0f, -13613.0f, 7003.0f)) * 0.000244140625f) * HDRMapping_m0[14u].w) * _364;
            float _366 = ((dot(float3(_278, _291, _304), float3(17933.0f, -17390.0f, -543.0f)) * 0.000244140625f) * HDRMapping_m0[14u].w) * _364;
            float _382 = exp2(log2(clamp(mad(0.111000001430511474609375f, _366, mad(0.0089999996125698089599609375f, _365, _361)), 0.0f, 1.0f)) * 0.0126833133399486541748046875f);
            float _390 = exp2(log2(max(0.0f, _382 + (-0.8359375f)) / (18.8515625f - (_382 * 18.6875f))) * 6.277394771575927734375f);
            float _394 = exp2(log2(clamp(mad(-0.111000001430511474609375f, _366, mad(-0.0089999996125698089599609375f, _365, _361)), 0.0f, 1.0f)) * 0.0126833133399486541748046875f);
            float _403 = exp2(log2(max(0.0f, _394 + (-0.8359375f)) / (18.8515625f - (_394 * 18.6875f))) * 6.277394771575927734375f) * 100.0f;
            float _407 = exp2(log2(clamp(mad(-0.3210000097751617431640625f, _366, mad(0.560000002384185791015625f, _365, _361)), 0.0f, 1.0f)) * 0.0126833133399486541748046875f);
            float _416 = exp2(log2(max(0.0f, _407 + (-0.8359375f)) / (18.8515625f - (_407 * 18.6875f))) * 6.277394771575927734375f) * 100.0f;
            float _421 = mad(0.20700000226497650146484375f, _416, mad(-1.32700002193450927734375f, _403, _390 * 207.100006103515625f));
            float _427 = mad(-0.04500000178813934326171875f, _416, mad(0.6809999942779541015625f, _403, _390 * 36.5f));
            float _433 = mad(1.1879999637603759765625f, _416, mad(-0.0500000007450580596923828125f, _403, _390 * (-4.900000095367431640625f)));
            _232 = mad(-0.498610794544219970703125f, _433, mad(-1.53738319873809814453125f, _427, _421 * 3.2409698963165283203125f));
            _234 = mad(0.0415550954639911651611328125f, _433, mad(1.8759677410125732421875f, _427, _421 * (-0.969243705272674560546875f)));
            _236 = mad(1.05697143077850341796875f, _433, mad(-0.2039768397808074951171875f, _427, _421 * 0.0556300692260265350341796875f));
        }
        float _548;
        float _552;
        float _556;
        if (_200 == 1.0f)
        {
            float _458 = mad(0.043313600122928619384765625f, _236, mad(0.329281985759735107421875f, _234, _232 * 0.6274039745330810546875f));
            float _464 = mad(0.0113612003624439239501953125f, _236, mad(0.919539988040924072265625f, _234, _232 * 0.06909699738025665283203125f));
            float _470 = mad(0.895595014095306396484375f, _236, mad(0.0880132019519805908203125f, _234, _232 * 0.01639159955084323883056640625f));
            float _497 = 10000.0f / HDRMapping_m0[10u].y;
            float _507 = exp2(log2(clamp(exp2(log2((HDRMapping_m0[8u].y * (_232 - _458)) + _458) * HDRMapping_m0[7u].y) / _497, 0.0f, 1.0f)) * 0.1593017578125f);
            float _516 = clamp(exp2(log2(((_507 * 18.8515625f) + 0.8359375f) / ((_507 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
            float _519 = exp2(log2(clamp(exp2(log2((HDRMapping_m0[8u].y * (_234 - _464)) + _464) * HDRMapping_m0[7u].y) / _497, 0.0f, 1.0f)) * 0.1593017578125f);
            float _528 = clamp(exp2(log2(((_519 * 18.8515625f) + 0.8359375f) / ((_519 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
            float _531 = exp2(log2(clamp(exp2(log2((HDRMapping_m0[8u].y * (_236 - _470)) + _470) * HDRMapping_m0[7u].y) / _497, 0.0f, 1.0f)) * 0.1593017578125f);
            float _540 = clamp(exp2(log2(((_531 * 18.8515625f) + 0.8359375f) / ((_531 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
            float frontier_phi_9_7_ladder;
            float frontier_phi_9_7_ladder_1;
            float frontier_phi_9_7_ladder_2;
            if ((asuint(HDRMapping_m0[7u]).x & 2u) == 0u)
            {
                frontier_phi_9_7_ladder = _516;
                frontier_phi_9_7_ladder_1 = _528;
                frontier_phi_9_7_ladder_2 = _540;
            }
            else
            {
                float _574 = exp2(log2(clamp(HDRMapping_m0[0u].z * 9.9999997473787516355514526367188e-05f, 0.0f, 1.0f)) * 0.1593017578125f);
                float _583 = clamp(exp2(log2(((_574 * 18.8515625f) + 0.8359375f) / ((_574 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
                float _589 = exp2(log2(clamp(HDRMapping_m0[0u].w * 9.9999997473787516355514526367188e-05f, 0.0f, 1.0f)) * 0.1593017578125f);
                float _599 = _583 - clamp(exp2(log2(((_589 * 18.8515625f) + 0.8359375f) / ((_589 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
                float _603 = clamp(_516 / _583, 0.0f, 1.0f);
                float _604 = clamp(_528 / _583, 0.0f, 1.0f);
                float _605 = clamp(_540 / _583, 0.0f, 1.0f);
                frontier_phi_9_7_ladder = min((((2.0f - (_603 + _603)) * _599) + (_603 * _583)) * _603, _516);
                frontier_phi_9_7_ladder_1 = min((((2.0f - (_604 + _604)) * _599) + (_604 * _583)) * _604, _528);
                frontier_phi_9_7_ladder_2 = min((((2.0f - (_605 + _605)) * _599) + (_605 * _583)) * _605, _540);
            }
            _548 = frontier_phi_9_7_ladder;
            _552 = frontier_phi_9_7_ladder_1;
            _556 = frontier_phi_9_7_ladder_2;
        }
        else
        {
            bool _625;
            if (_224)
            {
                _625 = !_223;
            }
            else
            {
                _625 = false;
            }
            float4 _630 = RWResult[uint2(uint(_80), uint(_85))].xxxx;
            float _644 = exp2(log2(clamp(_630.x, 0.0f, 1.0f)) * 0.0126833133399486541748046875f);
            float _645 = exp2(log2(clamp(_630.y, 0.0f, 1.0f)) * 0.0126833133399486541748046875f);
            float _646 = exp2(log2(clamp(_630.z, 0.0f, 1.0f)) * 0.0126833133399486541748046875f);
            float _674 = 10000.0f / HDRMapping_m0[10u].y;
            float _675 = _674 * exp2(log2(max(0.0f, _644 + (-0.8359375f)) / (18.8515625f - (_644 * 18.6875f))) * 6.277394771575927734375f);
            float _676 = _674 * exp2(log2(max(0.0f, _645 + (-0.8359375f)) / (18.8515625f - (_645 * 18.6875f))) * 6.277394771575927734375f);
            float _677 = _674 * exp2(log2(max(0.0f, _646 + (-0.8359375f)) / (18.8515625f - (_646 * 18.6875f))) * 6.277394771575927734375f);
            float _682 = mad(-0.07285170257091522216796875f, _677, mad(-0.587639987468719482421875f, _676, _675 * 1.66049098968505859375f));
            float _688 = mad(-0.008348000235855579376220703125f, _677, mad(1.1328999996185302734375f, _676, _675 * (-0.12454999983310699462890625f)));
            float _694 = mad(1.11872994899749755859375f, _677, mad(-0.100579001009464263916015625f, _676, _675 * (-0.01815100014209747314453125f)));
            float _696;
            float _698;
            float _700;
            if (_625)
            {
                _696 = _232;
                _698 = _234;
                _700 = _236;
            }
            else
            {
                _696 = (_232 - _682) * _200;
                _698 = (_234 - _688) * _200;
                _700 = (_236 - _694) * _200;
            }
            float _702 = _696 + _682;
            float _703 = _698 + _688;
            float _704 = _700 + _694;
            float _707 = mad(0.043313600122928619384765625f, _704, mad(0.329281985759735107421875f, _703, _702 * 0.6274039745330810546875f));
            float _710 = mad(0.0113612003624439239501953125f, _704, mad(0.919539988040924072265625f, _703, _702 * 0.06909699738025665283203125f));
            float _713 = mad(0.895595014095306396484375f, _704, mad(0.0880132019519805908203125f, _703, _702 * 0.01639159955084323883056640625f));
            float _746 = exp2(log2(clamp(exp2(log2((HDRMapping_m0[8u].y * (_702 - _707)) + _707) * HDRMapping_m0[7u].y) / _674, 0.0f, 1.0f)) * 0.1593017578125f);
            float _551 = clamp(exp2(log2(((_746 * 18.8515625f) + 0.8359375f) / ((_746 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
            float _757 = exp2(log2(clamp(exp2(log2((HDRMapping_m0[8u].y * (_703 - _710)) + _710) * HDRMapping_m0[7u].y) / _674, 0.0f, 1.0f)) * 0.1593017578125f);
            float _555 = clamp(exp2(log2(((_757 * 18.8515625f) + 0.8359375f) / ((_757 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
            float _768 = exp2(log2(clamp(exp2(log2((HDRMapping_m0[8u].y * (_704 - _713)) + _713) * HDRMapping_m0[7u].y) / _674, 0.0f, 1.0f)) * 0.1593017578125f);
            float _559 = clamp(exp2(log2(((_768 * 18.8515625f) + 0.8359375f) / ((_768 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
            float frontier_phi_9_13_ladder;
            float frontier_phi_9_13_ladder_1;
            float frontier_phi_9_13_ladder_2;
            if ((asuint(HDRMapping_m0[7u]).x & 2u) == 0u)
            {
                frontier_phi_9_13_ladder = _551;
                frontier_phi_9_13_ladder_1 = _555;
                frontier_phi_9_13_ladder_2 = _559;
            }
            else
            {
                float _793 = exp2(log2(clamp(HDRMapping_m0[0u].z * 9.9999997473787516355514526367188e-05f, 0.0f, 1.0f)) * 0.1593017578125f);
                float _802 = clamp(exp2(log2(((_793 * 18.8515625f) + 0.8359375f) / ((_793 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
                float _808 = exp2(log2(clamp(HDRMapping_m0[0u].w * 9.9999997473787516355514526367188e-05f, 0.0f, 1.0f)) * 0.1593017578125f);
                float _818 = _802 - clamp(exp2(log2(((_808 * 18.8515625f) + 0.8359375f) / ((_808 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
                float _822 = clamp(_551 / _802, 0.0f, 1.0f);
                float _823 = clamp(_555 / _802, 0.0f, 1.0f);
                float _824 = clamp(_559 / _802, 0.0f, 1.0f);
                frontier_phi_9_13_ladder = min((((2.0f - (_822 + _822)) * _818) + (_822 * _802)) * _822, _551);
                frontier_phi_9_13_ladder_1 = min((((2.0f - (_823 + _823)) * _818) + (_823 * _802)) * _823, _555);
                frontier_phi_9_13_ladder_2 = min((((2.0f - (_824 + _824)) * _818) + (_824 * _802)) * _824, _559);
            }
            _548 = frontier_phi_9_13_ladder;
            _552 = frontier_phi_9_13_ladder_1;
            _556 = frontier_phi_9_13_ladder_2;
        }
        RWResult[uint2(uint(_80), uint(_85))] = float4(_548, _552, _556, _548).x;
    }
}

[numthreads(256, 1, 1)]
void main(SPIRV_Cross_Input stage_input)
{
    gl_WorkGroupID = stage_input.gl_WorkGroupID;
    gl_LocalInvocationID = stage_input.gl_LocalInvocationID;
    comp_main();
}
