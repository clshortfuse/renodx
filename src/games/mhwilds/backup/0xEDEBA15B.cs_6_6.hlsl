cbuffer SceneInfoUBO : register(b0, space0)
{
    float4 SceneInfo_m0[39] : packoffset(c0);
};

cbuffer EnvironmentInfoUBO : register(b1, space0)
{
    float4 EnvironmentInfo_m0[324] : packoffset(c0);
};

cbuffer HDRMappingUBO : register(b2, space0)
{
    float4 HDRMapping_m0[15] : packoffset(c0);
};

cbuffer GUIConstantUBO : register(b3, space0)
{
    float4 GUIConstant_m0[18] : packoffset(c0);
};

cbuffer UserMaterialUBO : register(b4, space0)
{
    float4 UserMaterial_m0[6] : packoffset(c0);
};

RWTexture2D<float> RWResult : register(u0, space0);

static uint3 gl_WorkGroupID;
static uint3 gl_LocalInvocationID;
struct SPIRV_Cross_Input
{
    uint3 gl_WorkGroupID : SV_GroupID;
    uint3 gl_LocalInvocationID : SV_GroupThreadID;
};

void comp_main()
{
    uint _52 = uint(gl_LocalInvocationID.x);
    uint _55 = _52 >> 1u;
    uint _59 = _52 >> 2u;
    uint _63 = _52 >> 3u;
    uint _74 = ((((_52 & 1u) | (uint(gl_WorkGroupID.x) << 4u)) | (_55 & 2u)) | (_59 & 4u)) | (_63 & 8u);
    uint _79 = ((((_55 & 1u) | (uint(gl_WorkGroupID.y) << 4u)) | (_59 & 2u)) | (_63 & 4u)) | ((_52 >> 4u) & 8u);
    float _97 = min(UserMaterial_m0[2u].x, UserMaterial_m0[2u].y);
    float _98 = UserMaterial_m0[2u].x / _97;
    float _99 = UserMaterial_m0[2u].y / _97;
    float _120 = max(1.39999997615814208984375f - (max(_98, _99) * 0.070000000298023223876953125f), 1.0f);
    float _123 = max(_98 * 0.7799999713897705078125f, 1.0f);
    float _124 = max(_99 * 0.7799999713897705078125f, 1.0f);
    float _125 = UserMaterial_m0[5u].y * 0.300000011920928955078125f;
    float _133 = frac(EnvironmentInfo_m0[4u].y * 9.9999997473787516355514526367188e-06f);
    uint _135 = uint(int(trunc((((UserMaterial_m0[2u].y + UserMaterial_m0[2u].x) * 0.00999999977648258209228515625f) + 6.0f) * ceil(UserMaterial_m0[5u].y + (-0.100000001490116119384765625f)))));
    float _139 = (UserMaterial_m0[2u].x + (-35.0f)) * 0.0500000007450580596923828125f;
    float _141 = (UserMaterial_m0[2u].y + (-35.0f)) * 0.0500000007450580596923828125f;
    float _142 = UserMaterial_m0[2u].x * 0.0500000007450580596923828125f;
    float _143 = UserMaterial_m0[2u].y * 0.0500000007450580596923828125f;
    float _151 = (((SceneInfo_m0[23u].z * 2.0f) * (float(_74) + 0.5f)) * _142) - _142;
    float _152 = (((SceneInfo_m0[23u].w * 2.0f) * (float(_79) + 0.5f)) * _143) - _143;
    float _155;
    if (int(_135) > int(0u))
    {
        float _165;
        uint _166;
        _165 = 0.0f;
        _166 = 1u;
        float _157;
        for (;;)
        {
            uint _167 = _166 + 1u;
            float _168 = float(int(_167));
            float _181 = float(int(_166 + 11u));
            float _190 = float(int(_166 + 23u));
            float _204 = (frac(sin(sin(_181 * 30.25f) + (_181 * 47125.21484375f)) * 43758.546875f) * 6.283185482025146484375f) + (-3.1415927410125732421875f);
            float _207 = _133 * 6.283185482025146484375f;
            float _213 = _204 - (_207 * abs(float(int((_166 - 3u * (_166 / 3u)) + 1u))));
            float _219 = (frac(sin((_168 * 47125.21484375f) + sin(_168 * 30.25f)) * 43758.546875f) * 6.283185482025146484375f) + (-3.1415927410125732421875f);
            float _220 = _207 + _125;
            float _221 = _220 * 5.0f;
            float _226 = _220 * 15.0f;
            float _231 = _220 * 25.0f;
            float _253 = (min(max(((_124 * _120) * _139) * sin(_213), (-0.0f) - _139), _139) + _151) + (((sin(_219 + _221) * 0.5f) * sin(_219 + _226)) * sin(_219 + _231));
            float _255 = (min(max(((_123 * _120) * _141) * cos(_213), (-0.0f) - _141), _141) + _152) + (((cos(_204 + _221) * 0.5f) * cos(_204 + _226)) * cos(_204 + _231));
            float _263 = clamp((1.0f - sqrt((_255 * _255) + (_253 * _253))) * 1.020408153533935546875f, 0.0f, 1.0f);
            float _270 = (frac(sin(sin(_190 * 30.25f) + (_190 * 47125.21484375f)) * 43758.546875f) * 6.283185482025146484375f) + (-3.1415927410125732421875f);
            _157 = exp2(((((cos(_270 + (_133 * 18.84955596923828125f)) * 8.80000019073486328125f) * cos(_270 + (_133 * 56.54866790771484375f))) * cos(_270 + (_133 * 94.24777984619140625f))) + 11.0f) * log2((_263 * _263) * (3.0f - (_263 * 2.0f)))) + _165;
            if (_166 == _135)
            {
                break;
            }
            else
            {
                _165 = _157;
                _166 = _167;
            }
        }
        _155 = _157;
    }
    else
    {
        _155 = 0.0f;
    }
    float _158 = clamp(_155, 0.0f, 1.0f);
    float _159 = _158 * 0.13725490868091583251953125f;
    float _161 = _159 + 0.91372549533843994140625f;
    float _163 = _159 + 1.0f;
    float _309;
    float _310;
    float _311;
    if (_158 > 0.0f)
    {
        float _305 = 1.0f / ((float((asuint(GUIConstant_m0[15u]).w >> 8u) & 1u) * (1.0f - _158)) + _158);
        _309 = _305 * _161;
        _310 = _305 * _163;
        _311 = _305 * _159;
    }
    else
    {
        _309 = _161;
        _310 = _163;
        _311 = _159;
    }
    bool _314 = max(max(_309, _310), _311) == 0.0f;
    bool _315 = _158 == 0.0f;
    if (!(_315 && _314))
    {
        float _323;
        float _325;
        float _327;
        if (asuint(HDRMapping_m0[14u]).y == 0u)
        {
            _323 = _309;
            _325 = _310;
            _327 = _311;
        }
        else
        {
            float _355 = exp2(log2(mad(0.0810546875f, _311, mad(0.623046875f, _310, _309 * 0.295654296875f)) * 0.00999999977648258209228515625f) * 0.1593017578125f);
            float _368 = clamp(exp2(log2(((_355 * 18.8515625f) + 0.8359375f) / ((_355 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
            float _372 = exp2(log2(mad(0.116455078125f, _311, mad(0.727294921875f, _310, _309 * 0.15625f)) * 0.00999999977648258209228515625f) * 0.1593017578125f);
            float _381 = clamp(exp2(log2(((_372 * 18.8515625f) + 0.8359375f) / ((_372 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
            float _385 = exp2(log2(mad(0.808349609375f, _311, mad(0.156494140625f, _310, _309 * 0.03515625f)) * 0.00999999977648258209228515625f) * 0.1593017578125f);
            float _394 = clamp(exp2(log2(((_385 * 18.8515625f) + 0.8359375f) / ((_385 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
            float _396 = (_381 + _368) * 0.5f;
            float _417 = exp2(log2(clamp(_396, 0.0f, 1.0f)) * 0.0126833133399486541748046875f);
            float _428 = exp2(log2(max(0.0f, _417 + (-0.8359375f)) / (18.8515625f - (_417 * 18.6875f))) * 6.277394771575927734375f) * 100.0f;
            float _443 = exp2(log2(((HDRMapping_m0[14u].z * 0.00999999977648258209228515625f) * _428) * ((((HDRMapping_m0[14u].z + (-1.0f)) * _158) * _428) + 1.0f)) * 0.1593017578125f);
            float _452 = clamp(exp2(log2(((_443 * 18.8515625f) + 0.8359375f) / ((_443 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
            float _455 = min(_396 / _452, _452 / _396);
            float _456 = ((dot(float3(_368, _381, _394), float3(6610.0f, -13613.0f, 7003.0f)) * 0.000244140625f) * HDRMapping_m0[14u].w) * _455;
            float _457 = ((dot(float3(_368, _381, _394), float3(17933.0f, -17390.0f, -543.0f)) * 0.000244140625f) * HDRMapping_m0[14u].w) * _455;
            float _473 = exp2(log2(clamp(mad(0.111000001430511474609375f, _457, mad(0.0089999996125698089599609375f, _456, _452)), 0.0f, 1.0f)) * 0.0126833133399486541748046875f);
            float _481 = exp2(log2(max(0.0f, _473 + (-0.8359375f)) / (18.8515625f - (_473 * 18.6875f))) * 6.277394771575927734375f);
            float _485 = exp2(log2(clamp(mad(-0.111000001430511474609375f, _457, mad(-0.0089999996125698089599609375f, _456, _452)), 0.0f, 1.0f)) * 0.0126833133399486541748046875f);
            float _494 = exp2(log2(max(0.0f, _485 + (-0.8359375f)) / (18.8515625f - (_485 * 18.6875f))) * 6.277394771575927734375f) * 100.0f;
            float _498 = exp2(log2(clamp(mad(-0.3210000097751617431640625f, _457, mad(0.560000002384185791015625f, _456, _452)), 0.0f, 1.0f)) * 0.0126833133399486541748046875f);
            float _507 = exp2(log2(max(0.0f, _498 + (-0.8359375f)) / (18.8515625f - (_498 * 18.6875f))) * 6.277394771575927734375f) * 100.0f;
            float _512 = mad(0.20700000226497650146484375f, _507, mad(-1.32700002193450927734375f, _494, _481 * 207.100006103515625f));
            float _518 = mad(-0.04500000178813934326171875f, _507, mad(0.6809999942779541015625f, _494, _481 * 36.5f));
            float _524 = mad(1.1879999637603759765625f, _507, mad(-0.0500000007450580596923828125f, _494, _481 * (-4.900000095367431640625f)));
            _323 = mad(-0.498610794544219970703125f, _524, mad(-1.53738319873809814453125f, _518, _512 * 3.2409698963165283203125f));
            _325 = mad(0.0415550954639911651611328125f, _524, mad(1.8759677410125732421875f, _518, _512 * (-0.969243705272674560546875f)));
            _327 = mad(1.05697143077850341796875f, _524, mad(-0.2039768397808074951171875f, _518, _512 * 0.0556300692260265350341796875f));
        }
        float _638;
        float _642;
        float _646;
        if (_158 == 1.0f)
        {
            float _549 = mad(0.043313600122928619384765625f, _327, mad(0.329281985759735107421875f, _325, _323 * 0.6274039745330810546875f));
            float _555 = mad(0.0113612003624439239501953125f, _327, mad(0.919539988040924072265625f, _325, _323 * 0.06909699738025665283203125f));
            float _561 = mad(0.895595014095306396484375f, _327, mad(0.0880132019519805908203125f, _325, _323 * 0.01639159955084323883056640625f));
            float _588 = 10000.0f / HDRMapping_m0[10u].y;
            float _598 = exp2(log2(clamp(exp2(log2((HDRMapping_m0[8u].y * (_323 - _549)) + _549) * HDRMapping_m0[7u].y) / _588, 0.0f, 1.0f)) * 0.1593017578125f);
            float _607 = clamp(exp2(log2(((_598 * 18.8515625f) + 0.8359375f) / ((_598 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
            float _610 = exp2(log2(clamp(exp2(log2((HDRMapping_m0[8u].y * (_325 - _555)) + _555) * HDRMapping_m0[7u].y) / _588, 0.0f, 1.0f)) * 0.1593017578125f);
            float _619 = clamp(exp2(log2(((_610 * 18.8515625f) + 0.8359375f) / ((_610 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
            float _622 = exp2(log2(clamp(exp2(log2((HDRMapping_m0[8u].y * (_327 - _561)) + _561) * HDRMapping_m0[7u].y) / _588, 0.0f, 1.0f)) * 0.1593017578125f);
            float _631 = clamp(exp2(log2(((_622 * 18.8515625f) + 0.8359375f) / ((_622 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
            float frontier_phi_13_11_ladder;
            float frontier_phi_13_11_ladder_1;
            float frontier_phi_13_11_ladder_2;
            if ((asuint(HDRMapping_m0[7u]).x & 2u) == 0u)
            {
                frontier_phi_13_11_ladder = _607;
                frontier_phi_13_11_ladder_1 = _619;
                frontier_phi_13_11_ladder_2 = _631;
            }
            else
            {
                float _664 = exp2(log2(clamp(HDRMapping_m0[0u].z * 9.9999997473787516355514526367188e-05f, 0.0f, 1.0f)) * 0.1593017578125f);
                float _673 = clamp(exp2(log2(((_664 * 18.8515625f) + 0.8359375f) / ((_664 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
                float _679 = exp2(log2(clamp(HDRMapping_m0[0u].w * 9.9999997473787516355514526367188e-05f, 0.0f, 1.0f)) * 0.1593017578125f);
                float _689 = _673 - clamp(exp2(log2(((_679 * 18.8515625f) + 0.8359375f) / ((_679 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
                float _693 = clamp(_607 / _673, 0.0f, 1.0f);
                float _694 = clamp(_619 / _673, 0.0f, 1.0f);
                float _695 = clamp(_631 / _673, 0.0f, 1.0f);
                frontier_phi_13_11_ladder = min((((2.0f - (_693 + _693)) * _689) + (_693 * _673)) * _693, _607);
                frontier_phi_13_11_ladder_1 = min((((2.0f - (_694 + _694)) * _689) + (_694 * _673)) * _694, _619);
                frontier_phi_13_11_ladder_2 = min((((2.0f - (_695 + _695)) * _689) + (_695 * _673)) * _695, _631);
            }
            _638 = frontier_phi_13_11_ladder;
            _642 = frontier_phi_13_11_ladder_1;
            _646 = frontier_phi_13_11_ladder_2;
        }
        else
        {
            bool _715;
            if (_315)
            {
                _715 = !_314;
            }
            else
            {
                _715 = false;
            }
            float4 _720 = RWResult[uint2(uint(_74), uint(_79))].xxxx;
            float _734 = exp2(log2(clamp(_720.x, 0.0f, 1.0f)) * 0.0126833133399486541748046875f);
            float _735 = exp2(log2(clamp(_720.y, 0.0f, 1.0f)) * 0.0126833133399486541748046875f);
            float _736 = exp2(log2(clamp(_720.z, 0.0f, 1.0f)) * 0.0126833133399486541748046875f);
            float _764 = 10000.0f / HDRMapping_m0[10u].y;
            float _765 = _764 * exp2(log2(max(0.0f, _734 + (-0.8359375f)) / (18.8515625f - (_734 * 18.6875f))) * 6.277394771575927734375f);
            float _766 = _764 * exp2(log2(max(0.0f, _735 + (-0.8359375f)) / (18.8515625f - (_735 * 18.6875f))) * 6.277394771575927734375f);
            float _767 = _764 * exp2(log2(max(0.0f, _736 + (-0.8359375f)) / (18.8515625f - (_736 * 18.6875f))) * 6.277394771575927734375f);
            float _772 = mad(-0.07285170257091522216796875f, _767, mad(-0.587639987468719482421875f, _766, _765 * 1.66049098968505859375f));
            float _778 = mad(-0.008348000235855579376220703125f, _767, mad(1.1328999996185302734375f, _766, _765 * (-0.12454999983310699462890625f)));
            float _784 = mad(1.11872994899749755859375f, _767, mad(-0.100579001009464263916015625f, _766, _765 * (-0.01815100014209747314453125f)));
            float _786;
            float _788;
            float _790;
            if (_715)
            {
                _786 = _323;
                _788 = _325;
                _790 = _327;
            }
            else
            {
                _786 = (_323 - _772) * _158;
                _788 = (_325 - _778) * _158;
                _790 = (_327 - _784) * _158;
            }
            float _792 = _786 + _772;
            float _793 = _788 + _778;
            float _794 = _790 + _784;
            float _797 = mad(0.043313600122928619384765625f, _794, mad(0.329281985759735107421875f, _793, _792 * 0.6274039745330810546875f));
            float _800 = mad(0.0113612003624439239501953125f, _794, mad(0.919539988040924072265625f, _793, _792 * 0.06909699738025665283203125f));
            float _803 = mad(0.895595014095306396484375f, _794, mad(0.0880132019519805908203125f, _793, _792 * 0.01639159955084323883056640625f));
            float _836 = exp2(log2(clamp(exp2(log2((HDRMapping_m0[8u].y * (_792 - _797)) + _797) * HDRMapping_m0[7u].y) / _764, 0.0f, 1.0f)) * 0.1593017578125f);
            float _641 = clamp(exp2(log2(((_836 * 18.8515625f) + 0.8359375f) / ((_836 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
            float _847 = exp2(log2(clamp(exp2(log2((HDRMapping_m0[8u].y * (_793 - _800)) + _800) * HDRMapping_m0[7u].y) / _764, 0.0f, 1.0f)) * 0.1593017578125f);
            float _645 = clamp(exp2(log2(((_847 * 18.8515625f) + 0.8359375f) / ((_847 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
            float _858 = exp2(log2(clamp(exp2(log2((HDRMapping_m0[8u].y * (_794 - _803)) + _803) * HDRMapping_m0[7u].y) / _764, 0.0f, 1.0f)) * 0.1593017578125f);
            float _649 = clamp(exp2(log2(((_858 * 18.8515625f) + 0.8359375f) / ((_858 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
            float frontier_phi_13_17_ladder;
            float frontier_phi_13_17_ladder_1;
            float frontier_phi_13_17_ladder_2;
            if ((asuint(HDRMapping_m0[7u]).x & 2u) == 0u)
            {
                frontier_phi_13_17_ladder = _641;
                frontier_phi_13_17_ladder_1 = _645;
                frontier_phi_13_17_ladder_2 = _649;
            }
            else
            {
                float _883 = exp2(log2(clamp(HDRMapping_m0[0u].z * 9.9999997473787516355514526367188e-05f, 0.0f, 1.0f)) * 0.1593017578125f);
                float _892 = clamp(exp2(log2(((_883 * 18.8515625f) + 0.8359375f) / ((_883 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
                float _898 = exp2(log2(clamp(HDRMapping_m0[0u].w * 9.9999997473787516355514526367188e-05f, 0.0f, 1.0f)) * 0.1593017578125f);
                float _908 = _892 - clamp(exp2(log2(((_898 * 18.8515625f) + 0.8359375f) / ((_898 * 18.6875f) + 1.0f)) * 78.84375f), 0.0f, 1.0f);
                float _912 = clamp(_641 / _892, 0.0f, 1.0f);
                float _913 = clamp(_645 / _892, 0.0f, 1.0f);
                float _914 = clamp(_649 / _892, 0.0f, 1.0f);
                frontier_phi_13_17_ladder = min((((2.0f - (_912 + _912)) * _908) + (_912 * _892)) * _912, _641);
                frontier_phi_13_17_ladder_1 = min((((2.0f - (_913 + _913)) * _908) + (_913 * _892)) * _913, _645);
                frontier_phi_13_17_ladder_2 = min((((2.0f - (_914 + _914)) * _908) + (_914 * _892)) * _914, _649);
            }
            _638 = frontier_phi_13_17_ladder;
            _642 = frontier_phi_13_17_ladder_1;
            _646 = frontier_phi_13_17_ladder_2;
        }
        RWResult[uint2(uint(_74), uint(_79))] = float4(_638, _642, _646, _638).x;
    }
}

[numthreads(256, 1, 1)]
void main(SPIRV_Cross_Input stage_input)
{
    gl_WorkGroupID = stage_input.gl_WorkGroupID;
    gl_LocalInvocationID = stage_input.gl_LocalInvocationID;
    comp_main();
}
