cbuffer EnvironmentInfo : register(b0) {
  float EnvironmentInfo_004y : packoffset(c004.y);
};

cbuffer HDRMapping : register(b1) {
  float HDRMapping_000z : packoffset(c000.z);
  float HDRMapping_000w : packoffset(c000.w);
  uint HDRMapping_007x : packoffset(c007.x);
  float HDRMapping_007y : packoffset(c007.y);
  float HDRMapping_008y : packoffset(c008.y);
  float HDRMapping_010y : packoffset(c010.y);
};

cbuffer GUIConstant : register(b2) {
  float GUIConstant_012x : packoffset(c012.x);
  float GUIConstant_012y : packoffset(c012.y);
  uint GUIConstant_015w : packoffset(c015.w);
  float GUIConstant_016x : packoffset(c016.x);
  float GUIConstant_016y : packoffset(c016.y);
  float GUIConstant_016z : packoffset(c016.z);
};

cbuffer UserMaterial : register(b3) {
  float UserMaterial_002x : packoffset(c002.x);
};

float4 main(
  noperspective float4 SV_Position : SV_Position,
  linear float3 POSITION : POSITION,
  linear float4 COLOR : COLOR,
  linear float2 TEXCOORD : TEXCOORD,
  linear float2 TEXCOORD_1 : TEXCOORD1
) : SV_Target {
  float4 SV_Target;
  float _15 = (TEXCOORD.x) * 2.0f;
  float _16 = (TEXCOORD.y) * 2.0f;
  float _17 = _15 + -1.0f;
  float _18 = _16 + -1.0f;
  float _19 = _17 * _17;
  float _20 = _18 * _18;
  float _21 = _20 + _19;
  float _22 = sqrt(_21);
  float _25 = (EnvironmentInfo_004y) * 9.999999747378752e-05f;
  float _26 = frac(_25);
  float _27 = _26 * 6.28000020980835f;
  float _30 = (UserMaterial_002x) * 5.0f;
  float _31 = 2.450000047683716f - _22;
  float _32 = _31 * 1.8073549270629883f;
  float _33 = exp2(_32);
  float _34 = _33 + _27;
  float _35 = _34 + _30;
  float _36 = saturate(_22);
  float _37 = sin(_35);
  float _38 = abs(_37);
  float _39 = 0.8999999761581421f - _36;
  float _40 = saturate(_39);
  float _41 = _40 * 2.0f;
  float _42 = 3.0f - _41;
  float _43 = _40 * _40;
  float _44 = _43 * _38;
  float _45 = _44 * _42;
  float _46 = _45 * 0.8899999856948853f;
  bool _47 = ((TEXCOORD.y) < 0.5f);
  float _48 = (_47 ? 0.0f : 1.0f);
  float _49 = _46 + 0.721666693687439f;
  float _50 = _46 + 1.0f;
  float _51 = _45 * _48;
  float _52 = 1.0f - _51;
  int _55 = (uint)((GUIConstant_015w)) >> 8;
  int _56 = _55 & 1;
  float _57 = float((uint)_56);
  float _58 = _52 * _57;
  float _59 = _58 + _51;
  float _60 = 1.0f / _59;
  float _61 = _51 + -9.999999747378752e-05f;
  bool _62 = (_61 < 0.0f);
  if (_62) discard;
  float _63 = _60 * (COLOR.x);
  float _64 = _63 * _49;
  float _65 = _60 * (COLOR.y);
  float _66 = _65 * _50;
  float _67 = _60 * (COLOR.z);
  float _68 = _67 * _46;
  float _69 = _51 * (COLOR.w);
  float _70 = _69 + -9.999999747378752e-05f;
  bool _71 = (_70 < 0.0f);
  if (_71) discard;
  float _72 = dot(float4(_64, _66, _68, _69), float4(0.2989000082015991f, 0.5866000056266785f, 0.1145000010728836f, 0.0f));
  float _75 = _72 - _64;
  float _76 = _72 - _66;
  float _77 = _72 - _68;
  float _78 = _75 * (GUIConstant_012y);
  float _79 = _76 * (GUIConstant_012y);
  float _80 = _77 * (GUIConstant_012y);
  float _81 = _78 + _64;
  float _82 = _79 + _66;
  float _83 = _80 + _68;
  int _86 = ((uint)(GUIConstant_015w)) & 2;
  bool _87 = (_86 != 0);
  bool _88 = (_69 < 1.0f);
  bool _89 = _88 && _87;
  float _115 = _69;
  float _271;
  float _272;
  float _273;
  if (_89) {
    int _91 = ((uint)(GUIConstant_015w)) & 4;
    bool _92 = (_91 == 0);
    float _93 = _69 * 0.30530601739883423f;
    float _94 = _93 + 0.682171106338501f;
    float _95 = _94 * _69;
    float _96 = _95 + 0.012522878125309944f;
    float _97 = _96 * _69;
    _115 = _97;
    if (_92) {
      float _99 = 1.0f - _69;
      float _100 = _99 * 0.30530601739883423f;
      float _101 = _100 + 0.682171106338501f;
      float _102 = _101 * _99;
      float _103 = _102 + 0.012522878125309944f;
      float _104 = _103 * _99;
      float _105 = 1.0f - _104;
      float _107 = _82 + _81;
      float _108 = _107 + _83;
      float _109 = _108 / (GUIConstant_012x);
      float _110 = _97 - _105;
      float _111 = _110 * 0.3333333432674408f;
      float _112 = _111 * _109;
      float _113 = _112 + _105;
      _115 = _113;
    }
  }
  float _120 = (GUIConstant_016x) + _81;
  float _121 = (GUIConstant_016y) + _82;
  float _122 = (GUIConstant_016z) + _83;
  float _123 = _120 * _115;
  float _124 = _121 * _115;
  float _125 = _122 * _115;
  int _126 = (uint)((GUIConstant_015w)) >> 7;
  int _127 = _126 & 1;
  float _128 = float((uint)_127);
  float _129 = _128 * _115;
  float _132 = _123 * 0.627403974533081f;
  float _133 = mad(0.3292819857597351f, _124, _132);
  float _134 = mad(0.04331360012292862f, _125, _133);
  float _135 = _123 * 0.06909699738025665f;
  float _136 = mad(0.9195399880409241f, _124, _135);
  float _137 = mad(0.011361200362443924f, _125, _136);
  float _138 = _123 * 0.01639159955084324f;
  float _139 = mad(0.08801320195198059f, _124, _138);
  float _140 = mad(0.8955950140953064f, _125, _139);
  float _143 = _123 - _134;
  float _144 = _124 - _137;
  float _145 = _125 - _140;
  float _146 = (HDRMapping_008y) * _143;
  float _147 = (HDRMapping_008y) * _144;
  float _148 = (HDRMapping_008y) * _145;
  float _149 = _146 + _134;
  float _150 = _147 + _137;
  float _151 = _148 + _140;
  float _154 = log2(_149);
  float _155 = log2(_150);
  float _156 = log2(_151);
  float _157 = _154 * (HDRMapping_007y);
  float _158 = _155 * (HDRMapping_007y);
  float _159 = _156 * (HDRMapping_007y);
  float _160 = exp2(_157);
  float _161 = exp2(_158);
  float _162 = exp2(_159);
  float _163 = 10000.0f / (HDRMapping_010y);
  float _164 = _160 / _163;
  float _165 = _161 / _163;
  float _166 = _162 / _163;
  float _167 = saturate(_164);
  float _168 = saturate(_165);
  float _169 = saturate(_166);
  float _170 = log2(_167);
  float _171 = _170 * 0.1593017578125f;
  float _172 = exp2(_171);
  float _173 = _172 * 18.8515625f;
  float _174 = _173 + 0.8359375f;
  float _175 = _172 * 18.6875f;
  float _176 = _175 + 1.0f;
  float _177 = _174 / _176;
  float _178 = log2(_177);
  float _179 = _178 * 78.84375f;
  float _180 = exp2(_179);
  float _181 = saturate(_180);
  float _182 = log2(_168);
  float _183 = _182 * 0.1593017578125f;
  float _184 = exp2(_183);
  float _185 = _184 * 18.8515625f;
  float _186 = _185 + 0.8359375f;
  float _187 = _184 * 18.6875f;
  float _188 = _187 + 1.0f;
  float _189 = _186 / _188;
  float _190 = log2(_189);
  float _191 = _190 * 78.84375f;
  float _192 = exp2(_191);
  float _193 = saturate(_192);
  float _194 = log2(_169);
  float _195 = _194 * 0.1593017578125f;
  float _196 = exp2(_195);
  float _197 = _196 * 18.8515625f;
  float _198 = _197 + 0.8359375f;
  float _199 = _196 * 18.6875f;
  float _200 = _199 + 1.0f;
  float _201 = _198 / _200;
  float _202 = log2(_201);
  float _203 = _202 * 78.84375f;
  float _204 = exp2(_203);
  float _205 = saturate(_204);
  int _208 = ((uint)(HDRMapping_007x)) & 2;
  bool _209 = (_208 == 0);
  _271 = _181;
  _272 = _193;
  _273 = _205;
  if (!_209) {
    float _213 = (HDRMapping_000z) * 9.999999747378752e-05f;
    float _214 = saturate(_213);
    float _215 = log2(_214);
    float _216 = _215 * 0.1593017578125f;
    float _217 = exp2(_216);
    float _218 = _217 * 18.8515625f;
    float _219 = _218 + 0.8359375f;
    float _220 = _217 * 18.6875f;
    float _221 = _220 + 1.0f;
    float _222 = _219 / _221;
    float _223 = log2(_222);
    float _224 = _223 * 78.84375f;
    float _225 = exp2(_224);
    float _226 = saturate(_225);
    float _228 = (HDRMapping_000w) * 9.999999747378752e-05f;
    float _229 = saturate(_228);
    float _230 = log2(_229);
    float _231 = _230 * 0.1593017578125f;
    float _232 = exp2(_231);
    float _233 = _232 * 18.8515625f;
    float _234 = _233 + 0.8359375f;
    float _235 = _232 * 18.6875f;
    float _236 = _235 + 1.0f;
    float _237 = _234 / _236;
    float _238 = log2(_237);
    float _239 = _238 * 78.84375f;
    float _240 = exp2(_239);
    float _241 = saturate(_240);
    float _242 = _226 - _241;
    float _243 = _181 / _226;
    float _244 = _193 / _226;
    float _245 = _205 / _226;
    float _246 = saturate(_243);
    float _247 = saturate(_244);
    float _248 = saturate(_245);
    float _249 = _246 * _226;
    float _250 = _247 * _226;
    float _251 = _248 * _226;
    float _252 = _246 + _246;
    float _253 = 2.0f - _252;
    float _254 = _253 * _242;
    float _255 = _254 + _249;
    float _256 = _255 * _246;
    float _257 = _247 + _247;
    float _258 = 2.0f - _257;
    float _259 = _258 * _242;
    float _260 = _259 + _250;
    float _261 = _260 * _247;
    float _262 = _248 + _248;
    float _263 = 2.0f - _262;
    float _264 = _263 * _242;
    float _265 = _264 + _251;
    float _266 = _265 * _248;
    float _267 = min(_256, _181);
    float _268 = min(_261, _193);
    float _269 = min(_266, _205);
    _271 = _267;
    _272 = _268;
    _273 = _269;
  }
  SV_Target.x = _271;
  SV_Target.y = _272;
  SV_Target.z = _273;
  SV_Target.w = _129;
  return SV_Target;
}
