#include "../common.hlsli"

// clang-format off
struct cCommon_Struct {
  float4 cCommon_Struct_000[3];
  int2 cCommon_Struct_048;
  float2 cCommon_Struct_056;
  int2 cCommon_Struct_064;
  float2 cCommon_Struct_072;
  int2 cCommon_Struct_080;
  float2 cCommon_Struct_088;
  float2 cCommon_Struct_096;
  float2 cCommon_Struct_104;
  float2 cCommon_Struct_112;
  float2 cCommon_Struct_120;
  float cCommon_Struct_128;
  float cCommon_Struct_132;
  float cCommon_Struct_136;
  int cCommon_Struct_140;
  int cCommon_Struct_144;
  int cCommon_Struct_148;
  float cCommon_Struct_152;
  float cCommon_Struct_156;
  float cCommon_Struct_160;
  float3 cCommon_Struct_164;
  float3 cCommon_Struct_176;
  float cCommon_Struct_188;
  float cCommon_Struct_192;
  float cCommon_Struct_196;
  int cCommon_Struct_200;
  float cCommon_Struct_204;
  float cCommon_Struct_208;
  float cCommon_Struct_212;
  float cCommon_Struct_216;
  float cCommon_Struct_220;
  float cCommon_Struct_224;
  int cCommon_Struct_228;
  int cCommon_Struct_232;
  float cCommon_Struct_236;
  float cCommon_Struct_240;
  float3 cCommon_Struct_244;
  struct CharaLight {
    float3 CharaLight_000;
    float CharaLight_012;
    float3 CharaLight_016;
    float CharaLight_028;
  } cCommon_Struct_256[4];
  float4 cCommon_Struct_384;
  float3 cCommon_Struct_400;
  float cCommon_Struct_412;
  float4 cCommon_Struct_416;
  float4 cCommon_Struct_432;
  float3 cCommon_Struct_448;
  float cCommon_Struct_460;
  float cCommon_Struct_464;
  int cCommon_Struct_468;
  int cCommon_Struct_472;
  int cCommon_Struct_476;
  int2 cCommon_Struct_480;
  int2 cCommon_Struct_488;
  float cCommon_Struct_496;
  float cCommon_Struct_500;
  float cCommon_Struct_504;
  int cCommon_Struct_508;
  int cCommon_Struct_512;
  int cCommon_Struct_516;
  int cCommon_Struct_520;
  float cCommon_Struct_524;
  struct TranslucentApproximateDepthParameter {
    int TranslucentApproximateDepthParameter_000;
    float TranslucentApproximateDepthParameter_004;
    int TranslucentApproximateDepthParameter_008;
    int TranslucentApproximateDepthParameter_012;
  } cCommon_Struct_528;
  int4 cCommon_Struct_544[1];
  float cCommon_Struct_560;
  int cCommon_Struct_564;
  float2 cCommon_Struct_568;
};
// clang-format on


Texture2D<float4> t0 : register(t0);

Texture3D<float4> t1 : register(t1);

RWTexture2D<float4> u0 : register(u0);

cbuffer cb0 : register(b0) {
  cCommon_Struct cCommon_000 : packoffset(c000.x);
};
// clang-format off
cbuffer cb1 : register(b1) {
  struct cConstant0_Struct {
    struct ChromaticAberrationParameter {
      float4 ChromaticAberrationParameter_000[3];
      float ChromaticAberrationParameter_048;
      int ChromaticAberrationParameter_052;
      int2 ChromaticAberrationParameter_056;
    } cConstant0_Struct_000;
    struct VignetteParameter {
      struct VignetteMechanicalParameter {
        float VignetteMechanicalParameter_000;
        float VignetteMechanicalParameter_004;
        int2 VignetteMechanicalParameter_008;
      } VignetteParameter_000;
      struct VignetteNaturalParameter {
        float VignetteNaturalParameter_000;
        float VignetteNaturalParameter_004;
        float VignetteNaturalParameter_008;
        int VignetteNaturalParameter_012;
      } VignetteParameter_016;
      float3 VignetteParameter_032;
      float VignetteParameter_044;
    } cConstant0_Struct_064;
    struct NightFilterParameter {
      float4 NightFilterParameter_000[30];
    } cConstant0_Struct_112;
    struct FilmGrainParameter {
      float2 FilmGrainParameter_000;
      float2 FilmGrainParameter_008;
      float FilmGrainParameter_016;
      int3 FilmGrainParameter_020;
    } cConstant0_Struct_592;
    struct ColorGradingLutParameter {
      int ColorGradingLutParameter_000;
      float ColorGradingLutParameter_004;
      int2 ColorGradingLutParameter_008;
    } cConstant0_Struct_624;
    struct ColorGradingRuntimeParameter {
      float4 ColorGradingRuntimeParameter_000;
      float4 ColorGradingRuntimeParameter_016;
      float4 ColorGradingRuntimeParameter_032;
      float4 ColorGradingRuntimeParameter_048;
      float4 ColorGradingRuntimeParameter_064;
    } cConstant0_Struct_640;
    struct ColorGradingRuntime2Parameter {
      float4 ColorGradingRuntime2Parameter_000;
      float4 ColorGradingRuntime2Parameter_016;
      float4 ColorGradingRuntime2Parameter_032;
    } cConstant0_Struct_720;
    struct ToneMappingParameter {
      struct TripleSectionToneMappingParams {
        float TripleSectionToneMappingParams_000;
        float TripleSectionToneMappingParams_004;
        float TripleSectionToneMappingParams_008;
        float TripleSectionToneMappingParams_012;
        float TripleSectionToneMappingParams_016;
        float TripleSectionToneMappingParams_020;
        int2 TripleSectionToneMappingParams_024;
        float4 TripleSectionToneMappingParams_032;
      } ToneMappingParameter_000;
      float ToneMappingParameter_048;
      float ToneMappingParameter_052;
      int2 ToneMappingParameter_056;
    } cConstant0_Struct_768;
    float cConstant0_Struct_832;
    int3 cConstant0_Struct_836;
  } cConstant0_000 : packoffset(c000.x);
};
// clang-format on
SamplerState s0 : register(s0);

[numthreads(8, 8, 1)]
void main(
  uint3 SV_DispatchThreadID : SV_DispatchThreadID,
  uint3 SV_GroupID : SV_GroupID,
  uint3 SV_GroupThreadID : SV_GroupThreadID,
  uint SV_GroupIndex : SV_GroupIndex
) {
  float peak_ratio = cConstant0_000.cConstant0_Struct_768.ToneMappingParameter_000.TripleSectionToneMappingParams_000;
  AdjustPeak(peak_ratio);

  bool _15 = ((uint)cCommon_000.cCommon_Struct_064.x <= (uint)(uint)(SV_DispatchThreadID.x));
  bool _16 = ((uint)cCommon_000.cCommon_Struct_064.y <= (uint)(uint)(SV_DispatchThreadID.y));
  bool _17 = _15 || _16;
  if (!_17) {
    float _19 = float((uint)(SV_DispatchThreadID.y));
    float _20 = _19 + 0.5f;
    float _22 = float((uint)(SV_DispatchThreadID.x));
    float _23 = _22 + 0.5f;
    float _25 = cCommon_000.cCommon_Struct_088.x * _23;
    float4 _27 = t0.Load(int3((uint)(SV_DispatchThreadID.x), (uint)(SV_DispatchThreadID.y), 0));
    float _32 = float((uint)SV_DispatchThreadID.x);
    float _33 = float((uint)SV_DispatchThreadID.y);
    float _36 = 1.0f / cConstant0_000.cConstant0_Struct_592.FilmGrainParameter_016;
    float _37 = _36 * _32;
    float _38 = _36 * _33;
    float _39 = ceil(_37);
    float _40 = ceil(_38);
    uint _41 = uint(_39);
    uint _42 = uint(_40);
    float _43 = float((uint)_41);
    float _44 = float((uint)_42);
    float _48 = cCommon_000.cCommon_Struct_088.x * _43;
    float _49 = _44 * cCommon_000.cCommon_Struct_088.y;
    float _53 = _48 + cConstant0_000.cConstant0_Struct_592.FilmGrainParameter_008.x;
    float _54 = _49 + cConstant0_000.cConstant0_Struct_592.FilmGrainParameter_008.y;
    float _55 = _54 * 543.3099975585938f;
    float _56 = _53 + _55;
    float _57 = sin(_56);
    float _58 = _57 * 493013.0f;
    float _59 = frac(_58);
    float _61 = cConstant0_000.cConstant0_Struct_592.FilmGrainParameter_000.x * _59;
    float _63 = _61 + cConstant0_000.cConstant0_Struct_592.FilmGrainParameter_000.y;
    float _64 = _27.x * 0.009999999776482582f;
    float _65 = _64 * _63;
    float _66 = _27.y * 0.009999999776482582f;
    float _67 = _66 * _63;
    float _68 = _27.z * 0.009999999776482582f;
    float _69 = _68 * _63;
    float _70 = abs(_65);
    float _71 = abs(_67);
    float _72 = abs(_69);
    float _73 = log2(_70);
    float _74 = log2(_71);
    float _75 = log2(_72);
    float _76 = _73 * 0.1593017578125f;
    float _77 = _74 * 0.1593017578125f;
    float _78 = _75 * 0.1593017578125f;
    float _79 = exp2(_76);
    float _80 = exp2(_77);
    float _81 = exp2(_78);
    float _82 = _79 * 2.05784010887146f;
    float _83 = _80 * 2.05784010887146f;
    float _84 = _81 * 2.05784010887146f;
    float _85 = _82 + -0.10128399729728699f;
    float _86 = _83 + -0.10128399729728699f;
    float _87 = _84 + -0.10128399729728699f;
    float _88 = _85 * _79;
    float _89 = _86 * _80;
    float _90 = _87 * _81;
    float _91 = _88 + 0.001028590020723641f;
    float _92 = _89 + 0.001028590020723641f;
    float _93 = _90 + 0.001028590020723641f;
    float _94 = _91 * _79;
    float _95 = _92 * _80;
    float _96 = _93 * _81;
    float _97 = _94 + 3.6197199904108857e-08f;
    float _98 = _95 + 3.6197199904108857e-08f;
    float _99 = _96 + 3.6197199904108857e-08f;
    float _100 = _79 + 0.7726690173149109f;
    float _101 = _80 + 0.7726690173149109f;
    float _102 = _81 + 0.7726690173149109f;
    float _103 = _100 * _79;
    float _104 = _101 * _80;
    float _105 = _102 * _81;
    float _106 = _103 + 0.13521400094032288f;
    float _107 = _104 + 0.13521400094032288f;
    float _108 = _105 + 0.13521400094032288f;
    float _109 = _106 * _79;
    float _110 = _107 * _80;
    float _111 = _108 * _81;
    float _112 = _109 + 0.04952450096607208f;
    float _113 = _110 + 0.04952450096607208f;
    float _114 = _111 + 0.04952450096607208f;
    float _115 = _97 / _112;
    float _116 = _98 / _113;
    float _117 = _99 / _114;
    float _120 = float((uint)(int)(cConstant0_000.cConstant0_Struct_624.ColorGradingLutParameter_000));
    float _121 = 1.0f / _120;
    uint _122 = (int)(cConstant0_000.cConstant0_Struct_624.ColorGradingLutParameter_000) + -1u;
    float _123 = float((uint)_122);
    float _124 = _123 * _121;
    float _125 = _121 * 0.5f;
    float _126 = _124 * _115;
    float _127 = _124 * _116;
    float _128 = _124 * _117;
    float _129 = _126 + _125;
    float _130 = _127 + _125;
    float _131 = _128 + _125;
    float4 _134 = t1.SampleLevel(s0, float3(_129, _130, _131), 0.0f);
    float _140 = _134.x - _115;
    float _141 = _134.y - _116;
    float _142 = _134.z - _117;
    float _143 = RENODX_COLOR_GRADE_STRENGTH * cConstant0_000.cConstant0_Struct_624.ColorGradingLutParameter_004 * _140;
    float _144 = RENODX_COLOR_GRADE_STRENGTH * cConstant0_000.cConstant0_Struct_624.ColorGradingLutParameter_004 * _141;
    float _145 = RENODX_COLOR_GRADE_STRENGTH * cConstant0_000.cConstant0_Struct_624.ColorGradingLutParameter_004 * _142;
    float _146 = _143 + _115;
    float _147 = _144 + _116;
    float _148 = _145 + _117;
    float _149 = abs(_146);
    float _150 = abs(_147);
    float _151 = abs(_148);
    float _152 = log2(_149);
    float _153 = log2(_150);
    float _154 = log2(_151);
    float _155 = _152 * 0.012683313339948654f;
    float _156 = _153 * 0.012683313339948654f;
    float _157 = _154 * 0.012683313339948654f;
    float _158 = exp2(_155);
    float _159 = exp2(_156);
    float _160 = exp2(_157);
    float _161 = _158 * 18.6875f;
    float _162 = _159 * 18.6875f;
    float _163 = _160 * 18.6875f;
    float _164 = 18.8515625f - _161;
    float _165 = 18.8515625f - _162;
    float _166 = 18.8515625f - _163;
    float _167 = _158 + -0.8359375f;
    float _168 = _159 + -0.8359375f;
    float _169 = _160 + -0.8359375f;
    float _170 = max(_167, 0.0f);
    float _171 = max(_168, 0.0f);
    float _172 = max(_169, 0.0f);
    float _173 = _170 / _164;
    float _174 = _171 / _165;
    float _175 = _172 / _166;
    float _176 = abs(_173);
    float _177 = abs(_174);
    float _178 = abs(_175);
    float _179 = log2(_176);
    float _180 = log2(_177);
    float _181 = log2(_178);
    float _182 = _179 * 6.277394771575928f;
    float _183 = _180 * 6.277394771575928f;
    float _184 = _181 * 6.277394771575928f;
    float _185 = exp2(_182);
    float _186 = exp2(_183);
    float _187 = exp2(_184);
    float _188 = _185 * 100.0f;
    float _189 = _186 * 100.0f;
    float _190 = _187 * 100.0f;
    float _191 = dot(float3(_188, _189, _190), float3(0.2125999927520752f, 0.7152000069618225f, 0.0722000002861023f));
    float _196 = _188 - _191;
    float _197 = _189 - _191;
    float _198 = _190 - _191;
    float _199 = cConstant0_000.cConstant0_Struct_640.ColorGradingRuntimeParameter_000.x * _196;
    float _200 = cConstant0_000.cConstant0_Struct_640.ColorGradingRuntimeParameter_000.y * _197;
    float _201 = cConstant0_000.cConstant0_Struct_640.ColorGradingRuntimeParameter_000.z * _198;
    float _202 = _199 + _191;
    float _203 = _200 + _191;
    float _204 = _201 + _191;
    float _205 = max(0.0f, _202);
    float _206 = max(0.0f, _203);
    float _207 = max(0.0f, _204);
    float _212 = _205 * 0.0005555555690079927f;
    float _213 = _206 * 0.0005555555690079927f;
    float _214 = _207 * 0.0005555555690079927f;
    float _215 = abs(_212);
    float _216 = abs(_213);
    float _217 = abs(_214);
    float _218 = log2(_215);
    float _219 = log2(_216);
    float _220 = log2(_217);
    float _221 = _218 * cConstant0_000.cConstant0_Struct_640.ColorGradingRuntimeParameter_016.x;
    float _222 = _219 * cConstant0_000.cConstant0_Struct_640.ColorGradingRuntimeParameter_016.y;
    float _223 = _220 * cConstant0_000.cConstant0_Struct_640.ColorGradingRuntimeParameter_016.z;
    float _224 = exp2(_221);
    float _225 = exp2(_222);
    float _226 = exp2(_223);
    float _227 = _224 * 1800.0f;
    float _228 = _225 * 1800.0f;
    float _229 = _226 * 1800.0f;
    float _234 = _227 * cConstant0_000.cConstant0_Struct_640.ColorGradingRuntimeParameter_048.x;
    float _235 = _228 * cConstant0_000.cConstant0_Struct_640.ColorGradingRuntimeParameter_048.y;
    float _236 = _229 * cConstant0_000.cConstant0_Struct_640.ColorGradingRuntimeParameter_048.z;
    float _241 = _234 + cConstant0_000.cConstant0_Struct_640.ColorGradingRuntimeParameter_064.x;
    float _242 = _235 + cConstant0_000.cConstant0_Struct_640.ColorGradingRuntimeParameter_064.y;
    float _243 = _236 + cConstant0_000.cConstant0_Struct_640.ColorGradingRuntimeParameter_064.z;
    float _248 = _241 * 9.999999747378752e-05f;
    float _249 = _242 * 9.999999747378752e-05f;
    float _250 = _243 * 9.999999747378752e-05f;
    float _251 = abs(_248);
    float _252 = abs(_249);
    float _253 = abs(_250);
    float _254 = log2(_251);
    float _255 = log2(_252);
    float _256 = log2(_253);
    float _257 = _254 * cConstant0_000.cConstant0_Struct_640.ColorGradingRuntimeParameter_032.x;
    float _258 = _255 * cConstant0_000.cConstant0_Struct_640.ColorGradingRuntimeParameter_032.y;
    float _259 = _256 * cConstant0_000.cConstant0_Struct_640.ColorGradingRuntimeParameter_032.z;
    float _260 = exp2(_257);
    float _261 = exp2(_258);
    float _262 = exp2(_259);
    float _263 = _260 * 10000.0f;
    float _264 = _261 * 10000.0f;
    float _265 = _262 * 10000.0f;
    float _266 = dot(float3(_263, _264, _265), float3(0.2125999927520752f, 0.7152000069618225f, 0.0722000002861023f));
    float _271 = _263 - _266;
    float _272 = _264 - _266;
    float _273 = _265 - _266;
    float _274 = cConstant0_000.cConstant0_Struct_720.ColorGradingRuntime2Parameter_000.x * _271;
    float _275 = cConstant0_000.cConstant0_Struct_720.ColorGradingRuntime2Parameter_000.y * _272;
    float _276 = cConstant0_000.cConstant0_Struct_720.ColorGradingRuntime2Parameter_000.z * _273;
    float _277 = _274 + _266;
    float _278 = _275 + _266;
    float _279 = _276 + _266;
    float _280 = max(0.0f, _277);
    float _281 = max(0.0f, _278);
    float _282 = max(0.0f, _279);
    float _287 = _280 * 5.55555534362793f;
    float _288 = _281 * 5.55555534362793f;
    float _289 = _282 * 5.55555534362793f;
    float _290 = abs(_287);
    float _291 = abs(_288);
    float _292 = abs(_289);
    float _293 = log2(_290);
    float _294 = log2(_291);
    float _295 = log2(_292);
    float _296 = _293 * cConstant0_000.cConstant0_Struct_720.ColorGradingRuntime2Parameter_016.x;
    float _297 = _294 * cConstant0_000.cConstant0_Struct_720.ColorGradingRuntime2Parameter_016.y;
    float _298 = _295 * cConstant0_000.cConstant0_Struct_720.ColorGradingRuntime2Parameter_016.z;
    float _299 = exp2(_296);
    float _300 = exp2(_297);
    float _301 = exp2(_298);
    float _306 = _299 * 0.0018000000854954123f;
    float _307 = _300 * 0.0018000000854954123f;
    float _308 = _301 * 0.0018000000854954123f;
    float _309 = abs(_306);
    float _310 = abs(_307);
    float _311 = abs(_308);
    float _312 = log2(_309);
    float _313 = log2(_310);
    float _314 = log2(_311);
    float _315 = _312 * cConstant0_000.cConstant0_Struct_720.ColorGradingRuntime2Parameter_032.x;
    float _316 = _313 * cConstant0_000.cConstant0_Struct_720.ColorGradingRuntime2Parameter_032.y;
    float _317 = _314 * cConstant0_000.cConstant0_Struct_720.ColorGradingRuntime2Parameter_032.z;
    float _318 = exp2(_315);
    float _319 = exp2(_316);
    float _320 = exp2(_317);
    float _321 = _318 * 100.0f;
    float _322 = _319 * 100.0f;
    float _323 = _320 * 100.0f;
    float _327 = _25 * cCommon_000.cCommon_Struct_104.x;
    float _328 = cCommon_000.cCommon_Struct_088.y * 543.3099975585938f;
    float _329 = _328 * _20;
    float _330 = _329 * cCommon_000.cCommon_Struct_104.y;
    float _331 = _330 + _327;
    float _332 = sin(_331);
    float _333 = _332 * 493013.0f;
    float _334 = frac(_333);
    float _335 = _334 * 0.0009765625f;
    float _336 = _335 + -0.00048828125f;
    float _337 = _336 + _321;
    float _338 = _336 + _322;
    float _339 = _336 + _323;

    float y_in;
    float3 untonemapped = ApplySliders(_337, _338, _339, y_in);

    float _342 = _337 * cConstant0_000.cConstant0_Struct_768.ToneMappingParameter_048;
    float _343 = _338 * cConstant0_000.cConstant0_Struct_768.ToneMappingParameter_048;
    float _344 = _339 * cConstant0_000.cConstant0_Struct_768.ToneMappingParameter_048;
    float _356 = _342 - cConstant0_000.cConstant0_Struct_768.ToneMappingParameter_000.TripleSectionToneMappingParams_008;
    float _357 = _343 - cConstant0_000.cConstant0_Struct_768.ToneMappingParameter_000.TripleSectionToneMappingParams_008;
    float _358 = _344 - cConstant0_000.cConstant0_Struct_768.ToneMappingParameter_000.TripleSectionToneMappingParams_008;
    float _359 = _356 * cConstant0_000.cConstant0_Struct_768.ToneMappingParameter_000.TripleSectionToneMappingParams_004;
    float _360 = _357 * cConstant0_000.cConstant0_Struct_768.ToneMappingParameter_000.TripleSectionToneMappingParams_004;
    float _361 = _358 * cConstant0_000.cConstant0_Struct_768.ToneMappingParameter_000.TripleSectionToneMappingParams_004;
    float _362 = _359 + cConstant0_000.cConstant0_Struct_768.ToneMappingParameter_000.TripleSectionToneMappingParams_008;
    float _363 = _360 + cConstant0_000.cConstant0_Struct_768.ToneMappingParameter_000.TripleSectionToneMappingParams_008;
    float _364 = _361 + cConstant0_000.cConstant0_Struct_768.ToneMappingParameter_000.TripleSectionToneMappingParams_008;
    float _365 = _342 / cConstant0_000.cConstant0_Struct_768.ToneMappingParameter_000.TripleSectionToneMappingParams_008;
    float _366 = _343 / cConstant0_000.cConstant0_Struct_768.ToneMappingParameter_000.TripleSectionToneMappingParams_008;
    float _367 = _344 / cConstant0_000.cConstant0_Struct_768.ToneMappingParameter_000.TripleSectionToneMappingParams_008;
    float _368 = abs(_365);
    float _369 = abs(_366);
    float _370 = abs(_367);
    float _371 = log2(_368);
    float _372 = log2(_369);
    float _373 = log2(_370);
    float _374 = _371 * cConstant0_000.cConstant0_Struct_768.ToneMappingParameter_000.TripleSectionToneMappingParams_016;
    float _375 = _372 * cConstant0_000.cConstant0_Struct_768.ToneMappingParameter_000.TripleSectionToneMappingParams_016;
    float _376 = _373 * cConstant0_000.cConstant0_Struct_768.ToneMappingParameter_000.TripleSectionToneMappingParams_016;
    float _377 = exp2(_374);
    float _378 = exp2(_375);
    float _379 = exp2(_376);
    float _380 = _377 * cConstant0_000.cConstant0_Struct_768.ToneMappingParameter_000.TripleSectionToneMappingParams_008;
    float _381 = _378 * cConstant0_000.cConstant0_Struct_768.ToneMappingParameter_000.TripleSectionToneMappingParams_008;
    float _382 = _379 * cConstant0_000.cConstant0_Struct_768.ToneMappingParameter_000.TripleSectionToneMappingParams_008;
    float _383 = _380 + cConstant0_000.cConstant0_Struct_768.ToneMappingParameter_000.TripleSectionToneMappingParams_020;
    float _384 = _381 + cConstant0_000.cConstant0_Struct_768.ToneMappingParameter_000.TripleSectionToneMappingParams_020;
    float _385 = _382 + cConstant0_000.cConstant0_Struct_768.ToneMappingParameter_000.TripleSectionToneMappingParams_020;
    float _386 = peak_ratio - cConstant0_000.cConstant0_Struct_768.ToneMappingParameter_000.TripleSectionToneMappingParams_032.y;
    float _387 = -0.0f - cConstant0_000.cConstant0_Struct_768.ToneMappingParameter_000.TripleSectionToneMappingParams_032.z;
    float _388 = _342 - cConstant0_000.cConstant0_Struct_768.ToneMappingParameter_000.TripleSectionToneMappingParams_032.x;
    float _389 = _343 - cConstant0_000.cConstant0_Struct_768.ToneMappingParameter_000.TripleSectionToneMappingParams_032.x;
    float _390 = _344 - cConstant0_000.cConstant0_Struct_768.ToneMappingParameter_000.TripleSectionToneMappingParams_032.x;
    float _391 = _388 * _387;
    float _392 = _389 * _387;
    float _393 = _390 * _387;
    float _394 = _391 / peak_ratio;
    float _395 = _392 / peak_ratio;
    float _396 = _393 / peak_ratio;
    float _397 = _394 * 1.4426950216293335f;
    float _398 = _395 * 1.4426950216293335f;
    float _399 = _396 * 1.4426950216293335f;
    float _400 = exp2(_397);
    float _401 = exp2(_398);
    float _402 = exp2(_399);
    float _403 = _400 * _386;
    float _404 = _401 * _386;
    float _405 = _402 * _386;
    float _406 = peak_ratio - _403;
    float _407 = peak_ratio - _404;
    float _408 = peak_ratio - _405;
    float _409 = saturate(_365);
    float _410 = saturate(_366);
    float _411 = saturate(_367);
    float _412 = _409 * 2.0f;
    float _413 = _410 * 2.0f;
    float _414 = _411 * 2.0f;
    float _415 = 3.0f - _412;
    float _416 = 3.0f - _413;
    float _417 = 3.0f - _414;
    float _418 = _409 * _409;
    float _419 = _418 * _415;
    float _420 = _410 * _410;
    float _421 = _420 * _416;
    float _422 = _411 * _411;
    float _423 = _422 * _417;
    float _424 = 1.0f - _419;
    float _425 = 1.0f - _421;
    float _426 = 1.0f - _423;
    bool _427 = (_342 < cConstant0_000.cConstant0_Struct_768.ToneMappingParameter_000.TripleSectionToneMappingParams_032.x);
    bool _428 = (_343 < cConstant0_000.cConstant0_Struct_768.ToneMappingParameter_000.TripleSectionToneMappingParams_032.x);
    bool _429 = (_344 < cConstant0_000.cConstant0_Struct_768.ToneMappingParameter_000.TripleSectionToneMappingParams_032.x);
    float _430 = select(_427, 0.0f, 1.0f);
    float _431 = select(_428, 0.0f, 1.0f);
    float _432 = select(_429, 0.0f, 1.0f);
    float _433 = _419 - _430;
    float _434 = _421 - _431;
    float _435 = _423 - _432;
    float _436 = _424 * _383;
    float _437 = _425 * _384;
    float _438 = _426 * _385;
    float _439 = _433 * _362;
    float _440 = _434 * _363;
    float _441 = _435 * _364;
    float _442 = _406 * _430;
    float _443 = _407 * _431;
    float _444 = _408 * _432;
    float _445 = _439 + _442;
    float _446 = _445 + _436;
    float _447 = _440 + _443;
    float _448 = _447 + _437;
    float _449 = _441 + _444;
    float _450 = _449 + _438;

    FinalizeToneMap(_446, _448, _450, untonemapped, y_in);

    float _452 = _446 * cConstant0_000.cConstant0_Struct_768.ToneMappingParameter_052;
    float _453 = _448 * cConstant0_000.cConstant0_Struct_768.ToneMappingParameter_052;
    float _454 = _450 * cConstant0_000.cConstant0_Struct_768.ToneMappingParameter_052;
    float _455 = _452 * 0.6274039149284363f;
    float _456 = mad(0.3292830288410187f, _453, _455);
    float _457 = mad(0.04331306740641594f, _454, _456);
    float _458 = _452 * 0.06909728795289993f;
    float _459 = mad(0.9195404052734375f, _453, _458);
    float _460 = mad(0.011362315155565739f, _454, _459);
    float _461 = _452 * 0.016391439363360405f;
    float _462 = mad(0.08801330626010895f, _453, _461);
    float _463 = mad(0.8955952525138855f, _454, _462);
    float _464 = _457 * 0.009999999776482582f;
    float _465 = _460 * 0.009999999776482582f;
    float _466 = _463 * 0.009999999776482582f;
    float _467 = abs(_464);
    float _468 = abs(_465);
    float _469 = abs(_466);
    float _470 = log2(_467);
    float _471 = log2(_468);
    float _472 = log2(_469);
    float _473 = _470 * 0.1593017578125f;
    float _474 = _471 * 0.1593017578125f;
    float _475 = _472 * 0.1593017578125f;
    float _476 = exp2(_473);
    float _477 = exp2(_474);
    float _478 = exp2(_475);
    float _479 = _476 * 2.05784010887146f;
    float _480 = _477 * 2.05784010887146f;
    float _481 = _478 * 2.05784010887146f;
    float _482 = _479 + -0.10128399729728699f;
    float _483 = _480 + -0.10128399729728699f;
    float _484 = _481 + -0.10128399729728699f;
    float _485 = _482 * _476;
    float _486 = _483 * _477;
    float _487 = _484 * _478;
    float _488 = _485 + 0.001028590020723641f;
    float _489 = _486 + 0.001028590020723641f;
    float _490 = _487 + 0.001028590020723641f;
    float _491 = _488 * _476;
    float _492 = _489 * _477;
    float _493 = _490 * _478;
    float _494 = _491 + 3.6197199904108857e-08f;
    float _495 = _492 + 3.6197199904108857e-08f;
    float _496 = _493 + 3.6197199904108857e-08f;
    float _497 = _476 + 0.7726690173149109f;
    float _498 = _477 + 0.7726690173149109f;
    float _499 = _478 + 0.7726690173149109f;
    float _500 = _497 * _476;
    float _501 = _498 * _477;
    float _502 = _499 * _478;
    float _503 = _500 + 0.13521400094032288f;
    float _504 = _501 + 0.13521400094032288f;
    float _505 = _502 + 0.13521400094032288f;
    float _506 = _503 * _476;
    float _507 = _504 * _477;
    float _508 = _505 * _478;
    float _509 = _506 + 0.04952450096607208f;
    float _510 = _507 + 0.04952450096607208f;
    float _511 = _508 + 0.04952450096607208f;
    float _512 = _494 / _509;
    float _513 = _495 / _510;
    float _514 = _496 / _511;
    float _515 = saturate(_512);
    float _516 = saturate(_513);
    float _517 = saturate(_514);
    u0[int2((uint)(SV_DispatchThreadID.x), (uint)(SV_DispatchThreadID.y))] = float4(_515, _516, _517, _27.w);
  }
}
