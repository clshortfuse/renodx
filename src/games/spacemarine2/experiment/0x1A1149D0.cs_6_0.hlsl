cbuffer CB_COMMONUBO : register(b0, space0)
{
    float4 CB_COMMON_m0[3856] : packoffset(c0);
};

cbuffer CB_PS_PASS_FILLUBO : register(b4, space0)
{
    float4 CB_PS_PASS_FILL_m0[15] : packoffset(c0);
};

Texture2D<float4> FILL_COLOR : register(t0, space2);
RWTexture2D<float4> FILL_DEST_TEX : register(u0, space0);

static uint3 gl_WorkGroupID;
static uint gl_LocalInvocationIndex;
struct SPIRV_Cross_Input
{
    uint3 gl_WorkGroupID : SV_GroupID;
    uint gl_LocalInvocationIndex : SV_GroupIndex;
};

void comp_main()
{
    uint _49 = ((gl_LocalInvocationIndex >> 1u) & 7u) | (gl_WorkGroupID.x << 4u);
    uint _51 = ((gl_LocalInvocationIndex & 1u) | (gl_WorkGroupID.y << 4u)) | ((gl_LocalInvocationIndex >> 3u) & 6u);
    uint4 _62 = asuint(CB_PS_PASS_FILL_m0[9u]);
    uint _65 = _51 + 4294967295u;
    float4 _67 = FILL_COLOR.Load(int3(uint2(_49, _65), 0u));
    float _70 = _67.x;
    float _71 = _67.y;
    float _72 = _67.z;
    uint _73 = _49 + 4294967295u;
    float4 _74 = FILL_COLOR.Load(int3(uint2(_73, _51), 0u));
    float _76 = _74.x;
    float _77 = _74.y;
    float _78 = _74.z;
    float4 _79 = FILL_COLOR.Load(int3(uint2(_49, _51), 0u));
    float _81 = _79.x;
    float _82 = _79.y;
    float _83 = _79.z;
    uint _84 = _49 + 1u;
    float4 _85 = FILL_COLOR.Load(int3(uint2(_84, _51), 0u));
    float _87 = _85.x;
    float _88 = _85.y;
    float _89 = _85.z;
    uint _90 = _51 + 1u;
    float4 _91 = FILL_COLOR.Load(int3(uint2(_49, _90), 0u));
    float _93 = _91.x;
    float _94 = _91.y;
    float _95 = _91.z;
    float _99 = ((_72 + _70) * 0.5f) + _71;
    float _102 = ((_78 + _76) * 0.5f) + _77;
    float _105 = ((_83 + _81) * 0.5f) + _82;
    float _108 = ((_89 + _87) * 0.5f) + _88;
    float _111 = ((_95 + _93) * 0.5f) + _94;
    float _128 = max(max(_99, max(_102, _105)), max(_108, _111)) - min(min(_99, min(_102, _105)), min(_108, _111));
    float _132 = asfloat(2129764351u - asuint(_128));
    float _145 = min(min(_70, min(_76, _87)), _93);
    float _148 = min(min(_71, min(_77, _88)), _94);
    float _151 = min(min(_72, min(_78, _89)), _95);
    float _154 = max(max(_70, max(_76, _87)), _93);
    float _157 = max(max(_71, max(_77, _88)), _94);
    float _160 = max(max(_72, max(_78, _89)), _95);
    float _198 = ((1.0f - (clamp((_132 * abs(((((_102 + _99) + _108) + _111) * 0.25f) - _105)) * (2.0f - (_132 * _128)), 0.0f, 1.0f) * 0.5f)) * asfloat(asuint(CB_PS_PASS_FILL_m0[10u]).x)) * max(-0.1875f, min(max(max((-0.0f) - (_145 * (0.25f / _154)), (1.0f / ((_145 * 4.0f) + (-4.0f))) * (1.0f - _154)), max(max((-0.0f) - (_148 * (0.25f / _157)), (1.0f / ((_148 * 4.0f) + (-4.0f))) * (1.0f - _157)), max((-0.0f) - (_151 * (0.25f / _160)), (1.0f / ((_151 * 4.0f) + (-4.0f))) * (1.0f - _160)))), 0.0f));
    float _200 = (_198 * 4.0f) + 1.0f;
    float _203 = asfloat(2129764351u - asuint(_200));
    float _206 = (2.0f - (_203 * _200)) * _203;
    FILL_DEST_TEX[uint2(_49 + _62.x, _51 + _62.y)] = float4((exp2(log2(max(0.0f, _206 * ((_198 * (((_76 + _70) + _87) + _93)) + _81))) * CB_COMMON_m0[41u].x) * CB_COMMON_m0[41u].y) + CB_COMMON_m0[41u].z, (exp2(log2(max(0.0f, _206 * ((_198 * (((_77 + _71) + _88) + _94)) + _82))) * CB_COMMON_m0[41u].x) * CB_COMMON_m0[41u].y) + CB_COMMON_m0[41u].z, (exp2(log2(max(0.0f, _206 * ((_198 * (((_78 + _72) + _89) + _95)) + _83))) * CB_COMMON_m0[41u].x) * CB_COMMON_m0[41u].y) + CB_COMMON_m0[41u].z, 1.0f);
    uint _253 = _49 | 8u;
    uint4 _261 = asuint(CB_PS_PASS_FILL_m0[9u]);
    float4 _264 = FILL_COLOR.Load(int3(uint2(_253, _65), 0u));
    float _266 = _264.x;
    float _267 = _264.y;
    float _268 = _264.z;
    uint _269 = _253 + 4294967295u;
    float4 _270 = FILL_COLOR.Load(int3(uint2(_269, _51), 0u));
    float _272 = _270.x;
    float _273 = _270.y;
    float _274 = _270.z;
    float4 _275 = FILL_COLOR.Load(int3(uint2(_253, _51), 0u));
    float _277 = _275.x;
    float _278 = _275.y;
    float _279 = _275.z;
    uint _280 = _253 + 1u;
    float4 _281 = FILL_COLOR.Load(int3(uint2(_280, _51), 0u));
    float _283 = _281.x;
    float _284 = _281.y;
    float _285 = _281.z;
    float4 _286 = FILL_COLOR.Load(int3(uint2(_253, _90), 0u));
    float _288 = _286.x;
    float _289 = _286.y;
    float _290 = _286.z;
    float _293 = ((_268 + _266) * 0.5f) + _267;
    float _296 = ((_274 + _272) * 0.5f) + _273;
    float _299 = ((_279 + _277) * 0.5f) + _278;
    float _302 = ((_285 + _283) * 0.5f) + _284;
    float _305 = ((_290 + _288) * 0.5f) + _289;
    float _320 = max(max(_293, max(_296, _299)), max(_302, _305)) - min(min(_293, min(_296, _299)), min(_302, _305));
    float _323 = asfloat(2129764351u - asuint(_320));
    float _333 = min(min(_266, min(_272, _283)), _288);
    float _336 = min(min(_267, min(_273, _284)), _289);
    float _339 = min(min(_268, min(_274, _285)), _290);
    float _342 = max(max(_266, max(_272, _283)), _288);
    float _345 = max(max(_267, max(_273, _284)), _289);
    float _348 = max(max(_268, max(_274, _285)), _290);
    float _382 = ((1.0f - (clamp((_323 * abs(((((_296 + _293) + _302) + _305) * 0.25f) - _299)) * (2.0f - (_323 * _320)), 0.0f, 1.0f) * 0.5f)) * asfloat(asuint(CB_PS_PASS_FILL_m0[10u]).x)) * max(-0.1875f, min(max(max((-0.0f) - (_333 * (0.25f / _342)), (1.0f / ((_333 * 4.0f) + (-4.0f))) * (1.0f - _342)), max(max((-0.0f) - (_336 * (0.25f / _345)), (1.0f / ((_336 * 4.0f) + (-4.0f))) * (1.0f - _345)), max((-0.0f) - (_339 * (0.25f / _348)), (1.0f / ((_339 * 4.0f) + (-4.0f))) * (1.0f - _348)))), 0.0f));
    float _384 = (_382 * 4.0f) + 1.0f;
    float _387 = asfloat(2129764351u - asuint(_384));
    float _390 = (2.0f - (_387 * _384)) * _387;
    FILL_DEST_TEX[uint2(_261.x + _253, _261.y + _51)] = float4((exp2(log2(max(0.0f, _390 * ((_382 * (((_272 + _266) + _283) + _288)) + _277))) * CB_COMMON_m0[41u].x) * CB_COMMON_m0[41u].y) + CB_COMMON_m0[41u].z, (exp2(log2(max(0.0f, _390 * ((_382 * (((_273 + _267) + _284) + _289)) + _278))) * CB_COMMON_m0[41u].x) * CB_COMMON_m0[41u].y) + CB_COMMON_m0[41u].z, (exp2(log2(max(0.0f, _390 * ((_382 * (((_274 + _268) + _285) + _290)) + _279))) * CB_COMMON_m0[41u].x) * CB_COMMON_m0[41u].y) + CB_COMMON_m0[41u].z, 1.0f);
    uint _436 = _51 | 8u;
    uint4 _443 = asuint(CB_PS_PASS_FILL_m0[9u]);
    uint _446 = _436 + 4294967295u;
    float4 _447 = FILL_COLOR.Load(int3(uint2(_253, _446), 0u));
    float _449 = _447.x;
    float _450 = _447.y;
    float _451 = _447.z;
    float4 _452 = FILL_COLOR.Load(int3(uint2(_269, _436), 0u));
    float _454 = _452.x;
    float _455 = _452.y;
    float _456 = _452.z;
    float4 _457 = FILL_COLOR.Load(int3(uint2(_253, _436), 0u));
    float _459 = _457.x;
    float _460 = _457.y;
    float _461 = _457.z;
    float4 _462 = FILL_COLOR.Load(int3(uint2(_280, _436), 0u));
    float _464 = _462.x;
    float _465 = _462.y;
    float _466 = _462.z;
    uint _467 = _436 + 1u;
    float4 _468 = FILL_COLOR.Load(int3(uint2(_253, _467), 0u));
    float _470 = _468.x;
    float _471 = _468.y;
    float _472 = _468.z;
    float _475 = ((_451 + _449) * 0.5f) + _450;
    float _478 = ((_456 + _454) * 0.5f) + _455;
    float _481 = ((_461 + _459) * 0.5f) + _460;
    float _484 = ((_466 + _464) * 0.5f) + _465;
    float _487 = ((_472 + _470) * 0.5f) + _471;
    float _502 = max(max(_475, max(_478, _481)), max(_484, _487)) - min(min(_475, min(_478, _481)), min(_484, _487));
    float _505 = asfloat(2129764351u - asuint(_502));
    float _515 = min(min(_449, min(_454, _464)), _470);
    float _518 = min(min(_450, min(_455, _465)), _471);
    float _521 = min(min(_451, min(_456, _466)), _472);
    float _524 = max(max(_449, max(_454, _464)), _470);
    float _527 = max(max(_450, max(_455, _465)), _471);
    float _530 = max(max(_451, max(_456, _466)), _472);
    float _564 = ((1.0f - (clamp((_505 * abs(((((_478 + _475) + _484) + _487) * 0.25f) - _481)) * (2.0f - (_505 * _502)), 0.0f, 1.0f) * 0.5f)) * asfloat(asuint(CB_PS_PASS_FILL_m0[10u]).x)) * max(-0.1875f, min(max(max((-0.0f) - (_515 * (0.25f / _524)), (1.0f / ((_515 * 4.0f) + (-4.0f))) * (1.0f - _524)), max(max((-0.0f) - (_518 * (0.25f / _527)), (1.0f / ((_518 * 4.0f) + (-4.0f))) * (1.0f - _527)), max((-0.0f) - (_521 * (0.25f / _530)), (1.0f / ((_521 * 4.0f) + (-4.0f))) * (1.0f - _530)))), 0.0f));
    float _566 = (_564 * 4.0f) + 1.0f;
    float _569 = asfloat(2129764351u - asuint(_566));
    float _572 = (2.0f - (_569 * _566)) * _569;
    FILL_DEST_TEX[uint2(_443.x + _253, _443.y + _436)] = float4((exp2(log2(max(0.0f, _572 * ((_564 * (((_454 + _449) + _464) + _470)) + _459))) * CB_COMMON_m0[41u].x) * CB_COMMON_m0[41u].y) + CB_COMMON_m0[41u].z, (exp2(log2(max(0.0f, _572 * ((_564 * (((_455 + _450) + _465) + _471)) + _460))) * CB_COMMON_m0[41u].x) * CB_COMMON_m0[41u].y) + CB_COMMON_m0[41u].z, (exp2(log2(max(0.0f, _572 * ((_564 * (((_456 + _451) + _466) + _472)) + _461))) * CB_COMMON_m0[41u].x) * CB_COMMON_m0[41u].y) + CB_COMMON_m0[41u].z, 1.0f);
    uint4 _624 = asuint(CB_PS_PASS_FILL_m0[9u]);
    float4 _627 = FILL_COLOR.Load(int3(uint2(_49, _446), 0u));
    float _629 = _627.x;
    float _630 = _627.y;
    float _631 = _627.z;
    float4 _632 = FILL_COLOR.Load(int3(uint2(_73, _436), 0u));
    float _634 = _632.x;
    float _635 = _632.y;
    float _636 = _632.z;
    float4 _637 = FILL_COLOR.Load(int3(uint2(_49, _436), 0u));
    float _639 = _637.x;
    float _640 = _637.y;
    float _641 = _637.z;
    float4 _642 = FILL_COLOR.Load(int3(uint2(_84, _436), 0u));
    float _644 = _642.x;
    float _645 = _642.y;
    float _646 = _642.z;
    float4 _647 = FILL_COLOR.Load(int3(uint2(_49, _467), 0u));
    float _649 = _647.x;
    float _650 = _647.y;
    float _651 = _647.z;
    float _654 = ((_631 + _629) * 0.5f) + _630;
    float _657 = ((_636 + _634) * 0.5f) + _635;
    float _660 = ((_641 + _639) * 0.5f) + _640;
    float _663 = ((_646 + _644) * 0.5f) + _645;
    float _666 = ((_651 + _649) * 0.5f) + _650;
    float _681 = max(max(_654, max(_657, _660)), max(_663, _666)) - min(min(_654, min(_657, _660)), min(_663, _666));
    float _684 = asfloat(2129764351u - asuint(_681));
    float _694 = min(min(_629, min(_634, _644)), _649);
    float _697 = min(min(_630, min(_635, _645)), _650);
    float _700 = min(min(_631, min(_636, _646)), _651);
    float _703 = max(max(_629, max(_634, _644)), _649);
    float _706 = max(max(_630, max(_635, _645)), _650);
    float _709 = max(max(_631, max(_636, _646)), _651);
    float _743 = ((1.0f - (clamp((_684 * abs(((((_657 + _654) + _663) + _666) * 0.25f) - _660)) * (2.0f - (_684 * _681)), 0.0f, 1.0f) * 0.5f)) * asfloat(asuint(CB_PS_PASS_FILL_m0[10u]).x)) * max(-0.1875f, min(max(max((-0.0f) - (_694 * (0.25f / _703)), (1.0f / ((_694 * 4.0f) + (-4.0f))) * (1.0f - _703)), max(max((-0.0f) - (_697 * (0.25f / _706)), (1.0f / ((_697 * 4.0f) + (-4.0f))) * (1.0f - _706)), max((-0.0f) - (_700 * (0.25f / _709)), (1.0f / ((_700 * 4.0f) + (-4.0f))) * (1.0f - _709)))), 0.0f));
    float _745 = (_743 * 4.0f) + 1.0f;
    float _748 = asfloat(2129764351u - asuint(_745));
    float _751 = (2.0f - (_748 * _745)) * _748;
    FILL_DEST_TEX[uint2(_624.x + _49, _624.y + _436)] = float4((exp2(log2(max(0.0f, _751 * ((_743 * (((_634 + _629) + _644) + _649)) + _639))) * CB_COMMON_m0[41u].x) * CB_COMMON_m0[41u].y) + CB_COMMON_m0[41u].z, (exp2(log2(max(0.0f, _751 * ((_743 * (((_635 + _630) + _645) + _650)) + _640))) * CB_COMMON_m0[41u].x) * CB_COMMON_m0[41u].y) + CB_COMMON_m0[41u].z, (exp2(log2(max(0.0f, _751 * ((_743 * (((_636 + _631) + _646) + _651)) + _641))) * CB_COMMON_m0[41u].x) * CB_COMMON_m0[41u].y) + CB_COMMON_m0[41u].z, 1.0f);
}

[numthreads(64, 1, 1)]
void main(SPIRV_Cross_Input stage_input)
{
    gl_WorkGroupID = stage_input.gl_WorkGroupID;
    gl_LocalInvocationIndex = stage_input.gl_LocalInvocationIndex;
    comp_main();
}
