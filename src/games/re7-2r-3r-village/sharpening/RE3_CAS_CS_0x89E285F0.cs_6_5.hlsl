#include "./sharpening.hlsli"

Texture2D<float4> SrcImage : register(t0);

RWTexture2D<float4> OutputImage : register(u0);

cbuffer cbCAS : register(b0) {
  uint4 const0 : packoffset(c000.x);
  uint4 const1 : packoffset(c001.x);
};

[numthreads(64, 1, 1)]
void main(
    uint3 SV_DispatchThreadID: SV_DispatchThreadID,
    uint3 SV_GroupID: SV_GroupID,
    uint3 SV_GroupThreadID: SV_GroupThreadID,
    uint SV_GroupIndex: SV_GroupIndex) {
  int _15 = (((uint)(SV_GroupThreadID.x) >> 1) & 7) | ((uint)((uint)(SV_GroupID.x) << 4));
  int _16 = ((((uint)(SV_GroupThreadID.x) >> 3) & 6) | ((uint)(SV_GroupThreadID.x) & 1)) | ((uint)((uint)(SV_GroupID.y) << 4));

  if (CUSTOM_SHARPENING == 0.f) {
    int pass_306 = _15 | 8;
    int pass_594 = _16 | 8;

    OutputImage[int2(_15, _16)] = float4(SrcImage.Load(int3(_15, _16, 0)).rgb, 1.0f);
    OutputImage[int2(pass_306, _16)] = float4(SrcImage.Load(int3(pass_306, _16, 0)).rgb, 1.0f);
    OutputImage[int2(pass_306, pass_594)] = float4(SrcImage.Load(int3(pass_306, pass_594, 0)).rgb, 1.0f);
    OutputImage[int2(_15, pass_594)] = float4(SrcImage.Load(int3(_15, pass_594, 0)).rgb, 1.0f);
    return;
  } else if (CUSTOM_SHARPENING == 2.f) {  // Lilium RCAS
    float sharpness_strength = 0.75f;     // asfloat(const1.x)

    int offset_x = _15 | 8;  // X offset
    int offset_y = _16 | 8;  // Y offset
    ApplyLiliumRCAS_RE3_Pattern(
        SrcImage,
        OutputImage,
        int2(_15, _16),            // base coordinates
        int2(offset_x, offset_y),  // offset coordinates
        sharpness_strength);
    return;
  }

  uint _19 = _16 + -1u;
  float4 _20 = SrcImage.Load(int3(_15, _19, 0));
  float _24 = max(0.0f, _20.x);
  float _25 = max(0.0f, _20.y);
  float _26 = max(0.0f, _20.z);
  float _37;
  float _48;
  float _59;
  float _78;
  float _89;
  float _100;
  float _118;
  float _129;
  float _140;
  float _159;
  float _170;
  float _181;
  float _200;
  float _211;
  float _222;
  float _283;
  float _294;
  float _305;
  float _326;
  float _337;
  float _348;
  float _367;
  float _378;
  float _389;
  float _407;
  float _418;
  float _429;
  float _448;
  float _459;
  float _470;
  float _488;
  float _499;
  float _510;
  float _571;
  float _582;
  float _593;
  float _615;
  float _626;
  float _637;
  float _655;
  float _666;
  float _677;
  float _695;
  float _706;
  float _717;
  float _735;
  float _746;
  float _757;
  float _776;
  float _787;
  float _798;
  float _859;
  float _870;
  float _881;
  float _901;
  float _912;
  float _923;
  float _941;
  float _952;
  float _963;
  float _981;
  float _992;
  float _1003;
  float _1021;
  float _1032;
  float _1043;
  float _1061;
  float _1072;
  float _1083;
  float _1144;
  float _1155;
  float _1166;
  if (_24 > 1.0f) {
    _37 = ((log2(_24 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _37 = (sqrt(_24) * 0.5f);
  }
  if (_25 > 1.0f) {
    _48 = ((log2(_25 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _48 = (sqrt(_25) * 0.5f);
  }
  if (_26 > 1.0f) {
    _59 = ((log2(_26 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _59 = (sqrt(_26) * 0.5f);
  }
  uint _60 = _15 + -1u;
  float4 _61 = SrcImage.Load(int3(_60, _16, 0));
  float _65 = max(0.0f, _61.x);
  float _66 = max(0.0f, _61.y);
  float _67 = max(0.0f, _61.z);
  if (_65 > 1.0f) {
    _78 = ((log2(_65 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _78 = (sqrt(_65) * 0.5f);
  }
  if (_66 > 1.0f) {
    _89 = ((log2(_66 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _89 = (sqrt(_66) * 0.5f);
  }
  if (_67 > 1.0f) {
    _100 = ((log2(_67 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _100 = (sqrt(_67) * 0.5f);
  }
  float4 _101 = SrcImage.Load(int3(_15, _16, 0));
  float _105 = max(0.0f, _101.x);
  float _106 = max(0.0f, _101.y);
  float _107 = max(0.0f, _101.z);
  if (_105 > 1.0f) {
    _118 = ((log2(_105 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _118 = (sqrt(_105) * 0.5f);
  }
  if (_106 > 1.0f) {
    _129 = ((log2(_106 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _129 = (sqrt(_106) * 0.5f);
  }
  if (_107 > 1.0f) {
    _140 = ((log2(_107 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _140 = (sqrt(_107) * 0.5f);
  }
  int _141 = _15 + 1;
  float4 _142 = SrcImage.Load(int3(_141, _16, 0));
  float _146 = max(0.0f, _142.x);
  float _147 = max(0.0f, _142.y);
  float _148 = max(0.0f, _142.z);
  if (_146 > 1.0f) {
    _159 = ((log2(_146 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _159 = (sqrt(_146) * 0.5f);
  }
  if (_147 > 1.0f) {
    _170 = ((log2(_147 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _170 = (sqrt(_147) * 0.5f);
  }
  if (_148 > 1.0f) {
    _181 = ((log2(_148 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _181 = (sqrt(_148) * 0.5f);
  }
  int _182 = _16 + 1;
  float4 _183 = SrcImage.Load(int3(_15, _182, 0));
  float _187 = max(0.0f, _183.x);
  float _188 = max(0.0f, _183.y);
  float _189 = max(0.0f, _183.z);
  if (_187 > 1.0f) {
    _200 = ((log2(_187 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _200 = (sqrt(_187) * 0.5f);
  }
  if (_188 > 1.0f) {
    _211 = ((log2(_188 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _211 = (sqrt(_188) * 0.5f);
  }
  if (_189 > 1.0f) {
    _222 = ((log2(_189 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _222 = (sqrt(_189) * 0.5f);
  }
  float _230 = max(max(max(max(_89, _129), _170), _48), _211);
  float _243 = asfloat(((uint)(((int)((uint)((int)(asint(saturate(asfloat(((uint)(2129690299u - (int)(asint(_230))))) * min(min(min(min(min(_89, _129), _170), _48), _211), (1.0f - _230)))))) >> 1)) + 532432441u))) * asfloat(const1.x);
  float _245 = (_243 * 4.0f) + 1.0f;
  float _248 = asfloat(((uint)(2129764351u - (int)(asint(_245)))));
  float _251 = (2.0f - (_248 * _245)) * _248;
  float _258 = max(0, _251 * ((_243 * (((_78 + _37) + _159) + _200)) + _118));
  float _265 = max(0, _251 * ((_243 * (((_89 + _48) + _170) + _211)) + _129));
  float _272 = max(0, _251 * ((_243 * (((_100 + _59) + _181) + _222)) + _140));
  if (_258 > 2.0f) {
    _283 = (exp2((_258 + -0.5599107146263123f) * 8.067285537719727f) + 0.2846689224243164f);
  } else {
    _283 = ((_258 * _258) * 4.0f);
  }
  if (_265 > 2.0f) {
    _294 = (exp2((_265 + -0.5599107146263123f) * 8.067285537719727f) + 0.2846689224243164f);
  } else {
    _294 = ((_265 * _265) * 4.0f);
  }
  if (_272 > 2.0f) {
    _305 = (exp2((_272 + -0.5599107146263123f) * 8.067285537719727f) + 0.2846689224243164f);
  } else {
    _305 = ((_272 * _272) * 4.0f);
  }
  OutputImage[int2(_15, _16)] = float4(_283, _294, _305, 1.0f);
  int _306 = _15 | 8;
  float4 _309 = SrcImage.Load(int3(_306, _19, 0));
  float _313 = max(0.0f, _309.x);
  float _314 = max(0.0f, _309.y);
  float _315 = max(0.0f, _309.z);
  if (_313 > 1.0f) {
    _326 = ((log2(_313 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _326 = (sqrt(_313) * 0.5f);
  }
  if (_314 > 1.0f) {
    _337 = ((log2(_314 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _337 = (sqrt(_314) * 0.5f);
  }
  if (_315 > 1.0f) {
    _348 = ((log2(_315 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _348 = (sqrt(_315) * 0.5f);
  }
  uint _349 = _306 + -1u;
  float4 _350 = SrcImage.Load(int3(_349, _16, 0));
  float _354 = max(0.0f, _350.x);
  float _355 = max(0.0f, _350.y);
  float _356 = max(0.0f, _350.z);
  if (_354 > 1.0f) {
    _367 = ((log2(_354 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _367 = (sqrt(_354) * 0.5f);
  }
  if (_355 > 1.0f) {
    _378 = ((log2(_355 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _378 = (sqrt(_355) * 0.5f);
  }
  if (_356 > 1.0f) {
    _389 = ((log2(_356 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _389 = (sqrt(_356) * 0.5f);
  }
  float4 _390 = SrcImage.Load(int3(_306, _16, 0));
  float _394 = max(0.0f, _390.x);
  float _395 = max(0.0f, _390.y);
  float _396 = max(0.0f, _390.z);
  if (_394 > 1.0f) {
    _407 = ((log2(_394 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _407 = (sqrt(_394) * 0.5f);
  }
  if (_395 > 1.0f) {
    _418 = ((log2(_395 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _418 = (sqrt(_395) * 0.5f);
  }
  if (_396 > 1.0f) {
    _429 = ((log2(_396 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _429 = (sqrt(_396) * 0.5f);
  }
  uint _430 = _306 + 1u;
  float4 _431 = SrcImage.Load(int3(_430, _16, 0));
  float _435 = max(0.0f, _431.x);
  float _436 = max(0.0f, _431.y);
  float _437 = max(0.0f, _431.z);
  if (_435 > 1.0f) {
    _448 = ((log2(_435 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _448 = (sqrt(_435) * 0.5f);
  }
  if (_436 > 1.0f) {
    _459 = ((log2(_436 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _459 = (sqrt(_436) * 0.5f);
  }
  if (_437 > 1.0f) {
    _470 = ((log2(_437 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _470 = (sqrt(_437) * 0.5f);
  }
  float4 _471 = SrcImage.Load(int3(_306, _182, 0));
  float _475 = max(0.0f, _471.x);
  float _476 = max(0.0f, _471.y);
  float _477 = max(0.0f, _471.z);
  if (_475 > 1.0f) {
    _488 = ((log2(_475 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _488 = (sqrt(_475) * 0.5f);
  }
  if (_476 > 1.0f) {
    _499 = ((log2(_476 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _499 = (sqrt(_476) * 0.5f);
  }
  if (_477 > 1.0f) {
    _510 = ((log2(_477 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _510 = (sqrt(_477) * 0.5f);
  }
  float _518 = max(max(max(max(_378, _418), _459), _337), _499);
  float _531 = asfloat(((uint)(((int)((uint)((int)(asint(saturate(asfloat(((uint)(2129690299u - (int)(asint(_518))))) * min(min(min(min(min(_378, _418), _459), _337), _499), (1.0f - _518)))))) >> 1)) + 532432441u))) * asfloat(const1.x);
  float _533 = (_531 * 4.0f) + 1.0f;
  float _536 = asfloat(((uint)(2129764351u - (int)(asint(_533)))));
  float _539 = (2.0f - (_536 * _533)) * _536;
  float _546 = max(0, _539 * ((_531 * (((_367 + _326) + _448) + _488)) + _407));
  float _553 = max(0, _539 * ((_531 * (((_378 + _337) + _459) + _499)) + _418));
  float _560 = max(0, _539 * ((_531 * (((_389 + _348) + _470) + _510)) + _429));
  if (_546 > 2.0f) {
    _571 = (exp2((_546 + -0.5599107146263123f) * 8.067285537719727f) + 0.2846689224243164f);
  } else {
    _571 = ((_546 * _546) * 4.0f);
  }
  if (_553 > 2.0f) {
    _582 = (exp2((_553 + -0.5599107146263123f) * 8.067285537719727f) + 0.2846689224243164f);
  } else {
    _582 = ((_553 * _553) * 4.0f);
  }
  if (_560 > 2.0f) {
    _593 = (exp2((_560 + -0.5599107146263123f) * 8.067285537719727f) + 0.2846689224243164f);
  } else {
    _593 = ((_560 * _560) * 4.0f);
  }
  OutputImage[int2(_306, _16)] = float4(_571, _582, _593, 1.0f);
  int _594 = _16 | 8;
  uint _597 = _594 + -1u;
  float4 _598 = SrcImage.Load(int3(_306, _597, 0));
  float _602 = max(0.0f, _598.x);
  float _603 = max(0.0f, _598.y);
  float _604 = max(0.0f, _598.z);
  if (_602 > 1.0f) {
    _615 = ((log2(_602 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _615 = (sqrt(_602) * 0.5f);
  }
  if (_603 > 1.0f) {
    _626 = ((log2(_603 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _626 = (sqrt(_603) * 0.5f);
  }
  if (_604 > 1.0f) {
    _637 = ((log2(_604 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _637 = (sqrt(_604) * 0.5f);
  }
  float4 _638 = SrcImage.Load(int3(_349, _594, 0));
  float _642 = max(0.0f, _638.x);
  float _643 = max(0.0f, _638.y);
  float _644 = max(0.0f, _638.z);
  if (_642 > 1.0f) {
    _655 = ((log2(_642 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _655 = (sqrt(_642) * 0.5f);
  }
  if (_643 > 1.0f) {
    _666 = ((log2(_643 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _666 = (sqrt(_643) * 0.5f);
  }
  if (_644 > 1.0f) {
    _677 = ((log2(_644 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _677 = (sqrt(_644) * 0.5f);
  }
  float4 _678 = SrcImage.Load(int3(_306, _594, 0));
  float _682 = max(0.0f, _678.x);
  float _683 = max(0.0f, _678.y);
  float _684 = max(0.0f, _678.z);
  if (_682 > 1.0f) {
    _695 = ((log2(_682 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _695 = (sqrt(_682) * 0.5f);
  }
  if (_683 > 1.0f) {
    _706 = ((log2(_683 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _706 = (sqrt(_683) * 0.5f);
  }
  if (_684 > 1.0f) {
    _717 = ((log2(_684 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _717 = (sqrt(_684) * 0.5f);
  }
  float4 _718 = SrcImage.Load(int3(_430, _594, 0));
  float _722 = max(0.0f, _718.x);
  float _723 = max(0.0f, _718.y);
  float _724 = max(0.0f, _718.z);
  if (_722 > 1.0f) {
    _735 = ((log2(_722 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _735 = (sqrt(_722) * 0.5f);
  }
  if (_723 > 1.0f) {
    _746 = ((log2(_723 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _746 = (sqrt(_723) * 0.5f);
  }
  if (_724 > 1.0f) {
    _757 = ((log2(_724 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _757 = (sqrt(_724) * 0.5f);
  }
  uint _758 = _594 + 1u;
  float4 _759 = SrcImage.Load(int3(_306, _758, 0));
  float _763 = max(0.0f, _759.x);
  float _764 = max(0.0f, _759.y);
  float _765 = max(0.0f, _759.z);
  if (_763 > 1.0f) {
    _776 = ((log2(_763 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _776 = (sqrt(_763) * 0.5f);
  }
  if (_764 > 1.0f) {
    _787 = ((log2(_764 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _787 = (sqrt(_764) * 0.5f);
  }
  if (_765 > 1.0f) {
    _798 = ((log2(_765 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _798 = (sqrt(_765) * 0.5f);
  }
  float _806 = max(max(max(max(_666, _706), _746), _626), _787);
  float _819 = asfloat(((uint)(((int)((uint)((int)(asint(saturate(asfloat(((uint)(2129690299u - (int)(asint(_806))))) * min(min(min(min(min(_666, _706), _746), _626), _787), (1.0f - _806)))))) >> 1)) + 532432441u))) * asfloat(const1.x);
  float _821 = (_819 * 4.0f) + 1.0f;
  float _824 = asfloat(((uint)(2129764351u - (int)(asint(_821)))));
  float _827 = (2.0f - (_824 * _821)) * _824;
  float _834 = max(0, _827 * ((_819 * (((_655 + _615) + _735) + _776)) + _695));
  float _841 = max(0, _827 * ((_819 * (((_666 + _626) + _746) + _787)) + _706));
  float _848 = max(0, _827 * ((_819 * (((_677 + _637) + _757) + _798)) + _717));
  if (_834 > 2.0f) {
    _859 = (exp2((_834 + -0.5599107146263123f) * 8.067285537719727f) + 0.2846689224243164f);
  } else {
    _859 = ((_834 * _834) * 4.0f);
  }
  if (_841 > 2.0f) {
    _870 = (exp2((_841 + -0.5599107146263123f) * 8.067285537719727f) + 0.2846689224243164f);
  } else {
    _870 = ((_841 * _841) * 4.0f);
  }
  if (_848 > 2.0f) {
    _881 = (exp2((_848 + -0.5599107146263123f) * 8.067285537719727f) + 0.2846689224243164f);
  } else {
    _881 = ((_848 * _848) * 4.0f);
  }
  OutputImage[int2(_306, _594)] = float4(_859, _870, _881, 1.0f);
  float4 _884 = SrcImage.Load(int3(_15, _597, 0));
  float _888 = max(0.0f, _884.x);
  float _889 = max(0.0f, _884.y);
  float _890 = max(0.0f, _884.z);
  if (_888 > 1.0f) {
    _901 = ((log2(_888 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _901 = (sqrt(_888) * 0.5f);
  }
  if (_889 > 1.0f) {
    _912 = ((log2(_889 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _912 = (sqrt(_889) * 0.5f);
  }
  if (_890 > 1.0f) {
    _923 = ((log2(_890 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _923 = (sqrt(_890) * 0.5f);
  }
  float4 _924 = SrcImage.Load(int3(_60, _594, 0));
  float _928 = max(0.0f, _924.x);
  float _929 = max(0.0f, _924.y);
  float _930 = max(0.0f, _924.z);
  if (_928 > 1.0f) {
    _941 = ((log2(_928 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _941 = (sqrt(_928) * 0.5f);
  }
  if (_929 > 1.0f) {
    _952 = ((log2(_929 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _952 = (sqrt(_929) * 0.5f);
  }
  if (_930 > 1.0f) {
    _963 = ((log2(_930 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _963 = (sqrt(_930) * 0.5f);
  }
  float4 _964 = SrcImage.Load(int3(_15, _594, 0));
  float _968 = max(0.0f, _964.x);
  float _969 = max(0.0f, _964.y);
  float _970 = max(0.0f, _964.z);
  if (_968 > 1.0f) {
    _981 = ((log2(_968 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _981 = (sqrt(_968) * 0.5f);
  }
  if (_969 > 1.0f) {
    _992 = ((log2(_969 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _992 = (sqrt(_969) * 0.5f);
  }
  if (_970 > 1.0f) {
    _1003 = ((log2(_970 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _1003 = (sqrt(_970) * 0.5f);
  }
  float4 _1004 = SrcImage.Load(int3(_141, _594, 0));
  float _1008 = max(0.0f, _1004.x);
  float _1009 = max(0.0f, _1004.y);
  float _1010 = max(0.0f, _1004.z);
  if (_1008 > 1.0f) {
    _1021 = ((log2(_1008 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _1021 = (sqrt(_1008) * 0.5f);
  }
  if (_1009 > 1.0f) {
    _1032 = ((log2(_1009 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _1032 = (sqrt(_1009) * 0.5f);
  }
  if (_1010 > 1.0f) {
    _1043 = ((log2(_1010 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _1043 = (sqrt(_1010) * 0.5f);
  }
  float4 _1044 = SrcImage.Load(int3(_15, _758, 0));
  float _1048 = max(0.0f, _1044.x);
  float _1049 = max(0.0f, _1044.y);
  float _1050 = max(0.0f, _1044.z);
  if (_1048 > 1.0f) {
    _1061 = ((log2(_1048 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _1061 = (sqrt(_1048) * 0.5f);
  }
  if (_1049 > 1.0f) {
    _1072 = ((log2(_1049 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _1072 = (sqrt(_1049) * 0.5f);
  }
  if (_1050 > 1.0f) {
    _1083 = ((log2(_1050 + -0.2846689224243164f) * 0.12395743280649185f) + 0.5599107146263123f);
  } else {
    _1083 = (sqrt(_1050) * 0.5f);
  }
  float _1091 = max(max(max(max(_952, _992), _1032), _912), _1072);
  float _1104 = asfloat(((uint)(((int)((uint)((int)(asint(saturate(asfloat(((uint)(2129690299u - (int)(asint(_1091))))) * min(min(min(min(min(_952, _992), _1032), _912), _1072), (1.0f - _1091)))))) >> 1)) + 532432441u))) * asfloat(const1.x);
  float _1106 = (_1104 * 4.0f) + 1.0f;
  float _1109 = asfloat(((uint)(2129764351u - (int)(asint(_1106)))));
  float _1112 = (2.0f - (_1109 * _1106)) * _1109;
  float _1119 = max(0, _1112 * ((_1104 * (((_941 + _901) + _1021) + _1061)) + _981));
  float _1126 = max(0, _1112 * ((_1104 * (((_952 + _912) + _1032) + _1072)) + _992));
  float _1133 = max(0, _1112 * ((_1104 * (((_963 + _923) + _1043) + _1083)) + _1003));
  if (_1119 > 2.0f) {
    _1144 = (exp2((_1119 + -0.5599107146263123f) * 8.067285537719727f) + 0.2846689224243164f);
  } else {
    _1144 = ((_1119 * _1119) * 4.0f);
  }
  if (_1126 > 2.0f) {
    _1155 = (exp2((_1126 + -0.5599107146263123f) * 8.067285537719727f) + 0.2846689224243164f);
  } else {
    _1155 = ((_1126 * _1126) * 4.0f);
  }
  if (_1133 > 2.0f) {
    _1166 = (exp2((_1133 + -0.5599107146263123f) * 8.067285537719727f) + 0.2846689224243164f);
  } else {
    _1166 = ((_1133 * _1133) * 4.0f);
  }
  OutputImage[int2(_15, _594)] = float4(_1144, _1155, _1166, 1.0f);
}
