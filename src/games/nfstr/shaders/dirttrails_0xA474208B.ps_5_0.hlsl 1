// ---- Created with 3Dmigoto v1.3.16 on Tue Aug 05 17:19:30 2025
Texture2D<float4> t3 : register(t3);

Texture2D<float4> t2 : register(t2);

Texture2D<float4> t1 : register(t1);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb1 : register(b1)
{
  float4 cb1[2];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[21];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[4];
}




// 3Dmigoto declarations
#define cmp -


void main(
  float4 v0 : SV_Position0,
  float4 v1 : TEXCOORD0,
  float4 v2 : TEXCOORD1,
  float4 v3 : TEXCOORD2,
  float4 v4 : TEXCOORD3,
  float4 v5 : TEXCOORD4,
  out float4 o0 : SV_Target0,
  out float4 o1 : SV_Target1,
  out float4 o2 : SV_Target2,
  out float4 o3 : SV_Target3)
{
  float4 r0,r1,r2;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyz = t2.Sample(s1_s, v5.xy).xyw;
  r0.xyw = r0.xzy * float3(2,2,2) + float3(-1,-1,-1);
  r0.xy = r0.xw * r0.yw;
  r0.y = r0.x * r0.x + r0.y;
  r0.y = 1 + -r0.y;
  r0.y = max(0, r0.y);
  r0.z = sqrt(r0.y);
  r1.x = dot(r0.xwz, v2.xyz);
  r1.y = dot(r0.xwz, v3.xyz);
  r1.z = dot(r0.xwz, v4.xyz);
  r0.x = dot(r1.xyz, r1.xyz);
  r0.x = rsqrt(r0.x);
  r0.xyz = r1.xyz * r0.xxx;
  o0.xyz = r0.xyz * float3(0.5,0.5,0.5) + float3(0.5,0.5,0.5);
  r1.xy = t3.Sample(s0_s, v5.xy).xy;
  o0.w = cb1[1].x * r1.x;
  r1.x = cb1[0].x * r1.y;
  r1.yzw = cb2[20].xyz + -v1.xyz;
  r2.x = dot(r1.yzw, r1.yzw);
  r2.x = rsqrt(r2.x);
  r1.yzw = r2.xxx * r1.yzw;
  r1.y = dot(r0.xyz, r1.yzw);
  r1.y = 1 + -r1.y;
  r1.z = r1.y * r1.y;
  r1.y = r1.y * r1.z;
  r1.y = r1.y * 0.5 + 1;
  o1.w = r1.y * r1.x;
  r1.xyz = t1.Sample(s0_s, v5.xy).xyz;
  o1.xyz = r1.xyz;
  r1.xyz = r1.xyz * r1.xyz;
  r0.w = 1;
  o2.x = dot(r0.xyzw, cb0[3].xyzw);
  o2.yzw = float3(0,0,0);
  r2.x = dot(r0.xyzw, cb0[0].xyzw);
  r2.y = dot(r0.xyzw, cb0[1].xyzw);
  r2.z = dot(r0.xyzw, cb0[2].xyzw);
  r0.xyz = max(float3(0,0,0), r2.xyz);
  r0.xyz = r0.xyz * r1.xyz;
  r0.xyz = float3(0.125,0.125,0.125) * r0.xyz;
  r0.w = max(r0.x, r0.y);
  r1.x = max(9.99999997e-007, r0.z);
  r0.w = max(r1.x, r0.w);
  r0.w = min(1, r0.w);
  r0.w = 255 * r0.w;
  r0.w = ceil(r0.w);
  r0.w = 0.00392156886 * r0.w;
  o3.xyz = r0.xyz / r0.www;
  o3.w = r0.w;
  return;
}