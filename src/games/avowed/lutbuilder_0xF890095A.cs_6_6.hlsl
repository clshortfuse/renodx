RWTexture3D<float4> RWOutputTexture : register(u0);

cbuffer cb0 : register(b0) {
  float cb0_013x : packoffset(c013.x);
  float cb0_013y : packoffset(c013.y);
  float cb0_013z : packoffset(c013.z);
  float cb0_013w : packoffset(c013.w);
  float cb0_014x : packoffset(c014.x);
  float cb0_014y : packoffset(c014.y);
  float cb0_014z : packoffset(c014.z);
  float cb0_015x : packoffset(c015.x);
  float cb0_015y : packoffset(c015.y);
  float cb0_015z : packoffset(c015.z);
  float cb0_015w : packoffset(c015.w);
  float cb0_016x : packoffset(c016.x);
  float cb0_016y : packoffset(c016.y);
  float cb0_016z : packoffset(c016.z);
  float cb0_016w : packoffset(c016.w);
  float cb0_017x : packoffset(c017.x);
  float cb0_017y : packoffset(c017.y);
  float cb0_017z : packoffset(c017.z);
  float cb0_017w : packoffset(c017.w);
  float cb0_018x : packoffset(c018.x);
  float cb0_018y : packoffset(c018.y);
  float cb0_018z : packoffset(c018.z);
  float cb0_018w : packoffset(c018.w);
  float cb0_019x : packoffset(c019.x);
  float cb0_019y : packoffset(c019.y);
  float cb0_019z : packoffset(c019.z);
  float cb0_019w : packoffset(c019.w);
  float cb0_020x : packoffset(c020.x);
  float cb0_020y : packoffset(c020.y);
  float cb0_020z : packoffset(c020.z);
  float cb0_020w : packoffset(c020.w);
  float cb0_021x : packoffset(c021.x);
  float cb0_021y : packoffset(c021.y);
  float cb0_021z : packoffset(c021.z);
  float cb0_021w : packoffset(c021.w);
  float cb0_022x : packoffset(c022.x);
  float cb0_022y : packoffset(c022.y);
  float cb0_022z : packoffset(c022.z);
  float cb0_022w : packoffset(c022.w);
  float cb0_023x : packoffset(c023.x);
  float cb0_023y : packoffset(c023.y);
  float cb0_023z : packoffset(c023.z);
  float cb0_023w : packoffset(c023.w);
  float cb0_024x : packoffset(c024.x);
  float cb0_024y : packoffset(c024.y);
  float cb0_024z : packoffset(c024.z);
  float cb0_024w : packoffset(c024.w);
  float cb0_025x : packoffset(c025.x);
  float cb0_025y : packoffset(c025.y);
  float cb0_025z : packoffset(c025.z);
  float cb0_025w : packoffset(c025.w);
  float cb0_026x : packoffset(c026.x);
  float cb0_026y : packoffset(c026.y);
  float cb0_026z : packoffset(c026.z);
  float cb0_026w : packoffset(c026.w);
  float cb0_027x : packoffset(c027.x);
  float cb0_027y : packoffset(c027.y);
  float cb0_027z : packoffset(c027.z);
  float cb0_027w : packoffset(c027.w);
  float cb0_028x : packoffset(c028.x);
  float cb0_028y : packoffset(c028.y);
  float cb0_028z : packoffset(c028.z);
  float cb0_028w : packoffset(c028.w);
  float cb0_029x : packoffset(c029.x);
  float cb0_029y : packoffset(c029.y);
  float cb0_029z : packoffset(c029.z);
  float cb0_029w : packoffset(c029.w);
  float cb0_030x : packoffset(c030.x);
  float cb0_030y : packoffset(c030.y);
  float cb0_030z : packoffset(c030.z);
  float cb0_030w : packoffset(c030.w);
  float cb0_031x : packoffset(c031.x);
  float cb0_031y : packoffset(c031.y);
  float cb0_031z : packoffset(c031.z);
  float cb0_031w : packoffset(c031.w);
  float cb0_032x : packoffset(c032.x);
  float cb0_032y : packoffset(c032.y);
  float cb0_032z : packoffset(c032.z);
  float cb0_032w : packoffset(c032.w);
  float cb0_033x : packoffset(c033.x);
  float cb0_033y : packoffset(c033.y);
  float cb0_033z : packoffset(c033.z);
  float cb0_033w : packoffset(c033.w);
  float cb0_034x : packoffset(c034.x);
  float cb0_034y : packoffset(c034.y);
  float cb0_034z : packoffset(c034.z);
  float cb0_034w : packoffset(c034.w);
  float cb0_035x : packoffset(c035.x);
  float cb0_035w : packoffset(c035.w);
  float cb0_036x : packoffset(c036.x);
  float cb0_036y : packoffset(c036.y);
  float cb0_036z : packoffset(c036.z);
  float cb0_036w : packoffset(c036.w);
  float cb0_037x : packoffset(c037.x);
  float cb0_037y : packoffset(c037.y);
  float cb0_037z : packoffset(c037.z);
  float cb0_037w : packoffset(c037.w);
  float cb0_038x : packoffset(c038.x);
  float cb0_038y : packoffset(c038.y);
  float cb0_039x : packoffset(c039.x);
  float cb0_039y : packoffset(c039.y);
  float cb0_039z : packoffset(c039.z);
  float cb0_040y : packoffset(c040.y);
  uint cb0_041x : packoffset(c041.x);
  float cb0_042x : packoffset(c042.x);
  float cb0_042y : packoffset(c042.y);
};

cbuffer UniformBufferConstants_WorkingColorSpace : register(b1) {
  float UniformBufferConstants_WorkingColorSpace_008x : packoffset(c008.x);
  float UniformBufferConstants_WorkingColorSpace_008y : packoffset(c008.y);
  float UniformBufferConstants_WorkingColorSpace_008z : packoffset(c008.z);
  float UniformBufferConstants_WorkingColorSpace_009x : packoffset(c009.x);
  float UniformBufferConstants_WorkingColorSpace_009y : packoffset(c009.y);
  float UniformBufferConstants_WorkingColorSpace_009z : packoffset(c009.z);
  float UniformBufferConstants_WorkingColorSpace_010x : packoffset(c010.x);
  float UniformBufferConstants_WorkingColorSpace_010y : packoffset(c010.y);
  float UniformBufferConstants_WorkingColorSpace_010z : packoffset(c010.z);
  float UniformBufferConstants_WorkingColorSpace_012x : packoffset(c012.x);
  float UniformBufferConstants_WorkingColorSpace_012y : packoffset(c012.y);
  float UniformBufferConstants_WorkingColorSpace_012z : packoffset(c012.z);
  float UniformBufferConstants_WorkingColorSpace_013x : packoffset(c013.x);
  float UniformBufferConstants_WorkingColorSpace_013y : packoffset(c013.y);
  float UniformBufferConstants_WorkingColorSpace_013z : packoffset(c013.z);
  float UniformBufferConstants_WorkingColorSpace_014x : packoffset(c014.x);
  float UniformBufferConstants_WorkingColorSpace_014y : packoffset(c014.y);
  float UniformBufferConstants_WorkingColorSpace_014z : packoffset(c014.z);
  uint UniformBufferConstants_WorkingColorSpace_020x : packoffset(c020.x);
};

[numthreads(8, 8, 8)]
void main(
 uint3 SV_DispatchThreadID : SV_DispatchThreadID,
 uint3 SV_GroupID : SV_GroupID,
 uint3 SV_GroupThreadID : SV_GroupThreadID,
 uint SV_GroupIndex : SV_GroupIndex
) {
  float _9 = float((uint)(SV_DispatchThreadID.x));
  float _10 = float((uint)(SV_DispatchThreadID.y));
  float _11 = _9 + 0.5f;
  float _12 = _10 + 0.5f;
  float _16 = (cb0_042x) * _11;
  float _17 = (cb0_042y) * _12;
  float _20 = 0.5f / (cb0_035x);
  float _21 = _16 - _20;
  float _22 = _17 - _20;
  float _23 = (cb0_035x) * _21;
  float _24 = (cb0_035x) * _22;
  float _25 = (cb0_035x) + -1.0f;
  float _26 = _23 / _25;
  float _27 = _24 / _25;
  float _28 = float((uint)(SV_DispatchThreadID.z));
  float _29 = _28 / _25;
  bool _32 = (((uint)(cb0_041x)) == 1);
  float _49 = 1.3792141675949097f;
  float _50 = -0.30886411666870117f;
  float _51 = -0.0703500509262085f;
  float _52 = -0.06933490186929703f;
  float _53 = 1.08229660987854f;
  float _54 = -0.012961871922016144f;
  float _55 = -0.0021590073592960835f;
  float _56 = -0.0454593189060688f;
  float _57 = 1.0476183891296387f;
  float _574;
  float _607;
  float _621;
  float _685;
  float _937;
  float _938;
  float _939;
  float _950;
  float _961;
  float _972;
  if (!_32) {
    bool _34 = (((uint)(cb0_041x)) == 2);
    _49 = 1.0258246660232544f;
    _50 = -0.020053181797266006f;
    _51 = -0.005771636962890625f;
    _52 = -0.002234415616840124f;
    _53 = 1.0045864582061768f;
    _54 = -0.002352118492126465f;
    _55 = -0.005013350863009691f;
    _56 = -0.025290070101618767f;
    _57 = 1.0303035974502563f;
    if (!_34) {
      bool _36 = (((uint)(cb0_041x)) == 3);
      _49 = 0.6954522132873535f;
      _50 = 0.14067870378494263f;
      _51 = 0.16386906802654266f;
      _52 = 0.044794563204050064f;
      _53 = 0.8596711158752441f;
      _54 = 0.0955343171954155f;
      _55 = -0.005525882821530104f;
      _56 = 0.004025210160762072f;
      _57 = 1.0015007257461548f;
      if (!_36) {
        bool _38 = (((uint)(cb0_041x)) == 4);
        float _39 = (_38 ? 1.0f : 1.705051064491272f);
        float _40 = (_38 ? 0.0f : -0.6217921376228333f);
        float _41 = (_38 ? 0.0f : -0.0832589864730835f);
        float _42 = (_38 ? 0.0f : -0.13025647401809692f);
        float _43 = (_38 ? 1.0f : 1.140804648399353f);
        float _44 = (_38 ? 0.0f : -0.010548308491706848f);
        float _45 = (_38 ? 0.0f : -0.024003351107239723f);
        float _46 = (_38 ? 0.0f : -0.1289689838886261f);
        float _47 = (_38 ? 1.0f : 1.1529725790023804f);
        _49 = _39;
        _50 = _40;
        _51 = _41;
        _52 = _42;
        _53 = _43;
        _54 = _44;
        _55 = _45;
        _56 = _46;
        _57 = _47;
      }
    }
  }
  float _58 = _26 + -0.4340175986289978f;
  float _59 = _27 + -0.4340175986289978f;
  float _60 = _29 + -0.4340175986289978f;
  float _61 = _58 * 14.0f;
  float _62 = _59 * 14.0f;
  float _63 = _60 * 14.0f;
  float _64 = exp2(_61);
  float _65 = exp2(_62);
  float _66 = exp2(_63);
  float _67 = _64 * 0.18000000715255737f;
  float _68 = _65 * 0.18000000715255737f;
  float _69 = _66 * 0.18000000715255737f;
  float _70 = _67 + -0.002667719265446067f;
  float _71 = _68 + -0.002667719265446067f;
  float _72 = _69 + -0.002667719265446067f;
  float _85 = (UniformBufferConstants_WorkingColorSpace_008x) * _70;
  float _86 = mad((UniformBufferConstants_WorkingColorSpace_008y), _71, _85);
  float _87 = mad((UniformBufferConstants_WorkingColorSpace_008z), _72, _86);
  float _88 = (UniformBufferConstants_WorkingColorSpace_009x) * _70;
  float _89 = mad((UniformBufferConstants_WorkingColorSpace_009y), _71, _88);
  float _90 = mad((UniformBufferConstants_WorkingColorSpace_009z), _72, _89);
  float _91 = (UniformBufferConstants_WorkingColorSpace_010x) * _70;
  float _92 = mad((UniformBufferConstants_WorkingColorSpace_010y), _71, _91);
  float _93 = mad((UniformBufferConstants_WorkingColorSpace_010z), _72, _92);
  float _94 = dot(float3(_87, _90, _93), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
  float _95 = _87 / _94;
  float _96 = _90 / _94;
  float _97 = _93 / _94;
  float _98 = _95 + -1.0f;
  float _99 = _96 + -1.0f;
  float _100 = _97 + -1.0f;
  float _101 = dot(float3(_98, _99, _100), float3(_98, _99, _100));
  float _102 = _101 * -4.0f;
  float _103 = exp2(_102);
  float _104 = 1.0f - _103;
  float _107 = _94 * _94;
  float _108 = _107 * -4.0f;
  float _109 = _108 * (cb0_036w);
  float _110 = exp2(_109);
  float _111 = 1.0f - _110;
  float _112 = _111 * _104;
  float _113 = _87 * 1.3704125881195068f;
  float _114 = mad(-0.3292922377586365f, _90, _113);
  float _115 = mad(-0.06368321925401688f, _93, _114);
  float _116 = _87 * -0.08343357592821121f;
  float _117 = mad(1.0970927476882935f, _90, _116);
  float _118 = mad(-0.010861365124583244f, _93, _117);
  float _119 = _87 * -0.02579331398010254f;
  float _120 = mad(-0.09862580895423889f, _90, _119);
  float _121 = mad(1.2036951780319214f, _93, _120);
  float _122 = _115 - _87;
  float _123 = _118 - _90;
  float _124 = _121 - _93;
  float _125 = _122 * _112;
  float _126 = _123 * _112;
  float _127 = _124 * _112;
  float _128 = _125 + _87;
  float _129 = _126 + _90;
  float _130 = _127 + _93;
  float _131 = dot(float3(_128, _129, _130), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
  float _142 = (cb0_019x) + (cb0_024x);
  float _143 = (cb0_019y) + (cb0_024y);
  float _144 = (cb0_019z) + (cb0_024z);
  float _145 = (cb0_019w) + (cb0_024w);
  float _156 = (cb0_018x) * (cb0_023x);
  float _157 = (cb0_018y) * (cb0_023y);
  float _158 = (cb0_018z) * (cb0_023z);
  float _159 = (cb0_018w) * (cb0_023w);
  float _170 = (cb0_017x) * (cb0_022x);
  float _171 = (cb0_017y) * (cb0_022y);
  float _172 = (cb0_017z) * (cb0_022z);
  float _173 = (cb0_017w) * (cb0_022w);
  float _184 = (cb0_016x) * (cb0_021x);
  float _185 = (cb0_016y) * (cb0_021y);
  float _186 = (cb0_016z) * (cb0_021z);
  float _187 = (cb0_016w) * (cb0_021w);
  float _198 = (cb0_015x) * (cb0_020x);
  float _199 = (cb0_015y) * (cb0_020y);
  float _200 = (cb0_015z) * (cb0_020z);
  float _201 = (cb0_015w) * (cb0_020w);
  float _202 = _198 * _201;
  float _203 = _199 * _201;
  float _204 = _200 * _201;
  float _205 = _128 - _131;
  float _206 = _129 - _131;
  float _207 = _130 - _131;
  float _208 = _202 * _205;
  float _209 = _203 * _206;
  float _210 = _204 * _207;
  float _211 = _208 + _131;
  float _212 = _209 + _131;
  float _213 = _210 + _131;
  float _214 = max(0.0f, _211);
  float _215 = max(0.0f, _212);
  float _216 = max(0.0f, _213);
  float _217 = _184 * _187;
  float _218 = _185 * _187;
  float _219 = _186 * _187;
  float _220 = _214 * 5.55555534362793f;
  float _221 = _215 * 5.55555534362793f;
  float _222 = _216 * 5.55555534362793f;
  float _223 = log2(_220);
  float _224 = log2(_221);
  float _225 = log2(_222);
  float _226 = _217 * _223;
  float _227 = _218 * _224;
  float _228 = _219 * _225;
  float _229 = exp2(_226);
  float _230 = exp2(_227);
  float _231 = exp2(_228);
  float _232 = _229 * 0.18000000715255737f;
  float _233 = _230 * 0.18000000715255737f;
  float _234 = _231 * 0.18000000715255737f;
  float _235 = _170 * _173;
  float _236 = _171 * _173;
  float _237 = _172 * _173;
  float _238 = 1.0f / _235;
  float _239 = 1.0f / _236;
  float _240 = 1.0f / _237;
  float _241 = log2(_232);
  float _242 = log2(_233);
  float _243 = log2(_234);
  float _244 = _241 * _238;
  float _245 = _242 * _239;
  float _246 = _243 * _240;
  float _247 = exp2(_244);
  float _248 = exp2(_245);
  float _249 = exp2(_246);
  float _250 = _156 * _159;
  float _251 = _157 * _159;
  float _252 = _158 * _159;
  float _253 = _250 * _247;
  float _254 = _251 * _248;
  float _255 = _252 * _249;
  float _256 = _142 + _145;
  float _257 = _143 + _145;
  float _258 = _144 + _145;
  float _259 = _256 + _253;
  float _260 = _257 + _254;
  float _261 = _258 + _255;
  float _263 = _131 / (cb0_035w);
  float _264 = saturate(_263);
  float _265 = _264 * 2.0f;
  float _266 = 3.0f - _265;
  float _267 = _264 * _264;
  float _268 = _267 * _266;
  float _269 = 1.0f - _268;
  float _275 = (cb0_019x) + (cb0_034x);
  float _276 = (cb0_019y) + (cb0_034y);
  float _277 = (cb0_019z) + (cb0_034z);
  float _278 = (cb0_019w) + (cb0_034w);
  float _284 = (cb0_018x) * (cb0_033x);
  float _285 = (cb0_018y) * (cb0_033y);
  float _286 = (cb0_018z) * (cb0_033z);
  float _287 = (cb0_018w) * (cb0_033w);
  float _293 = (cb0_017x) * (cb0_032x);
  float _294 = (cb0_017y) * (cb0_032y);
  float _295 = (cb0_017z) * (cb0_032z);
  float _296 = (cb0_017w) * (cb0_032w);
  float _302 = (cb0_016x) * (cb0_031x);
  float _303 = (cb0_016y) * (cb0_031y);
  float _304 = (cb0_016z) * (cb0_031z);
  float _305 = (cb0_016w) * (cb0_031w);
  float _311 = (cb0_015x) * (cb0_030x);
  float _312 = (cb0_015y) * (cb0_030y);
  float _313 = (cb0_015z) * (cb0_030z);
  float _314 = (cb0_015w) * (cb0_030w);
  float _315 = _311 * _314;
  float _316 = _312 * _314;
  float _317 = _313 * _314;
  float _318 = _315 * _205;
  float _319 = _316 * _206;
  float _320 = _317 * _207;
  float _321 = _318 + _131;
  float _322 = _319 + _131;
  float _323 = _320 + _131;
  float _324 = max(0.0f, _321);
  float _325 = max(0.0f, _322);
  float _326 = max(0.0f, _323);
  float _327 = _302 * _305;
  float _328 = _303 * _305;
  float _329 = _304 * _305;
  float _330 = _324 * 5.55555534362793f;
  float _331 = _325 * 5.55555534362793f;
  float _332 = _326 * 5.55555534362793f;
  float _333 = log2(_330);
  float _334 = log2(_331);
  float _335 = log2(_332);
  float _336 = _327 * _333;
  float _337 = _328 * _334;
  float _338 = _329 * _335;
  float _339 = exp2(_336);
  float _340 = exp2(_337);
  float _341 = exp2(_338);
  float _342 = _339 * 0.18000000715255737f;
  float _343 = _340 * 0.18000000715255737f;
  float _344 = _341 * 0.18000000715255737f;
  float _345 = _293 * _296;
  float _346 = _294 * _296;
  float _347 = _295 * _296;
  float _348 = 1.0f / _345;
  float _349 = 1.0f / _346;
  float _350 = 1.0f / _347;
  float _351 = log2(_342);
  float _352 = log2(_343);
  float _353 = log2(_344);
  float _354 = _351 * _348;
  float _355 = _352 * _349;
  float _356 = _353 * _350;
  float _357 = exp2(_354);
  float _358 = exp2(_355);
  float _359 = exp2(_356);
  float _360 = _284 * _287;
  float _361 = _285 * _287;
  float _362 = _286 * _287;
  float _363 = _360 * _357;
  float _364 = _361 * _358;
  float _365 = _362 * _359;
  float _366 = _275 + _278;
  float _367 = _276 + _278;
  float _368 = _277 + _278;
  float _369 = _366 + _363;
  float _370 = _367 + _364;
  float _371 = _368 + _365;
  float _374 = (cb0_036y) - (cb0_036x);
  float _375 = _131 - (cb0_036x);
  float _376 = _375 / _374;
  float _377 = saturate(_376);
  float _378 = _377 * 2.0f;
  float _379 = 3.0f - _378;
  float _380 = _377 * _377;
  float _381 = _380 * _379;
  float _387 = (cb0_019x) + (cb0_029x);
  float _388 = (cb0_019y) + (cb0_029y);
  float _389 = (cb0_019z) + (cb0_029z);
  float _390 = (cb0_019w) + (cb0_029w);
  float _396 = (cb0_018x) * (cb0_028x);
  float _397 = (cb0_018y) * (cb0_028y);
  float _398 = (cb0_018z) * (cb0_028z);
  float _399 = (cb0_018w) * (cb0_028w);
  float _405 = (cb0_017x) * (cb0_027x);
  float _406 = (cb0_017y) * (cb0_027y);
  float _407 = (cb0_017z) * (cb0_027z);
  float _408 = (cb0_017w) * (cb0_027w);
  float _414 = (cb0_016x) * (cb0_026x);
  float _415 = (cb0_016y) * (cb0_026y);
  float _416 = (cb0_016z) * (cb0_026z);
  float _417 = (cb0_016w) * (cb0_026w);
  float _423 = (cb0_015x) * (cb0_025x);
  float _424 = (cb0_015y) * (cb0_025y);
  float _425 = (cb0_015z) * (cb0_025z);
  float _426 = (cb0_015w) * (cb0_025w);
  float _427 = _423 * _426;
  float _428 = _424 * _426;
  float _429 = _425 * _426;
  float _430 = _427 * _205;
  float _431 = _428 * _206;
  float _432 = _429 * _207;
  float _433 = _430 + _131;
  float _434 = _431 + _131;
  float _435 = _432 + _131;
  float _436 = max(0.0f, _433);
  float _437 = max(0.0f, _434);
  float _438 = max(0.0f, _435);
  float _439 = _414 * _417;
  float _440 = _415 * _417;
  float _441 = _416 * _417;
  float _442 = _436 * 5.55555534362793f;
  float _443 = _437 * 5.55555534362793f;
  float _444 = _438 * 5.55555534362793f;
  float _445 = log2(_442);
  float _446 = log2(_443);
  float _447 = log2(_444);
  float _448 = _439 * _445;
  float _449 = _440 * _446;
  float _450 = _441 * _447;
  float _451 = exp2(_448);
  float _452 = exp2(_449);
  float _453 = exp2(_450);
  float _454 = _451 * 0.18000000715255737f;
  float _455 = _452 * 0.18000000715255737f;
  float _456 = _453 * 0.18000000715255737f;
  float _457 = _405 * _408;
  float _458 = _406 * _408;
  float _459 = _407 * _408;
  float _460 = 1.0f / _457;
  float _461 = 1.0f / _458;
  float _462 = 1.0f / _459;
  float _463 = log2(_454);
  float _464 = log2(_455);
  float _465 = log2(_456);
  float _466 = _463 * _460;
  float _467 = _464 * _461;
  float _468 = _465 * _462;
  float _469 = exp2(_466);
  float _470 = exp2(_467);
  float _471 = exp2(_468);
  float _472 = _396 * _399;
  float _473 = _397 * _399;
  float _474 = _398 * _399;
  float _475 = _472 * _469;
  float _476 = _473 * _470;
  float _477 = _474 * _471;
  float _478 = _387 + _390;
  float _479 = _388 + _390;
  float _480 = _389 + _390;
  float _481 = _478 + _475;
  float _482 = _479 + _476;
  float _483 = _480 + _477;
  float _484 = _268 - _381;
  float _485 = _269 * _259;
  float _486 = _269 * _260;
  float _487 = _269 * _261;
  float _488 = _481 * _484;
  float _489 = _482 * _484;
  float _490 = _483 * _484;
  float _491 = _381 * _369;
  float _492 = _381 * _370;
  float _493 = _381 * _371;
  float _494 = _491 + _485;
  float _495 = _494 + _488;
  float _496 = _492 + _486;
  float _497 = _496 + _489;
  float _498 = _493 + _487;
  float _499 = _498 + _490;
  float _501 = _495 * 0.9386394023895264f;
  float _502 = mad(-4.540197551250458e-09f, _497, _501);
  float _503 = mad(0.061360642313957214f, _499, _502);
  float _504 = _495 * 6.775371730327606e-08f;
  float _505 = mad(0.8307942152023315f, _497, _504);
  float _506 = mad(0.169205904006958f, _499, _505);
  float _507 = _495 * -9.313225746154785e-10f;
  float _508 = mad(-2.3283064365386963e-10f, _497, _507);
  float _509 = _503 - _495;
  float _510 = _506 - _497;
  float _511 = _509 * (cb0_036z);
  float _512 = _510 * (cb0_036z);
  float _513 = _508 * (cb0_036z);
  float _514 = _511 + _495;
  float _515 = _512 + _497;
  float _516 = _513 + _499;
  float _517 = _514 * 0.6954522132873535f;
  float _518 = mad(0.14067868888378143f, _515, _517);
  float _519 = mad(0.16386905312538147f, _516, _518);
  float _520 = _514 * 0.044794581830501556f;
  float _521 = mad(0.8596711158752441f, _515, _520);
  float _522 = mad(0.0955343246459961f, _516, _521);
  float _523 = _514 * -0.005525882821530104f;
  float _524 = mad(0.004025210160762072f, _515, _523);
  float _525 = mad(1.0015007257461548f, _516, _524);
  float _526 = min(_519, _522);
  float _527 = min(_526, _525);
  float _528 = max(_519, _522);
  float _529 = max(_528, _525);
  float _530 = max(_529, 1.000000013351432e-10f);
  float _531 = max(_527, 1.000000013351432e-10f);
  float _532 = _530 - _531;
  float _533 = max(_529, 0.009999999776482582f);
  float _534 = _532 / _533;
  float _535 = _525 - _522;
  float _536 = _535 * _525;
  float _537 = _522 - _519;
  float _538 = _537 * _522;
  float _539 = _536 + _538;
  float _540 = _519 - _525;
  float _541 = _540 * _519;
  float _542 = _539 + _541;
  float _543 = sqrt(_542);
  float _544 = _543 * 1.75f;
  float _545 = _522 + _519;
  float _546 = _545 + _525;
  float _547 = _546 + _544;
  float _548 = _547 * 0.3333333432674408f;
  float _549 = _534 + -0.4000000059604645f;
  float _550 = _549 * 5.0f;
  float _551 = _549 * 2.5f;
  float _552 = abs(_551);
  float _553 = 1.0f - _552;
  float _554 = max(_553, 0.0f);
  bool _555 = (_550 > 0.0f);
  bool _556 = (_550 < 0.0f);
  int _557 = int(_555);
  int _558 = int(_556);
  int _559 = _557 - _558;
  float _560 = float(_559);
  float _561 = _554 * _554;
  float _562 = 1.0f - _561;
  float _563 = _560 * _562;
  float _564 = _563 + 1.0f;
  float _565 = _564 * 0.02500000037252903f;
  bool _566 = !(_548 <= 0.0533333346247673f);
  _574 = _565;
  if (_566) {
    bool _568 = !(_548 >= 0.1599999964237213f);
    _574 = 0.0f;
    if (_568) {
      float _570 = 0.23999999463558197f / _547;
      float _571 = _570 + -0.5f;
      float _572 = _571 * _565;
      _574 = _572;
    }
  }
  float _575 = _574 + 1.0f;
  float _576 = _575 * _519;
  float _577 = _575 * _522;
  float _578 = _575 * _525;
  bool _579 = (_576 == _577);
  bool _580 = (_577 == _578);
  bool _581 = _579 && _580;
  _607 = 0.0f;
  if (!_581) {
    float _583 = _576 * 2.0f;
    float _584 = _583 - _577;
    float _585 = _584 - _578;
    float _586 = _522 - _525;
    float _587 = _586 * 1.7320507764816284f;
    float _588 = _587 * _575;
    float _589 = _588 / _585;
    float _590 = atan(_589);
    float _591 = _590 + 3.1415927410125732f;
    float _592 = _590 + -3.1415927410125732f;
    bool _593 = (_585 < 0.0f);
    bool _594 = (_585 == 0.0f);
    bool _595 = (_588 >= 0.0f);
    bool _596 = (_588 < 0.0f);
    bool _597 = _595 && _593;
    float _598 = (_597 ? _591 : _590);
    bool _599 = _596 && _593;
    float _600 = (_599 ? _592 : _598);
    bool _601 = _596 && _594;
    bool _602 = _595 && _594;
    float _603 = _600 * 57.2957763671875f;
    float _604 = (_601 ? -90.0f : _603);
    float _605 = (_602 ? 90.0f : _604);
    _607 = _605;
  }
  bool _608 = (_607 < 0.0f);
  float _609 = _607 + 360.0f;
  float _610 = (_608 ? _609 : _607);
  float _611 = max(_610, 0.0f);
  float _612 = min(_611, 360.0f);
  bool _613 = (_612 < -180.0f);
  if (_613) {
    float _615 = _612 + 360.0f;
    _621 = _615;
  } else {
    bool _617 = (_612 > 180.0f);
    _621 = _612;
    if (_617) {
      float _619 = _612 + -360.0f;
      _621 = _619;
    }
  }
  float _622 = _621 * 0.014814814552664757f;
  float _623 = abs(_622);
  float _624 = 1.0f - _623;
  float _625 = saturate(_624);
  float _626 = _625 * 2.0f;
  float _627 = 3.0f - _626;
  float _628 = _625 * _625;
  float _629 = _628 * _627;
  float _630 = 0.029999999329447746f - _576;
  float _631 = _534 * 0.18000000715255737f;
  float _632 = _631 * _630;
  float _633 = _629 * _629;
  float _634 = _633 * _632;
  float _635 = _634 + _576;
  float _636 = _635 * 1.4514392614364624f;
  float _637 = mad(-0.2365107536315918f, _577, _636);
  float _638 = mad(-0.21492856740951538f, _578, _637);
  float _639 = _635 * -0.07655377686023712f;
  float _640 = mad(1.17622971534729f, _577, _639);
  float _641 = mad(-0.09967592358589172f, _578, _640);
  float _642 = _635 * 0.008316148072481155f;
  float _643 = mad(-0.006032449658960104f, _577, _642);
  float _644 = mad(0.9977163076400757f, _578, _643);
  float _645 = max(0.0f, _638);
  float _646 = max(0.0f, _641);
  float _647 = max(0.0f, _644);
  float _648 = dot(float3(_645, _646, _647), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
  float _649 = _645 - _648;
  float _650 = _646 - _648;
  float _651 = _647 - _648;
  float _652 = _649 * 0.9599999785423279f;
  float _653 = _650 * 0.9599999785423279f;
  float _654 = _651 * 0.9599999785423279f;
  float _655 = _652 + _648;
  float _656 = _653 + _648;
  float _657 = _654 + _648;
  float _660 = (cb0_038x) + 1.0f;
  float _663 = _660 - (cb0_037z);
  float _665 = (cb0_038y) + 1.0f;
  float _667 = _665 - (cb0_037w);
  bool _668 = ((cb0_037z) > 0.800000011920929f);
  if (_668) {
    float _671 = 0.8199999928474426f - (cb0_037z);
    float _672 = _671 / (cb0_037y);
    float _673 = _672 + -0.7447274923324585f;
    _685 = _673;
  } else {
    float _675 = (cb0_038x) + 0.18000000715255737f;
    float _676 = _675 / _663;
    float _677 = 2.0f - _676;
    float _678 = _676 / _677;
    float _679 = log2(_678);
    float _680 = _679 * 0.3465735912322998f;
    float _681 = _663 / (cb0_037y);
    float _682 = _680 * _681;
    float _683 = -0.7447274923324585f - _682;
    _685 = _683;
  }
  float _686 = 1.0f - (cb0_037z);
  float _687 = _686 / (cb0_037y);
  float _688 = _687 - _685;
  float _689 = (cb0_037w) / (cb0_037y);
  float _690 = _689 - _688;
  float _691 = log2(_655);
  float _692 = log2(_656);
  float _693 = log2(_657);
  float _694 = _691 * 0.3010300099849701f;
  float _695 = _692 * 0.3010300099849701f;
  float _696 = _693 * 0.3010300099849701f;
  float _697 = _694 + _688;
  float _698 = _695 + _688;
  float _699 = _696 + _688;
  float _700 = (cb0_037y) * _697;
  float _701 = (cb0_037y) * _698;
  float _702 = (cb0_037y) * _699;
  float _703 = _663 * 2.0f;
  float _704 = (cb0_037y) * -2.0f;
  float _705 = _704 / _663;
  float _706 = _694 - _685;
  float _707 = _695 - _685;
  float _708 = _696 - _685;
  float _709 = _706 * 1.4426950216293335f;
  float _710 = _709 * _705;
  float _711 = _707 * 1.4426950216293335f;
  float _712 = _711 * _705;
  float _713 = _708 * 1.4426950216293335f;
  float _714 = _713 * _705;
  float _715 = exp2(_710);
  float _716 = exp2(_712);
  float _717 = exp2(_714);
  float _718 = _715 + 1.0f;
  float _719 = _716 + 1.0f;
  float _720 = _717 + 1.0f;
  float _721 = _703 / _718;
  float _722 = _703 / _719;
  float _723 = _703 / _720;
  float _724 = _721 - (cb0_038x);
  float _725 = _722 - (cb0_038x);
  float _726 = _723 - (cb0_038x);
  float _727 = _667 * 2.0f;
  float _728 = (cb0_037y) * 2.0f;
  float _729 = _728 / _667;
  float _730 = _694 - _690;
  float _731 = _695 - _690;
  float _732 = _696 - _690;
  float _733 = _730 * 1.4426950216293335f;
  float _734 = _733 * _729;
  float _735 = _731 * 1.4426950216293335f;
  float _736 = _735 * _729;
  float _737 = _732 * 1.4426950216293335f;
  float _738 = _737 * _729;
  float _739 = exp2(_734);
  float _740 = exp2(_736);
  float _741 = exp2(_738);
  float _742 = _739 + 1.0f;
  float _743 = _740 + 1.0f;
  float _744 = _741 + 1.0f;
  float _745 = _727 / _742;
  float _746 = _727 / _743;
  float _747 = _727 / _744;
  float _748 = _665 - _745;
  float _749 = _665 - _746;
  float _750 = _665 - _747;
  bool _751 = (_694 < _685);
  bool _752 = (_695 < _685);
  bool _753 = (_696 < _685);
  float _754 = (_751 ? _724 : _700);
  float _755 = (_752 ? _725 : _701);
  float _756 = (_753 ? _726 : _702);
  bool _757 = (_694 > _690);
  bool _758 = (_695 > _690);
  bool _759 = (_696 > _690);
  float _760 = (_757 ? _748 : _700);
  float _761 = (_758 ? _749 : _701);
  float _762 = (_759 ? _750 : _702);
  float _763 = _690 - _685;
  float _764 = _706 / _763;
  float _765 = _707 / _763;
  float _766 = _708 / _763;
  float _767 = saturate(_764);
  float _768 = saturate(_765);
  float _769 = saturate(_766);
  bool _770 = (_690 < _685);
  float _771 = 1.0f - _767;
  float _772 = 1.0f - _768;
  float _773 = 1.0f - _769;
  float _774 = (_770 ? _771 : _767);
  float _775 = (_770 ? _772 : _768);
  float _776 = (_770 ? _773 : _769);
  float _777 = _774 * 2.0f;
  float _778 = _775 * 2.0f;
  float _779 = _776 * 2.0f;
  float _780 = 3.0f - _777;
  float _781 = 3.0f - _778;
  float _782 = 3.0f - _779;
  float _783 = _760 - _754;
  float _784 = _761 - _755;
  float _785 = _762 - _756;
  float _786 = _774 * _774;
  float _787 = _786 * _783;
  float _788 = _787 * _780;
  float _789 = _775 * _775;
  float _790 = _789 * _784;
  float _791 = _790 * _781;
  float _792 = _776 * _776;
  float _793 = _792 * _785;
  float _794 = _793 * _782;
  float _795 = _788 + _754;
  float _796 = _791 + _755;
  float _797 = _794 + _756;
  float _798 = dot(float3(_795, _796, _797), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
  float _799 = _795 - _798;
  float _800 = _796 - _798;
  float _801 = _797 - _798;
  float _802 = _799 * 0.9300000071525574f;
  float _803 = _800 * 0.9300000071525574f;
  float _804 = _801 * 0.9300000071525574f;
  float _805 = _802 + _798;
  float _806 = _803 + _798;
  float _807 = _804 + _798;
  float _808 = max(0.0f, _805);
  float _809 = max(0.0f, _806);
  float _810 = max(0.0f, _807);
  float _812 = _808 - _514;
  float _813 = _809 - _515;
  float _814 = _810 - _516;
  float _815 = (cb0_037x) * _812;
  float _816 = (cb0_037x) * _813;
  float _817 = (cb0_037x) * _814;
  float _818 = _815 + _514;
  float _819 = _816 + _515;
  float _820 = _817 + _516;
  float _821 = _818 * 1.065374732017517f;
  float _822 = mad(1.451815478503704e-06f, _819, _821);
  float _823 = mad(-0.06537103652954102f, _820, _822);
  float _824 = _818 * -2.57161445915699e-07f;
  float _825 = mad(1.2036634683609009f, _819, _824);
  float _826 = mad(-0.20366770029067993f, _820, _825);
  float _827 = _818 * 1.862645149230957e-08f;
  float _828 = mad(2.0954757928848267e-08f, _819, _827);
  float _829 = mad(0.9999996423721313f, _820, _828);
  float _830 = _823 - _818;
  float _831 = _826 - _819;
  float _832 = _829 - _820;
  float _833 = _830 * (cb0_036z);
  float _834 = _831 * (cb0_036z);
  float _835 = _832 * (cb0_036z);
  float _836 = _833 + _818;
  float _837 = _834 + _819;
  float _838 = _835 + _820;
  float _851 = (UniformBufferConstants_WorkingColorSpace_012x) * _836;
  float _852 = mad((UniformBufferConstants_WorkingColorSpace_012y), _837, _851);
  float _853 = mad((UniformBufferConstants_WorkingColorSpace_012z), _838, _852);
  float _854 = (UniformBufferConstants_WorkingColorSpace_013x) * _836;
  float _855 = mad((UniformBufferConstants_WorkingColorSpace_013y), _837, _854);
  float _856 = mad((UniformBufferConstants_WorkingColorSpace_013z), _838, _855);
  float _857 = (UniformBufferConstants_WorkingColorSpace_014x) * _836;
  float _858 = mad((UniformBufferConstants_WorkingColorSpace_014y), _837, _857);
  float _859 = mad((UniformBufferConstants_WorkingColorSpace_014z), _838, _858);
  float _860 = max(0.0f, _853);
  float _861 = max(0.0f, _856);
  float _862 = max(0.0f, _859);
  float _865 = (cb0_039x) * _860;
  float _866 = (cb0_039x) * _861;
  float _867 = (cb0_039x) * _862;
  float _870 = (cb0_039y) + _865;
  float _871 = _870 * _860;
  float _872 = _871 + (cb0_039z);
  float _873 = (cb0_039y) + _866;
  float _874 = _873 * _861;
  float _875 = _874 + (cb0_039z);
  float _876 = (cb0_039y) + _867;
  float _877 = _876 * _862;
  float _878 = _877 + (cb0_039z);
  float _888 = (cb0_014x) * _872;
  float _889 = (cb0_014y) * _875;
  float _890 = (cb0_014z) * _878;
  float _891 = (cb0_013x) - _888;
  float _892 = (cb0_013y) - _889;
  float _893 = (cb0_013z) - _890;
  float _894 = _891 * (cb0_013w);
  float _895 = _892 * (cb0_013w);
  float _896 = _893 * (cb0_013w);
  float _897 = _894 + _888;
  float _898 = _895 + _889;
  float _899 = _896 + _890;
  float _902 = max(0.0f, _897);
  float _903 = max(0.0f, _898);
  float _904 = max(0.0f, _899);
  float _905 = log2(_902);
  float _906 = log2(_903);
  float _907 = log2(_904);
  float _908 = _905 * (cb0_040y);
  float _909 = _906 * (cb0_040y);
  float _910 = _907 * (cb0_040y);
  float _911 = exp2(_908);
  float _912 = exp2(_909);
  float _913 = exp2(_910);
  bool _916 = (((uint)(UniformBufferConstants_WorkingColorSpace_020x)) == 0);
  _937 = _911;
  _938 = _912;
  _939 = _913;
  if (_916) {
    float _918 = (UniformBufferConstants_WorkingColorSpace_008x) * _911;
    float _919 = mad((UniformBufferConstants_WorkingColorSpace_008y), _912, _918);
    float _920 = mad((UniformBufferConstants_WorkingColorSpace_008z), _913, _919);
    float _921 = (UniformBufferConstants_WorkingColorSpace_009x) * _911;
    float _922 = mad((UniformBufferConstants_WorkingColorSpace_009y), _912, _921);
    float _923 = mad((UniformBufferConstants_WorkingColorSpace_009z), _913, _922);
    float _924 = (UniformBufferConstants_WorkingColorSpace_010x) * _911;
    float _925 = mad((UniformBufferConstants_WorkingColorSpace_010y), _912, _924);
    float _926 = mad((UniformBufferConstants_WorkingColorSpace_010z), _913, _925);
    float _927 = _920 * _49;
    float _928 = mad(_50, _923, _927);
    float _929 = mad(_51, _926, _928);
    float _930 = _920 * _52;
    float _931 = mad(_53, _923, _930);
    float _932 = mad(_54, _926, _931);
    float _933 = _920 * _55;
    float _934 = mad(_56, _923, _933);
    float _935 = mad(_57, _926, _934);
    _937 = _929;
    _938 = _932;
    _939 = _935;
  }
  bool _940 = (_937 < 0.0031306699384003878f);
  if (_940) {
    float _942 = _937 * 12.920000076293945f;
    _950 = _942;
  } else {
    float _944 = log2(_937);
    float _945 = _944 * 0.4166666567325592f;
    float _946 = exp2(_945);
    float _947 = _946 * 1.0549999475479126f;
    float _948 = _947 + -0.054999999701976776f;
    _950 = _948;
  }
  bool _951 = (_938 < 0.0031306699384003878f);
  if (_951) {
    float _953 = _938 * 12.920000076293945f;
    _961 = _953;
  } else {
    float _955 = log2(_938);
    float _956 = _955 * 0.4166666567325592f;
    float _957 = exp2(_956);
    float _958 = _957 * 1.0549999475479126f;
    float _959 = _958 + -0.054999999701976776f;
    _961 = _959;
  }
  bool _962 = (_939 < 0.0031306699384003878f);
  if (_962) {
    float _964 = _939 * 12.920000076293945f;
    _972 = _964;
  } else {
    float _966 = log2(_939);
    float _967 = _966 * 0.4166666567325592f;
    float _968 = exp2(_967);
    float _969 = _968 * 1.0549999475479126f;
    float _970 = _969 + -0.054999999701976776f;
    _972 = _970;
  }
  float _973 = _950 * 0.9523810148239136f;
  float _974 = _961 * 0.9523810148239136f;
  float _975 = _972 * 0.9523810148239136f;
  RWOutputTexture[int3(((uint)(SV_DispatchThreadID.x)), ((uint)(SV_DispatchThreadID.y)), ((uint)(SV_DispatchThreadID.z)))] = float4(_973, _974, _975, 0.0f);
}
