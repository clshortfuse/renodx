cbuffer $Globals : register(b0) {
  uint $Globals_002x : packoffset(c002.x);
  uint $Globals_002y : packoffset(c002.y);
  float $Globals_003x : packoffset(c003.x);
  float $Globals_003y : packoffset(c003.y);
  float $Globals_003z : packoffset(c003.z);
  float $Globals_003w : packoffset(c003.w);
  float $Globals_004x : packoffset(c004.x);
  float $Globals_005x : packoffset(c005.x);
  float $Globals_005y : packoffset(c005.y);
  float $Globals_005z : packoffset(c005.z);
  float $Globals_005w : packoffset(c005.w);
  float $Globals_006x : packoffset(c006.x);
  float $Globals_006y : packoffset(c006.y);
  float $Globals_006z : packoffset(c006.z);
  float $Globals_006w : packoffset(c006.w);
  float $Globals_007x : packoffset(c007.x);
  float $Globals_007y : packoffset(c007.y);
};

float4 main(
  noperspective float2 TEXCOORD : TEXCOORD,
  noperspective float4 SV_Position : SV_Position,
  nointerpolation uint SV_RenderTargetArrayIndex : SV_RenderTargetArrayIndex
) : SV_Target {
  float4 SV_Target;
  // cbuffer _1 = $Globals;
  // _2 = _1;
  uint _3 = SV_RenderTargetArrayIndex;
  float _4 = TEXCOORD.x;
  float _5 = TEXCOORD.y;
  float _6[6];
  float _7[6];
  float _8 = _4 + -0.015625f;
  float _9 = _5 + -0.015625f;
  float _10 = _8 * 1.0322580337524414f;
  float _11 = _9 * 1.0322580337524414f;
  float _12 = float(_3);
  float _13 = _12 * 0.032258063554763794f;
  uint _15 = $Globals_002y;
  bool _16 = (_15 == 1);
  float _33 = 1.379158854484558f;
  float _34 = -0.3088507056236267f;
  float _35 = -0.07034677267074585f;
  float _36 = -0.06933528929948807f;
  float _37 = 1.0822921991348267f;
  float _38 = -0.012962047010660172f;
  float _39 = -0.002159259282052517f;
  float _40 = -0.045465391129255295f;
  float _41 = 1.0477596521377563f;
  float _174;
  float _210;
  float _221;
  float _260;
  float _370;
  float _444;
  float _518;
  float _599;
  float _600;
  float _601;
  float _702;
  float _738;
  float _749;
  float _788;
  float _898;
  float _972;
  float _1046;
  float _1127;
  float _1128;
  float _1129;
  float _1170;
  float _1171;
  float _1172;
  if (!_16) {
    bool _18 = (_15 == 2);
    _33 = 1.02579927444458f;
    _34 = -0.020052503794431686f;
    _35 = -0.0057713985443115234f;
    _36 = -0.0022350111976265907f;
    _37 = 1.0045825242996216f;
    _38 = -0.002352306619286537f;
    _39 = -0.005014004185795784f;
    _40 = -0.025293385609984398f;
    _41 = 1.0304402112960815f;
    if (!_18) {
      bool _20 = (_15 == 3);
      _33 = 0.6954522132873535f;
      _34 = 0.14067870378494263f;
      _35 = 0.16386906802654266f;
      _36 = 0.044794563204050064f;
      _37 = 0.8596711158752441f;
      _38 = 0.0955343171954155f;
      _39 = -0.005525882821530104f;
      _40 = 0.004025210160762072f;
      _41 = 1.0015007257461548f;
      if (!_20) {
        bool _22 = (_15 == 4);
        float _23 = _22 ? 1.0f : 1.7050515413284302f;
        float _24 = _22 ? 0.0f : -0.6217905879020691f;
        float _25 = _22 ? 0.0f : -0.0832584798336029f;
        float _26 = _22 ? 0.0f : -0.13025718927383423f;
        float _27 = _22 ? 1.0f : 1.1408027410507202f;
        float _28 = _22 ? 0.0f : -0.010548528283834457f;
        float _29 = _22 ? 0.0f : -0.024003278464078903f;
        float _30 = _22 ? 0.0f : -0.1289687603712082f;
        float _31 = _22 ? 1.0f : 1.152971863746643f;
        _33 = _23;
        _34 = _24;
        _35 = _25;
        _36 = _26;
        _37 = _27;
        _38 = _28;
        _39 = _29;
        _40 = _30;
        _41 = _31;
      }
    }
  }
  float _42 = log2(_10);
  float _43 = log2(_11);
  float _44 = log2(_13);
  float _45 = _42 * 0.012683313339948654f;
  float _46 = _43 * 0.012683313339948654f;
  float _47 = _44 * 0.012683313339948654f;
  float _48 = exp2(_45);
  float _49 = exp2(_46);
  float _50 = exp2(_47);
  float _51 = _48 + -0.8359375f;
  float _52 = _49 + -0.8359375f;
  float _53 = _50 + -0.8359375f;
  float _54 = max(0.0f, _51);
  float _55 = max(0.0f, _52);
  float _56 = max(0.0f, _53);
  float _57 = _48 * 18.6875f;
  float _58 = _49 * 18.6875f;
  float _59 = _50 * 18.6875f;
  float _60 = 18.8515625f - _57;
  float _61 = 18.8515625f - _58;
  float _62 = 18.8515625f - _59;
  float _63 = _54 / _60;
  float _64 = _55 / _61;
  float _65 = _56 / _62;
  float _66 = log2(_63);
  float _67 = log2(_64);
  float _68 = log2(_65);
  float _69 = _66 * 6.277394771575928f;
  float _70 = _67 * 6.277394771575928f;
  float _71 = _68 * 6.277394771575928f;
  float _72 = exp2(_69);
  float _73 = exp2(_70);
  float _74 = exp2(_71);
  float _75 = _73 * 10000.0f;
  float _76 = _74 * 10000.0f;
  //   %77 = bitcast [6 x float]* %6 to i8*
  //   %78 = bitcast [6 x float]* %7 to i8*
  float _80 = $Globals_007y;
  float _81 = $Globals_007x;
  float _83 = $Globals_006x;
  float _84 = $Globals_006y;
  float _85 = $Globals_006z;
  float _86 = $Globals_006w;
  float _88 = $Globals_005x;
  float _89 = $Globals_005y;
  float _90 = $Globals_005z;
  float _91 = $Globals_005w;
  float _93 = $Globals_004x;
  float _95 = $Globals_003x;
  float _96 = $Globals_003y;
  float _97 = $Globals_003z;
  float _98 = $Globals_003w;
  _6[0] = _88;
  _6[1] = _89;
  _6[2] = _90;
  _6[3] = _91;
  _6[4] = _81;
  _6[5] = _81;
  _7[0] = _83;
  _7[1] = _84;
  _7[2] = _85;
  _7[3] = _86;
  _7[4] = _80;
  _7[5] = _80;
  uint _112 = $Globals_002x;
  bool _113 = (_112 == 3);
  bool _114 = (_112 == 5);
  bool _115 = _113 || _114;
  if (_115) {
    float _117 = _72 * 4397.00830078125f;
    float _118 = mad(0.38297808170318604f, _75, _117);
    float _119 = mad(0.17733481526374817f, _76, _118);
    float _120 = _72 * 897.9231567382812f;
    float _121 = mad(0.8134231567382812f, _75, _120);
    float _122 = mad(0.09676162153482437f, _76, _121);
    float _123 = _72 * 175.43988037109375f;
    float _124 = mad(0.11154405772686005f, _75, _123);
    float _125 = mad(0.870704174041748f, _76, _124);
    float _126 = min(_119, _122);
    float _127 = min(_126, _125);
    float _128 = max(_119, _122);
    float _129 = max(_128, _125);
    float _130 = max(_129, 1.000000013351432e-10f);
    float _131 = max(_127, 1.000000013351432e-10f);
    float _132 = _130 - _131;
    float _133 = max(_129, 0.009999999776482582f);
    float _134 = _132 / _133;
    float _135 = _125 - _122;
    float _136 = _135 * _125;
    float _137 = _122 - _119;
    float _138 = _137 * _122;
    float _139 = _136 + _138;
    float _140 = _119 - _125;
    float _141 = _140 * _119;
    float _142 = _139 + _141;
    float _143 = sqrt(_142);
    float _144 = _143 * 1.75f;
    float _145 = _122 + _119;
    float _146 = _145 + _125;
    float _147 = _146 + _144;
    float _148 = _147 * 0.3333333432674408f;
    float _149 = _134 + -0.4000000059604645f;
    float _150 = _149 * 5.0f;
    float _151 = _149 * 2.5f;
    float _152 = abs(_151);
    float _153 = 1.0f - _152;
    float _154 = max(_153, 0.0f);
    bool _155 = (_150 > 0.0f);
    bool _156 = (_150 < 0.0f);
    int _157 = int(_155);
    int _158 = int(_156);
    int _159 = _157 - _158;
    float _160 = float(_159);
    float _161 = _154 * _154;
    float _162 = 1.0f - _161;
    float _163 = _160 * _162;
    float _164 = _163 + 1.0f;
    float _165 = _164 * 0.02500000037252903f;
    bool _166 = !(_148 <= 0.0533333346247673f);
    _174 = _165;
    do {
      if (_166) {
        bool _168 = !(_148 >= 0.1599999964237213f);
        _174 = 0.0f;
        if (_168) {
          float _170 = 0.23999999463558197f / _147;
          float _171 = _170 + -0.5f;
          float _172 = _171 * _165;
          _174 = _172;
        }
      }
      float _175 = _174 + 1.0f;
      float _176 = _175 * _119;
      float _177 = _175 * _122;
      float _178 = _175 * _125;
      bool _179 = (_176 == _177);
      bool _180 = (_177 == _178);
      bool _181 = _179 && _180;
      _210 = 0.0f;
      do {
        if (!_181) {
          float _183 = _176 * 2.0f;
          float _184 = _183 - _177;
          float _185 = _184 - _178;
          float _186 = _122 - _125;
          float _187 = _186 * 1.7320507764816284f;
          float _188 = _187 * _175;
          float _189 = _188 / _185;
          float _190 = atan(_189);
          float _191 = _190 + 3.1415927410125732f;
          float _192 = _190 + -3.1415927410125732f;
          bool _193 = (_185 < 0.0f);
          bool _194 = (_185 == 0.0f);
          bool _195 = (_188 >= 0.0f);
          bool _196 = (_188 < 0.0f);
          bool _197 = _195 && _193;
          float _198 = _197 ? _191 : _190;
          bool _199 = _196 && _193;
          float _200 = _199 ? _192 : _198;
          bool _201 = _196 && _194;
          bool _202 = _195 && _194;
          float _203 = _200 * 57.2957763671875f;
          float _204 = _201 ? -90.0f : _203;
          float _205 = _202 ? 90.0f : _204;
          bool _206 = (_205 < 0.0f);
          _210 = _205;
          if (_206) {
            float _208 = _205 + 360.0f;
            _210 = _208;
          }
        }
        float _211 = max(_210, 0.0f);
        float _212 = min(_211, 360.0f);
        bool _213 = (_212 < -180.0f);
        do {
          if (_213) {
            float _215 = _212 + 360.0f;
            _221 = _215;
          } else {
            bool _217 = (_212 > 180.0f);
            _221 = _212;
            if (_217) {
              float _219 = _212 + -360.0f;
              _221 = _219;
            }
          }
          bool _222 = (_221 > -67.5f);
          bool _223 = (_221 < 67.5f);
          bool _224 = _222 && _223;
          _260 = 0.0f;
          do {
            if (_224) {
              float _226 = _221 + 67.5f;
              float _227 = _226 * 0.029629629105329514f;
              int _228 = int(_227);
              float _229 = float(_228);
              float _230 = _227 - _229;
              float _231 = _230 * _230;
              float _232 = _231 * _230;
              bool _233 = (_228 == 3);
              if (_233) {
                float _235 = _232 * 0.1666666716337204f;
                float _236 = _231 * 0.5f;
                float _237 = _230 * 0.5f;
                float _238 = 0.1666666716337204f - _237;
                float _239 = _238 + _236;
                float _240 = _239 - _235;
                _260 = _240;
              } else {
                bool _242 = (_228 == 2);
                if (_242) {
                  float _244 = _232 * 0.5f;
                  float _245 = 0.6666666865348816f - _231;
                  float _246 = _245 + _244;
                  _260 = _246;
                } else {
                  bool _248 = (_228 == 1);
                  if (_248) {
                    float _250 = _232 * -0.5f;
                    float _251 = _231 + _230;
                    float _252 = _251 * 0.5f;
                    float _253 = _250 + 0.1666666716337204f;
                    float _254 = _253 + _252;
                    _260 = _254;
                  } else {
                    bool _256 = (_228 == 0);
                    float _257 = _232 * 0.1666666716337204f;
                    float _258 = _256 ? _257 : 0.0f;
                    _260 = _258;
                  }
                }
              }
            }
            float _261 = 0.029999999329447746f - _176;
            float _262 = _134 * 0.27000001072883606f;
            float _263 = _262 * _261;
            float _264 = _263 * _260;
            float _265 = _264 + _176;
            float _266 = max(_265, 0.0f);
            float _267 = max(_177, 0.0f);
            float _268 = max(_178, 0.0f);
            float _269 = min(_266, 65535.0f);
            float _270 = min(_267, 65535.0f);
            float _271 = min(_268, 65535.0f);
            float _272 = _269 * 1.4514392614364624f;
            float _273 = mad(-0.2365107536315918f, _270, _272);
            float _274 = mad(-0.21492856740951538f, _271, _273);
            float _275 = _269 * -0.07655377686023712f;
            float _276 = mad(1.17622971534729f, _270, _275);
            float _277 = mad(-0.09967592358589172f, _271, _276);
            float _278 = _269 * 0.008316148072481155f;
            float _279 = mad(-0.006032449658960104f, _270, _278);
            float _280 = mad(0.9977163076400757f, _271, _279);
            float _281 = max(_274, 0.0f);
            float _282 = max(_277, 0.0f);
            float _283 = max(_280, 0.0f);
            float _284 = min(_281, 65504.0f);
            float _285 = min(_282, 65504.0f);
            float _286 = min(_283, 65504.0f);
            float _287 = dot(float3(_284, _285, _286), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
            float _288 = _284 - _287;
            float _289 = _285 - _287;
            float _290 = _286 - _287;
            float _291 = _288 * 0.9599999785423279f;
            float _292 = _289 * 0.9599999785423279f;
            float _293 = _290 * 0.9599999785423279f;
            float _294 = _291 + _287;
            float _295 = _292 + _287;
            float _296 = _293 + _287;
            float _297 = max(_294, 1.000000013351432e-10f);
            float _298 = log2(_297);
            float _299 = _298 * 0.3010300099849701f;
            float _300 = log2(_95);
            float _301 = _300 * 0.3010300099849701f;
            bool _302 = !(_299 <= _301);
            do {
              if (!_302) {
                float _304 = log2(_96);
                float _305 = _304 * 0.3010300099849701f;
                _370 = _305;
              } else {
                bool _307 = (_299 > _301);
                float _308 = log2(_93);
                float _309 = _308 * 0.3010300099849701f;
                bool _310 = (_299 < _309);
                bool _311 = _307 && _310;
                if (_311) {
                  float _313 = _298 - _300;
                  float _314 = _313 * 0.9030900001525879f;
                  float _315 = _308 - _300;
                  float _316 = _315 * 0.3010300099849701f;
                  float _317 = _314 / _316;
                  int _318 = int(_317);
                  float _319 = float(_318);
                  float _320 = _317 - _319;
                  float _322 = _6[_318];
                  int _323 = _318 + 1;
                  float _325 = _6[_323];
                  int _326 = _318 + 2;
                  float _328 = _6[_326];
                  float _329 = _320 * _320;
                  float _330 = _322 * 0.5f;
                  float _331 = mad(_325, -1.0f, _330);
                  float _332 = mad(_328, 0.5f, _331);
                  float _333 = _325 - _322;
                  float _334 = mad(_325, 0.5f, _330);
                  float _335 = dot(float3(_329, _320, 1.0f), float3(_332, _333, _334));
                  _370 = _335;
                } else {
                  bool _337 = !(_299 >= _309);
                  do {
                    if (!_337) {
                      float _339 = log2(_97);
                      float _340 = _339 * 0.3010300099849701f;
                      bool _341 = (_299 < _340);
                      if (_341) {
                        float _343 = _298 - _308;
                        float _344 = _343 * 0.9030900001525879f;
                        float _345 = _339 - _308;
                        float _346 = _345 * 0.3010300099849701f;
                        float _347 = _344 / _346;
                        int _348 = int(_347);
                        float _349 = float(_348);
                        float _350 = _347 - _349;
                        float _352 = _7[_348];
                        int _353 = _348 + 1;
                        float _355 = _7[_353];
                        int _356 = _348 + 2;
                        float _358 = _7[_356];
                        float _359 = _350 * _350;
                        float _360 = _352 * 0.5f;
                        float _361 = mad(_355, -1.0f, _360);
                        float _362 = mad(_358, 0.5f, _361);
                        float _363 = _355 - _352;
                        float _364 = mad(_355, 0.5f, _360);
                        float _365 = dot(float3(_359, _350, 1.0f), float3(_362, _363, _364));
                        _370 = _365;
                        break;
                      }
                    }
                    float _367 = log2(_98);
                    float _368 = _367 * 0.3010300099849701f;
                    _370 = _368;
                  } while (false);
                }
              }
              float _371 = _370 * 3.321928024291992f;
              float _372 = exp2(_371);
              float _373 = max(_295, 1.000000013351432e-10f);
              float _374 = log2(_373);
              float _375 = _374 * 0.3010300099849701f;
              bool _376 = !(_375 <= _301);
              do {
                if (!_376) {
                  float _378 = log2(_96);
                  float _379 = _378 * 0.3010300099849701f;
                  _444 = _379;
                } else {
                  bool _381 = (_375 > _301);
                  float _382 = log2(_93);
                  float _383 = _382 * 0.3010300099849701f;
                  bool _384 = (_375 < _383);
                  bool _385 = _381 && _384;
                  if (_385) {
                    float _387 = _374 - _300;
                    float _388 = _387 * 0.9030900001525879f;
                    float _389 = _382 - _300;
                    float _390 = _389 * 0.3010300099849701f;
                    float _391 = _388 / _390;
                    int _392 = int(_391);
                    float _393 = float(_392);
                    float _394 = _391 - _393;
                    float _396 = _6[_392];
                    int _397 = _392 + 1;
                    float _399 = _6[_397];
                    int _400 = _392 + 2;
                    float _402 = _6[_400];
                    float _403 = _394 * _394;
                    float _404 = _396 * 0.5f;
                    float _405 = mad(_399, -1.0f, _404);
                    float _406 = mad(_402, 0.5f, _405);
                    float _407 = _399 - _396;
                    float _408 = mad(_399, 0.5f, _404);
                    float _409 = dot(float3(_403, _394, 1.0f), float3(_406, _407, _408));
                    _444 = _409;
                  } else {
                    bool _411 = !(_375 >= _383);
                    do {
                      if (!_411) {
                        float _413 = log2(_97);
                        float _414 = _413 * 0.3010300099849701f;
                        bool _415 = (_375 < _414);
                        if (_415) {
                          float _417 = _374 - _382;
                          float _418 = _417 * 0.9030900001525879f;
                          float _419 = _413 - _382;
                          float _420 = _419 * 0.3010300099849701f;
                          float _421 = _418 / _420;
                          int _422 = int(_421);
                          float _423 = float(_422);
                          float _424 = _421 - _423;
                          float _426 = _7[_422];
                          int _427 = _422 + 1;
                          float _429 = _7[_427];
                          int _430 = _422 + 2;
                          float _432 = _7[_430];
                          float _433 = _424 * _424;
                          float _434 = _426 * 0.5f;
                          float _435 = mad(_429, -1.0f, _434);
                          float _436 = mad(_432, 0.5f, _435);
                          float _437 = _429 - _426;
                          float _438 = mad(_429, 0.5f, _434);
                          float _439 = dot(float3(_433, _424, 1.0f), float3(_436, _437, _438));
                          _444 = _439;
                          break;
                        }
                      }
                      float _441 = log2(_98);
                      float _442 = _441 * 0.3010300099849701f;
                      _444 = _442;
                    } while (false);
                  }
                }
                float _445 = _444 * 3.321928024291992f;
                float _446 = exp2(_445);
                float _447 = max(_296, 1.000000013351432e-10f);
                float _448 = log2(_447);
                float _449 = _448 * 0.3010300099849701f;
                bool _450 = !(_449 <= _301);
                do {
                  if (!_450) {
                    float _452 = log2(_96);
                    float _453 = _452 * 0.3010300099849701f;
                    _518 = _453;
                  } else {
                    bool _455 = (_449 > _301);
                    float _456 = log2(_93);
                    float _457 = _456 * 0.3010300099849701f;
                    bool _458 = (_449 < _457);
                    bool _459 = _455 && _458;
                    if (_459) {
                      float _461 = _448 - _300;
                      float _462 = _461 * 0.9030900001525879f;
                      float _463 = _456 - _300;
                      float _464 = _463 * 0.3010300099849701f;
                      float _465 = _462 / _464;
                      int _466 = int(_465);
                      float _467 = float(_466);
                      float _468 = _465 - _467;
                      float _470 = _6[_466];
                      int _471 = _466 + 1;
                      float _473 = _6[_471];
                      int _474 = _466 + 2;
                      float _476 = _6[_474];
                      float _477 = _468 * _468;
                      float _478 = _470 * 0.5f;
                      float _479 = mad(_473, -1.0f, _478);
                      float _480 = mad(_476, 0.5f, _479);
                      float _481 = _473 - _470;
                      float _482 = mad(_473, 0.5f, _478);
                      float _483 = dot(float3(_477, _468, 1.0f), float3(_480, _481, _482));
                      _518 = _483;
                    } else {
                      bool _485 = !(_449 >= _457);
                      do {
                        if (!_485) {
                          float _487 = log2(_97);
                          float _488 = _487 * 0.3010300099849701f;
                          bool _489 = (_449 < _488);
                          if (_489) {
                            float _491 = _448 - _456;
                            float _492 = _491 * 0.9030900001525879f;
                            float _493 = _487 - _456;
                            float _494 = _493 * 0.3010300099849701f;
                            float _495 = _492 / _494;
                            int _496 = int(_495);
                            float _497 = float(_496);
                            float _498 = _495 - _497;
                            float _500 = _7[_496];
                            int _501 = _496 + 1;
                            float _503 = _7[_501];
                            int _504 = _496 + 2;
                            float _506 = _7[_504];
                            float _507 = _498 * _498;
                            float _508 = _500 * 0.5f;
                            float _509 = mad(_503, -1.0f, _508);
                            float _510 = mad(_506, 0.5f, _509);
                            float _511 = _503 - _500;
                            float _512 = mad(_503, 0.5f, _508);
                            float _513 = dot(float3(_507, _498, 1.0f), float3(_510, _511, _512));
                            _518 = _513;
                            break;
                          }
                        }
                        float _515 = log2(_98);
                        float _516 = _515 * 0.3010300099849701f;
                        _518 = _516;
                      } while (false);
                    }
                  }
                  float _519 = _518 * 3.321928024291992f;
                  float _520 = exp2(_519);
                  float _521 = _372 - _96;
                  float _522 = _98 - _96;
                  float _523 = _521 / _522;
                  float _524 = _446 - _96;
                  float _525 = _524 / _522;
                  float _526 = _520 - _96;
                  float _527 = _526 / _522;
                  float _528 = _523 * 0.6624541878700256f;
                  float _529 = mad(0.13400420546531677f, _525, _528);
                  float _530 = mad(0.15618768334388733f, _527, _529);
                  float _531 = _523 * 0.2722287178039551f;
                  float _532 = mad(0.6740817427635193f, _525, _531);
                  float _533 = mad(0.053689517080783844f, _527, _532);
                  float _534 = _523 * -0.005574649665504694f;
                  float _535 = mad(0.00406073359772563f, _525, _534);
                  float _536 = mad(1.0103391408920288f, _527, _535);
                  float _537 = _530 * 1.6410233974456787f;
                  float _538 = mad(-0.32480329275131226f, _533, _537);
                  float _539 = mad(-0.23642469942569733f, _536, _538);
                  float _540 = _530 * -0.663662850856781f;
                  float _541 = mad(1.6153316497802734f, _533, _540);
                  float _542 = mad(0.016756348311901093f, _536, _541);
                  float _543 = _530 * 0.011721894145011902f;
                  float _544 = mad(-0.008284442126750946f, _533, _543);
                  float _545 = mad(0.9883948564529419f, _536, _544);
                  float _546 = max(_539, 0.0f);
                  float _547 = max(_542, 0.0f);
                  float _548 = max(_545, 0.0f);
                  float _549 = min(_546, 1.0f);
                  float _550 = min(_547, 1.0f);
                  float _551 = min(_548, 1.0f);
                  float _552 = _549 * 0.6624541878700256f;
                  float _553 = mad(0.13400420546531677f, _550, _552);
                  float _554 = mad(0.15618768334388733f, _551, _553);
                  float _555 = _549 * 0.2722287178039551f;
                  float _556 = mad(0.6740817427635193f, _550, _555);
                  float _557 = mad(0.053689517080783844f, _551, _556);
                  float _558 = _549 * -0.005574649665504694f;
                  float _559 = mad(0.00406073359772563f, _550, _558);
                  float _560 = mad(1.0103391408920288f, _551, _559);
                  float _561 = _554 * 1.6410233974456787f;
                  float _562 = mad(-0.32480329275131226f, _557, _561);
                  float _563 = mad(-0.23642469942569733f, _560, _562);
                  float _564 = _554 * -0.663662850856781f;
                  float _565 = mad(1.6153316497802734f, _557, _564);
                  float _566 = mad(0.016756348311901093f, _560, _565);
                  float _567 = _554 * 0.011721894145011902f;
                  float _568 = mad(-0.008284442126750946f, _557, _567);
                  float _569 = mad(0.9883948564529419f, _560, _568);
                  float _570 = max(_563, 0.0f);
                  float _571 = max(_566, 0.0f);
                  float _572 = max(_569, 0.0f);
                  float _573 = min(_570, 65535.0f);
                  float _574 = min(_571, 65535.0f);
                  float _575 = min(_572, 65535.0f);
                  float _576 = _573 * _98;
                  float _577 = _574 * _98;
                  float _578 = _575 * _98;
                  float _579 = max(_576, 0.0f);
                  float _580 = max(_577, 0.0f);
                  float _581 = max(_578, 0.0f);
                  float _582 = min(_579, 65535.0f);
                  float _583 = min(_580, 65535.0f);
                  float _584 = min(_581, 65535.0f);
                  uint _586 = $Globals_002x;
                  bool _587 = (_586 == 5);
                  _599 = _582;
                  _600 = _583;
                  _601 = _584;
                  do {
                    if (!_587) {
                      float _589 = _582 * _33;
                      float _590 = mad(_34, _583, _589);
                      float _591 = mad(_35, _584, _590);
                      float _592 = _582 * _36;
                      float _593 = mad(_37, _583, _592);
                      float _594 = mad(_38, _584, _593);
                      float _595 = _582 * _39;
                      float _596 = mad(_40, _583, _595);
                      float _597 = mad(_41, _584, _596);
                      _599 = _591;
                      _600 = _594;
                      _601 = _597;
                    }
                    float _602 = _599 * 9.999999747378752e-05f;
                    float _603 = _600 * 9.999999747378752e-05f;
                    float _604 = _601 * 9.999999747378752e-05f;
                    float _605 = log2(_602);
                    float _606 = log2(_603);
                    float _607 = log2(_604);
                    float _608 = _605 * 0.1593017578125f;
                    float _609 = _606 * 0.1593017578125f;
                    float _610 = _607 * 0.1593017578125f;
                    float _611 = exp2(_608);
                    float _612 = exp2(_609);
                    float _613 = exp2(_610);
                    float _614 = _611 * 18.8515625f;
                    float _615 = _612 * 18.8515625f;
                    float _616 = _613 * 18.8515625f;
                    float _617 = _614 + 0.8359375f;
                    float _618 = _615 + 0.8359375f;
                    float _619 = _616 + 0.8359375f;
                    float _620 = _611 * 18.6875f;
                    float _621 = _612 * 18.6875f;
                    float _622 = _613 * 18.6875f;
                    float _623 = _620 + 1.0f;
                    float _624 = _621 + 1.0f;
                    float _625 = _622 + 1.0f;
                    float _626 = 1.0f / _623;
                    float _627 = 1.0f / _624;
                    float _628 = 1.0f / _625;
                    float _629 = _626 * _617;
                    float _630 = _627 * _618;
                    float _631 = _628 * _619;
                    float _632 = log2(_629);
                    float _633 = log2(_630);
                    float _634 = log2(_631);
                    float _635 = _632 * 78.84375f;
                    float _636 = _633 * 78.84375f;
                    float _637 = _634 * 78.84375f;
                    float _638 = exp2(_635);
                    float _639 = exp2(_636);
                    float _640 = exp2(_637);
                    _1170 = _638;
                    _1171 = _639;
                    _1172 = _640;
                  } while (false);
                } while (false);
              } while (false);
            } while (false);
          } while (false);
        } while (false);
      } while (false);
    } while (false);
  } else {
    int _642 = _112 & -3;
    bool _643 = (_642 == 4);
    _1170 = _10;
    _1171 = _11;
    _1172 = _13;
    if (_643) {
      float _645 = _72 * 4397.00830078125f;
      float _646 = mad(0.38297808170318604f, _75, _645);
      float _647 = mad(0.17733481526374817f, _76, _646);
      float _648 = _72 * 897.9231567382812f;
      float _649 = mad(0.8134231567382812f, _75, _648);
      float _650 = mad(0.09676162153482437f, _76, _649);
      float _651 = _72 * 175.43988037109375f;
      float _652 = mad(0.11154405772686005f, _75, _651);
      float _653 = mad(0.870704174041748f, _76, _652);
      float _654 = min(_647, _650);
      float _655 = min(_654, _653);
      float _656 = max(_647, _650);
      float _657 = max(_656, _653);
      float _658 = max(_657, 1.000000013351432e-10f);
      float _659 = max(_655, 1.000000013351432e-10f);
      float _660 = _658 - _659;
      float _661 = max(_657, 0.009999999776482582f);
      float _662 = _660 / _661;
      float _663 = _653 - _650;
      float _664 = _663 * _653;
      float _665 = _650 - _647;
      float _666 = _665 * _650;
      float _667 = _664 + _666;
      float _668 = _647 - _653;
      float _669 = _668 * _647;
      float _670 = _667 + _669;
      float _671 = sqrt(_670);
      float _672 = _671 * 1.75f;
      float _673 = _650 + _647;
      float _674 = _673 + _653;
      float _675 = _674 + _672;
      float _676 = _675 * 0.3333333432674408f;
      float _677 = _662 + -0.4000000059604645f;
      float _678 = _677 * 5.0f;
      float _679 = _677 * 2.5f;
      float _680 = abs(_679);
      float _681 = 1.0f - _680;
      float _682 = max(_681, 0.0f);
      bool _683 = (_678 > 0.0f);
      bool _684 = (_678 < 0.0f);
      int _685 = int(_683);
      int _686 = int(_684);
      int _687 = _685 - _686;
      float _688 = float(_687);
      float _689 = _682 * _682;
      float _690 = 1.0f - _689;
      float _691 = _688 * _690;
      float _692 = _691 + 1.0f;
      float _693 = _692 * 0.02500000037252903f;
      bool _694 = !(_676 <= 0.0533333346247673f);
      _702 = _693;
      do {
        if (_694) {
          bool _696 = !(_676 >= 0.1599999964237213f);
          _702 = 0.0f;
          if (_696) {
            float _698 = 0.23999999463558197f / _675;
            float _699 = _698 + -0.5f;
            float _700 = _699 * _693;
            _702 = _700;
          }
        }
        float _703 = _702 + 1.0f;
        float _704 = _703 * _647;
        float _705 = _703 * _650;
        float _706 = _703 * _653;
        bool _707 = (_704 == _705);
        bool _708 = (_705 == _706);
        bool _709 = _707 && _708;
        _738 = 0.0f;
        do {
          if (!_709) {
            float _711 = _704 * 2.0f;
            float _712 = _711 - _705;
            float _713 = _712 - _706;
            float _714 = _650 - _653;
            float _715 = _714 * 1.7320507764816284f;
            float _716 = _715 * _703;
            float _717 = _716 / _713;
            float _718 = atan(_717);
            float _719 = _718 + 3.1415927410125732f;
            float _720 = _718 + -3.1415927410125732f;
            bool _721 = (_713 < 0.0f);
            bool _722 = (_713 == 0.0f);
            bool _723 = (_716 >= 0.0f);
            bool _724 = (_716 < 0.0f);
            bool _725 = _723 && _721;
            float _726 = _725 ? _719 : _718;
            bool _727 = _724 && _721;
            float _728 = _727 ? _720 : _726;
            bool _729 = _724 && _722;
            bool _730 = _723 && _722;
            float _731 = _728 * 57.2957763671875f;
            float _732 = _729 ? -90.0f : _731;
            float _733 = _730 ? 90.0f : _732;
            bool _734 = (_733 < 0.0f);
            _738 = _733;
            if (_734) {
              float _736 = _733 + 360.0f;
              _738 = _736;
            }
          }
          float _739 = max(_738, 0.0f);
          float _740 = min(_739, 360.0f);
          bool _741 = (_740 < -180.0f);
          do {
            if (_741) {
              float _743 = _740 + 360.0f;
              _749 = _743;
            } else {
              bool _745 = (_740 > 180.0f);
              _749 = _740;
              if (_745) {
                float _747 = _740 + -360.0f;
                _749 = _747;
              }
            }
            bool _750 = (_749 > -67.5f);
            bool _751 = (_749 < 67.5f);
            bool _752 = _750 && _751;
            _788 = 0.0f;
            do {
              if (_752) {
                float _754 = _749 + 67.5f;
                float _755 = _754 * 0.029629629105329514f;
                int _756 = int(_755);
                float _757 = float(_756);
                float _758 = _755 - _757;
                float _759 = _758 * _758;
                float _760 = _759 * _758;
                bool _761 = (_756 == 3);
                if (_761) {
                  float _763 = _760 * 0.1666666716337204f;
                  float _764 = _759 * 0.5f;
                  float _765 = _758 * 0.5f;
                  float _766 = 0.1666666716337204f - _765;
                  float _767 = _766 + _764;
                  float _768 = _767 - _763;
                  _788 = _768;
                } else {
                  bool _770 = (_756 == 2);
                  if (_770) {
                    float _772 = _760 * 0.5f;
                    float _773 = 0.6666666865348816f - _759;
                    float _774 = _773 + _772;
                    _788 = _774;
                  } else {
                    bool _776 = (_756 == 1);
                    if (_776) {
                      float _778 = _760 * -0.5f;
                      float _779 = _759 + _758;
                      float _780 = _779 * 0.5f;
                      float _781 = _778 + 0.1666666716337204f;
                      float _782 = _781 + _780;
                      _788 = _782;
                    } else {
                      bool _784 = (_756 == 0);
                      float _785 = _760 * 0.1666666716337204f;
                      float _786 = _784 ? _785 : 0.0f;
                      _788 = _786;
                    }
                  }
                }
              }
              float _789 = 0.029999999329447746f - _704;
              float _790 = _662 * 0.27000001072883606f;
              float _791 = _790 * _789;
              float _792 = _791 * _788;
              float _793 = _792 + _704;
              float _794 = max(_793, 0.0f);
              float _795 = max(_705, 0.0f);
              float _796 = max(_706, 0.0f);
              float _797 = min(_794, 65535.0f);
              float _798 = min(_795, 65535.0f);
              float _799 = min(_796, 65535.0f);
              float _800 = _797 * 1.4514392614364624f;
              float _801 = mad(-0.2365107536315918f, _798, _800);
              float _802 = mad(-0.21492856740951538f, _799, _801);
              float _803 = _797 * -0.07655377686023712f;
              float _804 = mad(1.17622971534729f, _798, _803);
              float _805 = mad(-0.09967592358589172f, _799, _804);
              float _806 = _797 * 0.008316148072481155f;
              float _807 = mad(-0.006032449658960104f, _798, _806);
              float _808 = mad(0.9977163076400757f, _799, _807);
              float _809 = max(_802, 0.0f);
              float _810 = max(_805, 0.0f);
              float _811 = max(_808, 0.0f);
              float _812 = min(_809, 65504.0f);
              float _813 = min(_810, 65504.0f);
              float _814 = min(_811, 65504.0f);
              float _815 = dot(float3(_812, _813, _814), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
              float _816 = _812 - _815;
              float _817 = _813 - _815;
              float _818 = _814 - _815;
              float _819 = _816 * 0.9599999785423279f;
              float _820 = _817 * 0.9599999785423279f;
              float _821 = _818 * 0.9599999785423279f;
              float _822 = _819 + _815;
              float _823 = _820 + _815;
              float _824 = _821 + _815;
              float _825 = max(_822, 1.000000013351432e-10f);
              float _826 = log2(_825);
              float _827 = _826 * 0.3010300099849701f;
              float _828 = log2(_95);
              float _829 = _828 * 0.3010300099849701f;
              bool _830 = !(_827 <= _829);
              do {
                if (!_830) {
                  float _832 = log2(_96);
                  float _833 = _832 * 0.3010300099849701f;
                  _898 = _833;
                } else {
                  bool _835 = (_827 > _829);
                  float _836 = log2(_93);
                  float _837 = _836 * 0.3010300099849701f;
                  bool _838 = (_827 < _837);
                  bool _839 = _835 && _838;
                  if (_839) {
                    float _841 = _826 - _828;
                    float _842 = _841 * 0.9030900001525879f;
                    float _843 = _836 - _828;
                    float _844 = _843 * 0.3010300099849701f;
                    float _845 = _842 / _844;
                    int _846 = int(_845);
                    float _847 = float(_846);
                    float _848 = _845 - _847;
                    float _850 = _6[_846];
                    int _851 = _846 + 1;
                    float _853 = _6[_851];
                    int _854 = _846 + 2;
                    float _856 = _6[_854];
                    float _857 = _848 * _848;
                    float _858 = _850 * 0.5f;
                    float _859 = mad(_853, -1.0f, _858);
                    float _860 = mad(_856, 0.5f, _859);
                    float _861 = _853 - _850;
                    float _862 = mad(_853, 0.5f, _858);
                    float _863 = dot(float3(_857, _848, 1.0f), float3(_860, _861, _862));
                    _898 = _863;
                  } else {
                    bool _865 = !(_827 >= _837);
                    do {
                      if (!_865) {
                        float _867 = log2(_97);
                        float _868 = _867 * 0.3010300099849701f;
                        bool _869 = (_827 < _868);
                        if (_869) {
                          float _871 = _826 - _836;
                          float _872 = _871 * 0.9030900001525879f;
                          float _873 = _867 - _836;
                          float _874 = _873 * 0.3010300099849701f;
                          float _875 = _872 / _874;
                          int _876 = int(_875);
                          float _877 = float(_876);
                          float _878 = _875 - _877;
                          float _880 = _7[_876];
                          int _881 = _876 + 1;
                          float _883 = _7[_881];
                          int _884 = _876 + 2;
                          float _886 = _7[_884];
                          float _887 = _878 * _878;
                          float _888 = _880 * 0.5f;
                          float _889 = mad(_883, -1.0f, _888);
                          float _890 = mad(_886, 0.5f, _889);
                          float _891 = _883 - _880;
                          float _892 = mad(_883, 0.5f, _888);
                          float _893 = dot(float3(_887, _878, 1.0f), float3(_890, _891, _892));
                          _898 = _893;
                          break;
                        }
                      }
                      float _895 = log2(_98);
                      float _896 = _895 * 0.3010300099849701f;
                      _898 = _896;
                    } while (false);
                  }
                }
                float _899 = _898 * 3.321928024291992f;
                float _900 = exp2(_899);
                float _901 = max(_823, 1.000000013351432e-10f);
                float _902 = log2(_901);
                float _903 = _902 * 0.3010300099849701f;
                bool _904 = !(_903 <= _829);
                do {
                  if (!_904) {
                    float _906 = log2(_96);
                    float _907 = _906 * 0.3010300099849701f;
                    _972 = _907;
                  } else {
                    bool _909 = (_903 > _829);
                    float _910 = log2(_93);
                    float _911 = _910 * 0.3010300099849701f;
                    bool _912 = (_903 < _911);
                    bool _913 = _909 && _912;
                    if (_913) {
                      float _915 = _902 - _828;
                      float _916 = _915 * 0.9030900001525879f;
                      float _917 = _910 - _828;
                      float _918 = _917 * 0.3010300099849701f;
                      float _919 = _916 / _918;
                      int _920 = int(_919);
                      float _921 = float(_920);
                      float _922 = _919 - _921;
                      float _924 = _6[_920];
                      int _925 = _920 + 1;
                      float _927 = _6[_925];
                      int _928 = _920 + 2;
                      float _930 = _6[_928];
                      float _931 = _922 * _922;
                      float _932 = _924 * 0.5f;
                      float _933 = mad(_927, -1.0f, _932);
                      float _934 = mad(_930, 0.5f, _933);
                      float _935 = _927 - _924;
                      float _936 = mad(_927, 0.5f, _932);
                      float _937 = dot(float3(_931, _922, 1.0f), float3(_934, _935, _936));
                      _972 = _937;
                    } else {
                      bool _939 = !(_903 >= _911);
                      do {
                        if (!_939) {
                          float _941 = log2(_97);
                          float _942 = _941 * 0.3010300099849701f;
                          bool _943 = (_903 < _942);
                          if (_943) {
                            float _945 = _902 - _910;
                            float _946 = _945 * 0.9030900001525879f;
                            float _947 = _941 - _910;
                            float _948 = _947 * 0.3010300099849701f;
                            float _949 = _946 / _948;
                            int _950 = int(_949);
                            float _951 = float(_950);
                            float _952 = _949 - _951;
                            float _954 = _7[_950];
                            int _955 = _950 + 1;
                            float _957 = _7[_955];
                            int _958 = _950 + 2;
                            float _960 = _7[_958];
                            float _961 = _952 * _952;
                            float _962 = _954 * 0.5f;
                            float _963 = mad(_957, -1.0f, _962);
                            float _964 = mad(_960, 0.5f, _963);
                            float _965 = _957 - _954;
                            float _966 = mad(_957, 0.5f, _962);
                            float _967 = dot(float3(_961, _952, 1.0f), float3(_964, _965, _966));
                            _972 = _967;
                            break;
                          }
                        }
                        float _969 = log2(_98);
                        float _970 = _969 * 0.3010300099849701f;
                        _972 = _970;
                      } while (false);
                    }
                  }
                  float _973 = _972 * 3.321928024291992f;
                  float _974 = exp2(_973);
                  float _975 = max(_824, 1.000000013351432e-10f);
                  float _976 = log2(_975);
                  float _977 = _976 * 0.3010300099849701f;
                  bool _978 = !(_977 <= _829);
                  do {
                    if (!_978) {
                      float _980 = log2(_96);
                      float _981 = _980 * 0.3010300099849701f;
                      _1046 = _981;
                    } else {
                      bool _983 = (_977 > _829);
                      float _984 = log2(_93);
                      float _985 = _984 * 0.3010300099849701f;
                      bool _986 = (_977 < _985);
                      bool _987 = _983 && _986;
                      if (_987) {
                        float _989 = _976 - _828;
                        float _990 = _989 * 0.9030900001525879f;
                        float _991 = _984 - _828;
                        float _992 = _991 * 0.3010300099849701f;
                        float _993 = _990 / _992;
                        int _994 = int(_993);
                        float _995 = float(_994);
                        float _996 = _993 - _995;
                        float _998 = _6[_994];
                        int _999 = _994 + 1;
                        float _1001 = _6[_999];
                        int _1002 = _994 + 2;
                        float _1004 = _6[_1002];
                        float _1005 = _996 * _996;
                        float _1006 = _998 * 0.5f;
                        float _1007 = mad(_1001, -1.0f, _1006);
                        float _1008 = mad(_1004, 0.5f, _1007);
                        float _1009 = _1001 - _998;
                        float _1010 = mad(_1001, 0.5f, _1006);
                        float _1011 = dot(float3(_1005, _996, 1.0f), float3(_1008, _1009, _1010));
                        _1046 = _1011;
                      } else {
                        bool _1013 = !(_977 >= _985);
                        do {
                          if (!_1013) {
                            float _1015 = log2(_97);
                            float _1016 = _1015 * 0.3010300099849701f;
                            bool _1017 = (_977 < _1016);
                            if (_1017) {
                              float _1019 = _976 - _984;
                              float _1020 = _1019 * 0.9030900001525879f;
                              float _1021 = _1015 - _984;
                              float _1022 = _1021 * 0.3010300099849701f;
                              float _1023 = _1020 / _1022;
                              int _1024 = int(_1023);
                              float _1025 = float(_1024);
                              float _1026 = _1023 - _1025;
                              float _1028 = _7[_1024];
                              int _1029 = _1024 + 1;
                              float _1031 = _7[_1029];
                              int _1032 = _1024 + 2;
                              float _1034 = _7[_1032];
                              float _1035 = _1026 * _1026;
                              float _1036 = _1028 * 0.5f;
                              float _1037 = mad(_1031, -1.0f, _1036);
                              float _1038 = mad(_1034, 0.5f, _1037);
                              float _1039 = _1031 - _1028;
                              float _1040 = mad(_1031, 0.5f, _1036);
                              float _1041 = dot(float3(_1035, _1026, 1.0f), float3(_1038, _1039, _1040));
                              _1046 = _1041;
                              break;
                            }
                          }
                          float _1043 = log2(_98);
                          float _1044 = _1043 * 0.3010300099849701f;
                          _1046 = _1044;
                        } while (false);
                      }
                    }
                    float _1047 = _1046 * 3.321928024291992f;
                    float _1048 = exp2(_1047);
                    float _1049 = _900 - _96;
                    float _1050 = _98 - _96;
                    float _1051 = _1049 / _1050;
                    float _1052 = _974 - _96;
                    float _1053 = _1052 / _1050;
                    float _1054 = _1048 - _96;
                    float _1055 = _1054 / _1050;
                    float _1056 = _1051 * 0.6624541878700256f;
                    float _1057 = mad(0.13400420546531677f, _1053, _1056);
                    float _1058 = mad(0.15618768334388733f, _1055, _1057);
                    float _1059 = _1051 * 0.2722287178039551f;
                    float _1060 = mad(0.6740817427635193f, _1053, _1059);
                    float _1061 = mad(0.053689517080783844f, _1055, _1060);
                    float _1062 = _1051 * -0.005574649665504694f;
                    float _1063 = mad(0.00406073359772563f, _1053, _1062);
                    float _1064 = mad(1.0103391408920288f, _1055, _1063);
                    float _1065 = _1058 * 1.6410233974456787f;
                    float _1066 = mad(-0.32480329275131226f, _1061, _1065);
                    float _1067 = mad(-0.23642469942569733f, _1064, _1066);
                    float _1068 = _1058 * -0.663662850856781f;
                    float _1069 = mad(1.6153316497802734f, _1061, _1068);
                    float _1070 = mad(0.016756348311901093f, _1064, _1069);
                    float _1071 = _1058 * 0.011721894145011902f;
                    float _1072 = mad(-0.008284442126750946f, _1061, _1071);
                    float _1073 = mad(0.9883948564529419f, _1064, _1072);
                    float _1074 = max(_1067, 0.0f);
                    float _1075 = max(_1070, 0.0f);
                    float _1076 = max(_1073, 0.0f);
                    float _1077 = min(_1074, 1.0f);
                    float _1078 = min(_1075, 1.0f);
                    float _1079 = min(_1076, 1.0f);
                    float _1080 = _1077 * 0.6624541878700256f;
                    float _1081 = mad(0.13400420546531677f, _1078, _1080);
                    float _1082 = mad(0.15618768334388733f, _1079, _1081);
                    float _1083 = _1077 * 0.2722287178039551f;
                    float _1084 = mad(0.6740817427635193f, _1078, _1083);
                    float _1085 = mad(0.053689517080783844f, _1079, _1084);
                    float _1086 = _1077 * -0.005574649665504694f;
                    float _1087 = mad(0.00406073359772563f, _1078, _1086);
                    float _1088 = mad(1.0103391408920288f, _1079, _1087);
                    float _1089 = _1082 * 1.6410233974456787f;
                    float _1090 = mad(-0.32480329275131226f, _1085, _1089);
                    float _1091 = mad(-0.23642469942569733f, _1088, _1090);
                    float _1092 = _1082 * -0.663662850856781f;
                    float _1093 = mad(1.6153316497802734f, _1085, _1092);
                    float _1094 = mad(0.016756348311901093f, _1088, _1093);
                    float _1095 = _1082 * 0.011721894145011902f;
                    float _1096 = mad(-0.008284442126750946f, _1085, _1095);
                    float _1097 = mad(0.9883948564529419f, _1088, _1096);
                    float _1098 = max(_1091, 0.0f);
                    float _1099 = max(_1094, 0.0f);
                    float _1100 = max(_1097, 0.0f);
                    float _1101 = min(_1098, 65535.0f);
                    float _1102 = min(_1099, 65535.0f);
                    float _1103 = min(_1100, 65535.0f);
                    float _1104 = _1101 * _98;
                    float _1105 = _1102 * _98;
                    float _1106 = _1103 * _98;
                    float _1107 = max(_1104, 0.0f);
                    float _1108 = max(_1105, 0.0f);
                    float _1109 = max(_1106, 0.0f);
                    float _1110 = min(_1107, 65535.0f);
                    float _1111 = min(_1108, 65535.0f);
                    float _1112 = min(_1109, 65535.0f);
                    uint _1114 = $Globals_002x;
                    bool _1115 = (_1114 == 6);
                    _1127 = _1110;
                    _1128 = _1111;
                    _1129 = _1112;
                    do {
                      if (!_1115) {
                        float _1117 = _1110 * _33;
                        float _1118 = mad(_34, _1111, _1117);
                        float _1119 = mad(_35, _1112, _1118);
                        float _1120 = _1110 * _36;
                        float _1121 = mad(_37, _1111, _1120);
                        float _1122 = mad(_38, _1112, _1121);
                        float _1123 = _1110 * _39;
                        float _1124 = mad(_40, _1111, _1123);
                        float _1125 = mad(_41, _1112, _1124);
                        _1127 = _1119;
                        _1128 = _1122;
                        _1129 = _1125;
                      }
                      float _1130 = _1127 * 9.999999747378752e-05f;
                      float _1131 = _1128 * 9.999999747378752e-05f;
                      float _1132 = _1129 * 9.999999747378752e-05f;
                      float _1133 = log2(_1130);
                      float _1134 = log2(_1131);
                      float _1135 = log2(_1132);
                      float _1136 = _1133 * 0.1593017578125f;
                      float _1137 = _1134 * 0.1593017578125f;
                      float _1138 = _1135 * 0.1593017578125f;
                      float _1139 = exp2(_1136);
                      float _1140 = exp2(_1137);
                      float _1141 = exp2(_1138);
                      float _1142 = _1139 * 18.8515625f;
                      float _1143 = _1140 * 18.8515625f;
                      float _1144 = _1141 * 18.8515625f;
                      float _1145 = _1142 + 0.8359375f;
                      float _1146 = _1143 + 0.8359375f;
                      float _1147 = _1144 + 0.8359375f;
                      float _1148 = _1139 * 18.6875f;
                      float _1149 = _1140 * 18.6875f;
                      float _1150 = _1141 * 18.6875f;
                      float _1151 = _1148 + 1.0f;
                      float _1152 = _1149 + 1.0f;
                      float _1153 = _1150 + 1.0f;
                      float _1154 = 1.0f / _1151;
                      float _1155 = 1.0f / _1152;
                      float _1156 = 1.0f / _1153;
                      float _1157 = _1154 * _1145;
                      float _1158 = _1155 * _1146;
                      float _1159 = _1156 * _1147;
                      float _1160 = log2(_1157);
                      float _1161 = log2(_1158);
                      float _1162 = log2(_1159);
                      float _1163 = _1160 * 78.84375f;
                      float _1164 = _1161 * 78.84375f;
                      float _1165 = _1162 * 78.84375f;
                      float _1166 = exp2(_1163);
                      float _1167 = exp2(_1164);
                      float _1168 = exp2(_1165);
                      _1170 = _1166;
                      _1171 = _1167;
                      _1172 = _1168;
                    } while (false);
                  } while (false);
                } while (false);
              } while (false);
            } while (false);
          } while (false);
        } while (false);
      } while (false);
    }
  }
  float _1173 = _1170 * 0.9523810148239136f;
  float _1174 = _1171 * 0.9523810148239136f;
  float _1175 = _1172 * 0.9523810148239136f;
  SV_Target.x = _1173;
  SV_Target.y = _1174;
  SV_Target.z = _1175;
  SV_Target.w = 0.0f;
  return SV_Target;
}
