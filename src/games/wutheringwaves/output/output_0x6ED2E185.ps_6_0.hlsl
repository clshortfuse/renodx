#include "../common.hlsl"

Texture2D<float4> t0 : register(t0);

Texture2D<float4> t1 : register(t1);

Texture3D<float4> t2 : register(t2);

cbuffer cb0 : register(b0) {
  float cb0_037y : packoffset(c037.y);
  float cb0_037z : packoffset(c037.z);
  float cb0_037w : packoffset(c037.w);
  float cb0_038x : packoffset(c038.x);
  float cb0_038y : packoffset(c038.y);
  float cb0_038z : packoffset(c038.z);
  float cb0_048x : packoffset(c048.x);
  float cb0_048y : packoffset(c048.y);
  float cb0_048z : packoffset(c048.z);
  float cb0_048w : packoffset(c048.w);
  float cb0_049x : packoffset(c049.x);
  float cb0_049y : packoffset(c049.y);
  float cb0_060z : packoffset(c060.z);
  float cb0_060w : packoffset(c060.w);
  float cb0_061x : packoffset(c061.x);
  float cb0_061y : packoffset(c061.y);
  float cb0_068z : packoffset(c068.z);
  float cb0_068w : packoffset(c068.w);
  float cb0_069x : packoffset(c069.x);
  float cb0_069y : packoffset(c069.y);
  float cb0_070x : packoffset(c070.x);
  float cb0_070y : packoffset(c070.y);
  float cb0_070z : packoffset(c070.z);
  float cb0_072x : packoffset(c072.x);
  float cb0_072z : packoffset(c072.z);
  float cb0_072w : packoffset(c072.w);
  float cb0_073x : packoffset(c073.x);
  float cb0_073y : packoffset(c073.y);
  float cb0_073z : packoffset(c073.z);
  float cb0_073w : packoffset(c073.w);
  float cb0_074x : packoffset(c074.x);
  float cb0_074y : packoffset(c074.y);
  float cb0_074z : packoffset(c074.z);
  float cb0_075x : packoffset(c075.x);
  float cb0_075z : packoffset(c075.z);
  float cb0_075w : packoffset(c075.w);
  float cb0_076x : packoffset(c076.x);
  float cb0_076y : packoffset(c076.y);
  float cb0_076z : packoffset(c076.z);
  float cb0_076w : packoffset(c076.w);
  float cb0_077x : packoffset(c077.x);
  float cb0_077y : packoffset(c077.y);
  float cb0_077z : packoffset(c077.z);
  float cb0_080x : packoffset(c080.x);
  uint cb0_089w : packoffset(c089.w);
  float cb0_090x : packoffset(c090.x);
  float cb0_090y : packoffset(c090.y);
  float cb0_090z : packoffset(c090.z);
  float cb0_091x : packoffset(c091.x);
  uint cb0_091y : packoffset(c091.y);
  uint cb0_091z : packoffset(c091.z);
  uint cb0_091w : packoffset(c091.w);
  uint cb0_092x : packoffset(c092.x);
};

SamplerState s0 : register(s0);

SamplerState s1 : register(s1);

SamplerState s2 : register(s2);

float4 main(
  noperspective float2 TEXCOORD : TEXCOORD,
  noperspective float4 TEXCOORD_1 : TEXCOORD1,
  noperspective float4 TEXCOORD_2 : TEXCOORD2,
  noperspective float2 TEXCOORD_3 : TEXCOORD3,
  noperspective float2 TEXCOORD_4 : TEXCOORD4,
  noperspective float4 SV_Position : SV_Position
) : SV_Target {
  float4 SV_Target;
  float _27 = ((cb0_048z * TEXCOORD_3.x) + cb0_049x) * cb0_048x;
  float _28 = ((cb0_048w * TEXCOORD_3.y) + cb0_049y) * cb0_048y;
  float _29 = TEXCOORD_2.w * 543.3099975585938f;
  float _33 = frac(sin(_29 + TEXCOORD_2.z) * 493013.0f);
  float _57;
  float _58;
  float _218;
  float _219;
  float _220;
  float _252;
  float _253;
  float _254;
  float _302;
  float _303;
  float _304;
  float _377;
  float _380;
  float _381;
  float _382;
  float _406;
  float _409;
  float _410;
  float _411;
  float _446;
  float _447;
  float _448;
  float _561;
  float _562;
  float _563;
  float _570;
  float _584;
  if (cb0_080x > 0.0f) {
    _57 = ((cb0_080x * (frac((sin((TEXCOORD_2.z + 33.9900016784668f) + _29) * 493013.0f) + 7.177000045776367f) - _33)) + _33);
    _58 = ((cb0_080x * (frac((sin((TEXCOORD_2.z + 66.98999786376953f) + _29) * 493013.0f) + 14.298999786376953f) - _33)) + _33);
  } else {
    _57 = _33;
    _58 = _33;
  }
  float4 _59 = t0.Sample(s0, float2(_27, _28));

  float4 _87 = t1.Sample(s1, float2(min(max(((cb0_068z * _27) + cb0_069x), cb0_060z), cb0_061x), min(max(((cb0_068w * _28) + cb0_069y), cb0_060w), cb0_061y)));
  _87.rgb *= RENODX_WUWA_BLOOM;

  float _115 = TEXCOORD_1.z + -1.0f;
  float _117 = TEXCOORD_1.w + -1.0f;
  float _120 = ((_115 + (cb0_074x * 2.0f)) * cb0_072z) * cb0_072x;
  float _122 = ((_117 + (cb0_074y * 2.0f)) * cb0_072w) * cb0_072x;
  float _129 = 1.0f / ((((saturate(cb0_073w) * 9.0f) + 1.0f) * dot(float2(_120, _122), float2(_120, _122))) + 1.0f);
  float _130 = _129 * _129;
  float _131 = cb0_074z + 1.0f;
  float _159 = ((_115 + (cb0_077x * 2.0f)) * cb0_075z) * cb0_075x;
  float _161 = ((_117 + (cb0_077y * 2.0f)) * cb0_075w) * cb0_075x;
  float _168 = 1.0f / ((((saturate(cb0_076w) * 9.0f) + 1.0f) * dot(float2(_159, _161), float2(_159, _161))) + 1.0f);
  float _169 = _168 * _168;
  float _170 = cb0_077z + 1.0f;
  float _181 = (((_130 * (_131 - cb0_073x)) + cb0_073x) * (_87.x + ((_59.x * TEXCOORD_1.x) * cb0_070x))) * ((_169 * (_170 - cb0_076x)) + cb0_076x);
  float _183 = (((_130 * (_131 - cb0_073y)) + cb0_073y) * (_87.y + ((_59.y * TEXCOORD_1.x) * cb0_070y))) * ((_169 * (_170 - cb0_076y)) + cb0_076y);
  float _185 = (((_130 * (_131 - cb0_073z)) + cb0_073z) * (_87.z + ((_59.z * TEXCOORD_1.x) * cb0_070z))) * ((_169 * (_170 - cb0_076z)) + cb0_076z);

  CAPTURE_UNTONEMAPPED(untonemapped, float3(_181, _183, _185));

  [branch]
  // if (!((uint)(cb0_091z) == 0)) {
  if (!((uint)(RENODX_WUWA_TM) == 1)) {
    // _218 = saturate((((_181 * 1.3600000143051147f) + 0.04699999839067459f) * _181) / ((((_181 * 0.9599999785423279f) + 0.5600000023841858f) * _181) + 0.14000000059604645f));
    // _219 = saturate((((_183 * 1.3600000143051147f) + 0.04699999839067459f) * _183) / ((((_183 * 0.9599999785423279f) + 0.5600000023841858f) * _183) + 0.14000000059604645f));
    // _220 = saturate((((_185 * 1.3600000143051147f) + 0.04699999839067459f) * _185) / ((((_185 * 0.9599999785423279f) + 0.5600000023841858f) * _185) + 0.14000000059604645f));
    _218 = ((((_181 * 1.3600000143051147f) + 0.04699999839067459f) * _181) / ((((_181 * 0.9599999785423279f) + 0.5600000023841858f) * _181) + 0.14000000059604645f));
    _219 = ((((_183 * 1.3600000143051147f) + 0.04699999839067459f) * _183) / ((((_183 * 0.9599999785423279f) + 0.5600000023841858f) * _183) + 0.14000000059604645f));
    _220 = ((((_185 * 1.3600000143051147f) + 0.04699999839067459f) * _185) / ((((_185 * 0.9599999785423279f) + 0.5600000023841858f) * _185) + 0.14000000059604645f));
  } else {
    _218 = _181;
    _219 = _183;
    _220 = _185;
  }
  [branch]
  // if (!((uint)(cb0_091w) == 0)) {
  if (!((uint)(RENODX_WUWA_TM) == 2)) {
    float _230 = 1.0049500465393066f - (0.16398000717163086f / (_218 + -0.19505000114440918f));
    float _231 = 1.0049500465393066f - (0.16398000717163086f / (_219 + -0.19505000114440918f));
    float _232 = 1.0049500465393066f - (0.16398000717163086f / (_220 + -0.19505000114440918f));
    // _252 = saturate(((_218 - _230) * select((_218 > 0.6000000238418579f), 0.0f, 1.0f)) + _230);
    // _253 = saturate(((_219 - _231) * select((_219 > 0.6000000238418579f), 0.0f, 1.0f)) + _231);
    // _254 = saturate(((_220 - _232) * select((_220 > 0.6000000238418579f), 0.0f, 1.0f)) + _232);
    _252 = (((_218 - _230) * select((_218 > 0.6000000238418579f), 0.0f, 1.0f)) + _230);
    _253 = (((_219 - _231) * select((_219 > 0.6000000238418579f), 0.0f, 1.0f)) + _231);
    _254 = (((_220 - _232) * select((_220 > 0.6000000238418579f), 0.0f, 1.0f)) + _232);
  } else {
    _252 = _218;
    _253 = _219;
    _254 = _220;
  }
  [branch]
  // if (!((uint)(cb0_092x) == 0)) {
  if (!((uint)(RENODX_WUWA_TM) == 3)) {
    float _261 = cb0_037y * _252;
    float _262 = cb0_037y * _253;
    float _263 = cb0_037y * _254;
    float _266 = cb0_037z * cb0_037w;
    float _276 = cb0_038y * cb0_038x;
    float _287 = cb0_038z * cb0_038x;
    float _294 = cb0_038y / cb0_038z;
    // _302 = saturate(((((_266 + _261) * _252) + _276) / (_287 + ((_261 + cb0_037z) * _252))) - _294);
    // _303 = saturate(((((_266 + _262) * _253) + _276) / (_287 + ((_262 + cb0_037z) * _253))) - _294);
    // _304 = saturate(((((_266 + _263) * _254) + _276) / (_287 + ((_263 + cb0_037z) * _254))) - _294);
    _302 = (((((_266 + _261) * _252) + _276) / (_287 + ((_261 + cb0_037z) * _252))) - _294);
    _303 = (((((_266 + _262) * _253) + _276) / (_287 + ((_262 + cb0_037z) * _253))) - _294);
    _304 = (((((_266 + _263) * _254) + _276) / (_287 + ((_263 + cb0_037z) * _254))) - _294);
  } else {
    _302 = _252;
    _303 = _253;
    _304 = _254;
  }
  [branch]
  if (!((uint)(cb0_089w) == 0)) {
    if (!((bool)(cb0_090x <= 0.0f) && (bool)(cb0_090y <= 0.0f))) {
      float _316 = dot(float3(_302, _303, _304), float3(0.2125999927520752f, 0.7152000069618225f, 0.0722000002861023f));
      if (!(_316 <= 9.999999747378752e-05f)) {
        float _325 = (pow(_302, 0.1593017578125f));
        float _326 = (pow(_303, 0.1593017578125f));
        float _327 = (pow(_304, 0.1593017578125f));
        float _349 = exp2(log2(((_325 * 18.8515625f) + 0.8359375f) / ((_325 * 18.6875f) + 1.0f)) * 78.84375f);
        float _350 = exp2(log2(((_326 * 18.8515625f) + 0.8359375f) / ((_326 * 18.6875f) + 1.0f)) * 78.84375f);
        float _351 = exp2(log2(((_327 * 18.8515625f) + 0.8359375f) / ((_327 * 18.6875f) + 1.0f)) * 78.84375f);
        if ((bool)(cb0_090y > 0.0f) && (bool)((_316 / cb0_090y) > 1.0f)) {
          float _360 = (pow(cb0_090y, 0.1593017578125f));
          float _368 = exp2(log2(((_360 * 18.8515625f) + 0.8359375f) / ((_360 * 18.6875f) + 1.0f)) * 78.84375f);
          if (_349 > _368) {
            float _371 = _349 - _368;
            _377 = ((_371 / ((_371 * cb0_090z) + 1.0f)) + _368);
          } else {
            _377 = _349;
          }
          if (_350 > _368) {
            float _578 = _350 - _368;
            _584 = ((_578 / ((_578 * cb0_090z) + 1.0f)) + _368);
            if (_351 > _368) {
              float _587 = _351 - _368;
              _380 = ((_587 / ((_587 * cb0_090z) + 1.0f)) + _368);
              _381 = _584;
              _382 = _377;
            } else {
              _380 = _351;
              _381 = _584;
              _382 = _377;
            }
          } else {
            _584 = _350;
            if (_351 > _368) {
              float _587 = _351 - _368;
              _380 = ((_587 / ((_587 * cb0_090z) + 1.0f)) + _368);
              _381 = _584;
              _382 = _377;
            } else {
              _380 = _351;
              _381 = _584;
              _382 = _377;
            }
          }
          while(true) {
            if (cb0_090x > 0.0f) {
              if (_316 < cb0_090x) {
                float _390 = (pow(cb0_090x, 0.1593017578125f));
                float _398 = exp2(log2(((_390 * 18.8515625f) + 0.8359375f) / ((_390 * 18.6875f) + 1.0f)) * 78.84375f);
                if (_382 < _398) {
                  _406 = (((cb0_090z * 0.30000001192092896f) * (_398 - _382)) + _382);
                } else {
                  _406 = _382;
                }
                if (_381 < _398) {
                  _570 = (((cb0_090z * 0.30000001192092896f) * (_398 - _381)) + _381);
                  if (_380 < _398) {
                    _409 = (((cb0_090z * 0.30000001192092896f) * (_398 - _380)) + _380);
                    _410 = _570;
                    _411 = _406;
                  } else {
                    _409 = _380;
                    _410 = _570;
                    _411 = _406;
                  }
                } else {
                  _570 = _381;
                  if (_380 < _398) {
                    _409 = (((cb0_090z * 0.30000001192092896f) * (_398 - _380)) + _380);
                    _410 = _570;
                    _411 = _406;
                  } else {
                    _409 = _380;
                    _410 = _570;
                    _411 = _406;
                  }
                }
              } else {
                _409 = _380;
                _410 = _381;
                _411 = _382;
              }
            } else {
              _409 = _380;
              _410 = _381;
              _411 = _382;
            }
            while(true) {
              float _418 = (pow(_411, 0.012683313339948654f));
              float _419 = (pow(_410, 0.012683313339948654f));
              float _420 = (pow(_409, 0.012683313339948654f));
              _446 = exp2(log2(max((_418 + -0.8359375f), 0.0f) / (18.8515625f - (_418 * 18.6875f))) * 6.277394771575928f);
              _447 = exp2(log2(max((_419 + -0.8359375f), 0.0f) / (18.8515625f - (_419 * 18.6875f))) * 6.277394771575928f);
              _448 = exp2(log2(max((_420 + -0.8359375f), 0.0f) / (18.8515625f - (_420 * 18.6875f))) * 6.277394771575928f);
              break;
            }
            break;
          }
        } else {
          _380 = _351;
          _381 = _350;
          _382 = _349;
          while(true) {
            if (cb0_090x > 0.0f) {
              if (_316 < cb0_090x) {
                float _390 = (pow(cb0_090x, 0.1593017578125f));
                float _398 = exp2(log2(((_390 * 18.8515625f) + 0.8359375f) / ((_390 * 18.6875f) + 1.0f)) * 78.84375f);
                if (_382 < _398) {
                  _406 = (((cb0_090z * 0.30000001192092896f) * (_398 - _382)) + _382);
                } else {
                  _406 = _382;
                }
                if (_381 < _398) {
                  _570 = (((cb0_090z * 0.30000001192092896f) * (_398 - _381)) + _381);
                  if (_380 < _398) {
                    _409 = (((cb0_090z * 0.30000001192092896f) * (_398 - _380)) + _380);
                    _410 = _570;
                    _411 = _406;
                  } else {
                    _409 = _380;
                    _410 = _570;
                    _411 = _406;
                  }
                } else {
                  _570 = _381;
                  if (_380 < _398) {
                    _409 = (((cb0_090z * 0.30000001192092896f) * (_398 - _380)) + _380);
                    _410 = _570;
                    _411 = _406;
                  } else {
                    _409 = _380;
                    _410 = _570;
                    _411 = _406;
                  }
                }
              } else {
                _409 = _380;
                _410 = _381;
                _411 = _382;
              }
            } else {
              _409 = _380;
              _410 = _381;
              _411 = _382;
            }
            while(true) {
              float _418 = (pow(_411, 0.012683313339948654f));
              float _419 = (pow(_410, 0.012683313339948654f));
              float _420 = (pow(_409, 0.012683313339948654f));
              _446 = exp2(log2(max((_418 + -0.8359375f), 0.0f) / (18.8515625f - (_418 * 18.6875f))) * 6.277394771575928f);
              _447 = exp2(log2(max((_419 + -0.8359375f), 0.0f) / (18.8515625f - (_419 * 18.6875f))) * 6.277394771575928f);
              _448 = exp2(log2(max((_420 + -0.8359375f), 0.0f) / (18.8515625f - (_420 * 18.6875f))) * 6.277394771575928f);
              break;
            }
            break;
          }
        }
      } else {
        _446 = _302;
        _447 = _303;
        _448 = _304;
      }
    } else {
      _446 = _302;
      _447 = _303;
      _448 = _304;
    }
  } else {
    _446 = _302;
    _447 = _303;
    _448 = _304;
  }

  CLAMP_IF_SDR(_446); CLAMP_IF_SDR(_447); CLAMP_IF_SDR(_448);
  CAPTURE_TONEMAPPED(tonemapped, float3(_446, _447, _448));

  float4 _470 = t2.Sample(s2, float3(((saturate((log2(_446 + 0.002667719265446067f) * 0.0714285746216774f) + 0.6107269525527954f) * 0.96875f) + 0.015625f), ((saturate((log2(_447 + 0.002667719265446067f) * 0.0714285746216774f) + 0.6107269525527954f) * 0.96875f) + 0.015625f), ((saturate((log2(_448 + 0.002667719265446067f) * 0.0714285746216774f) + 0.6107269525527954f) * 0.96875f) + 0.015625f)));
  _470.rgb = HandleLUTOutput(_470.rgb, untonemapped, tonemapped);

  float _474 = _470.x * 1.0499999523162842f;
  float _475 = _470.y * 1.0499999523162842f;
  float _476 = _470.z * 1.0499999523162842f;
  float _484 = ((_33 * 0.00390625f) + -0.001953125f) + _474;
  float _485 = ((_57 * 0.00390625f) + -0.001953125f) + _475;
  float _486 = ((_58 * 0.00390625f) + -0.001953125f) + _476;
  [branch]
  if (!((uint)(cb0_091y) == 0)) {
    float _498 = (pow(_484, 0.012683313339948654f));
    float _499 = (pow(_485, 0.012683313339948654f));
    float _500 = (pow(_486, 0.012683313339948654f));
    float _533 = max(6.103519990574569e-05f, ((exp2(log2(max(0.0f, (_498 + -0.8359375f)) / (18.8515625f - (_498 * 18.6875f))) * 6.277394771575928f) * 10000.0f) / cb0_091x));
    float _534 = max(6.103519990574569e-05f, ((exp2(log2(max(0.0f, (_499 + -0.8359375f)) / (18.8515625f - (_499 * 18.6875f))) * 6.277394771575928f) * 10000.0f) / cb0_091x));
    float _535 = max(6.103519990574569e-05f, ((exp2(log2(max(0.0f, (_500 + -0.8359375f)) / (18.8515625f - (_500 * 18.6875f))) * 6.277394771575928f) * 10000.0f) / cb0_091x));
    _561 = min((_533 * 12.920000076293945f), ((exp2(log2(max(_533, 0.0031306699384003878f)) * 0.4166666567325592f) * 1.0549999475479126f) + -0.054999999701976776f));
    _562 = min((_534 * 12.920000076293945f), ((exp2(log2(max(_534, 0.0031306699384003878f)) * 0.4166666567325592f) * 1.0549999475479126f) + -0.054999999701976776f));
    _563 = min((_535 * 12.920000076293945f), ((exp2(log2(max(_535, 0.0031306699384003878f)) * 0.4166666567325592f) * 1.0549999475479126f) + -0.054999999701976776f));
  } else {
    _561 = _484;
    _562 = _485;
    _563 = _486;
  }
  SV_Target.x = _561;
  SV_Target.y = _562;
  SV_Target.z = _563;

  // SV_Target.w = saturate(dot(float3(_474, _475, _476), float3(0.29899999499320984f, 0.5870000123977661f, 0.11400000005960464f)));
  SV_Target.w = (dot(float3(_474, _475, _476), float3(0.29899999499320984f, 0.5870000123977661f, 0.11400000005960464f)));
  CLAMP_IF_SDR(SV_Target.w);

  return SV_Target;
}
