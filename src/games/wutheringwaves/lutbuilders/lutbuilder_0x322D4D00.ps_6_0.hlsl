#include "../common.hlsl"

Texture2D<float4> t0 : register(t0);

Texture2D<float4> t1 : register(t1);

cbuffer cb0 : register(b0) {
  float cb0_026x : packoffset(c026.x);
  float cb0_026y : packoffset(c026.y);
  float cb0_026z : packoffset(c026.z);
  float cb0_027y : packoffset(c027.y);
  float cb0_027z : packoffset(c027.z);
  float cb0_028x : packoffset(c028.x);
  float cb0_028y : packoffset(c028.y);
  float cb0_028z : packoffset(c028.z);
  float cb0_028w : packoffset(c028.w);
  float cb0_029x : packoffset(c029.x);
  float cb0_029y : packoffset(c029.y);
  float cb0_029z : packoffset(c029.z);
  float cb0_029w : packoffset(c029.w);
  float cb0_030x : packoffset(c030.x);
  float cb0_030y : packoffset(c030.y);
  float cb0_030z : packoffset(c030.z);
  float cb0_030w : packoffset(c030.w);
  float cb0_031x : packoffset(c031.x);
  float cb0_031y : packoffset(c031.y);
  float cb0_031z : packoffset(c031.z);
  float cb0_031w : packoffset(c031.w);
  float cb0_032x : packoffset(c032.x);
  float cb0_032y : packoffset(c032.y);
  float cb0_033x : packoffset(c033.x);
  float cb0_033y : packoffset(c033.y);
  float cb0_033z : packoffset(c033.z);
  float cb0_034x : packoffset(c034.x);
  float cb0_034y : packoffset(c034.y);
  float cb0_034z : packoffset(c034.z);
  float cb0_035x : packoffset(c035.x);
  float cb0_035y : packoffset(c035.y);
  float cb0_035z : packoffset(c035.z);
  float cb0_036x : packoffset(c036.x);
  float cb0_036y : packoffset(c036.y);
  float cb0_036z : packoffset(c036.z);
  float cb0_036w : packoffset(c036.w);
  float cb0_037x : packoffset(c037.x);
  float cb0_038w : packoffset(c038.w);
  float cb0_040x : packoffset(c040.x);
  float cb0_041x : packoffset(c041.x);
  float cb0_042x : packoffset(c042.x);
  float cb0_044y : packoffset(c044.y);
  float cb0_044z : packoffset(c044.z);
  float cb0_044w : packoffset(c044.w);
  float cb0_045x : packoffset(c045.x);
  float cb0_045y : packoffset(c045.y);
  float cb0_045z : packoffset(c045.z);
  float cb0_045w : packoffset(c045.w);
  uint cb0_046x : packoffset(c046.x);
  uint cb0_046y : packoffset(c046.y);
  uint cb0_046z : packoffset(c046.z);
  uint cb0_046w : packoffset(c046.w);
  float cb0_047x : packoffset(c047.x);
  float cb0_047y : packoffset(c047.y);
  float cb0_048x : packoffset(c048.x);
  float cb0_048y : packoffset(c048.y);
  float cb0_048z : packoffset(c048.z);
  float cb0_048w : packoffset(c048.w);
  float cb0_049x : packoffset(c049.x);
  float cb0_049y : packoffset(c049.y);
  float cb0_049z : packoffset(c049.z);
  float cb0_049w : packoffset(c049.w);
  float cb0_050x : packoffset(c050.x);
  float cb0_050y : packoffset(c050.y);
  float cb0_050z : packoffset(c050.z);
  float cb0_050w : packoffset(c050.w);
  float cb0_051x : packoffset(c051.x);
  float cb0_051y : packoffset(c051.y);
  float cb0_051z : packoffset(c051.z);
  float cb0_051w : packoffset(c051.w);
  float cb0_052x : packoffset(c052.x);
  float cb0_052y : packoffset(c052.y);
  float cb0_052z : packoffset(c052.z);
  float cb0_052w : packoffset(c052.w);
  float cb0_053x : packoffset(c053.x);
  float cb0_053y : packoffset(c053.y);
  float cb0_053z : packoffset(c053.z);
  float cb0_053w : packoffset(c053.w);
  float cb0_054x : packoffset(c054.x);
  float cb0_054y : packoffset(c054.y);
  float cb0_054z : packoffset(c054.z);
  float cb0_054w : packoffset(c054.w);
  float cb0_055x : packoffset(c055.x);
  float cb0_055y : packoffset(c055.y);
  float cb0_055z : packoffset(c055.z);
  float cb0_055w : packoffset(c055.w);
  float cb0_056x : packoffset(c056.x);
  float cb0_056y : packoffset(c056.y);
  float cb0_056z : packoffset(c056.z);
  float cb0_056w : packoffset(c056.w);
  float cb0_057x : packoffset(c057.x);
  float cb0_057y : packoffset(c057.y);
  float cb0_057z : packoffset(c057.z);
  float cb0_057w : packoffset(c057.w);
  float cb0_058x : packoffset(c058.x);
  float cb0_058y : packoffset(c058.y);
  float cb0_058z : packoffset(c058.z);
  float cb0_058w : packoffset(c058.w);
  float cb0_059x : packoffset(c059.x);
  float cb0_059y : packoffset(c059.y);
  float cb0_059z : packoffset(c059.z);
  float cb0_059w : packoffset(c059.w);
  float cb0_060x : packoffset(c060.x);
  float cb0_060y : packoffset(c060.y);
  float cb0_060z : packoffset(c060.z);
  float cb0_060w : packoffset(c060.w);
  float cb0_061x : packoffset(c061.x);
  float cb0_061y : packoffset(c061.y);
  float cb0_061z : packoffset(c061.z);
  float cb0_061w : packoffset(c061.w);
  float cb0_062x : packoffset(c062.x);
  float cb0_062y : packoffset(c062.y);
  float cb0_062z : packoffset(c062.z);
  float cb0_062w : packoffset(c062.w);
  float cb0_063x : packoffset(c063.x);
  float cb0_063y : packoffset(c063.y);
  float cb0_063z : packoffset(c063.z);
  float cb0_063w : packoffset(c063.w);
  float cb0_064x : packoffset(c064.x);
  float cb0_064y : packoffset(c064.y);
  float cb0_064z : packoffset(c064.z);
  float cb0_064w : packoffset(c064.w);
  float cb0_065x : packoffset(c065.x);
  float cb0_065y : packoffset(c065.y);
  float cb0_065z : packoffset(c065.z);
  float cb0_065w : packoffset(c065.w);
  float cb0_066x : packoffset(c066.x);
  float cb0_066y : packoffset(c066.y);
  float cb0_066z : packoffset(c066.z);
  float cb0_066w : packoffset(c066.w);
  float cb0_067x : packoffset(c067.x);
  float cb0_067y : packoffset(c067.y);
  float cb0_067z : packoffset(c067.z);
  float cb0_067w : packoffset(c067.w);
  float cb0_068x : packoffset(c068.x);
  float cb0_068y : packoffset(c068.y);
  float cb0_068z : packoffset(c068.z);
  float cb0_068w : packoffset(c068.w);
  float cb0_069x : packoffset(c069.x);
  float cb0_069y : packoffset(c069.y);
  float cb0_069z : packoffset(c069.z);
  float cb0_069w : packoffset(c069.w);
  float cb0_070x : packoffset(c070.x);
  float cb0_070y : packoffset(c070.y);
  float cb0_070z : packoffset(c070.z);
  float cb0_070w : packoffset(c070.w);
  float cb0_071x : packoffset(c071.x);
  float cb0_071y : packoffset(c071.y);
  float cb0_071z : packoffset(c071.z);
  float cb0_071w : packoffset(c071.w);
  float cb0_072x : packoffset(c072.x);
  float cb0_072y : packoffset(c072.y);
  float cb0_072z : packoffset(c072.z);
  float cb0_072w : packoffset(c072.w);
  float cb0_073x : packoffset(c073.x);
  float cb0_073y : packoffset(c073.y);
  uint cb0_074z : packoffset(c074.z);
  uint cb0_074w : packoffset(c074.w);
  float cb0_075x : packoffset(c075.x);
  float cb0_075y : packoffset(c075.y);
  float cb0_075z : packoffset(c075.z);
};

SamplerState s0 : register(s0);

SamplerState s1 : register(s1);

static const float _global_0[6] = { -4.0f, -4.0f, -3.157376527786255f, -0.48524999618530273f, 1.847732424736023f, 1.847732424736023f };
static const float _global_1[6] = { -0.7185482382774353f, 2.0810306072235107f, 3.668124198913574f, 4.0f, 4.0f, 4.0f };
static const float _global_2[10] = { -4.9706220626831055f, -3.0293781757354736f, -2.126199960708618f, -1.5104999542236328f, -1.057800054550171f, -0.4668000042438507f, 0.11937999725341797f, 0.7088134288787842f, 1.2911865711212158f, 1.2911865711212158f };
static const float _global_3[10] = { 0.8089132308959961f, 1.191086769104004f, 1.5683000087738037f, 1.9483000040054321f, 2.308300018310547f, 2.638400077819824f, 2.859499931335449f, 2.9872608184814453f, 3.0127391815185547f, 3.0127391815185547f };
static const float _global_4[10] = { -2.301029920578003f, -2.301029920578003f, -1.9312000274658203f, -1.5204999446868896f, -1.057800054550171f, -0.4668000042438507f, 0.11937999725341797f, 0.7088134288787842f, 1.2911865711212158f, 1.2911865711212158f };
static const float _global_5[10] = { 0.8019952178001404f, 1.1980048418045044f, 1.5943000316619873f, 1.9973000288009644f, 2.3782999515533447f, 2.768399953842163f, 3.051500082015991f, 3.2746293544769287f, 3.3274307250976562f, 3.3274307250976562f };

float4 main(
  noperspective float2 TEXCOORD : TEXCOORD,
  noperspective float4 SV_Position : SV_Position,
  nointerpolation uint SV_RenderTargetArrayIndex : SV_RenderTargetArrayIndex
) : SV_Target {
  float4 SV_Target;
  float _9 = TEXCOORD.x + -0.015625f;
  float _10 = TEXCOORD.y + -0.015625f;
  float _13 = float((uint)SV_RenderTargetArrayIndex);
  float _34;
  float _35;
  float _36;
  float _37;
  float _38;
  float _39;
  float _40;
  float _41;
  float _42;
  float _99;
  float _100;
  float _101;
  float _340;
  float _341;
  float _342;
  float _889;
  float _922;
  float _936;
  float _1000;
  float _1137;
  float _1138;
  float _1139;
  float _1282;
  float _1283;
  float _1284;
  float _1298;
  float _1309;
  float _1320;
  float _1490;
  float _1501;
  float _1623;
  float _1656;
  float _1670;
  float _1709;
  float _1802;
  float _1861;
  float _1920;
  float _2003;
  float _2068;
  float _2133;
  float _2150;
  float _2151;
  float _2152;
  float _2256;
  float _2289;
  float _2303;
  float _2342;
  float _2435;
  float _2494;
  float _2553;
  float _2633;
  float _2695;
  float _2757;
  float _2771;
  float _2772;
  float _2773;
  float _2931;
  float _2932;
  float _2933;

  const float4 tm_flags = float4(
    cb0_046x,
    float(RENODX_WUWA_TM == 1),
    float(RENODX_WUWA_TM == 2),
    float(RENODX_WUWA_TM == 3)
  );

  if (!((uint)(cb0_074w) == 1)) {
    if (!((uint)(cb0_074w) == 2)) {
      if (!((uint)(cb0_074w) == 3)) {
        bool _23 = ((uint)(cb0_074w) == 4);
        _34 = select(_23, 1.0f, 1.7050515413284302f);
        _35 = select(_23, 0.0f, -0.6217905879020691f);
        _36 = select(_23, 0.0f, -0.0832584798336029f);
        _37 = select(_23, 0.0f, -0.13025718927383423f);
        _38 = select(_23, 1.0f, 1.1408027410507202f);
        _39 = select(_23, 0.0f, -0.010548528283834457f);
        _40 = select(_23, 0.0f, -0.024003278464078903f);
        _41 = select(_23, 0.0f, -0.1289687603712082f);
        _42 = select(_23, 1.0f, 1.152971863746643f);
      } else {
        _34 = 0.6954522132873535f;
        _35 = 0.14067870378494263f;
        _36 = 0.16386906802654266f;
        _37 = 0.044794563204050064f;
        _38 = 0.8596711158752441f;
        _39 = 0.0955343171954155f;
        _40 = -0.005525882821530104f;
        _41 = 0.004025210160762072f;
        _42 = 1.0015007257461548f;
      }
    } else {
      _34 = 1.02579927444458f;
      _35 = -0.020052503794431686f;
      _36 = -0.0057713985443115234f;
      _37 = -0.0022350111976265907f;
      _38 = 1.0045825242996216f;
      _39 = -0.002352306619286537f;
      _40 = -0.005014004185795784f;
      _41 = -0.025293385609984398f;
      _42 = 1.0304402112960815f;
    }
  } else {
    _34 = 1.379158854484558f;
    _35 = -0.3088507056236267f;
    _36 = -0.07034677267074585f;
    _37 = -0.06933528929948807f;
    _38 = 1.0822921991348267f;
    _39 = -0.012962047010660172f;
    _40 = -0.002159259282052517f;
    _41 = -0.045465391129255295f;
    _42 = 1.0477596521377563f;
  }
  if ((uint)(uint)(cb0_074z) > (uint)2) {
    float _52 = exp2(log2(_9 * 1.0322580337524414f) * 0.012683313339948654f);
    float _53 = exp2(log2(_10 * 1.0322580337524414f) * 0.012683313339948654f);
    float _54 = exp2(log2(_13 * 0.032258063554763794f) * 0.012683313339948654f);
    _99 = (exp2(log2(max(0.0f, (_52 + -0.8359375f)) / (18.8515625f - (_52 * 18.6875f))) * 6.277394771575928f) * 100.0f);
    _100 = (exp2(log2(max(0.0f, (_53 + -0.8359375f)) / (18.8515625f - (_53 * 18.6875f))) * 6.277394771575928f) * 100.0f);
    _101 = (exp2(log2(max(0.0f, (_54 + -0.8359375f)) / (18.8515625f - (_54 * 18.6875f))) * 6.277394771575928f) * 100.0f);
  } else {
    _99 = ((exp2((_9 * 14.45161247253418f) + -6.07624626159668f) * 0.18000000715255737f) + -0.002667719265446067f);
    _100 = ((exp2((_10 * 14.45161247253418f) + -6.07624626159668f) * 0.18000000715255737f) + -0.002667719265446067f);
    _101 = ((exp2((_13 * 0.4516128897666931f) + -6.07624626159668f) * 0.18000000715255737f) + -0.002667719265446067f);
  }
  float _104 = cb0_047x * 1.0005563497543335f;
  float _118 = select((_104 <= 7000.0f), (((((2967800.0f - (4604438528.0f / cb0_047x)) / _104) + 99.11000061035156f) / _104) + 0.24406300485134125f), (((((1901800.0f - (2005284352.0f / cb0_047x)) / _104) + 247.47999572753906f) / _104) + 0.23703999817371368f));
  float _132 = ((((cb0_047x * 1.2864121856637212e-07f) + 0.00015411825734190643f) * cb0_047x) + 0.8601177334785461f) / ((((cb0_047x * 7.081451371959702e-07f) + 0.0008424202096648514f) * cb0_047x) + 1.0f);
  float _142 = ((((cb0_047x * 4.204816761443908e-08f) + 4.228062607580796e-05f) * cb0_047x) + 0.31739872694015503f) / ((1.0f - (cb0_047x * 2.8974181986995973e-05f)) + ((cb0_047x * cb0_047x) * 1.6145605741257896e-07f));
  float _147 = ((_132 * 2.0f) + 4.0f) - (_142 * 8.0f);
  float _148 = (_132 * 3.0f) / _147;
  float _150 = (_142 * 2.0f) / _147;
  bool _151 = (cb0_047x < 4000.0f);
  float _156 = rsqrt(dot(float2(_132, _142), float2(_132, _142)));
  float _157 = cb0_047y * 0.05000000074505806f;
  float _160 = _132 - ((_157 * _142) * _156);
  float _163 = ((_157 * _132) * _156) + _142;
  float _168 = (4.0f - (_163 * 8.0f)) + (_160 * 2.0f);
  float _174 = (((_160 * 3.0f) / _168) - _148) + select(_151, _148, _118);
  float _175 = (((_163 * 2.0f) / _168) - _150) + select(_151, _150, (((_118 * 2.869999885559082f) + -0.2750000059604645f) - ((_118 * _118) * 3.0f)));
  float _176 = max(_175, 1.000000013351432e-10f);
  float _177 = _174 / _176;
  float _180 = ((1.0f - _174) - _175) / _176;
  float _190 = 0.9413792490959167f / mad(-0.16140000522136688f, _180, ((_177 * 0.8950999975204468f) + 0.266400009393692f));
  float _191 = 1.0404363870620728f / mad(0.03669999912381172f, _180, (1.7135000228881836f - (_177 * 0.7501999735832214f)));
  float _192 = 1.089766502380371f / mad(1.0296000242233276f, _180, ((_177 * 0.03889999911189079f) + -0.06849999725818634f));
  float _193 = mad(_191, -0.7501999735832214f, 0.0f);
  float _194 = mad(_191, 1.7135000228881836f, 0.0f);
  float _195 = mad(_191, 0.03669999912381172f, -0.0f);
  float _196 = mad(_192, 0.03889999911189079f, 0.0f);
  float _197 = mad(_192, -0.06849999725818634f, 0.0f);
  float _198 = mad(_192, 1.0296000242233276f, 0.0f);
  float _201 = mad(0.1599626988172531f, _196, mad(-0.1470542997121811f, _193, (_190 * 0.883457362651825f)));
  float _204 = mad(0.1599626988172531f, _197, mad(-0.1470542997121811f, _194, (_190 * 0.26293492317199707f)));
  float _207 = mad(0.1599626988172531f, _198, mad(-0.1470542997121811f, _195, (_190 * -0.15930065512657166f)));
  float _210 = mad(0.04929120093584061f, _196, mad(0.5183603167533875f, _193, (_190 * 0.38695648312568665f)));
  float _213 = mad(0.04929120093584061f, _197, mad(0.5183603167533875f, _194, (_190 * 0.11516613513231277f)));
  float _216 = mad(0.04929120093584061f, _198, mad(0.5183603167533875f, _195, (_190 * -0.0697740763425827f)));
  float _219 = mad(0.9684867262840271f, _196, mad(0.04004279896616936f, _193, (_190 * -0.007634039502590895f)));
  float _222 = mad(0.9684867262840271f, _197, mad(0.04004279896616936f, _194, (_190 * -0.0022720457054674625f)));
  float _225 = mad(0.9684867262840271f, _198, mad(0.04004279896616936f, _195, (_190 * 0.0013765322510153055f)));
  float _228 = mad(_207, 0.01933390088379383f, mad(_204, 0.2126729041337967f, (_201 * 0.4124563932418823f)));
  float _231 = mad(_207, 0.11919199675321579f, mad(_204, 0.7151522040367126f, (_201 * 0.3575761020183563f)));
  float _234 = mad(_207, 0.9503040909767151f, mad(_204, 0.07217500358819962f, (_201 * 0.18043750524520874f)));
  float _237 = mad(_216, 0.01933390088379383f, mad(_213, 0.2126729041337967f, (_210 * 0.4124563932418823f)));
  float _240 = mad(_216, 0.11919199675321579f, mad(_213, 0.7151522040367126f, (_210 * 0.3575761020183563f)));
  float _243 = mad(_216, 0.9503040909767151f, mad(_213, 0.07217500358819962f, (_210 * 0.18043750524520874f)));
  float _246 = mad(_225, 0.01933390088379383f, mad(_222, 0.2126729041337967f, (_219 * 0.4124563932418823f)));
  float _249 = mad(_225, 0.11919199675321579f, mad(_222, 0.7151522040367126f, (_219 * 0.3575761020183563f)));
  float _252 = mad(_225, 0.9503040909767151f, mad(_222, 0.07217500358819962f, (_219 * 0.18043750524520874f)));
  float _282 = mad(mad(-0.4986107647418976f, _252, mad(-1.5373831987380981f, _243, (_234 * 3.2409698963165283f))), _101, mad(mad(-0.4986107647418976f, _249, mad(-1.5373831987380981f, _240, (_231 * 3.2409698963165283f))), _100, (mad(-0.4986107647418976f, _246, mad(-1.5373831987380981f, _237, (_228 * 3.2409698963165283f))) * _99)));
  float _285 = mad(mad(0.04155505821108818f, _252, mad(1.8759675025939941f, _243, (_234 * -0.9692436456680298f))), _101, mad(mad(0.04155505821108818f, _249, mad(1.8759675025939941f, _240, (_231 * -0.9692436456680298f))), _100, (mad(0.04155505821108818f, _246, mad(1.8759675025939941f, _237, (_228 * -0.9692436456680298f))) * _99)));
  float _288 = mad(mad(1.056971549987793f, _252, mad(-0.20397695899009705f, _243, (_234 * 0.05563008040189743f))), _101, mad(mad(1.056971549987793f, _249, mad(-0.20397695899009705f, _240, (_231 * 0.05563008040189743f))), _100, (mad(1.056971549987793f, _246, mad(-0.20397695899009705f, _237, (_228 * 0.05563008040189743f))) * _99)));
  float _291 = mad(0.04736635088920593f, _288, mad(0.3395121395587921f, _285, (_282 * 0.613191545009613f)));
  float _294 = mad(0.01345000695437193f, _288, mad(0.9163357615470886f, _285, (_282 * 0.07020691782236099f)));
  float _297 = mad(0.8696067929267883f, _288, mad(0.1095672994852066f, _285, (_282 * 0.020618872717022896f)));
  // bool _300 = ((uint)(cb0_046x) == 0);
  bool _300 = ((uint)(tm_flags.x) == 0);
  if (_300) {
    float _302 = dot(float3(_291, _294, _297), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
    float _306 = (_291 / _302) + -1.0f;
    float _307 = (_294 / _302) + -1.0f;
    float _308 = (_297 / _302) + -1.0f;
    float _320 = (1.0f - exp2(((_302 * _302) * -4.0f) * cb0_075y)) * (1.0f - exp2(dot(float3(_306, _307, _308), float3(_306, _307, _308)) * -4.0f));
    _340 = (((mad(-0.06368283927440643f, _297, mad(-0.32929131388664246f, _294, (_291 * 1.370412826538086f))) - _291) * _320) + _291);
    _341 = (((mad(-0.010861567221581936f, _297, mad(1.0970908403396606f, _294, (_291 * -0.08343426138162613f))) - _294) * _320) + _294);
    _342 = (((mad(1.203694462776184f, _297, mad(-0.09862564504146576f, _294, (_291 * -0.02579325996339321f))) - _297) * _320) + _297);
  } else {
    _340 = _291;
    _341 = _294;
    _342 = _297;
  }
  float _343 = dot(float3(_340, _341, _342), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
  float _357 = cb0_052w + cb0_057w;
  float _371 = cb0_051w * cb0_056w;
  float _385 = cb0_050w * cb0_055w;
  float _399 = cb0_049w * cb0_054w;
  float _413 = cb0_048w * cb0_053w;
  float _417 = _340 - _343;
  float _418 = _341 - _343;
  float _419 = _342 - _343;
  float _477 = saturate(_343 / cb0_073x);
  float _481 = (_477 * _477) * (3.0f - (_477 * 2.0f));
  float _482 = 1.0f - _481;
  float _491 = cb0_052w + cb0_067w;
  float _500 = cb0_051w * cb0_066w;
  float _509 = cb0_050w * cb0_065w;
  float _518 = cb0_049w * cb0_064w;
  float _527 = cb0_048w * cb0_063w;
  float _589 = saturate((_343 - cb0_073y) / (1.0f - cb0_073y));
  float _593 = (_589 * _589) * (3.0f - (_589 * 2.0f));
  float _602 = cb0_052w + cb0_062w;
  float _611 = cb0_051w * cb0_061w;
  float _620 = cb0_050w * cb0_060w;
  float _629 = cb0_049w * cb0_059w;
  float _638 = cb0_048w * cb0_058w;
  float _696 = _481 - _593;
  float _707 = ((_593 * (((cb0_052x + cb0_067x) + _491) + (((cb0_051x * cb0_066x) * _500) * exp2(log2(exp2(((cb0_049x * cb0_064x) * _518) * log2(max(0.0f, ((((cb0_048x * cb0_063x) * _527) * _417) + _343)) * 5.55555534362793f)) * 0.18000000715255737f) * (1.0f / ((cb0_050x * cb0_065x) * _509)))))) + (_482 * (((cb0_052x + cb0_057x) + _357) + (((cb0_051x * cb0_056x) * _371) * exp2(log2(exp2(((cb0_049x * cb0_054x) * _399) * log2(max(0.0f, ((((cb0_048x * cb0_053x) * _413) * _417) + _343)) * 5.55555534362793f)) * 0.18000000715255737f) * (1.0f / ((cb0_050x * cb0_055x) * _385))))))) + ((((cb0_052x + cb0_062x) + _602) + (((cb0_051x * cb0_061x) * _611) * exp2(log2(exp2(((cb0_049x * cb0_059x) * _629) * log2(max(0.0f, ((((cb0_048x * cb0_058x) * _638) * _417) + _343)) * 5.55555534362793f)) * 0.18000000715255737f) * (1.0f / ((cb0_050x * cb0_060x) * _620))))) * _696);
  float _709 = ((_593 * (((cb0_052y + cb0_067y) + _491) + (((cb0_051y * cb0_066y) * _500) * exp2(log2(exp2(((cb0_049y * cb0_064y) * _518) * log2(max(0.0f, ((((cb0_048y * cb0_063y) * _527) * _418) + _343)) * 5.55555534362793f)) * 0.18000000715255737f) * (1.0f / ((cb0_050y * cb0_065y) * _509)))))) + (_482 * (((cb0_052y + cb0_057y) + _357) + (((cb0_051y * cb0_056y) * _371) * exp2(log2(exp2(((cb0_049y * cb0_054y) * _399) * log2(max(0.0f, ((((cb0_048y * cb0_053y) * _413) * _418) + _343)) * 5.55555534362793f)) * 0.18000000715255737f) * (1.0f / ((cb0_050y * cb0_055y) * _385))))))) + ((((cb0_052y + cb0_062y) + _602) + (((cb0_051y * cb0_061y) * _611) * exp2(log2(exp2(((cb0_049y * cb0_059y) * _629) * log2(max(0.0f, ((((cb0_048y * cb0_058y) * _638) * _418) + _343)) * 5.55555534362793f)) * 0.18000000715255737f) * (1.0f / ((cb0_050y * cb0_060y) * _620))))) * _696);
  float _711 = ((_593 * (((cb0_052z + cb0_067z) + _491) + (((cb0_051z * cb0_066z) * _500) * exp2(log2(exp2(((cb0_049z * cb0_064z) * _518) * log2(max(0.0f, ((((cb0_048z * cb0_063z) * _527) * _419) + _343)) * 5.55555534362793f)) * 0.18000000715255737f) * (1.0f / ((cb0_050z * cb0_065z) * _509)))))) + (_482 * (((cb0_052z + cb0_057z) + _357) + (((cb0_051z * cb0_056z) * _371) * exp2(log2(exp2(((cb0_049z * cb0_054z) * _399) * log2(max(0.0f, ((((cb0_048z * cb0_053z) * _413) * _419) + _343)) * 5.55555534362793f)) * 0.18000000715255737f) * (1.0f / ((cb0_050z * cb0_055z) * _385))))))) + ((((cb0_052z + cb0_062z) + _602) + (((cb0_051z * cb0_061z) * _611) * exp2(log2(exp2(((cb0_049z * cb0_059z) * _629) * log2(max(0.0f, ((((cb0_048z * cb0_058z) * _638) * _419) + _343)) * 5.55555534362793f)) * 0.18000000715255737f) * (1.0f / ((cb0_050z * cb0_060z) * _620))))) * _696);
  float _737 = dot(float3(_707, _709, _711), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
  float _795 = (cb0_072x + cb0_072w) + ((cb0_071x * cb0_071w) * exp2(log2(exp2((cb0_069x * cb0_069w) * log2(max(0.0f, (((cb0_068x * cb0_068w) * (_707 - _737)) + _737)) * 5.55555534362793f)) * 0.18000000715255737f) * (1.0f / (cb0_070x * cb0_070w))));
  float _796 = (cb0_072y + cb0_072w) + ((cb0_071y * cb0_071w) * exp2(log2(exp2((cb0_069y * cb0_069w) * log2(max(0.0f, (((cb0_068y * cb0_068w) * (_709 - _737)) + _737)) * 5.55555534362793f)) * 0.18000000715255737f) * (1.0f / (cb0_070y * cb0_070w))));
  float _797 = (cb0_072z + cb0_072w) + ((cb0_071z * cb0_071w) * exp2(log2(exp2((cb0_069z * cb0_069w) * log2(max(0.0f, (((cb0_068z * cb0_068w) * (_711 - _737)) + _737)) * 5.55555534362793f)) * 0.18000000715255737f) * (1.0f / (cb0_070z * cb0_070w))));
  float _800 = mad(-0.0832584798336029f, _797, mad(-0.6217905879020691f, _796, (_795 * 1.7050515413284302f)));
  float _803 = mad(-0.010548528283834457f, _797, mad(1.1408027410507202f, _796, (_795 * -0.13025718927383423f)));
  float _806 = mad(1.152971863746643f, _797, mad(-0.1289687603712082f, _796, (_795 * -0.024003278464078903f)));
  float _822 = ((mad(0.061360642313957214f, _797, mad(-4.540197551250458e-09f, _796, (_795 * 0.9386394023895264f))) - _795) * cb0_075x) + _795;
  float _823 = ((mad(0.169205904006958f, _797, mad(0.8307942152023315f, _796, (_795 * 6.775371730327606e-08f))) - _796) * cb0_075x) + _796;
  float _824 = (mad(-2.3283064365386963e-10f, _796, (_795 * -9.313225746154785e-10f)) * cb0_075x) + _797;
  // if ((((uint)(cb0_046z) | (uint)(cb0_046y)) | (uint)(cb0_046w)) == 0) {
  if ((((uint)(tm_flags.z) | (uint)(tm_flags.y)) | (uint)(tm_flags.w)) == 0) {
    float _834 = mad(0.16386905312538147f, _824, mad(0.14067868888378143f, _823, (_822 * 0.6954522132873535f)));
    float _837 = mad(0.0955343246459961f, _824, mad(0.8596711158752441f, _823, (_822 * 0.044794581830501556f)));
    float _840 = mad(1.0015007257461548f, _824, mad(0.004025210160762072f, _823, (_822 * -0.005525882821530104f)));
    float _844 = max(max(_834, _837), _840);
    float _849 = (max(_844, 1.000000013351432e-10f) - max(min(min(_834, _837), _840), 1.000000013351432e-10f)) / max(_844, 0.009999999776482582f);
    float _862 = ((_837 + _834) + _840) + (sqrt((((_840 - _837) * _840) + ((_837 - _834) * _837)) + ((_834 - _840) * _834)) * 1.75f);
    float _863 = _862 * 0.3333333432674408f;
    float _864 = _849 + -0.4000000059604645f;
    float _865 = _864 * 5.0f;
    float _869 = max((1.0f - abs(_864 * 2.5f)), 0.0f);
    float _880 = ((float(((int)(uint)((bool)(_865 > 0.0f))) - ((int)(uint)((bool)(_865 < 0.0f)))) * (1.0f - (_869 * _869))) + 1.0f) * 0.02500000037252903f;
    if (!(_863 <= 0.0533333346247673f)) {
      if (!(_863 >= 0.1599999964237213f)) {
        _889 = (((0.23999999463558197f / _862) + -0.5f) * _880);
      } else {
        _889 = 0.0f;
      }
    } else {
      _889 = _880;
    }
    float _890 = _889 + 1.0f;
    float _891 = _890 * _834;
    float _892 = _890 * _837;
    float _893 = _890 * _840;
    if (!((bool)(_891 == _892) && (bool)(_892 == _893))) {
      float _900 = ((_891 * 2.0f) - _892) - _893;
      float _903 = ((_837 - _840) * 1.7320507764816284f) * _890;
      float _905 = atan(_903 / _900);
      bool _908 = (_900 < 0.0f);
      bool _909 = (_900 == 0.0f);
      bool _910 = (_903 >= 0.0f);
      bool _911 = (_903 < 0.0f);
      _922 = select((_910 && _909), 90.0f, select((_911 && _909), -90.0f, (select((_911 && _908), (_905 + -3.1415927410125732f), select((_910 && _908), (_905 + 3.1415927410125732f), _905)) * 57.2957763671875f)));
    } else {
      _922 = 0.0f;
    }
    float _927 = min(max(select((_922 < 0.0f), (_922 + 360.0f), _922), 0.0f), 360.0f);
    if (_927 < -180.0f) {
      _936 = (_927 + 360.0f);
    } else {
      if (_927 > 180.0f) {
        _936 = (_927 + -360.0f);
      } else {
        _936 = _927;
      }
    }
    float _940 = saturate(1.0f - abs(_936 * 0.014814814552664757f));
    float _944 = (_940 * _940) * (3.0f - (_940 * 2.0f));
    float _950 = ((_944 * _944) * ((_849 * 0.18000000715255737f) * (0.029999999329447746f - _891))) + _891;
    float _960 = max(0.0f, mad(-0.21492856740951538f, _893, mad(-0.2365107536315918f, _892, (_950 * 1.4514392614364624f))));
    float _961 = max(0.0f, mad(-0.09967592358589172f, _893, mad(1.17622971534729f, _892, (_950 * -0.07655377686023712f))));
    float _962 = max(0.0f, mad(0.9977163076400757f, _893, mad(-0.006032449658960104f, _892, (_950 * 0.008316148072481155f))));
    float _963 = dot(float3(_960, _961, _962), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
    float _977 = (cb0_036w + 1.0f) - cb0_036y;
    float _980 = cb0_037x + 1.0f;
    float _982 = _980 - cb0_036z;
    if (cb0_036y > 0.800000011920929f) {
      _1000 = (((0.8199999928474426f - cb0_036y) / cb0_036x) + -0.7447274923324585f);
    } else {
      float _991 = (cb0_036w + 0.18000000715255737f) / _977;
      _1000 = (-0.7447274923324585f - ((log2(_991 / (2.0f - _991)) * 0.3465735912322998f) * (_977 / cb0_036x)));
    }
    float _1003 = ((1.0f - cb0_036y) / cb0_036x) - _1000;
    float _1005 = (cb0_036z / cb0_036x) - _1003;
    float _1009 = log2(lerp(_963, _960, 0.9599999785423279f)) * 0.3010300099849701f;
    float _1010 = log2(lerp(_963, _961, 0.9599999785423279f)) * 0.3010300099849701f;
    float _1011 = log2(lerp(_963, _962, 0.9599999785423279f)) * 0.3010300099849701f;
    float _1015 = cb0_036x * (_1009 + _1003);
    float _1016 = cb0_036x * (_1010 + _1003);
    float _1017 = cb0_036x * (_1011 + _1003);
    float _1018 = _977 * 2.0f;
    float _1020 = (cb0_036x * -2.0f) / _977;
    float _1021 = _1009 - _1000;
    float _1022 = _1010 - _1000;
    float _1023 = _1011 - _1000;
    float _1042 = _982 * 2.0f;
    float _1044 = (cb0_036x * 2.0f) / _982;
    float _1069 = select((_1009 < _1000), ((_1018 / (exp2((_1021 * 1.4426950216293335f) * _1020) + 1.0f)) - cb0_036w), _1015);
    float _1070 = select((_1010 < _1000), ((_1018 / (exp2((_1022 * 1.4426950216293335f) * _1020) + 1.0f)) - cb0_036w), _1016);
    float _1071 = select((_1011 < _1000), ((_1018 / (exp2((_1023 * 1.4426950216293335f) * _1020) + 1.0f)) - cb0_036w), _1017);
    float _1078 = _1005 - _1000;
    float _1082 = saturate(_1021 / _1078);
    float _1083 = saturate(_1022 / _1078);
    float _1084 = saturate(_1023 / _1078);
    bool _1085 = (_1005 < _1000);
    float _1089 = select(_1085, (1.0f - _1082), _1082);
    float _1090 = select(_1085, (1.0f - _1083), _1083);
    float _1091 = select(_1085, (1.0f - _1084), _1084);
    float _1110 = (((_1089 * _1089) * (select((_1009 > _1005), (_980 - (_1042 / (exp2(((_1009 - _1005) * 1.4426950216293335f) * _1044) + 1.0f))), _1015) - _1069)) * (3.0f - (_1089 * 2.0f))) + _1069;
    float _1111 = (((_1090 * _1090) * (select((_1010 > _1005), (_980 - (_1042 / (exp2(((_1010 - _1005) * 1.4426950216293335f) * _1044) + 1.0f))), _1016) - _1070)) * (3.0f - (_1090 * 2.0f))) + _1070;
    float _1112 = (((_1091 * _1091) * (select((_1011 > _1005), (_980 - (_1042 / (exp2(((_1011 - _1005) * 1.4426950216293335f) * _1044) + 1.0f))), _1017) - _1071)) * (3.0f - (_1091 * 2.0f))) + _1071;
    float _1113 = dot(float3(_1110, _1111, _1112), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
    _1137 = ((cb0_075z * (max(0.0f, (lerp(_1113, _1110, 0.9300000071525574f))) - _822)) + _822);
    _1138 = ((cb0_075z * (max(0.0f, (lerp(_1113, _1111, 0.9300000071525574f))) - _823)) + _823);
    _1139 = ((cb0_075z * (max(0.0f, (lerp(_1113, _1112, 0.9300000071525574f))) - _824)) + _824);
  } else {
    _1137 = _822;
    _1138 = _823;
    _1139 = _824;
  }
  float _1155 = ((mad(-0.06537103652954102f, _1139, mad(1.451815478503704e-06f, _1138, (_1137 * 1.065374732017517f))) - _1137) * cb0_075x) + _1137;
  float _1156 = ((mad(-0.20366770029067993f, _1139, mad(1.2036634683609009f, _1138, (_1137 * -2.57161445915699e-07f))) - _1138) * cb0_075x) + _1138;
  float _1157 = ((mad(0.9999996423721313f, _1139, mad(2.0954757928848267e-08f, _1138, (_1137 * 1.862645149230957e-08f))) - _1139) * cb0_075x) + _1139;
  [branch]
  if (!_300) {
    float _1200 = 1.0f / (dot(float3(_800, _803, _806), float3(cb0_033x, cb0_033y, cb0_033z)) + 1.0f);
    float _1210 = max(0.0f, (((_1200 * cb0_035x) + cb0_034x) * dot(float3(_800, _803, _806), float3(cb0_028x, cb0_028y, cb0_028z))));
    float _1211 = max(0.0f, (((_1200 * cb0_035y) + cb0_034y) * dot(float3(_800, _803, _806), float3(cb0_029x, cb0_029y, cb0_029z))));
    float _1212 = max(0.0f, (((_1200 * cb0_035z) + cb0_034z) * dot(float3(_800, _803, _806), float3(cb0_030x, cb0_030y, cb0_030z))));
    float _1218 = max(0.0f, (cb0_031x - _1210));
    float _1219 = max(0.0f, (cb0_031x - _1211));
    float _1220 = max(0.0f, (cb0_031x - _1212));
    float _1222 = max(_1210, cb0_031z);
    float _1223 = max(_1211, cb0_031z);
    float _1224 = max(_1212, cb0_031z);
    _1282 = (((((((cb0_032x * _1222) + cb0_032y) * (1.0f / (cb0_031w + _1222))) + -0.0020000000949949026f) + (cb0_030w * min(max(_1210, cb0_031x), cb0_031z))) + ((cb0_028w * _1218) * (1.0f / (cb0_031y + _1218)))) + cb0_029w);
    _1283 = ((((((1.0f / (cb0_031w + _1223)) * ((cb0_032x * _1223) + cb0_032y)) + -0.0020000000949949026f) + (cb0_030w * min(max(_1211, cb0_031x), cb0_031z))) + ((cb0_028w * _1219) * (1.0f / (cb0_031y + _1219)))) + cb0_029w);
    _1284 = ((((((1.0f / (cb0_031w + _1224)) * ((cb0_032x * _1224) + cb0_032y)) + -0.0020000000949949026f) + (cb0_030w * min(max(_1212, cb0_031x), cb0_031z))) + ((cb0_028w * _1220) * (1.0f / (cb0_031y + _1220)))) + cb0_029w);
  } else {
    _1282 = max(0.0f, mad(-0.0832584798336029f, _1157, mad(-0.6217905879020691f, _1156, (_1155 * 1.7050515413284302f))));
    _1283 = max(0.0f, mad(-0.010548528283834457f, _1157, mad(1.1408027410507202f, _1156, (_1155 * -0.13025718927383423f))));
    _1284 = max(0.0f, mad(1.152971863746643f, _1157, mad(-0.1289687603712082f, _1156, (_1155 * -0.024003278464078903f))));
  }
  float _1285 = saturate(_1282);
  float _1286 = saturate(_1283);
  float _1287 = saturate(_1284);
  if (_1285 < 0.0031306699384003878f) {
    _1298 = (_1285 * 12.920000076293945f);
  } else {
    _1298 = (((pow(_1285, 0.4166666567325592f)) * 1.0549999475479126f) + -0.054999999701976776f);
  }
  if (_1286 < 0.0031306699384003878f) {
    _1309 = (_1286 * 12.920000076293945f);
  } else {
    _1309 = (((pow(_1286, 0.4166666567325592f)) * 1.0549999475479126f) + -0.054999999701976776f);
  }
  if (_1287 < 0.0031306699384003878f) {
    _1320 = (_1287 * 12.920000076293945f);
  } else {
    _1320 = (((pow(_1287, 0.4166666567325592f)) * 1.0549999475479126f) + -0.054999999701976776f);
  }
  float _1324 = (_1309 * 0.9375f) + 0.03125f;
  float _1332 = _1320 * 15.0f;
  float _1333 = floor(_1332);
  float _1334 = _1332 - _1333;
  float _1336 = (_1333 + ((_1298 * 0.9375f) + 0.03125f)) * 0.0625f;
  float4 _1337 = t0.Sample(s0, float2(_1336, _1324));
  float _1341 = _1336 + 0.0625f;
  float4 _1342 = t0.Sample(s0, float2(_1341, _1324));
  float4 _1363 = t1.Sample(s1, float2(_1336, _1324));
  float4 _1367 = t1.Sample(s1, float2(_1341, _1324));
  float _1386 = max(6.103519990574569e-05f, ((((lerp(_1337.x, _1342.x, _1334)) * cb0_041x) + (cb0_040x * _1298)) + ((lerp(_1363.x, _1367.x, _1334)) * cb0_042x)));
  float _1387 = max(6.103519990574569e-05f, ((((lerp(_1337.y, _1342.y, _1334)) * cb0_041x) + (cb0_040x * _1309)) + ((lerp(_1363.y, _1367.y, _1334)) * cb0_042x)));
  float _1388 = max(6.103519990574569e-05f, ((((lerp(_1337.z, _1342.z, _1334)) * cb0_041x) + (cb0_040x * _1320)) + ((lerp(_1363.z, _1367.z, _1334)) * cb0_042x)));
  float _1410 = select((_1386 > 0.040449999272823334f), exp2(log2((_1386 * 0.9478672742843628f) + 0.05213269963860512f) * 2.4000000953674316f), (_1386 * 0.07739938050508499f));
  float _1411 = select((_1387 > 0.040449999272823334f), exp2(log2((_1387 * 0.9478672742843628f) + 0.05213269963860512f) * 2.4000000953674316f), (_1387 * 0.07739938050508499f));
  float _1412 = select((_1388 > 0.040449999272823334f), exp2(log2((_1388 * 0.9478672742843628f) + 0.05213269963860512f) * 2.4000000953674316f), (_1388 * 0.07739938050508499f));
  float _1438 = cb0_044y * (((cb0_026y + (cb0_026x * _1410)) * _1410) + cb0_026z);
  float _1439 = cb0_044z * (((cb0_026y + (cb0_026x * _1411)) * _1411) + cb0_026z);
  float _1440 = cb0_044w * (((cb0_026y + (cb0_026x * _1412)) * _1412) + cb0_026z);
  float _1447 = ((cb0_045x - _1438) * cb0_045w) + _1438;
  float _1448 = ((cb0_045y - _1439) * cb0_045w) + _1439;
  float _1449 = ((cb0_045z - _1440) * cb0_045w) + _1440;
  float _1450 = cb0_044y * _800;
  float _1451 = cb0_044z * _803;
  float _1452 = cb0_044w * _806;
  float _1459 = ((cb0_045x - _1450) * cb0_045w) + _1450;
  float _1460 = ((cb0_045y - _1451) * cb0_045w) + _1451;
  float _1461 = ((cb0_045z - _1452) * cb0_045w) + _1452;
  float _1473 = exp2(log2(max(0.0f, _1447)) * cb0_027y);
  float _1474 = exp2(log2(max(0.0f, _1448)) * cb0_027y);
  float _1475 = exp2(log2(max(0.0f, _1449)) * cb0_027y);

  SV_Target.rgb = GenerateLUTOutput(float3(_1473, _1474, _1475));
  SV_Target.a   = 0;
  return SV_Target;

  [branch]
  if ((uint)(cb0_074z) == 0) {
    if (_1473 < 0.0031306699384003878f) {
      _1490 = (_1473 * 12.920000076293945f);
    } else {
      _1490 = (((pow(_1473, 0.4166666567325592f)) * 1.0549999475479126f) + -0.054999999701976776f);
    }
    if (_1474 < 0.0031306699384003878f) {
      _1501 = (_1474 * 12.920000076293945f);
    } else {
      _1501 = (((pow(_1474, 0.4166666567325592f)) * 1.0549999475479126f) + -0.054999999701976776f);
    }
    if (_1475 < 0.0031306699384003878f) {
      _2931 = _1490;
      _2932 = _1501;
      _2933 = (_1475 * 12.920000076293945f);
    } else {
      _2931 = _1490;
      _2932 = _1501;
      _2933 = (((pow(_1475, 0.4166666567325592f)) * 1.0549999475479126f) + -0.054999999701976776f);
    }
  } else {
    if ((uint)(cb0_074z) == 1) {
      float _1516 = mad(0.04736635088920593f, _1475, mad(0.3395121395587921f, _1474, (_1473 * 0.613191545009613f)));
      float _1519 = mad(0.01345000695437193f, _1475, mad(0.9163357615470886f, _1474, (_1473 * 0.07020691782236099f)));
      float _1522 = mad(0.8696067929267883f, _1475, mad(0.1095672994852066f, _1474, (_1473 * 0.020618872717022896f)));
      float _1532 = max(6.103519990574569e-05f, mad(_36, _1522, mad(_35, _1519, (_1516 * _34))));
      float _1533 = max(6.103519990574569e-05f, mad(_39, _1522, mad(_38, _1519, (_1516 * _37))));
      float _1534 = max(6.103519990574569e-05f, mad(_42, _1522, mad(_41, _1519, (_1516 * _40))));
      _2931 = min((_1532 * 4.5f), ((exp2(log2(max(_1532, 0.017999999225139618f)) * 0.44999998807907104f) * 1.0989999771118164f) + -0.0989999994635582f));
      _2932 = min((_1533 * 4.5f), ((exp2(log2(max(_1533, 0.017999999225139618f)) * 0.44999998807907104f) * 1.0989999771118164f) + -0.0989999994635582f));
      _2933 = min((_1534 * 4.5f), ((exp2(log2(max(_1534, 0.017999999225139618f)) * 0.44999998807907104f) * 1.0989999771118164f) + -0.0989999994635582f));
    } else {
      bool _1561 = ((uint)(cb0_074z) == 5);
      if ((bool)((uint)(cb0_074z) == 3) || _1561) {
        float _1564 = _1460 * 3.0f;
        float _1565 = _1461 * 3.0f;
        float _1568 = mad(0.17733481526374817f, _1565, mad(0.38297808170318604f, _1564, (_1459 * 1.31910240650177f)));
        float _1571 = mad(0.09676162153482437f, _1565, mad(0.8134231567382812f, _1564, (_1459 * 0.2693769633769989f)));
        float _1574 = mad(0.870704174041748f, _1565, mad(0.11154405772686005f, _1564, (_1459 * 0.05263196676969528f)));
        float _1578 = max(max(_1568, _1571), _1574);
        float _1583 = (max(_1578, 1.000000013351432e-10f) - max(min(min(_1568, _1571), _1574), 1.000000013351432e-10f)) / max(_1578, 0.009999999776482582f);
        float _1596 = ((_1571 + _1568) + _1574) + (sqrt((((_1574 - _1571) * _1574) + ((_1571 - _1568) * _1571)) + ((_1568 - _1574) * _1568)) * 1.75f);
        float _1597 = _1596 * 0.3333333432674408f;
        float _1598 = _1583 + -0.4000000059604645f;
        float _1599 = _1598 * 5.0f;
        float _1603 = max((1.0f - abs(_1598 * 2.5f)), 0.0f);
        float _1614 = ((float(((int)(uint)((bool)(_1599 > 0.0f))) - ((int)(uint)((bool)(_1599 < 0.0f)))) * (1.0f - (_1603 * _1603))) + 1.0f) * 0.02500000037252903f;
        if (!(_1597 <= 0.0533333346247673f)) {
          if (!(_1597 >= 0.1599999964237213f)) {
            _1623 = (((0.23999999463558197f / _1596) + -0.5f) * _1614);
          } else {
            _1623 = 0.0f;
          }
        } else {
          _1623 = _1614;
        }
        float _1624 = _1623 + 1.0f;
        float _1625 = _1624 * _1568;
        float _1626 = _1624 * _1571;
        float _1627 = _1624 * _1574;
        if (!((bool)(_1625 == _1626) && (bool)(_1626 == _1627))) {
          float _1634 = ((_1625 * 2.0f) - _1626) - _1627;
          float _1637 = ((_1571 - _1574) * 1.7320507764816284f) * _1624;
          float _1639 = atan(_1637 / _1634);
          bool _1642 = (_1634 < 0.0f);
          bool _1643 = (_1634 == 0.0f);
          bool _1644 = (_1637 >= 0.0f);
          bool _1645 = (_1637 < 0.0f);
          _1656 = select((_1644 && _1643), 90.0f, select((_1645 && _1643), -90.0f, (select((_1645 && _1642), (_1639 + -3.1415927410125732f), select((_1644 && _1642), (_1639 + 3.1415927410125732f), _1639)) * 57.2957763671875f)));
        } else {
          _1656 = 0.0f;
        }
        float _1661 = min(max(select((_1656 < 0.0f), (_1656 + 360.0f), _1656), 0.0f), 360.0f);
        if (_1661 < -180.0f) {
          _1670 = (_1661 + 360.0f);
        } else {
          if (_1661 > 180.0f) {
            _1670 = (_1661 + -360.0f);
          } else {
            _1670 = _1661;
          }
        }
        if ((bool)(_1670 > -67.5f) && (bool)(_1670 < 67.5f)) {
          float _1676 = (_1670 + 67.5f) * 0.029629629105329514f;
          int _1677 = int(_1676);
          float _1679 = _1676 - float(_1677);
          float _1680 = _1679 * _1679;
          float _1681 = _1680 * _1679;
          if (_1677 == 3) {
            _1709 = (((0.1666666716337204f - (_1679 * 0.5f)) + (_1680 * 0.5f)) - (_1681 * 0.1666666716337204f));
          } else {
            if (_1677 == 2) {
              _1709 = ((0.6666666865348816f - _1680) + (_1681 * 0.5f));
            } else {
              if (_1677 == 1) {
                _1709 = (((_1681 * -0.5f) + 0.1666666716337204f) + ((_1680 + _1679) * 0.5f));
              } else {
                _1709 = select((_1677 == 0), (_1681 * 0.1666666716337204f), 0.0f);
              }
            }
          }
        } else {
          _1709 = 0.0f;
        }
        float _1718 = min(max(((((_1583 * 0.27000001072883606f) * (0.029999999329447746f - _1625)) * _1709) + _1625), 0.0f), 65535.0f);
        float _1719 = min(max(_1626, 0.0f), 65535.0f);
        float _1720 = min(max(_1627, 0.0f), 65535.0f);
        float _1733 = min(max(mad(-0.21492856740951538f, _1720, mad(-0.2365107536315918f, _1719, (_1718 * 1.4514392614364624f))), 0.0f), 65535.0f);
        float _1734 = min(max(mad(-0.09967592358589172f, _1720, mad(1.17622971534729f, _1719, (_1718 * -0.07655377686023712f))), 0.0f), 65535.0f);
        float _1735 = min(max(mad(0.9977163076400757f, _1720, mad(-0.006032449658960104f, _1719, (_1718 * 0.008316148072481155f))), 0.0f), 65535.0f);
        float _1736 = dot(float3(_1733, _1734, _1735), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
        float _1743 = ((_1733 - _1736) * 0.9599999785423279f) + _1736;
        float _1744 = ((_1734 - _1736) * 0.9599999785423279f) + _1736;
        float _1745 = ((_1735 - _1736) * 0.9599999785423279f) + _1736;
        float _1748 = log2(select((_1743 <= 0.0f), 6.103515625e-05f, _1743));
        float _1749 = _1748 * 0.3010300099849701f;
        if (!(_1749 <= -5.2601776123046875f)) {
          if ((bool)(_1749 > -5.2601776123046875f) && (bool)(_1749 < -0.7447274923324585f)) {
            float _1757 = (_1748 * 0.19999998807907104f) + 3.494786262512207f;
            int _1758 = int(_1757);
            float _1760 = _1757 - float(_1758);
            float _1762 = _global_0[_1758];
            float _1765 = _global_0[(_1758 + 1)];
            float _1770 = _1762 * 0.5f;
            _1802 = dot(float3((_1760 * _1760), _1760, 1.0f), float3(mad((_global_0[(_1758 + 2)]), 0.5f, mad(_1765, -1.0f, _1770)), (_1765 - _1762), mad(_1765, 0.5f, _1770)));
          } else {
            if ((bool)(_1749 >= -0.7447274923324585f) && (bool)(_1749 < 4.673812389373779f)) {
              float _1782 = (_1748 * 0.1666666567325592f) + 0.4123218357563019f;
              int _1783 = int(_1782);
              float _1785 = _1782 - float(_1783);
              float _1787 = _global_1[_1783];
              float _1790 = _global_1[(_1783 + 1)];
              float _1795 = _1787 * 0.5f;
              _1802 = dot(float3((_1785 * _1785), _1785, 1.0f), float3(mad((_global_1[(_1783 + 2)]), 0.5f, mad(_1790, -1.0f, _1795)), (_1790 - _1787), mad(_1790, 0.5f, _1795)));
            } else {
              _1802 = 4.0f;
            }
          }
        } else {
          _1802 = -4.0f;
        }
        float _1804 = exp2(_1802 * 3.321928024291992f);
        float _1807 = log2(select((_1744 <= 0.0f), 6.103515625e-05f, _1744));
        float _1808 = _1807 * 0.3010300099849701f;
        if (!(_1808 <= -5.2601776123046875f)) {
          if ((bool)(_1808 > -5.2601776123046875f) && (bool)(_1808 < -0.7447274923324585f)) {
            float _1816 = (_1807 * 0.19999998807907104f) + 3.494786262512207f;
            int _1817 = int(_1816);
            float _1819 = _1816 - float(_1817);
            float _1821 = _global_0[_1817];
            float _1824 = _global_0[(_1817 + 1)];
            float _1829 = _1821 * 0.5f;
            _1861 = dot(float3((_1819 * _1819), _1819, 1.0f), float3(mad((_global_0[(_1817 + 2)]), 0.5f, mad(_1824, -1.0f, _1829)), (_1824 - _1821), mad(_1824, 0.5f, _1829)));
          } else {
            if ((bool)(_1808 >= -0.7447274923324585f) && (bool)(_1808 < 4.673812389373779f)) {
              float _1841 = (_1807 * 0.1666666567325592f) + 0.4123218357563019f;
              int _1842 = int(_1841);
              float _1844 = _1841 - float(_1842);
              float _1846 = _global_1[_1842];
              float _1849 = _global_1[(_1842 + 1)];
              float _1854 = _1846 * 0.5f;
              _1861 = dot(float3((_1844 * _1844), _1844, 1.0f), float3(mad((_global_1[(_1842 + 2)]), 0.5f, mad(_1849, -1.0f, _1854)), (_1849 - _1846), mad(_1849, 0.5f, _1854)));
            } else {
              _1861 = 4.0f;
            }
          }
        } else {
          _1861 = -4.0f;
        }
        float _1863 = exp2(_1861 * 3.321928024291992f);
        float _1866 = log2(select((_1745 <= 0.0f), 6.103515625e-05f, _1745));
        float _1867 = _1866 * 0.3010300099849701f;
        if (!(_1867 <= -5.2601776123046875f)) {
          if ((bool)(_1867 > -5.2601776123046875f) && (bool)(_1867 < -0.7447274923324585f)) {
            float _1875 = (_1866 * 0.19999998807907104f) + 3.494786262512207f;
            int _1876 = int(_1875);
            float _1878 = _1875 - float(_1876);
            float _1880 = _global_0[_1876];
            float _1883 = _global_0[(_1876 + 1)];
            float _1888 = _1880 * 0.5f;
            _1920 = dot(float3((_1878 * _1878), _1878, 1.0f), float3(mad((_global_0[(_1876 + 2)]), 0.5f, mad(_1883, -1.0f, _1888)), (_1883 - _1880), mad(_1883, 0.5f, _1888)));
          } else {
            if ((bool)(_1867 >= -0.7447274923324585f) && (bool)(_1867 < 4.673812389373779f)) {
              float _1900 = (_1866 * 0.1666666567325592f) + 0.4123218357563019f;
              int _1901 = int(_1900);
              float _1903 = _1900 - float(_1901);
              float _1905 = _global_1[_1901];
              float _1908 = _global_1[(_1901 + 1)];
              float _1913 = _1905 * 0.5f;
              _1920 = dot(float3((_1903 * _1903), _1903, 1.0f), float3(mad((_global_1[(_1901 + 2)]), 0.5f, mad(_1908, -1.0f, _1913)), (_1908 - _1905), mad(_1908, 0.5f, _1913)));
            } else {
              _1920 = 4.0f;
            }
          }
        } else {
          _1920 = -4.0f;
        }
        float _1922 = exp2(_1920 * 3.321928024291992f);
        float _1925 = mad(0.16386906802654266f, _1922, mad(0.14067870378494263f, _1863, (_1804 * 0.6954522132873535f)));
        float _1928 = mad(0.0955343171954155f, _1922, mad(0.8596711158752441f, _1863, (_1804 * 0.044794563204050064f)));
        float _1931 = mad(1.0015007257461548f, _1922, mad(0.004025210160762072f, _1863, (_1804 * -0.005525882821530104f)));
        float _1934 = mad(-0.21492856740951538f, _1931, mad(-0.2365107536315918f, _1928, (_1925 * 1.4514392614364624f)));
        float _1937 = mad(-0.09967592358589172f, _1931, mad(1.17622971534729f, _1928, (_1925 * -0.07655377686023712f)));
        float _1940 = mad(0.9977163076400757f, _1931, mad(-0.006032449658960104f, _1928, (_1925 * 0.008316148072481155f)));
        float _1943 = log2(select((_1934 <= 0.0f), 9.999999747378752e-05f, _1934));
        float _1944 = _1943 * 0.3010300099849701f;
        if (!(!(_1944 <= -3.848327875137329f))) {
          _2003 = ((_1943 * 0.9030900001525879f) + 7.54498291015625f);
        } else {
          if ((bool)(_1944 > -3.848327875137329f) && (bool)(_1944 < 0.6812411546707153f)) {
            float _1955 = (_1943 + 12.783867835998535f) * 0.46521204710006714f;
            int _1956 = int(_1955);
            float _1958 = _1955 - float(_1956);
            float _1960 = _global_2[_1956];
            float _1963 = _global_2[(_1956 + 1)];
            float _1968 = _1960 * 0.5f;
            _2003 = dot(float3((_1958 * _1958), _1958, 1.0f), float3(mad((_global_2[(_1956 + 2)]), 0.5f, mad(_1963, -1.0f, _1968)), (_1963 - _1960), mad(_1963, 0.5f, _1968)));
          } else {
            if ((bool)(_1944 >= 0.6812411546707153f) && (bool)(_1944 < 3.653702974319458f)) {
              float _1980 = (_1943 + -2.2630341053009033f) * 0.7089107632637024f;
              int _1981 = int(_1980);
              float _1983 = _1980 - float(_1981);
              float _1985 = _global_3[_1981];
              float _1988 = _global_3[(_1981 + 1)];
              float _1993 = _1985 * 0.5f;
              _2003 = dot(float3((_1983 * _1983), _1983, 1.0f), float3(mad((_global_3[(_1981 + 2)]), 0.5f, mad(_1988, -1.0f, _1993)), (_1988 - _1985), mad(_1988, 0.5f, _1993)));
            } else {
              _2003 = ((_1943 * 0.018061799928545952f) + 2.780777931213379f);
            }
          }
        }
        float _2008 = log2(select((_1937 <= 0.0f), 9.999999747378752e-05f, _1937));
        float _2009 = _2008 * 0.3010300099849701f;
        if (!(!(_2009 <= -3.848327875137329f))) {
          _2068 = ((_2008 * 0.9030900001525879f) + 7.54498291015625f);
        } else {
          if ((bool)(_2009 > -3.848327875137329f) && (bool)(_2009 < 0.6812411546707153f)) {
            float _2020 = (_2008 + 12.783867835998535f) * 0.46521204710006714f;
            int _2021 = int(_2020);
            float _2023 = _2020 - float(_2021);
            float _2025 = _global_2[_2021];
            float _2028 = _global_2[(_2021 + 1)];
            float _2033 = _2025 * 0.5f;
            _2068 = dot(float3((_2023 * _2023), _2023, 1.0f), float3(mad((_global_2[(_2021 + 2)]), 0.5f, mad(_2028, -1.0f, _2033)), (_2028 - _2025), mad(_2028, 0.5f, _2033)));
          } else {
            if ((bool)(_2009 >= 0.6812411546707153f) && (bool)(_2009 < 3.653702974319458f)) {
              float _2045 = (_2008 + -2.2630341053009033f) * 0.7089107632637024f;
              int _2046 = int(_2045);
              float _2048 = _2045 - float(_2046);
              float _2050 = _global_3[_2046];
              float _2053 = _global_3[(_2046 + 1)];
              float _2058 = _2050 * 0.5f;
              _2068 = dot(float3((_2048 * _2048), _2048, 1.0f), float3(mad((_global_3[(_2046 + 2)]), 0.5f, mad(_2053, -1.0f, _2058)), (_2053 - _2050), mad(_2053, 0.5f, _2058)));
            } else {
              _2068 = ((_2008 * 0.018061799928545952f) + 2.780777931213379f);
            }
          }
        }
        float _2073 = log2(select((_1940 <= 0.0f), 9.999999747378752e-05f, _1940));
        float _2074 = _2073 * 0.3010300099849701f;
        if (!(!(_2074 <= -3.848327875137329f))) {
          _2133 = ((_2073 * 0.9030900001525879f) + 7.54498291015625f);
        } else {
          if ((bool)(_2074 > -3.848327875137329f) && (bool)(_2074 < 0.6812411546707153f)) {
            float _2085 = (_2073 + 12.783867835998535f) * 0.46521204710006714f;
            int _2086 = int(_2085);
            float _2088 = _2085 - float(_2086);
            float _2090 = _global_2[_2086];
            float _2093 = _global_2[(_2086 + 1)];
            float _2098 = _2090 * 0.5f;
            _2133 = dot(float3((_2088 * _2088), _2088, 1.0f), float3(mad((_global_2[(_2086 + 2)]), 0.5f, mad(_2093, -1.0f, _2098)), (_2093 - _2090), mad(_2093, 0.5f, _2098)));
          } else {
            if ((bool)(_2074 >= 0.6812411546707153f) && (bool)(_2074 < 3.653702974319458f)) {
              float _2110 = (_2073 + -2.2630341053009033f) * 0.7089107632637024f;
              int _2111 = int(_2110);
              float _2113 = _2110 - float(_2111);
              float _2115 = _global_3[_2111];
              float _2118 = _global_3[(_2111 + 1)];
              float _2123 = _2115 * 0.5f;
              _2133 = dot(float3((_2113 * _2113), _2113, 1.0f), float3(mad((_global_3[(_2111 + 2)]), 0.5f, mad(_2118, -1.0f, _2123)), (_2118 - _2115), mad(_2118, 0.5f, _2123)));
            } else {
              _2133 = ((_2073 * 0.018061799928545952f) + 2.780777931213379f);
            }
          }
        }
        float _2136 = exp2(_2003 * 3.321928024291992f) + -3.507384462864138e-05f;
        float _2137 = exp2(_2068 * 3.321928024291992f) + -3.507384462864138e-05f;
        float _2138 = exp2(_2133 * 3.321928024291992f) + -3.507384462864138e-05f;
        if (!_1561) {
          _2150 = mad(_36, _2138, mad(_35, _2137, (_2136 * _34)));
          _2151 = mad(_39, _2138, mad(_38, _2137, (_2136 * _37)));
          _2152 = mad(_42, _2138, mad(_41, _2137, (_2136 * _40)));
        } else {
          _2150 = _2136;
          _2151 = _2137;
          _2152 = _2138;
        }
        float _2162 = exp2(log2(_2150 * 9.999999747378752e-05f) * 0.1593017578125f);
        float _2163 = exp2(log2(_2151 * 9.999999747378752e-05f) * 0.1593017578125f);
        float _2164 = exp2(log2(_2152 * 9.999999747378752e-05f) * 0.1593017578125f);
        _2931 = exp2(log2((1.0f / ((_2162 * 18.6875f) + 1.0f)) * ((_2162 * 18.8515625f) + 0.8359375f)) * 78.84375f);
        _2932 = exp2(log2((1.0f / ((_2163 * 18.6875f) + 1.0f)) * ((_2163 * 18.8515625f) + 0.8359375f)) * 78.84375f);
        _2933 = exp2(log2((1.0f / ((_2164 * 18.6875f) + 1.0f)) * ((_2164 * 18.8515625f) + 0.8359375f)) * 78.84375f);
      } else {
        if (((uint)(cb0_074z) & -3) == 4) {
          float _2197 = _1460 * 3.0f;
          float _2198 = _1461 * 3.0f;
          float _2201 = mad(0.17733481526374817f, _2198, mad(0.38297808170318604f, _2197, (_1459 * 1.31910240650177f)));
          float _2204 = mad(0.09676162153482437f, _2198, mad(0.8134231567382812f, _2197, (_1459 * 0.2693769633769989f)));
          float _2207 = mad(0.870704174041748f, _2198, mad(0.11154405772686005f, _2197, (_1459 * 0.05263196676969528f)));
          float _2211 = max(max(_2201, _2204), _2207);
          float _2216 = (max(_2211, 1.000000013351432e-10f) - max(min(min(_2201, _2204), _2207), 1.000000013351432e-10f)) / max(_2211, 0.009999999776482582f);
          float _2229 = ((_2204 + _2201) + _2207) + (sqrt((((_2207 - _2204) * _2207) + ((_2204 - _2201) * _2204)) + ((_2201 - _2207) * _2201)) * 1.75f);
          float _2230 = _2229 * 0.3333333432674408f;
          float _2231 = _2216 + -0.4000000059604645f;
          float _2232 = _2231 * 5.0f;
          float _2236 = max((1.0f - abs(_2231 * 2.5f)), 0.0f);
          float _2247 = ((float(((int)(uint)((bool)(_2232 > 0.0f))) - ((int)(uint)((bool)(_2232 < 0.0f)))) * (1.0f - (_2236 * _2236))) + 1.0f) * 0.02500000037252903f;
          if (!(_2230 <= 0.0533333346247673f)) {
            if (!(_2230 >= 0.1599999964237213f)) {
              _2256 = (((0.23999999463558197f / _2229) + -0.5f) * _2247);
            } else {
              _2256 = 0.0f;
            }
          } else {
            _2256 = _2247;
          }
          float _2257 = _2256 + 1.0f;
          float _2258 = _2257 * _2201;
          float _2259 = _2257 * _2204;
          float _2260 = _2257 * _2207;
          if (!((bool)(_2258 == _2259) && (bool)(_2259 == _2260))) {
            float _2267 = ((_2258 * 2.0f) - _2259) - _2260;
            float _2270 = ((_2204 - _2207) * 1.7320507764816284f) * _2257;
            float _2272 = atan(_2270 / _2267);
            bool _2275 = (_2267 < 0.0f);
            bool _2276 = (_2267 == 0.0f);
            bool _2277 = (_2270 >= 0.0f);
            bool _2278 = (_2270 < 0.0f);
            _2289 = select((_2277 && _2276), 90.0f, select((_2278 && _2276), -90.0f, (select((_2278 && _2275), (_2272 + -3.1415927410125732f), select((_2277 && _2275), (_2272 + 3.1415927410125732f), _2272)) * 57.2957763671875f)));
          } else {
            _2289 = 0.0f;
          }
          float _2294 = min(max(select((_2289 < 0.0f), (_2289 + 360.0f), _2289), 0.0f), 360.0f);
          if (_2294 < -180.0f) {
            _2303 = (_2294 + 360.0f);
          } else {
            if (_2294 > 180.0f) {
              _2303 = (_2294 + -360.0f);
            } else {
              _2303 = _2294;
            }
          }
          if ((bool)(_2303 > -67.5f) && (bool)(_2303 < 67.5f)) {
            float _2309 = (_2303 + 67.5f) * 0.029629629105329514f;
            int _2310 = int(_2309);
            float _2312 = _2309 - float(_2310);
            float _2313 = _2312 * _2312;
            float _2314 = _2313 * _2312;
            if (_2310 == 3) {
              _2342 = (((0.1666666716337204f - (_2312 * 0.5f)) + (_2313 * 0.5f)) - (_2314 * 0.1666666716337204f));
            } else {
              if (_2310 == 2) {
                _2342 = ((0.6666666865348816f - _2313) + (_2314 * 0.5f));
              } else {
                if (_2310 == 1) {
                  _2342 = (((_2314 * -0.5f) + 0.1666666716337204f) + ((_2313 + _2312) * 0.5f));
                } else {
                  _2342 = select((_2310 == 0), (_2314 * 0.1666666716337204f), 0.0f);
                }
              }
            }
          } else {
            _2342 = 0.0f;
          }
          float _2351 = min(max(((((_2216 * 0.27000001072883606f) * (0.029999999329447746f - _2258)) * _2342) + _2258), 0.0f), 65535.0f);
          float _2352 = min(max(_2259, 0.0f), 65535.0f);
          float _2353 = min(max(_2260, 0.0f), 65535.0f);
          float _2366 = min(max(mad(-0.21492856740951538f, _2353, mad(-0.2365107536315918f, _2352, (_2351 * 1.4514392614364624f))), 0.0f), 65535.0f);
          float _2367 = min(max(mad(-0.09967592358589172f, _2353, mad(1.17622971534729f, _2352, (_2351 * -0.07655377686023712f))), 0.0f), 65535.0f);
          float _2368 = min(max(mad(0.9977163076400757f, _2353, mad(-0.006032449658960104f, _2352, (_2351 * 0.008316148072481155f))), 0.0f), 65535.0f);
          float _2369 = dot(float3(_2366, _2367, _2368), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
          float _2376 = ((_2366 - _2369) * 0.9599999785423279f) + _2369;
          float _2377 = ((_2367 - _2369) * 0.9599999785423279f) + _2369;
          float _2378 = ((_2368 - _2369) * 0.9599999785423279f) + _2369;
          float _2381 = log2(select((_2376 <= 0.0f), 6.103515625e-05f, _2376));
          float _2382 = _2381 * 0.3010300099849701f;
          if (!(_2382 <= -5.2601776123046875f)) {
            if ((bool)(_2382 > -5.2601776123046875f) && (bool)(_2382 < -0.7447274923324585f)) {
              float _2390 = (_2381 * 0.19999998807907104f) + 3.494786262512207f;
              int _2391 = int(_2390);
              float _2393 = _2390 - float(_2391);
              float _2395 = _global_0[_2391];
              float _2398 = _global_0[(_2391 + 1)];
              float _2403 = _2395 * 0.5f;
              _2435 = dot(float3((_2393 * _2393), _2393, 1.0f), float3(mad((_global_0[(_2391 + 2)]), 0.5f, mad(_2398, -1.0f, _2403)), (_2398 - _2395), mad(_2398, 0.5f, _2403)));
            } else {
              if ((bool)(_2382 >= -0.7447274923324585f) && (bool)(_2382 < 4.673812389373779f)) {
                float _2415 = (_2381 * 0.1666666567325592f) + 0.4123218357563019f;
                int _2416 = int(_2415);
                float _2418 = _2415 - float(_2416);
                float _2420 = _global_1[_2416];
                float _2423 = _global_1[(_2416 + 1)];
                float _2428 = _2420 * 0.5f;
                _2435 = dot(float3((_2418 * _2418), _2418, 1.0f), float3(mad((_global_1[(_2416 + 2)]), 0.5f, mad(_2423, -1.0f, _2428)), (_2423 - _2420), mad(_2423, 0.5f, _2428)));
              } else {
                _2435 = 4.0f;
              }
            }
          } else {
            _2435 = -4.0f;
          }
          float _2437 = exp2(_2435 * 3.321928024291992f);
          float _2440 = log2(select((_2377 <= 0.0f), 6.103515625e-05f, _2377));
          float _2441 = _2440 * 0.3010300099849701f;
          if (!(_2441 <= -5.2601776123046875f)) {
            if ((bool)(_2441 > -5.2601776123046875f) && (bool)(_2441 < -0.7447274923324585f)) {
              float _2449 = (_2440 * 0.19999998807907104f) + 3.494786262512207f;
              int _2450 = int(_2449);
              float _2452 = _2449 - float(_2450);
              float _2454 = _global_0[_2450];
              float _2457 = _global_0[(_2450 + 1)];
              float _2462 = _2454 * 0.5f;
              _2494 = dot(float3((_2452 * _2452), _2452, 1.0f), float3(mad((_global_0[(_2450 + 2)]), 0.5f, mad(_2457, -1.0f, _2462)), (_2457 - _2454), mad(_2457, 0.5f, _2462)));
            } else {
              if ((bool)(_2441 >= -0.7447274923324585f) && (bool)(_2441 < 4.673812389373779f)) {
                float _2474 = (_2440 * 0.1666666567325592f) + 0.4123218357563019f;
                int _2475 = int(_2474);
                float _2477 = _2474 - float(_2475);
                float _2479 = _global_1[_2475];
                float _2482 = _global_1[(_2475 + 1)];
                float _2487 = _2479 * 0.5f;
                _2494 = dot(float3((_2477 * _2477), _2477, 1.0f), float3(mad((_global_1[(_2475 + 2)]), 0.5f, mad(_2482, -1.0f, _2487)), (_2482 - _2479), mad(_2482, 0.5f, _2487)));
              } else {
                _2494 = 4.0f;
              }
            }
          } else {
            _2494 = -4.0f;
          }
          float _2496 = exp2(_2494 * 3.321928024291992f);
          float _2499 = log2(select((_2378 <= 0.0f), 6.103515625e-05f, _2378));
          float _2500 = _2499 * 0.3010300099849701f;
          if (!(_2500 <= -5.2601776123046875f)) {
            if ((bool)(_2500 > -5.2601776123046875f) && (bool)(_2500 < -0.7447274923324585f)) {
              float _2508 = (_2499 * 0.19999998807907104f) + 3.494786262512207f;
              int _2509 = int(_2508);
              float _2511 = _2508 - float(_2509);
              float _2513 = _global_0[_2509];
              float _2516 = _global_0[(_2509 + 1)];
              float _2521 = _2513 * 0.5f;
              _2553 = dot(float3((_2511 * _2511), _2511, 1.0f), float3(mad((_global_0[(_2509 + 2)]), 0.5f, mad(_2516, -1.0f, _2521)), (_2516 - _2513), mad(_2516, 0.5f, _2521)));
            } else {
              if ((bool)(_2500 >= -0.7447274923324585f) && (bool)(_2500 < 4.673812389373779f)) {
                float _2533 = (_2499 * 0.1666666567325592f) + 0.4123218357563019f;
                int _2534 = int(_2533);
                float _2536 = _2533 - float(_2534);
                float _2538 = _global_1[_2534];
                float _2541 = _global_1[(_2534 + 1)];
                float _2546 = _2538 * 0.5f;
                _2553 = dot(float3((_2536 * _2536), _2536, 1.0f), float3(mad((_global_1[(_2534 + 2)]), 0.5f, mad(_2541, -1.0f, _2546)), (_2541 - _2538), mad(_2541, 0.5f, _2546)));
              } else {
                _2553 = 4.0f;
              }
            }
          } else {
            _2553 = -4.0f;
          }
          float _2555 = exp2(_2553 * 3.321928024291992f);
          float _2558 = mad(0.16386906802654266f, _2555, mad(0.14067870378494263f, _2496, (_2437 * 0.6954522132873535f)));
          float _2561 = mad(0.0955343171954155f, _2555, mad(0.8596711158752441f, _2496, (_2437 * 0.044794563204050064f)));
          float _2564 = mad(1.0015007257461548f, _2555, mad(0.004025210160762072f, _2496, (_2437 * -0.005525882821530104f)));
          float _2567 = mad(-0.21492856740951538f, _2564, mad(-0.2365107536315918f, _2561, (_2558 * 1.4514392614364624f)));
          float _2570 = mad(-0.09967592358589172f, _2564, mad(1.17622971534729f, _2561, (_2558 * -0.07655377686023712f)));
          float _2573 = mad(0.9977163076400757f, _2564, mad(-0.006032449658960104f, _2561, (_2558 * 0.008316148072481155f)));
          float _2576 = log2(select((_2567 <= 0.0f), 9.999999747378752e-05f, _2567));
          float _2577 = _2576 * 0.3010300099849701f;
          if (!(_2577 <= -3.848327875137329f)) {
            if ((bool)(_2577 > -3.848327875137329f) && (bool)(_2577 < 0.6812411546707153f)) {
              float _2585 = (_2576 + 12.783867835998535f) * 0.46521204710006714f;
              int _2586 = int(_2585);
              float _2588 = _2585 - float(_2586);
              float _2590 = _global_4[_2586];
              float _2593 = _global_4[(_2586 + 1)];
              float _2598 = _2590 * 0.5f;
              _2633 = dot(float3((_2588 * _2588), _2588, 1.0f), float3(mad((_global_4[(_2586 + 2)]), 0.5f, mad(_2593, -1.0f, _2598)), (_2593 - _2590), mad(_2593, 0.5f, _2598)));
            } else {
              if ((bool)(_2577 >= 0.6812411546707153f) && (bool)(_2577 < 3.7613162994384766f)) {
                float _2610 = (_2576 + -2.2630341053009033f) * 0.6841424107551575f;
                int _2611 = int(_2610);
                float _2613 = _2610 - float(_2611);
                float _2615 = _global_5[_2611];
                float _2618 = _global_5[(_2611 + 1)];
                float _2623 = _2615 * 0.5f;
                _2633 = dot(float3((_2613 * _2613), _2613, 1.0f), float3(mad((_global_5[(_2611 + 2)]), 0.5f, mad(_2618, -1.0f, _2623)), (_2618 - _2615), mad(_2618, 0.5f, _2623)));
              } else {
                _2633 = ((_2576 * 0.036123599857091904f) + 2.849672317504883f);
              }
            }
          } else {
            _2633 = -2.301030158996582f;
          }
          float _2635 = exp2(_2633 * 3.321928024291992f);
          float _2638 = log2(select((_2570 <= 0.0f), 9.999999747378752e-05f, _2570));
          float _2639 = _2638 * 0.3010300099849701f;
          if (!(_2639 <= -3.848327875137329f)) {
            if ((bool)(_2639 > -3.848327875137329f) && (bool)(_2639 < 0.6812411546707153f)) {
              float _2647 = (_2638 + 12.783867835998535f) * 0.46521204710006714f;
              int _2648 = int(_2647);
              float _2650 = _2647 - float(_2648);
              float _2652 = _global_4[_2648];
              float _2655 = _global_4[(_2648 + 1)];
              float _2660 = _2652 * 0.5f;
              _2695 = dot(float3((_2650 * _2650), _2650, 1.0f), float3(mad((_global_4[(_2648 + 2)]), 0.5f, mad(_2655, -1.0f, _2660)), (_2655 - _2652), mad(_2655, 0.5f, _2660)));
            } else {
              if ((bool)(_2639 >= 0.6812411546707153f) && (bool)(_2639 < 3.7613162994384766f)) {
                float _2672 = (_2638 + -2.2630341053009033f) * 0.6841424107551575f;
                int _2673 = int(_2672);
                float _2675 = _2672 - float(_2673);
                float _2677 = _global_5[_2673];
                float _2680 = _global_5[(_2673 + 1)];
                float _2685 = _2677 * 0.5f;
                _2695 = dot(float3((_2675 * _2675), _2675, 1.0f), float3(mad((_global_5[(_2673 + 2)]), 0.5f, mad(_2680, -1.0f, _2685)), (_2680 - _2677), mad(_2680, 0.5f, _2685)));
              } else {
                _2695 = ((_2638 * 0.036123599857091904f) + 2.849672317504883f);
              }
            }
          } else {
            _2695 = -2.301030158996582f;
          }
          float _2697 = exp2(_2695 * 3.321928024291992f);
          float _2700 = log2(select((_2573 <= 0.0f), 9.999999747378752e-05f, _2573));
          float _2701 = _2700 * 0.3010300099849701f;
          if (!(_2701 <= -3.848327875137329f)) {
            if ((bool)(_2701 > -3.848327875137329f) && (bool)(_2701 < 0.6812411546707153f)) {
              float _2709 = (_2700 + 12.783867835998535f) * 0.46521204710006714f;
              int _2710 = int(_2709);
              float _2712 = _2709 - float(_2710);
              float _2714 = _global_4[_2710];
              float _2717 = _global_4[(_2710 + 1)];
              float _2722 = _2714 * 0.5f;
              _2757 = dot(float3((_2712 * _2712), _2712, 1.0f), float3(mad((_global_4[(_2710 + 2)]), 0.5f, mad(_2717, -1.0f, _2722)), (_2717 - _2714), mad(_2717, 0.5f, _2722)));
            } else {
              if ((bool)(_2701 >= 0.6812411546707153f) && (bool)(_2701 < 3.7613162994384766f)) {
                float _2734 = (_2700 + -2.2630341053009033f) * 0.6841424107551575f;
                int _2735 = int(_2734);
                float _2737 = _2734 - float(_2735);
                float _2739 = _global_5[_2735];
                float _2742 = _global_5[(_2735 + 1)];
                float _2747 = _2739 * 0.5f;
                _2757 = dot(float3((_2737 * _2737), _2737, 1.0f), float3(mad((_global_5[(_2735 + 2)]), 0.5f, mad(_2742, -1.0f, _2747)), (_2742 - _2739), mad(_2742, 0.5f, _2747)));
              } else {
                _2757 = ((_2700 * 0.036123599857091904f) + 2.849672317504883f);
              }
            }
          } else {
            _2757 = -2.301030158996582f;
          }
          float _2759 = exp2(_2757 * 3.321928024291992f);
          if (!((uint)(cb0_074z) == 6)) {
            _2771 = mad(_36, _2759, mad(_35, _2697, (_2635 * _34)));
            _2772 = mad(_39, _2759, mad(_38, _2697, (_2635 * _37)));
            _2773 = mad(_42, _2759, mad(_41, _2697, (_2635 * _40)));
          } else {
            _2771 = _2635;
            _2772 = _2697;
            _2773 = _2759;
          }
          float _2783 = exp2(log2(_2771 * 9.999999747378752e-05f) * 0.1593017578125f);
          float _2784 = exp2(log2(_2772 * 9.999999747378752e-05f) * 0.1593017578125f);
          float _2785 = exp2(log2(_2773 * 9.999999747378752e-05f) * 0.1593017578125f);
          _2931 = exp2(log2((1.0f / ((_2783 * 18.6875f) + 1.0f)) * ((_2783 * 18.8515625f) + 0.8359375f)) * 78.84375f);
          _2932 = exp2(log2((1.0f / ((_2784 * 18.6875f) + 1.0f)) * ((_2784 * 18.8515625f) + 0.8359375f)) * 78.84375f);
          _2933 = exp2(log2((1.0f / ((_2785 * 18.6875f) + 1.0f)) * ((_2785 * 18.8515625f) + 0.8359375f)) * 78.84375f);
        } else {
          if ((uint)(cb0_074z) == 7) {
            float _2818 = mad(0.04736635088920593f, _1461, mad(0.3395121395587921f, _1460, (_1459 * 0.613191545009613f)));
            float _2821 = mad(0.01345000695437193f, _1461, mad(0.9163357615470886f, _1460, (_1459 * 0.07020691782236099f)));
            float _2824 = mad(0.8696067929267883f, _1461, mad(0.1095672994852066f, _1460, (_1459 * 0.020618872717022896f)));
            float _2843 = exp2(log2(mad(_36, _2824, mad(_35, _2821, (_2818 * _34))) * 9.999999747378752e-05f) * 0.1593017578125f);
            float _2844 = exp2(log2(mad(_39, _2824, mad(_38, _2821, (_2818 * _37))) * 9.999999747378752e-05f) * 0.1593017578125f);
            float _2845 = exp2(log2(mad(_42, _2824, mad(_41, _2821, (_2818 * _40))) * 9.999999747378752e-05f) * 0.1593017578125f);
            _2931 = exp2(log2((1.0f / ((_2843 * 18.6875f) + 1.0f)) * ((_2843 * 18.8515625f) + 0.8359375f)) * 78.84375f);
            _2932 = exp2(log2((1.0f / ((_2844 * 18.6875f) + 1.0f)) * ((_2844 * 18.8515625f) + 0.8359375f)) * 78.84375f);
            _2933 = exp2(log2((1.0f / ((_2845 * 18.6875f) + 1.0f)) * ((_2845 * 18.8515625f) + 0.8359375f)) * 78.84375f);
          } else {
            if (!((uint)(cb0_074z) == 8)) {
              if ((uint)(cb0_074z) == 9) {
                float _2880 = mad(0.04736635088920593f, _1449, mad(0.3395121395587921f, _1448, (_1447 * 0.613191545009613f)));
                float _2883 = mad(0.01345000695437193f, _1449, mad(0.9163357615470886f, _1448, (_1447 * 0.07020691782236099f)));
                float _2886 = mad(0.8696067929267883f, _1449, mad(0.1095672994852066f, _1448, (_1447 * 0.020618872717022896f)));
                _2931 = mad(_36, _2886, mad(_35, _2883, (_2880 * _34)));
                _2932 = mad(_39, _2886, mad(_38, _2883, (_2880 * _37)));
                _2933 = mad(_42, _2886, mad(_41, _2883, (_2880 * _40)));
              } else {
                float _2899 = mad(0.04736635088920593f, _1475, mad(0.3395121395587921f, _1474, (_1473 * 0.613191545009613f)));
                float _2902 = mad(0.01345000695437193f, _1475, mad(0.9163357615470886f, _1474, (_1473 * 0.07020691782236099f)));
                float _2905 = mad(0.8696067929267883f, _1475, mad(0.1095672994852066f, _1474, (_1473 * 0.020618872717022896f)));
                float _2920 = ((0.4545454680919647f - cb0_027z) * cb0_038w) + cb0_027z;
                _2931 = exp2(_2920 * log2(mad(_36, _2905, mad(_35, _2902, (_2899 * _34)))));
                _2932 = exp2(_2920 * log2(mad(_39, _2905, mad(_38, _2902, (_2899 * _37)))));
                _2933 = exp2(_2920 * log2(mad(_42, _2905, mad(_41, _2902, (_2899 * _40)))));
              }
            } else {
              _2931 = _1459;
              _2932 = _1460;
              _2933 = _1461;
            }
          }
        }
      }
    }
  }
  SV_Target.x = (_2931 * 0.9523810148239136f);
  SV_Target.y = (_2932 * 0.9523810148239136f);
  SV_Target.z = (_2933 * 0.9523810148239136f);
  SV_Target.w = 0.0f;
  return SV_Target;
}
