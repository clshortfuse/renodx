#include "../common.hlsl"

Texture2D<float4> t0 : register(t0);

Texture2D<float4> t1 : register(t1);

cbuffer cb0 : register(b0) {
  float cb0_026x : packoffset(c026.x);
  float cb0_026y : packoffset(c026.y);
  float cb0_026z : packoffset(c026.z);
  float cb0_027y : packoffset(c027.y);
  float cb0_027z : packoffset(c027.z);
  float cb0_028x : packoffset(c028.x);
  float cb0_028y : packoffset(c028.y);
  float cb0_028z : packoffset(c028.z);
  float cb0_028w : packoffset(c028.w);
  float cb0_029x : packoffset(c029.x);
  float cb0_029y : packoffset(c029.y);
  float cb0_029z : packoffset(c029.z);
  float cb0_029w : packoffset(c029.w);
  float cb0_030x : packoffset(c030.x);
  float cb0_030y : packoffset(c030.y);
  float cb0_030z : packoffset(c030.z);
  float cb0_030w : packoffset(c030.w);
  float cb0_031x : packoffset(c031.x);
  float cb0_031y : packoffset(c031.y);
  float cb0_031z : packoffset(c031.z);
  float cb0_031w : packoffset(c031.w);
  float cb0_032x : packoffset(c032.x);
  float cb0_032y : packoffset(c032.y);
  float cb0_033x : packoffset(c033.x);
  float cb0_033y : packoffset(c033.y);
  float cb0_033z : packoffset(c033.z);
  float cb0_034x : packoffset(c034.x);
  float cb0_034y : packoffset(c034.y);
  float cb0_034z : packoffset(c034.z);
  float cb0_035x : packoffset(c035.x);
  float cb0_035y : packoffset(c035.y);
  float cb0_035z : packoffset(c035.z);
  float cb0_036x : packoffset(c036.x);
  float cb0_036y : packoffset(c036.y);
  float cb0_036z : packoffset(c036.z);
  float cb0_036w : packoffset(c036.w);
  float cb0_037x : packoffset(c037.x);
  float cb0_038w : packoffset(c038.w);
  float cb0_040x : packoffset(c040.x);
  float cb0_041x : packoffset(c041.x);
  float cb0_042x : packoffset(c042.x);
  float cb0_044y : packoffset(c044.y);
  float cb0_044z : packoffset(c044.z);
  float cb0_044w : packoffset(c044.w);
  float cb0_045x : packoffset(c045.x);
  float cb0_045y : packoffset(c045.y);
  float cb0_045z : packoffset(c045.z);
  float cb0_045w : packoffset(c045.w);
  uint cb0_046x : packoffset(c046.x);
  uint cb0_046y : packoffset(c046.y);
  uint cb0_046z : packoffset(c046.z);
  uint cb0_046w : packoffset(c046.w);
  float cb0_047x : packoffset(c047.x);
  float cb0_047y : packoffset(c047.y);
  float cb0_048x : packoffset(c048.x);
  float cb0_048y : packoffset(c048.y);
  float cb0_048z : packoffset(c048.z);
  float cb0_048w : packoffset(c048.w);
  float cb0_049x : packoffset(c049.x);
  float cb0_049y : packoffset(c049.y);
  float cb0_049z : packoffset(c049.z);
  float cb0_049w : packoffset(c049.w);
  float cb0_050x : packoffset(c050.x);
  float cb0_050y : packoffset(c050.y);
  float cb0_050z : packoffset(c050.z);
  float cb0_050w : packoffset(c050.w);
  float cb0_051x : packoffset(c051.x);
  float cb0_051y : packoffset(c051.y);
  float cb0_051z : packoffset(c051.z);
  float cb0_051w : packoffset(c051.w);
  float cb0_052x : packoffset(c052.x);
  float cb0_052y : packoffset(c052.y);
  float cb0_052z : packoffset(c052.z);
  float cb0_052w : packoffset(c052.w);
  float cb0_053x : packoffset(c053.x);
  float cb0_053y : packoffset(c053.y);
  float cb0_053z : packoffset(c053.z);
  float cb0_053w : packoffset(c053.w);
  float cb0_054x : packoffset(c054.x);
  float cb0_054y : packoffset(c054.y);
  float cb0_054z : packoffset(c054.z);
  float cb0_054w : packoffset(c054.w);
  float cb0_055x : packoffset(c055.x);
  float cb0_055y : packoffset(c055.y);
  float cb0_055z : packoffset(c055.z);
  float cb0_055w : packoffset(c055.w);
  float cb0_056x : packoffset(c056.x);
  float cb0_056y : packoffset(c056.y);
  float cb0_056z : packoffset(c056.z);
  float cb0_056w : packoffset(c056.w);
  float cb0_057x : packoffset(c057.x);
  float cb0_057y : packoffset(c057.y);
  float cb0_057z : packoffset(c057.z);
  float cb0_057w : packoffset(c057.w);
  float cb0_058x : packoffset(c058.x);
  float cb0_058y : packoffset(c058.y);
  float cb0_058z : packoffset(c058.z);
  float cb0_058w : packoffset(c058.w);
  float cb0_059x : packoffset(c059.x);
  float cb0_059y : packoffset(c059.y);
  float cb0_059z : packoffset(c059.z);
  float cb0_059w : packoffset(c059.w);
  float cb0_060x : packoffset(c060.x);
  float cb0_060y : packoffset(c060.y);
  float cb0_060z : packoffset(c060.z);
  float cb0_060w : packoffset(c060.w);
  float cb0_061x : packoffset(c061.x);
  float cb0_061y : packoffset(c061.y);
  float cb0_061z : packoffset(c061.z);
  float cb0_061w : packoffset(c061.w);
  float cb0_062x : packoffset(c062.x);
  float cb0_062y : packoffset(c062.y);
  float cb0_062z : packoffset(c062.z);
  float cb0_062w : packoffset(c062.w);
  float cb0_063x : packoffset(c063.x);
  float cb0_063y : packoffset(c063.y);
  float cb0_063z : packoffset(c063.z);
  float cb0_063w : packoffset(c063.w);
  float cb0_064x : packoffset(c064.x);
  float cb0_064y : packoffset(c064.y);
  float cb0_064z : packoffset(c064.z);
  float cb0_064w : packoffset(c064.w);
  float cb0_065x : packoffset(c065.x);
  float cb0_065y : packoffset(c065.y);
  float cb0_065z : packoffset(c065.z);
  float cb0_065w : packoffset(c065.w);
  float cb0_066x : packoffset(c066.x);
  float cb0_066y : packoffset(c066.y);
  float cb0_066z : packoffset(c066.z);
  float cb0_066w : packoffset(c066.w);
  float cb0_067x : packoffset(c067.x);
  float cb0_067y : packoffset(c067.y);
  float cb0_067z : packoffset(c067.z);
  float cb0_067w : packoffset(c067.w);
  float cb0_068x : packoffset(c068.x);
  float cb0_068y : packoffset(c068.y);
  float cb0_068z : packoffset(c068.z);
  float cb0_068w : packoffset(c068.w);
  float cb0_069x : packoffset(c069.x);
  float cb0_069y : packoffset(c069.y);
  float cb0_069z : packoffset(c069.z);
  float cb0_069w : packoffset(c069.w);
  float cb0_070x : packoffset(c070.x);
  float cb0_070y : packoffset(c070.y);
  float cb0_070z : packoffset(c070.z);
  float cb0_070w : packoffset(c070.w);
  float cb0_071x : packoffset(c071.x);
  float cb0_071y : packoffset(c071.y);
  float cb0_071z : packoffset(c071.z);
  float cb0_071w : packoffset(c071.w);
  float cb0_072x : packoffset(c072.x);
  float cb0_072y : packoffset(c072.y);
  float cb0_072z : packoffset(c072.z);
  float cb0_072w : packoffset(c072.w);
  float cb0_073x : packoffset(c073.x);
  float cb0_073y : packoffset(c073.y);
  uint cb0_074x : packoffset(c074.x);
  uint cb0_074y : packoffset(c074.y);
  float cb0_074z : packoffset(c074.z);
  float cb0_074w : packoffset(c074.w);
  float cb0_075x : packoffset(c075.x);
};

SamplerState s0 : register(s0);

SamplerState s1 : register(s1);

static const float _global_0[6] = { -4.0f, -4.0f, -3.157376527786255f, -0.48524999618530273f, 1.847732424736023f, 1.847732424736023f };
static const float _global_1[6] = { -0.7185482382774353f, 2.0810306072235107f, 3.668124198913574f, 4.0f, 4.0f, 4.0f };
static const float _global_2[10] = { -4.9706220626831055f, -3.0293781757354736f, -2.126199960708618f, -1.5104999542236328f, -1.057800054550171f, -0.4668000042438507f, 0.11937999725341797f, 0.7088134288787842f, 1.2911865711212158f, 1.2911865711212158f };
static const float _global_3[10] = { 0.8089132308959961f, 1.191086769104004f, 1.5683000087738037f, 1.9483000040054321f, 2.308300018310547f, 2.638400077819824f, 2.859499931335449f, 2.9872608184814453f, 3.0127391815185547f, 3.0127391815185547f };
static const float _global_4[10] = { -2.301029920578003f, -2.301029920578003f, -1.9312000274658203f, -1.5204999446868896f, -1.057800054550171f, -0.4668000042438507f, 0.11937999725341797f, 0.7088134288787842f, 1.2911865711212158f, 1.2911865711212158f };
static const float _global_5[10] = { 0.8019952178001404f, 1.1980048418045044f, 1.5943000316619873f, 1.9973000288009644f, 2.3782999515533447f, 2.768399953842163f, 3.051500082015991f, 3.2746293544769287f, 3.3274307250976562f, 3.3274307250976562f };

float4 main(
  noperspective float2 TEXCOORD : TEXCOORD,
  noperspective float4 SV_Position : SV_Position,
  nointerpolation uint SV_RenderTargetArrayIndex : SV_RenderTargetArrayIndex
) : SV_Target {
  float4 SV_Target;
  float _9 = TEXCOORD.x + -0.015625f;
  float _10 = TEXCOORD.y + -0.015625f;
  float _13 = float((uint)SV_RenderTargetArrayIndex);
  float _34;
  float _35;
  float _36;
  float _37;
  float _38;
  float _39;
  float _40;
  float _41;
  float _42;
  float _99;
  float _100;
  float _101;
  float _340;
  float _341;
  float _342;
  float _889;
  float _922;
  float _936;
  float _1000;
  float _1138;
  float _1139;
  float _1140;
  float _1283;
  float _1284;
  float _1285;
  float _1299;
  float _1310;
  float _1321;
  float _1491;
  float _1502;
  float _1624;
  float _1657;
  float _1671;
  float _1710;
  float _1803;
  float _1862;
  float _1921;
  float _2004;
  float _2069;
  float _2134;
  float _2151;
  float _2152;
  float _2153;
  float _2257;
  float _2290;
  float _2304;
  float _2343;
  float _2436;
  float _2495;
  float _2554;
  float _2634;
  float _2696;
  float _2758;
  float _2772;
  float _2773;
  float _2774;
  float _2932;
  float _2933;
  float _2934;

  const float4 tm_flags = float4(
    cb0_046x,
    float(RENODX_WUWA_TM == 1),
    float(RENODX_WUWA_TM == 2),
    float(RENODX_WUWA_TM == 3)
  );

  if (!((uint)(cb0_074y) == 1)) {
    if (!((uint)(cb0_074y) == 2)) {
      if (!((uint)(cb0_074y) == 3)) {
        bool _23 = ((uint)(cb0_074y) == 4);
        _34 = select(_23, 1.0f, 1.7050515413284302f);
        _35 = select(_23, 0.0f, -0.6217905879020691f);
        _36 = select(_23, 0.0f, -0.0832584798336029f);
        _37 = select(_23, 0.0f, -0.13025718927383423f);
        _38 = select(_23, 1.0f, 1.1408027410507202f);
        _39 = select(_23, 0.0f, -0.010548528283834457f);
        _40 = select(_23, 0.0f, -0.024003278464078903f);
        _41 = select(_23, 0.0f, -0.1289687603712082f);
        _42 = select(_23, 1.0f, 1.152971863746643f);
      } else {
        _34 = 0.6954522132873535f;
        _35 = 0.14067870378494263f;
        _36 = 0.16386906802654266f;
        _37 = 0.044794563204050064f;
        _38 = 0.8596711158752441f;
        _39 = 0.0955343171954155f;
        _40 = -0.005525882821530104f;
        _41 = 0.004025210160762072f;
        _42 = 1.0015007257461548f;
      }
    } else {
      _34 = 1.02579927444458f;
      _35 = -0.020052503794431686f;
      _36 = -0.0057713985443115234f;
      _37 = -0.0022350111976265907f;
      _38 = 1.0045825242996216f;
      _39 = -0.002352306619286537f;
      _40 = -0.005014004185795784f;
      _41 = -0.025293385609984398f;
      _42 = 1.0304402112960815f;
    }
  } else {
    _34 = 1.379158854484558f;
    _35 = -0.3088507056236267f;
    _36 = -0.07034677267074585f;
    _37 = -0.06933528929948807f;
    _38 = 1.0822921991348267f;
    _39 = -0.012962047010660172f;
    _40 = -0.002159259282052517f;
    _41 = -0.045465391129255295f;
    _42 = 1.0477596521377563f;
  }
  if ((uint)(uint)(cb0_074x) > (uint)2) {
    float _52 = exp2(log2(_9 * 1.0322580337524414f) * 0.012683313339948654f);
    float _53 = exp2(log2(_10 * 1.0322580337524414f) * 0.012683313339948654f);
    float _54 = exp2(log2(_13 * 0.032258063554763794f) * 0.012683313339948654f);
    _99 = (exp2(log2(max(0.0f, (_52 + -0.8359375f)) / (18.8515625f - (_52 * 18.6875f))) * 6.277394771575928f) * 100.0f);
    _100 = (exp2(log2(max(0.0f, (_53 + -0.8359375f)) / (18.8515625f - (_53 * 18.6875f))) * 6.277394771575928f) * 100.0f);
    _101 = (exp2(log2(max(0.0f, (_54 + -0.8359375f)) / (18.8515625f - (_54 * 18.6875f))) * 6.277394771575928f) * 100.0f);
  } else {
    _99 = ((exp2((_9 * 14.45161247253418f) + -6.07624626159668f) * 0.18000000715255737f) + -0.002667719265446067f);
    _100 = ((exp2((_10 * 14.45161247253418f) + -6.07624626159668f) * 0.18000000715255737f) + -0.002667719265446067f);
    _101 = ((exp2((_13 * 0.4516128897666931f) + -6.07624626159668f) * 0.18000000715255737f) + -0.002667719265446067f);
  }
  float _104 = cb0_047x * 1.0005563497543335f;
  float _118 = select((_104 <= 7000.0f), (((((2967800.0f - (4604438528.0f / cb0_047x)) / _104) + 99.11000061035156f) / _104) + 0.24406300485134125f), (((((1901800.0f - (2005284352.0f / cb0_047x)) / _104) + 247.47999572753906f) / _104) + 0.23703999817371368f));
  float _132 = ((((cb0_047x * 1.2864121856637212e-07f) + 0.00015411825734190643f) * cb0_047x) + 0.8601177334785461f) / ((((cb0_047x * 7.081451371959702e-07f) + 0.0008424202096648514f) * cb0_047x) + 1.0f);
  float _142 = ((((cb0_047x * 4.204816761443908e-08f) + 4.228062607580796e-05f) * cb0_047x) + 0.31739872694015503f) / ((1.0f - (cb0_047x * 2.8974181986995973e-05f)) + ((cb0_047x * cb0_047x) * 1.6145605741257896e-07f));
  float _147 = ((_132 * 2.0f) + 4.0f) - (_142 * 8.0f);
  float _148 = (_132 * 3.0f) / _147;
  float _150 = (_142 * 2.0f) / _147;
  bool _151 = (cb0_047x < 4000.0f);
  float _156 = rsqrt(dot(float2(_132, _142), float2(_132, _142)));
  float _157 = cb0_047y * 0.05000000074505806f;
  float _160 = _132 - ((_157 * _142) * _156);
  float _163 = ((_157 * _132) * _156) + _142;
  float _168 = (4.0f - (_163 * 8.0f)) + (_160 * 2.0f);
  float _174 = (((_160 * 3.0f) / _168) - _148) + select(_151, _148, _118);
  float _175 = (((_163 * 2.0f) / _168) - _150) + select(_151, _150, (((_118 * 2.869999885559082f) + -0.2750000059604645f) - ((_118 * _118) * 3.0f)));
  float _176 = max(_175, 1.000000013351432e-10f);
  float _177 = _174 / _176;
  float _180 = ((1.0f - _174) - _175) / _176;
  float _190 = 0.9413792490959167f / mad(-0.16140000522136688f, _180, ((_177 * 0.8950999975204468f) + 0.266400009393692f));
  float _191 = 1.0404363870620728f / mad(0.03669999912381172f, _180, (1.7135000228881836f - (_177 * 0.7501999735832214f)));
  float _192 = 1.089766502380371f / mad(1.0296000242233276f, _180, ((_177 * 0.03889999911189079f) + -0.06849999725818634f));
  float _193 = mad(_191, -0.7501999735832214f, 0.0f);
  float _194 = mad(_191, 1.7135000228881836f, 0.0f);
  float _195 = mad(_191, 0.03669999912381172f, -0.0f);
  float _196 = mad(_192, 0.03889999911189079f, 0.0f);
  float _197 = mad(_192, -0.06849999725818634f, 0.0f);
  float _198 = mad(_192, 1.0296000242233276f, 0.0f);
  float _201 = mad(0.1599626988172531f, _196, mad(-0.1470542997121811f, _193, (_190 * 0.883457362651825f)));
  float _204 = mad(0.1599626988172531f, _197, mad(-0.1470542997121811f, _194, (_190 * 0.26293492317199707f)));
  float _207 = mad(0.1599626988172531f, _198, mad(-0.1470542997121811f, _195, (_190 * -0.15930065512657166f)));
  float _210 = mad(0.04929120093584061f, _196, mad(0.5183603167533875f, _193, (_190 * 0.38695648312568665f)));
  float _213 = mad(0.04929120093584061f, _197, mad(0.5183603167533875f, _194, (_190 * 0.11516613513231277f)));
  float _216 = mad(0.04929120093584061f, _198, mad(0.5183603167533875f, _195, (_190 * -0.0697740763425827f)));
  float _219 = mad(0.9684867262840271f, _196, mad(0.04004279896616936f, _193, (_190 * -0.007634039502590895f)));
  float _222 = mad(0.9684867262840271f, _197, mad(0.04004279896616936f, _194, (_190 * -0.0022720457054674625f)));
  float _225 = mad(0.9684867262840271f, _198, mad(0.04004279896616936f, _195, (_190 * 0.0013765322510153055f)));
  float _228 = mad(_207, 0.01933390088379383f, mad(_204, 0.2126729041337967f, (_201 * 0.4124563932418823f)));
  float _231 = mad(_207, 0.11919199675321579f, mad(_204, 0.7151522040367126f, (_201 * 0.3575761020183563f)));
  float _234 = mad(_207, 0.9503040909767151f, mad(_204, 0.07217500358819962f, (_201 * 0.18043750524520874f)));
  float _237 = mad(_216, 0.01933390088379383f, mad(_213, 0.2126729041337967f, (_210 * 0.4124563932418823f)));
  float _240 = mad(_216, 0.11919199675321579f, mad(_213, 0.7151522040367126f, (_210 * 0.3575761020183563f)));
  float _243 = mad(_216, 0.9503040909767151f, mad(_213, 0.07217500358819962f, (_210 * 0.18043750524520874f)));
  float _246 = mad(_225, 0.01933390088379383f, mad(_222, 0.2126729041337967f, (_219 * 0.4124563932418823f)));
  float _249 = mad(_225, 0.11919199675321579f, mad(_222, 0.7151522040367126f, (_219 * 0.3575761020183563f)));
  float _252 = mad(_225, 0.9503040909767151f, mad(_222, 0.07217500358819962f, (_219 * 0.18043750524520874f)));
  float _282 = mad(mad(-0.4986107647418976f, _252, mad(-1.5373831987380981f, _243, (_234 * 3.2409698963165283f))), _101, mad(mad(-0.4986107647418976f, _249, mad(-1.5373831987380981f, _240, (_231 * 3.2409698963165283f))), _100, (mad(-0.4986107647418976f, _246, mad(-1.5373831987380981f, _237, (_228 * 3.2409698963165283f))) * _99)));
  float _285 = mad(mad(0.04155505821108818f, _252, mad(1.8759675025939941f, _243, (_234 * -0.9692436456680298f))), _101, mad(mad(0.04155505821108818f, _249, mad(1.8759675025939941f, _240, (_231 * -0.9692436456680298f))), _100, (mad(0.04155505821108818f, _246, mad(1.8759675025939941f, _237, (_228 * -0.9692436456680298f))) * _99)));
  float _288 = mad(mad(1.056971549987793f, _252, mad(-0.20397695899009705f, _243, (_234 * 0.05563008040189743f))), _101, mad(mad(1.056971549987793f, _249, mad(-0.20397695899009705f, _240, (_231 * 0.05563008040189743f))), _100, (mad(1.056971549987793f, _246, mad(-0.20397695899009705f, _237, (_228 * 0.05563008040189743f))) * _99)));
  float _291 = mad(0.04736635088920593f, _288, mad(0.3395121395587921f, _285, (_282 * 0.613191545009613f)));
  float _294 = mad(0.01345000695437193f, _288, mad(0.9163357615470886f, _285, (_282 * 0.07020691782236099f)));
  float _297 = mad(0.8696067929267883f, _288, mad(0.1095672994852066f, _285, (_282 * 0.020618872717022896f)));
  // bool _300 = ((uint)(cb0_046x) == 0);
  bool _300 = ((uint)(tm_flags.x) == 0);
  if (_300) {
    float _302 = dot(float3(_291, _294, _297), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
    float _306 = (_291 / _302) + -1.0f;
    float _307 = (_294 / _302) + -1.0f;
    float _308 = (_297 / _302) + -1.0f;
    float _320 = (1.0f - exp2(((_302 * _302) * -4.0f) * cb0_074w)) * (1.0f - exp2(dot(float3(_306, _307, _308), float3(_306, _307, _308)) * -4.0f));
    _340 = (((mad(-0.06368283927440643f, _297, mad(-0.32929131388664246f, _294, (_291 * 1.370412826538086f))) - _291) * _320) + _291);
    _341 = (((mad(-0.010861567221581936f, _297, mad(1.0970908403396606f, _294, (_291 * -0.08343426138162613f))) - _294) * _320) + _294);
    _342 = (((mad(1.203694462776184f, _297, mad(-0.09862564504146576f, _294, (_291 * -0.02579325996339321f))) - _297) * _320) + _297);
  } else {
    _340 = _291;
    _341 = _294;
    _342 = _297;
  }
  float _343 = dot(float3(_340, _341, _342), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
  float _357 = cb0_052w + cb0_057w;
  float _371 = cb0_051w * cb0_056w;
  float _385 = cb0_050w * cb0_055w;
  float _399 = cb0_049w * cb0_054w;
  float _413 = cb0_048w * cb0_053w;
  float _417 = _340 - _343;
  float _418 = _341 - _343;
  float _419 = _342 - _343;
  float _477 = saturate(_343 / cb0_073x);
  float _481 = (_477 * _477) * (3.0f - (_477 * 2.0f));
  float _482 = 1.0f - _481;
  float _491 = cb0_052w + cb0_067w;
  float _500 = cb0_051w * cb0_066w;
  float _509 = cb0_050w * cb0_065w;
  float _518 = cb0_049w * cb0_064w;
  float _527 = cb0_048w * cb0_063w;
  float _589 = saturate((_343 - cb0_073y) / (1.0f - cb0_073y));
  float _593 = (_589 * _589) * (3.0f - (_589 * 2.0f));
  float _602 = cb0_052w + cb0_062w;
  float _611 = cb0_051w * cb0_061w;
  float _620 = cb0_050w * cb0_060w;
  float _629 = cb0_049w * cb0_059w;
  float _638 = cb0_048w * cb0_058w;
  float _696 = _481 - _593;
  float _707 = ((_593 * (((cb0_052x + cb0_067x) + _491) + (((cb0_051x * cb0_066x) * _500) * exp2(log2(exp2(((cb0_049x * cb0_064x) * _518) * log2(max(0.0f, ((((cb0_048x * cb0_063x) * _527) * _417) + _343)) * 5.55555534362793f)) * 0.18000000715255737f) * (1.0f / ((cb0_050x * cb0_065x) * _509)))))) + (_482 * (((cb0_052x + cb0_057x) + _357) + (((cb0_051x * cb0_056x) * _371) * exp2(log2(exp2(((cb0_049x * cb0_054x) * _399) * log2(max(0.0f, ((((cb0_048x * cb0_053x) * _413) * _417) + _343)) * 5.55555534362793f)) * 0.18000000715255737f) * (1.0f / ((cb0_050x * cb0_055x) * _385))))))) + ((((cb0_052x + cb0_062x) + _602) + (((cb0_051x * cb0_061x) * _611) * exp2(log2(exp2(((cb0_049x * cb0_059x) * _629) * log2(max(0.0f, ((((cb0_048x * cb0_058x) * _638) * _417) + _343)) * 5.55555534362793f)) * 0.18000000715255737f) * (1.0f / ((cb0_050x * cb0_060x) * _620))))) * _696);
  float _709 = ((_593 * (((cb0_052y + cb0_067y) + _491) + (((cb0_051y * cb0_066y) * _500) * exp2(log2(exp2(((cb0_049y * cb0_064y) * _518) * log2(max(0.0f, ((((cb0_048y * cb0_063y) * _527) * _418) + _343)) * 5.55555534362793f)) * 0.18000000715255737f) * (1.0f / ((cb0_050y * cb0_065y) * _509)))))) + (_482 * (((cb0_052y + cb0_057y) + _357) + (((cb0_051y * cb0_056y) * _371) * exp2(log2(exp2(((cb0_049y * cb0_054y) * _399) * log2(max(0.0f, ((((cb0_048y * cb0_053y) * _413) * _418) + _343)) * 5.55555534362793f)) * 0.18000000715255737f) * (1.0f / ((cb0_050y * cb0_055y) * _385))))))) + ((((cb0_052y + cb0_062y) + _602) + (((cb0_051y * cb0_061y) * _611) * exp2(log2(exp2(((cb0_049y * cb0_059y) * _629) * log2(max(0.0f, ((((cb0_048y * cb0_058y) * _638) * _418) + _343)) * 5.55555534362793f)) * 0.18000000715255737f) * (1.0f / ((cb0_050y * cb0_060y) * _620))))) * _696);
  float _711 = ((_593 * (((cb0_052z + cb0_067z) + _491) + (((cb0_051z * cb0_066z) * _500) * exp2(log2(exp2(((cb0_049z * cb0_064z) * _518) * log2(max(0.0f, ((((cb0_048z * cb0_063z) * _527) * _419) + _343)) * 5.55555534362793f)) * 0.18000000715255737f) * (1.0f / ((cb0_050z * cb0_065z) * _509)))))) + (_482 * (((cb0_052z + cb0_057z) + _357) + (((cb0_051z * cb0_056z) * _371) * exp2(log2(exp2(((cb0_049z * cb0_054z) * _399) * log2(max(0.0f, ((((cb0_048z * cb0_053z) * _413) * _419) + _343)) * 5.55555534362793f)) * 0.18000000715255737f) * (1.0f / ((cb0_050z * cb0_055z) * _385))))))) + ((((cb0_052z + cb0_062z) + _602) + (((cb0_051z * cb0_061z) * _611) * exp2(log2(exp2(((cb0_049z * cb0_059z) * _629) * log2(max(0.0f, ((((cb0_048z * cb0_058z) * _638) * _419) + _343)) * 5.55555534362793f)) * 0.18000000715255737f) * (1.0f / ((cb0_050z * cb0_060z) * _620))))) * _696);
  float _737 = dot(float3(_707, _709, _711), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
  float _795 = (cb0_072x + cb0_072w) + ((cb0_071x * cb0_071w) * exp2(log2(exp2((cb0_069x * cb0_069w) * log2(max(0.0f, (((cb0_068x * cb0_068w) * (_707 - _737)) + _737)) * 5.55555534362793f)) * 0.18000000715255737f) * (1.0f / (cb0_070x * cb0_070w))));
  float _796 = (cb0_072y + cb0_072w) + ((cb0_071y * cb0_071w) * exp2(log2(exp2((cb0_069y * cb0_069w) * log2(max(0.0f, (((cb0_068y * cb0_068w) * (_709 - _737)) + _737)) * 5.55555534362793f)) * 0.18000000715255737f) * (1.0f / (cb0_070y * cb0_070w))));
  float _797 = (cb0_072z + cb0_072w) + ((cb0_071z * cb0_071w) * exp2(log2(exp2((cb0_069z * cb0_069w) * log2(max(0.0f, (((cb0_068z * cb0_068w) * (_711 - _737)) + _737)) * 5.55555534362793f)) * 0.18000000715255737f) * (1.0f / (cb0_070z * cb0_070w))));
  float _800 = mad(-0.0832584798336029f, _797, mad(-0.6217905879020691f, _796, (_795 * 1.7050515413284302f)));
  float _803 = mad(-0.010548528283834457f, _797, mad(1.1408027410507202f, _796, (_795 * -0.13025718927383423f)));
  float _806 = mad(1.152971863746643f, _797, mad(-0.1289687603712082f, _796, (_795 * -0.024003278464078903f)));
  float _822 = ((mad(0.061360642313957214f, _797, mad(-4.540197551250458e-09f, _796, (_795 * 0.9386394023895264f))) - _795) * cb0_074z) + _795;
  float _823 = ((mad(0.169205904006958f, _797, mad(0.8307942152023315f, _796, (_795 * 6.775371730327606e-08f))) - _796) * cb0_074z) + _796;
  float _824 = (mad(-2.3283064365386963e-10f, _796, (_795 * -9.313225746154785e-10f)) * cb0_074z) + _797;
  // if ((((uint)(cb0_046z) | (uint)(cb0_046y)) | (uint)(cb0_046w)) == 0) {
  if ((((uint)(tm_flags.z) | (uint)(tm_flags.y)) | (uint)(tm_flags.w)) == 0) {
    float _834 = mad(0.16386905312538147f, _824, mad(0.14067868888378143f, _823, (_822 * 0.6954522132873535f)));
    float _837 = mad(0.0955343246459961f, _824, mad(0.8596711158752441f, _823, (_822 * 0.044794581830501556f)));
    float _840 = mad(1.0015007257461548f, _824, mad(0.004025210160762072f, _823, (_822 * -0.005525882821530104f)));
    float _844 = max(max(_834, _837), _840);
    float _849 = (max(_844, 1.000000013351432e-10f) - max(min(min(_834, _837), _840), 1.000000013351432e-10f)) / max(_844, 0.009999999776482582f);
    float _862 = ((_837 + _834) + _840) + (sqrt((((_840 - _837) * _840) + ((_837 - _834) * _837)) + ((_834 - _840) * _834)) * 1.75f);
    float _863 = _862 * 0.3333333432674408f;
    float _864 = _849 + -0.4000000059604645f;
    float _865 = _864 * 5.0f;
    float _869 = max((1.0f - abs(_864 * 2.5f)), 0.0f);
    float _880 = ((float(((int)(uint)((bool)(_865 > 0.0f))) - ((int)(uint)((bool)(_865 < 0.0f)))) * (1.0f - (_869 * _869))) + 1.0f) * 0.02500000037252903f;
    if (!(_863 <= 0.0533333346247673f)) {
      if (!(_863 >= 0.1599999964237213f)) {
        _889 = (((0.23999999463558197f / _862) + -0.5f) * _880);
      } else {
        _889 = 0.0f;
      }
    } else {
      _889 = _880;
    }
    float _890 = _889 + 1.0f;
    float _891 = _890 * _834;
    float _892 = _890 * _837;
    float _893 = _890 * _840;
    if (!((bool)(_891 == _892) && (bool)(_892 == _893))) {
      float _900 = ((_891 * 2.0f) - _892) - _893;
      float _903 = ((_837 - _840) * 1.7320507764816284f) * _890;
      float _905 = atan(_903 / _900);
      bool _908 = (_900 < 0.0f);
      bool _909 = (_900 == 0.0f);
      bool _910 = (_903 >= 0.0f);
      bool _911 = (_903 < 0.0f);
      _922 = select((_910 && _909), 90.0f, select((_911 && _909), -90.0f, (select((_911 && _908), (_905 + -3.1415927410125732f), select((_910 && _908), (_905 + 3.1415927410125732f), _905)) * 57.2957763671875f)));
    } else {
      _922 = 0.0f;
    }
    float _927 = min(max(select((_922 < 0.0f), (_922 + 360.0f), _922), 0.0f), 360.0f);
    if (_927 < -180.0f) {
      _936 = (_927 + 360.0f);
    } else {
      if (_927 > 180.0f) {
        _936 = (_927 + -360.0f);
      } else {
        _936 = _927;
      }
    }
    float _940 = saturate(1.0f - abs(_936 * 0.014814814552664757f));
    float _944 = (_940 * _940) * (3.0f - (_940 * 2.0f));
    float _950 = ((_944 * _944) * ((_849 * 0.18000000715255737f) * (0.029999999329447746f - _891))) + _891;
    float _960 = max(0.0f, mad(-0.21492856740951538f, _893, mad(-0.2365107536315918f, _892, (_950 * 1.4514392614364624f))));
    float _961 = max(0.0f, mad(-0.09967592358589172f, _893, mad(1.17622971534729f, _892, (_950 * -0.07655377686023712f))));
    float _962 = max(0.0f, mad(0.9977163076400757f, _893, mad(-0.006032449658960104f, _892, (_950 * 0.008316148072481155f))));
    float _963 = dot(float3(_960, _961, _962), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
    float _977 = (cb0_036w + 1.0f) - cb0_036y;
    float _980 = cb0_037x + 1.0f;
    float _982 = _980 - cb0_036z;
    if (cb0_036y > 0.800000011920929f) {
      _1000 = (((0.8199999928474426f - cb0_036y) / cb0_036x) + -0.7447274923324585f);
    } else {
      float _991 = (cb0_036w + 0.18000000715255737f) / _977;
      _1000 = (-0.7447274923324585f - ((log2(_991 / (2.0f - _991)) * 0.3465735912322998f) * (_977 / cb0_036x)));
    }
    float _1003 = ((1.0f - cb0_036y) / cb0_036x) - _1000;
    float _1005 = (cb0_036z / cb0_036x) - _1003;
    float _1009 = log2(lerp(_963, _960, 0.9599999785423279f)) * 0.3010300099849701f;
    float _1010 = log2(lerp(_963, _961, 0.9599999785423279f)) * 0.3010300099849701f;
    float _1011 = log2(lerp(_963, _962, 0.9599999785423279f)) * 0.3010300099849701f;
    float _1015 = cb0_036x * (_1009 + _1003);
    float _1016 = cb0_036x * (_1010 + _1003);
    float _1017 = cb0_036x * (_1011 + _1003);
    float _1018 = _977 * 2.0f;
    float _1020 = (cb0_036x * -2.0f) / _977;
    float _1021 = _1009 - _1000;
    float _1022 = _1010 - _1000;
    float _1023 = _1011 - _1000;
    float _1042 = _982 * 2.0f;
    float _1044 = (cb0_036x * 2.0f) / _982;
    float _1069 = select((_1009 < _1000), ((_1018 / (exp2((_1021 * 1.4426950216293335f) * _1020) + 1.0f)) - cb0_036w), _1015);
    float _1070 = select((_1010 < _1000), ((_1018 / (exp2((_1022 * 1.4426950216293335f) * _1020) + 1.0f)) - cb0_036w), _1016);
    float _1071 = select((_1011 < _1000), ((_1018 / (exp2((_1023 * 1.4426950216293335f) * _1020) + 1.0f)) - cb0_036w), _1017);
    float _1078 = _1005 - _1000;
    float _1082 = saturate(_1021 / _1078);
    float _1083 = saturate(_1022 / _1078);
    float _1084 = saturate(_1023 / _1078);
    bool _1085 = (_1005 < _1000);
    float _1089 = select(_1085, (1.0f - _1082), _1082);
    float _1090 = select(_1085, (1.0f - _1083), _1083);
    float _1091 = select(_1085, (1.0f - _1084), _1084);
    float _1110 = (((_1089 * _1089) * (select((_1009 > _1005), (_980 - (_1042 / (exp2(((_1009 - _1005) * 1.4426950216293335f) * _1044) + 1.0f))), _1015) - _1069)) * (3.0f - (_1089 * 2.0f))) + _1069;
    float _1111 = (((_1090 * _1090) * (select((_1010 > _1005), (_980 - (_1042 / (exp2(((_1010 - _1005) * 1.4426950216293335f) * _1044) + 1.0f))), _1016) - _1070)) * (3.0f - (_1090 * 2.0f))) + _1070;
    float _1112 = (((_1091 * _1091) * (select((_1011 > _1005), (_980 - (_1042 / (exp2(((_1011 - _1005) * 1.4426950216293335f) * _1044) + 1.0f))), _1017) - _1071)) * (3.0f - (_1091 * 2.0f))) + _1071;
    float _1113 = dot(float3(_1110, _1111, _1112), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
    _1138 = ((cb0_075x * (max(0.0f, (lerp(_1113, _1110, 0.9300000071525574f))) - _822)) + _822);
    _1139 = ((cb0_075x * (max(0.0f, (lerp(_1113, _1111, 0.9300000071525574f))) - _823)) + _823);
    _1140 = ((cb0_075x * (max(0.0f, (lerp(_1113, _1112, 0.9300000071525574f))) - _824)) + _824);
  } else {
    _1138 = _822;
    _1139 = _823;
    _1140 = _824;
  }
  float _1156 = ((mad(-0.06537103652954102f, _1140, mad(1.451815478503704e-06f, _1139, (_1138 * 1.065374732017517f))) - _1138) * cb0_074z) + _1138;
  float _1157 = ((mad(-0.20366770029067993f, _1140, mad(1.2036634683609009f, _1139, (_1138 * -2.57161445915699e-07f))) - _1139) * cb0_074z) + _1139;
  float _1158 = ((mad(0.9999996423721313f, _1140, mad(2.0954757928848267e-08f, _1139, (_1138 * 1.862645149230957e-08f))) - _1140) * cb0_074z) + _1140;
  [branch]
  if (!_300) {
    float _1201 = 1.0f / (dot(float3(_800, _803, _806), float3(cb0_033x, cb0_033y, cb0_033z)) + 1.0f);
    float _1211 = max(0.0f, (((_1201 * cb0_035x) + cb0_034x) * dot(float3(_800, _803, _806), float3(cb0_028x, cb0_028y, cb0_028z))));
    float _1212 = max(0.0f, (((_1201 * cb0_035y) + cb0_034y) * dot(float3(_800, _803, _806), float3(cb0_029x, cb0_029y, cb0_029z))));
    float _1213 = max(0.0f, (((_1201 * cb0_035z) + cb0_034z) * dot(float3(_800, _803, _806), float3(cb0_030x, cb0_030y, cb0_030z))));
    float _1219 = max(0.0f, (cb0_031x - _1211));
    float _1220 = max(0.0f, (cb0_031x - _1212));
    float _1221 = max(0.0f, (cb0_031x - _1213));
    float _1223 = max(_1211, cb0_031z);
    float _1224 = max(_1212, cb0_031z);
    float _1225 = max(_1213, cb0_031z);
    _1283 = (((((((cb0_032x * _1223) + cb0_032y) * (1.0f / (cb0_031w + _1223))) + -0.0020000000949949026f) + (cb0_030w * min(max(_1211, cb0_031x), cb0_031z))) + ((cb0_028w * _1219) * (1.0f / (cb0_031y + _1219)))) + cb0_029w);
    _1284 = ((((((1.0f / (cb0_031w + _1224)) * ((cb0_032x * _1224) + cb0_032y)) + -0.0020000000949949026f) + (cb0_030w * min(max(_1212, cb0_031x), cb0_031z))) + ((cb0_028w * _1220) * (1.0f / (cb0_031y + _1220)))) + cb0_029w);
    _1285 = ((((((1.0f / (cb0_031w + _1225)) * ((cb0_032x * _1225) + cb0_032y)) + -0.0020000000949949026f) + (cb0_030w * min(max(_1213, cb0_031x), cb0_031z))) + ((cb0_028w * _1221) * (1.0f / (cb0_031y + _1221)))) + cb0_029w);
  } else {
    _1283 = max(0.0f, mad(-0.0832584798336029f, _1158, mad(-0.6217905879020691f, _1157, (_1156 * 1.7050515413284302f))));
    _1284 = max(0.0f, mad(-0.010548528283834457f, _1158, mad(1.1408027410507202f, _1157, (_1156 * -0.13025718927383423f))));
    _1285 = max(0.0f, mad(1.152971863746643f, _1158, mad(-0.1289687603712082f, _1157, (_1156 * -0.024003278464078903f))));
  }
  float _1286 = saturate(_1283);
  float _1287 = saturate(_1284);
  float _1288 = saturate(_1285);
  if (_1286 < 0.0031306699384003878f) {
    _1299 = (_1286 * 12.920000076293945f);
  } else {
    _1299 = (((pow(_1286, 0.4166666567325592f)) * 1.0549999475479126f) + -0.054999999701976776f);
  }
  if (_1287 < 0.0031306699384003878f) {
    _1310 = (_1287 * 12.920000076293945f);
  } else {
    _1310 = (((pow(_1287, 0.4166666567325592f)) * 1.0549999475479126f) + -0.054999999701976776f);
  }
  if (_1288 < 0.0031306699384003878f) {
    _1321 = (_1288 * 12.920000076293945f);
  } else {
    _1321 = (((pow(_1288, 0.4166666567325592f)) * 1.0549999475479126f) + -0.054999999701976776f);
  }
  float _1325 = (_1310 * 0.9375f) + 0.03125f;
  float _1333 = _1321 * 15.0f;
  float _1334 = floor(_1333);
  float _1335 = _1333 - _1334;
  float _1337 = (_1334 + ((_1299 * 0.9375f) + 0.03125f)) * 0.0625f;
  float4 _1338 = t0.Sample(s0, float2(_1337, _1325));
  float _1342 = _1337 + 0.0625f;
  float4 _1343 = t0.Sample(s0, float2(_1342, _1325));
  float4 _1364 = t1.Sample(s1, float2(_1337, _1325));
  float4 _1368 = t1.Sample(s1, float2(_1342, _1325));
  float _1387 = max(6.103519990574569e-05f, ((((lerp(_1338.x, _1343.x, _1335)) * cb0_041x) + (cb0_040x * _1299)) + ((lerp(_1364.x, _1368.x, _1335)) * cb0_042x)));
  float _1388 = max(6.103519990574569e-05f, ((((lerp(_1338.y, _1343.y, _1335)) * cb0_041x) + (cb0_040x * _1310)) + ((lerp(_1364.y, _1368.y, _1335)) * cb0_042x)));
  float _1389 = max(6.103519990574569e-05f, ((((lerp(_1338.z, _1343.z, _1335)) * cb0_041x) + (cb0_040x * _1321)) + ((lerp(_1364.z, _1368.z, _1335)) * cb0_042x)));
  float _1411 = select((_1387 > 0.040449999272823334f), exp2(log2((_1387 * 0.9478672742843628f) + 0.05213269963860512f) * 2.4000000953674316f), (_1387 * 0.07739938050508499f));
  float _1412 = select((_1388 > 0.040449999272823334f), exp2(log2((_1388 * 0.9478672742843628f) + 0.05213269963860512f) * 2.4000000953674316f), (_1388 * 0.07739938050508499f));
  float _1413 = select((_1389 > 0.040449999272823334f), exp2(log2((_1389 * 0.9478672742843628f) + 0.05213269963860512f) * 2.4000000953674316f), (_1389 * 0.07739938050508499f));
  float _1439 = cb0_044y * (((cb0_026y + (cb0_026x * _1411)) * _1411) + cb0_026z);
  float _1440 = cb0_044z * (((cb0_026y + (cb0_026x * _1412)) * _1412) + cb0_026z);
  float _1441 = cb0_044w * (((cb0_026y + (cb0_026x * _1413)) * _1413) + cb0_026z);
  float _1448 = ((cb0_045x - _1439) * cb0_045w) + _1439;
  float _1449 = ((cb0_045y - _1440) * cb0_045w) + _1440;
  float _1450 = ((cb0_045z - _1441) * cb0_045w) + _1441;
  float _1451 = cb0_044y * _800;
  float _1452 = cb0_044z * _803;
  float _1453 = cb0_044w * _806;
  float _1460 = ((cb0_045x - _1451) * cb0_045w) + _1451;
  float _1461 = ((cb0_045y - _1452) * cb0_045w) + _1452;
  float _1462 = ((cb0_045z - _1453) * cb0_045w) + _1453;
  float _1474 = exp2(log2(max(0.0f, _1448)) * cb0_027y);
  float _1475 = exp2(log2(max(0.0f, _1449)) * cb0_027y);
  float _1476 = exp2(log2(max(0.0f, _1450)) * cb0_027y);

  SV_Target.rgb = GenerateLUTOutput(float3(_1474, _1475, _1476));
  SV_Target.a = 0;
  return SV_Target;

  [branch]
  if ((uint)(cb0_074x) == 0) {
    if (_1474 < 0.0031306699384003878f) {
      _1491 = (_1474 * 12.920000076293945f);
    } else {
      _1491 = (((pow(_1474, 0.4166666567325592f)) * 1.0549999475479126f) + -0.054999999701976776f);
    }
    if (_1475 < 0.0031306699384003878f) {
      _1502 = (_1475 * 12.920000076293945f);
    } else {
      _1502 = (((pow(_1475, 0.4166666567325592f)) * 1.0549999475479126f) + -0.054999999701976776f);
    }
    if (_1476 < 0.0031306699384003878f) {
      _2932 = _1491;
      _2933 = _1502;
      _2934 = (_1476 * 12.920000076293945f);
    } else {
      _2932 = _1491;
      _2933 = _1502;
      _2934 = (((pow(_1476, 0.4166666567325592f)) * 1.0549999475479126f) + -0.054999999701976776f);
    }
  } else {
    if ((uint)(cb0_074x) == 1) {
      float _1517 = mad(0.04736635088920593f, _1476, mad(0.3395121395587921f, _1475, (_1474 * 0.613191545009613f)));
      float _1520 = mad(0.01345000695437193f, _1476, mad(0.9163357615470886f, _1475, (_1474 * 0.07020691782236099f)));
      float _1523 = mad(0.8696067929267883f, _1476, mad(0.1095672994852066f, _1475, (_1474 * 0.020618872717022896f)));
      float _1533 = max(6.103519990574569e-05f, mad(_36, _1523, mad(_35, _1520, (_1517 * _34))));
      float _1534 = max(6.103519990574569e-05f, mad(_39, _1523, mad(_38, _1520, (_1517 * _37))));
      float _1535 = max(6.103519990574569e-05f, mad(_42, _1523, mad(_41, _1520, (_1517 * _40))));
      _2932 = min((_1533 * 4.5f), ((exp2(log2(max(_1533, 0.017999999225139618f)) * 0.44999998807907104f) * 1.0989999771118164f) + -0.0989999994635582f));
      _2933 = min((_1534 * 4.5f), ((exp2(log2(max(_1534, 0.017999999225139618f)) * 0.44999998807907104f) * 1.0989999771118164f) + -0.0989999994635582f));
      _2934 = min((_1535 * 4.5f), ((exp2(log2(max(_1535, 0.017999999225139618f)) * 0.44999998807907104f) * 1.0989999771118164f) + -0.0989999994635582f));
    } else {
      bool _1562 = ((uint)(cb0_074x) == 5);
      if ((bool)((uint)(cb0_074x) == 3) || _1562) {
        float _1565 = _1461 * 3.0f;
        float _1566 = _1462 * 3.0f;
        float _1569 = mad(0.17733481526374817f, _1566, mad(0.38297808170318604f, _1565, (_1460 * 1.31910240650177f)));
        float _1572 = mad(0.09676162153482437f, _1566, mad(0.8134231567382812f, _1565, (_1460 * 0.2693769633769989f)));
        float _1575 = mad(0.870704174041748f, _1566, mad(0.11154405772686005f, _1565, (_1460 * 0.05263196676969528f)));
        float _1579 = max(max(_1569, _1572), _1575);
        float _1584 = (max(_1579, 1.000000013351432e-10f) - max(min(min(_1569, _1572), _1575), 1.000000013351432e-10f)) / max(_1579, 0.009999999776482582f);
        float _1597 = ((_1572 + _1569) + _1575) + (sqrt((((_1575 - _1572) * _1575) + ((_1572 - _1569) * _1572)) + ((_1569 - _1575) * _1569)) * 1.75f);
        float _1598 = _1597 * 0.3333333432674408f;
        float _1599 = _1584 + -0.4000000059604645f;
        float _1600 = _1599 * 5.0f;
        float _1604 = max((1.0f - abs(_1599 * 2.5f)), 0.0f);
        float _1615 = ((float(((int)(uint)((bool)(_1600 > 0.0f))) - ((int)(uint)((bool)(_1600 < 0.0f)))) * (1.0f - (_1604 * _1604))) + 1.0f) * 0.02500000037252903f;
        if (!(_1598 <= 0.0533333346247673f)) {
          if (!(_1598 >= 0.1599999964237213f)) {
            _1624 = (((0.23999999463558197f / _1597) + -0.5f) * _1615);
          } else {
            _1624 = 0.0f;
          }
        } else {
          _1624 = _1615;
        }
        float _1625 = _1624 + 1.0f;
        float _1626 = _1625 * _1569;
        float _1627 = _1625 * _1572;
        float _1628 = _1625 * _1575;
        if (!((bool)(_1626 == _1627) && (bool)(_1627 == _1628))) {
          float _1635 = ((_1626 * 2.0f) - _1627) - _1628;
          float _1638 = ((_1572 - _1575) * 1.7320507764816284f) * _1625;
          float _1640 = atan(_1638 / _1635);
          bool _1643 = (_1635 < 0.0f);
          bool _1644 = (_1635 == 0.0f);
          bool _1645 = (_1638 >= 0.0f);
          bool _1646 = (_1638 < 0.0f);
          _1657 = select((_1645 && _1644), 90.0f, select((_1646 && _1644), -90.0f, (select((_1646 && _1643), (_1640 + -3.1415927410125732f), select((_1645 && _1643), (_1640 + 3.1415927410125732f), _1640)) * 57.2957763671875f)));
        } else {
          _1657 = 0.0f;
        }
        float _1662 = min(max(select((_1657 < 0.0f), (_1657 + 360.0f), _1657), 0.0f), 360.0f);
        if (_1662 < -180.0f) {
          _1671 = (_1662 + 360.0f);
        } else {
          if (_1662 > 180.0f) {
            _1671 = (_1662 + -360.0f);
          } else {
            _1671 = _1662;
          }
        }
        if ((bool)(_1671 > -67.5f) && (bool)(_1671 < 67.5f)) {
          float _1677 = (_1671 + 67.5f) * 0.029629629105329514f;
          int _1678 = int(_1677);
          float _1680 = _1677 - float(_1678);
          float _1681 = _1680 * _1680;
          float _1682 = _1681 * _1680;
          if (_1678 == 3) {
            _1710 = (((0.1666666716337204f - (_1680 * 0.5f)) + (_1681 * 0.5f)) - (_1682 * 0.1666666716337204f));
          } else {
            if (_1678 == 2) {
              _1710 = ((0.6666666865348816f - _1681) + (_1682 * 0.5f));
            } else {
              if (_1678 == 1) {
                _1710 = (((_1682 * -0.5f) + 0.1666666716337204f) + ((_1681 + _1680) * 0.5f));
              } else {
                _1710 = select((_1678 == 0), (_1682 * 0.1666666716337204f), 0.0f);
              }
            }
          }
        } else {
          _1710 = 0.0f;
        }
        float _1719 = min(max(((((_1584 * 0.27000001072883606f) * (0.029999999329447746f - _1626)) * _1710) + _1626), 0.0f), 65535.0f);
        float _1720 = min(max(_1627, 0.0f), 65535.0f);
        float _1721 = min(max(_1628, 0.0f), 65535.0f);
        float _1734 = min(max(mad(-0.21492856740951538f, _1721, mad(-0.2365107536315918f, _1720, (_1719 * 1.4514392614364624f))), 0.0f), 65535.0f);
        float _1735 = min(max(mad(-0.09967592358589172f, _1721, mad(1.17622971534729f, _1720, (_1719 * -0.07655377686023712f))), 0.0f), 65535.0f);
        float _1736 = min(max(mad(0.9977163076400757f, _1721, mad(-0.006032449658960104f, _1720, (_1719 * 0.008316148072481155f))), 0.0f), 65535.0f);
        float _1737 = dot(float3(_1734, _1735, _1736), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
        float _1744 = ((_1734 - _1737) * 0.9599999785423279f) + _1737;
        float _1745 = ((_1735 - _1737) * 0.9599999785423279f) + _1737;
        float _1746 = ((_1736 - _1737) * 0.9599999785423279f) + _1737;
        float _1749 = log2(select((_1744 <= 0.0f), 6.103515625e-05f, _1744));
        float _1750 = _1749 * 0.3010300099849701f;
        if (!(_1750 <= -5.2601776123046875f)) {
          if ((bool)(_1750 > -5.2601776123046875f) && (bool)(_1750 < -0.7447274923324585f)) {
            float _1758 = (_1749 * 0.19999998807907104f) + 3.494786262512207f;
            int _1759 = int(_1758);
            float _1761 = _1758 - float(_1759);
            float _1763 = _global_0[_1759];
            float _1766 = _global_0[(_1759 + 1)];
            float _1771 = _1763 * 0.5f;
            _1803 = dot(float3((_1761 * _1761), _1761, 1.0f), float3(mad((_global_0[(_1759 + 2)]), 0.5f, mad(_1766, -1.0f, _1771)), (_1766 - _1763), mad(_1766, 0.5f, _1771)));
          } else {
            if ((bool)(_1750 >= -0.7447274923324585f) && (bool)(_1750 < 4.673812389373779f)) {
              float _1783 = (_1749 * 0.1666666567325592f) + 0.4123218357563019f;
              int _1784 = int(_1783);
              float _1786 = _1783 - float(_1784);
              float _1788 = _global_1[_1784];
              float _1791 = _global_1[(_1784 + 1)];
              float _1796 = _1788 * 0.5f;
              _1803 = dot(float3((_1786 * _1786), _1786, 1.0f), float3(mad((_global_1[(_1784 + 2)]), 0.5f, mad(_1791, -1.0f, _1796)), (_1791 - _1788), mad(_1791, 0.5f, _1796)));
            } else {
              _1803 = 4.0f;
            }
          }
        } else {
          _1803 = -4.0f;
        }
        float _1805 = exp2(_1803 * 3.321928024291992f);
        float _1808 = log2(select((_1745 <= 0.0f), 6.103515625e-05f, _1745));
        float _1809 = _1808 * 0.3010300099849701f;
        if (!(_1809 <= -5.2601776123046875f)) {
          if ((bool)(_1809 > -5.2601776123046875f) && (bool)(_1809 < -0.7447274923324585f)) {
            float _1817 = (_1808 * 0.19999998807907104f) + 3.494786262512207f;
            int _1818 = int(_1817);
            float _1820 = _1817 - float(_1818);
            float _1822 = _global_0[_1818];
            float _1825 = _global_0[(_1818 + 1)];
            float _1830 = _1822 * 0.5f;
            _1862 = dot(float3((_1820 * _1820), _1820, 1.0f), float3(mad((_global_0[(_1818 + 2)]), 0.5f, mad(_1825, -1.0f, _1830)), (_1825 - _1822), mad(_1825, 0.5f, _1830)));
          } else {
            if ((bool)(_1809 >= -0.7447274923324585f) && (bool)(_1809 < 4.673812389373779f)) {
              float _1842 = (_1808 * 0.1666666567325592f) + 0.4123218357563019f;
              int _1843 = int(_1842);
              float _1845 = _1842 - float(_1843);
              float _1847 = _global_1[_1843];
              float _1850 = _global_1[(_1843 + 1)];
              float _1855 = _1847 * 0.5f;
              _1862 = dot(float3((_1845 * _1845), _1845, 1.0f), float3(mad((_global_1[(_1843 + 2)]), 0.5f, mad(_1850, -1.0f, _1855)), (_1850 - _1847), mad(_1850, 0.5f, _1855)));
            } else {
              _1862 = 4.0f;
            }
          }
        } else {
          _1862 = -4.0f;
        }
        float _1864 = exp2(_1862 * 3.321928024291992f);
        float _1867 = log2(select((_1746 <= 0.0f), 6.103515625e-05f, _1746));
        float _1868 = _1867 * 0.3010300099849701f;
        if (!(_1868 <= -5.2601776123046875f)) {
          if ((bool)(_1868 > -5.2601776123046875f) && (bool)(_1868 < -0.7447274923324585f)) {
            float _1876 = (_1867 * 0.19999998807907104f) + 3.494786262512207f;
            int _1877 = int(_1876);
            float _1879 = _1876 - float(_1877);
            float _1881 = _global_0[_1877];
            float _1884 = _global_0[(_1877 + 1)];
            float _1889 = _1881 * 0.5f;
            _1921 = dot(float3((_1879 * _1879), _1879, 1.0f), float3(mad((_global_0[(_1877 + 2)]), 0.5f, mad(_1884, -1.0f, _1889)), (_1884 - _1881), mad(_1884, 0.5f, _1889)));
          } else {
            if ((bool)(_1868 >= -0.7447274923324585f) && (bool)(_1868 < 4.673812389373779f)) {
              float _1901 = (_1867 * 0.1666666567325592f) + 0.4123218357563019f;
              int _1902 = int(_1901);
              float _1904 = _1901 - float(_1902);
              float _1906 = _global_1[_1902];
              float _1909 = _global_1[(_1902 + 1)];
              float _1914 = _1906 * 0.5f;
              _1921 = dot(float3((_1904 * _1904), _1904, 1.0f), float3(mad((_global_1[(_1902 + 2)]), 0.5f, mad(_1909, -1.0f, _1914)), (_1909 - _1906), mad(_1909, 0.5f, _1914)));
            } else {
              _1921 = 4.0f;
            }
          }
        } else {
          _1921 = -4.0f;
        }
        float _1923 = exp2(_1921 * 3.321928024291992f);
        float _1926 = mad(0.16386906802654266f, _1923, mad(0.14067870378494263f, _1864, (_1805 * 0.6954522132873535f)));
        float _1929 = mad(0.0955343171954155f, _1923, mad(0.8596711158752441f, _1864, (_1805 * 0.044794563204050064f)));
        float _1932 = mad(1.0015007257461548f, _1923, mad(0.004025210160762072f, _1864, (_1805 * -0.005525882821530104f)));
        float _1935 = mad(-0.21492856740951538f, _1932, mad(-0.2365107536315918f, _1929, (_1926 * 1.4514392614364624f)));
        float _1938 = mad(-0.09967592358589172f, _1932, mad(1.17622971534729f, _1929, (_1926 * -0.07655377686023712f)));
        float _1941 = mad(0.9977163076400757f, _1932, mad(-0.006032449658960104f, _1929, (_1926 * 0.008316148072481155f)));
        float _1944 = log2(select((_1935 <= 0.0f), 9.999999747378752e-05f, _1935));
        float _1945 = _1944 * 0.3010300099849701f;
        if (!(!(_1945 <= -3.848327875137329f))) {
          _2004 = ((_1944 * 0.9030900001525879f) + 7.54498291015625f);
        } else {
          if ((bool)(_1945 > -3.848327875137329f) && (bool)(_1945 < 0.6812411546707153f)) {
            float _1956 = (_1944 + 12.783867835998535f) * 0.46521204710006714f;
            int _1957 = int(_1956);
            float _1959 = _1956 - float(_1957);
            float _1961 = _global_2[_1957];
            float _1964 = _global_2[(_1957 + 1)];
            float _1969 = _1961 * 0.5f;
            _2004 = dot(float3((_1959 * _1959), _1959, 1.0f), float3(mad((_global_2[(_1957 + 2)]), 0.5f, mad(_1964, -1.0f, _1969)), (_1964 - _1961), mad(_1964, 0.5f, _1969)));
          } else {
            if ((bool)(_1945 >= 0.6812411546707153f) && (bool)(_1945 < 3.653702974319458f)) {
              float _1981 = (_1944 + -2.2630341053009033f) * 0.7089107632637024f;
              int _1982 = int(_1981);
              float _1984 = _1981 - float(_1982);
              float _1986 = _global_3[_1982];
              float _1989 = _global_3[(_1982 + 1)];
              float _1994 = _1986 * 0.5f;
              _2004 = dot(float3((_1984 * _1984), _1984, 1.0f), float3(mad((_global_3[(_1982 + 2)]), 0.5f, mad(_1989, -1.0f, _1994)), (_1989 - _1986), mad(_1989, 0.5f, _1994)));
            } else {
              _2004 = ((_1944 * 0.018061799928545952f) + 2.780777931213379f);
            }
          }
        }
        float _2009 = log2(select((_1938 <= 0.0f), 9.999999747378752e-05f, _1938));
        float _2010 = _2009 * 0.3010300099849701f;
        if (!(!(_2010 <= -3.848327875137329f))) {
          _2069 = ((_2009 * 0.9030900001525879f) + 7.54498291015625f);
        } else {
          if ((bool)(_2010 > -3.848327875137329f) && (bool)(_2010 < 0.6812411546707153f)) {
            float _2021 = (_2009 + 12.783867835998535f) * 0.46521204710006714f;
            int _2022 = int(_2021);
            float _2024 = _2021 - float(_2022);
            float _2026 = _global_2[_2022];
            float _2029 = _global_2[(_2022 + 1)];
            float _2034 = _2026 * 0.5f;
            _2069 = dot(float3((_2024 * _2024), _2024, 1.0f), float3(mad((_global_2[(_2022 + 2)]), 0.5f, mad(_2029, -1.0f, _2034)), (_2029 - _2026), mad(_2029, 0.5f, _2034)));
          } else {
            if ((bool)(_2010 >= 0.6812411546707153f) && (bool)(_2010 < 3.653702974319458f)) {
              float _2046 = (_2009 + -2.2630341053009033f) * 0.7089107632637024f;
              int _2047 = int(_2046);
              float _2049 = _2046 - float(_2047);
              float _2051 = _global_3[_2047];
              float _2054 = _global_3[(_2047 + 1)];
              float _2059 = _2051 * 0.5f;
              _2069 = dot(float3((_2049 * _2049), _2049, 1.0f), float3(mad((_global_3[(_2047 + 2)]), 0.5f, mad(_2054, -1.0f, _2059)), (_2054 - _2051), mad(_2054, 0.5f, _2059)));
            } else {
              _2069 = ((_2009 * 0.018061799928545952f) + 2.780777931213379f);
            }
          }
        }
        float _2074 = log2(select((_1941 <= 0.0f), 9.999999747378752e-05f, _1941));
        float _2075 = _2074 * 0.3010300099849701f;
        if (!(!(_2075 <= -3.848327875137329f))) {
          _2134 = ((_2074 * 0.9030900001525879f) + 7.54498291015625f);
        } else {
          if ((bool)(_2075 > -3.848327875137329f) && (bool)(_2075 < 0.6812411546707153f)) {
            float _2086 = (_2074 + 12.783867835998535f) * 0.46521204710006714f;
            int _2087 = int(_2086);
            float _2089 = _2086 - float(_2087);
            float _2091 = _global_2[_2087];
            float _2094 = _global_2[(_2087 + 1)];
            float _2099 = _2091 * 0.5f;
            _2134 = dot(float3((_2089 * _2089), _2089, 1.0f), float3(mad((_global_2[(_2087 + 2)]), 0.5f, mad(_2094, -1.0f, _2099)), (_2094 - _2091), mad(_2094, 0.5f, _2099)));
          } else {
            if ((bool)(_2075 >= 0.6812411546707153f) && (bool)(_2075 < 3.653702974319458f)) {
              float _2111 = (_2074 + -2.2630341053009033f) * 0.7089107632637024f;
              int _2112 = int(_2111);
              float _2114 = _2111 - float(_2112);
              float _2116 = _global_3[_2112];
              float _2119 = _global_3[(_2112 + 1)];
              float _2124 = _2116 * 0.5f;
              _2134 = dot(float3((_2114 * _2114), _2114, 1.0f), float3(mad((_global_3[(_2112 + 2)]), 0.5f, mad(_2119, -1.0f, _2124)), (_2119 - _2116), mad(_2119, 0.5f, _2124)));
            } else {
              _2134 = ((_2074 * 0.018061799928545952f) + 2.780777931213379f);
            }
          }
        }
        float _2137 = exp2(_2004 * 3.321928024291992f) + -3.507384462864138e-05f;
        float _2138 = exp2(_2069 * 3.321928024291992f) + -3.507384462864138e-05f;
        float _2139 = exp2(_2134 * 3.321928024291992f) + -3.507384462864138e-05f;
        if (!_1562) {
          _2151 = mad(_36, _2139, mad(_35, _2138, (_2137 * _34)));
          _2152 = mad(_39, _2139, mad(_38, _2138, (_2137 * _37)));
          _2153 = mad(_42, _2139, mad(_41, _2138, (_2137 * _40)));
        } else {
          _2151 = _2137;
          _2152 = _2138;
          _2153 = _2139;
        }
        float _2163 = exp2(log2(_2151 * 9.999999747378752e-05f) * 0.1593017578125f);
        float _2164 = exp2(log2(_2152 * 9.999999747378752e-05f) * 0.1593017578125f);
        float _2165 = exp2(log2(_2153 * 9.999999747378752e-05f) * 0.1593017578125f);
        _2932 = exp2(log2((1.0f / ((_2163 * 18.6875f) + 1.0f)) * ((_2163 * 18.8515625f) + 0.8359375f)) * 78.84375f);
        _2933 = exp2(log2((1.0f / ((_2164 * 18.6875f) + 1.0f)) * ((_2164 * 18.8515625f) + 0.8359375f)) * 78.84375f);
        _2934 = exp2(log2((1.0f / ((_2165 * 18.6875f) + 1.0f)) * ((_2165 * 18.8515625f) + 0.8359375f)) * 78.84375f);
      } else {
        if (((uint)(cb0_074x) & -3) == 4) {
          float _2198 = _1461 * 3.0f;
          float _2199 = _1462 * 3.0f;
          float _2202 = mad(0.17733481526374817f, _2199, mad(0.38297808170318604f, _2198, (_1460 * 1.31910240650177f)));
          float _2205 = mad(0.09676162153482437f, _2199, mad(0.8134231567382812f, _2198, (_1460 * 0.2693769633769989f)));
          float _2208 = mad(0.870704174041748f, _2199, mad(0.11154405772686005f, _2198, (_1460 * 0.05263196676969528f)));
          float _2212 = max(max(_2202, _2205), _2208);
          float _2217 = (max(_2212, 1.000000013351432e-10f) - max(min(min(_2202, _2205), _2208), 1.000000013351432e-10f)) / max(_2212, 0.009999999776482582f);
          float _2230 = ((_2205 + _2202) + _2208) + (sqrt((((_2208 - _2205) * _2208) + ((_2205 - _2202) * _2205)) + ((_2202 - _2208) * _2202)) * 1.75f);
          float _2231 = _2230 * 0.3333333432674408f;
          float _2232 = _2217 + -0.4000000059604645f;
          float _2233 = _2232 * 5.0f;
          float _2237 = max((1.0f - abs(_2232 * 2.5f)), 0.0f);
          float _2248 = ((float(((int)(uint)((bool)(_2233 > 0.0f))) - ((int)(uint)((bool)(_2233 < 0.0f)))) * (1.0f - (_2237 * _2237))) + 1.0f) * 0.02500000037252903f;
          if (!(_2231 <= 0.0533333346247673f)) {
            if (!(_2231 >= 0.1599999964237213f)) {
              _2257 = (((0.23999999463558197f / _2230) + -0.5f) * _2248);
            } else {
              _2257 = 0.0f;
            }
          } else {
            _2257 = _2248;
          }
          float _2258 = _2257 + 1.0f;
          float _2259 = _2258 * _2202;
          float _2260 = _2258 * _2205;
          float _2261 = _2258 * _2208;
          if (!((bool)(_2259 == _2260) && (bool)(_2260 == _2261))) {
            float _2268 = ((_2259 * 2.0f) - _2260) - _2261;
            float _2271 = ((_2205 - _2208) * 1.7320507764816284f) * _2258;
            float _2273 = atan(_2271 / _2268);
            bool _2276 = (_2268 < 0.0f);
            bool _2277 = (_2268 == 0.0f);
            bool _2278 = (_2271 >= 0.0f);
            bool _2279 = (_2271 < 0.0f);
            _2290 = select((_2278 && _2277), 90.0f, select((_2279 && _2277), -90.0f, (select((_2279 && _2276), (_2273 + -3.1415927410125732f), select((_2278 && _2276), (_2273 + 3.1415927410125732f), _2273)) * 57.2957763671875f)));
          } else {
            _2290 = 0.0f;
          }
          float _2295 = min(max(select((_2290 < 0.0f), (_2290 + 360.0f), _2290), 0.0f), 360.0f);
          if (_2295 < -180.0f) {
            _2304 = (_2295 + 360.0f);
          } else {
            if (_2295 > 180.0f) {
              _2304 = (_2295 + -360.0f);
            } else {
              _2304 = _2295;
            }
          }
          if ((bool)(_2304 > -67.5f) && (bool)(_2304 < 67.5f)) {
            float _2310 = (_2304 + 67.5f) * 0.029629629105329514f;
            int _2311 = int(_2310);
            float _2313 = _2310 - float(_2311);
            float _2314 = _2313 * _2313;
            float _2315 = _2314 * _2313;
            if (_2311 == 3) {
              _2343 = (((0.1666666716337204f - (_2313 * 0.5f)) + (_2314 * 0.5f)) - (_2315 * 0.1666666716337204f));
            } else {
              if (_2311 == 2) {
                _2343 = ((0.6666666865348816f - _2314) + (_2315 * 0.5f));
              } else {
                if (_2311 == 1) {
                  _2343 = (((_2315 * -0.5f) + 0.1666666716337204f) + ((_2314 + _2313) * 0.5f));
                } else {
                  _2343 = select((_2311 == 0), (_2315 * 0.1666666716337204f), 0.0f);
                }
              }
            }
          } else {
            _2343 = 0.0f;
          }
          float _2352 = min(max(((((_2217 * 0.27000001072883606f) * (0.029999999329447746f - _2259)) * _2343) + _2259), 0.0f), 65535.0f);
          float _2353 = min(max(_2260, 0.0f), 65535.0f);
          float _2354 = min(max(_2261, 0.0f), 65535.0f);
          float _2367 = min(max(mad(-0.21492856740951538f, _2354, mad(-0.2365107536315918f, _2353, (_2352 * 1.4514392614364624f))), 0.0f), 65535.0f);
          float _2368 = min(max(mad(-0.09967592358589172f, _2354, mad(1.17622971534729f, _2353, (_2352 * -0.07655377686023712f))), 0.0f), 65535.0f);
          float _2369 = min(max(mad(0.9977163076400757f, _2354, mad(-0.006032449658960104f, _2353, (_2352 * 0.008316148072481155f))), 0.0f), 65535.0f);
          float _2370 = dot(float3(_2367, _2368, _2369), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
          float _2377 = ((_2367 - _2370) * 0.9599999785423279f) + _2370;
          float _2378 = ((_2368 - _2370) * 0.9599999785423279f) + _2370;
          float _2379 = ((_2369 - _2370) * 0.9599999785423279f) + _2370;
          float _2382 = log2(select((_2377 <= 0.0f), 6.103515625e-05f, _2377));
          float _2383 = _2382 * 0.3010300099849701f;
          if (!(_2383 <= -5.2601776123046875f)) {
            if ((bool)(_2383 > -5.2601776123046875f) && (bool)(_2383 < -0.7447274923324585f)) {
              float _2391 = (_2382 * 0.19999998807907104f) + 3.494786262512207f;
              int _2392 = int(_2391);
              float _2394 = _2391 - float(_2392);
              float _2396 = _global_0[_2392];
              float _2399 = _global_0[(_2392 + 1)];
              float _2404 = _2396 * 0.5f;
              _2436 = dot(float3((_2394 * _2394), _2394, 1.0f), float3(mad((_global_0[(_2392 + 2)]), 0.5f, mad(_2399, -1.0f, _2404)), (_2399 - _2396), mad(_2399, 0.5f, _2404)));
            } else {
              if ((bool)(_2383 >= -0.7447274923324585f) && (bool)(_2383 < 4.673812389373779f)) {
                float _2416 = (_2382 * 0.1666666567325592f) + 0.4123218357563019f;
                int _2417 = int(_2416);
                float _2419 = _2416 - float(_2417);
                float _2421 = _global_1[_2417];
                float _2424 = _global_1[(_2417 + 1)];
                float _2429 = _2421 * 0.5f;
                _2436 = dot(float3((_2419 * _2419), _2419, 1.0f), float3(mad((_global_1[(_2417 + 2)]), 0.5f, mad(_2424, -1.0f, _2429)), (_2424 - _2421), mad(_2424, 0.5f, _2429)));
              } else {
                _2436 = 4.0f;
              }
            }
          } else {
            _2436 = -4.0f;
          }
          float _2438 = exp2(_2436 * 3.321928024291992f);
          float _2441 = log2(select((_2378 <= 0.0f), 6.103515625e-05f, _2378));
          float _2442 = _2441 * 0.3010300099849701f;
          if (!(_2442 <= -5.2601776123046875f)) {
            if ((bool)(_2442 > -5.2601776123046875f) && (bool)(_2442 < -0.7447274923324585f)) {
              float _2450 = (_2441 * 0.19999998807907104f) + 3.494786262512207f;
              int _2451 = int(_2450);
              float _2453 = _2450 - float(_2451);
              float _2455 = _global_0[_2451];
              float _2458 = _global_0[(_2451 + 1)];
              float _2463 = _2455 * 0.5f;
              _2495 = dot(float3((_2453 * _2453), _2453, 1.0f), float3(mad((_global_0[(_2451 + 2)]), 0.5f, mad(_2458, -1.0f, _2463)), (_2458 - _2455), mad(_2458, 0.5f, _2463)));
            } else {
              if ((bool)(_2442 >= -0.7447274923324585f) && (bool)(_2442 < 4.673812389373779f)) {
                float _2475 = (_2441 * 0.1666666567325592f) + 0.4123218357563019f;
                int _2476 = int(_2475);
                float _2478 = _2475 - float(_2476);
                float _2480 = _global_1[_2476];
                float _2483 = _global_1[(_2476 + 1)];
                float _2488 = _2480 * 0.5f;
                _2495 = dot(float3((_2478 * _2478), _2478, 1.0f), float3(mad((_global_1[(_2476 + 2)]), 0.5f, mad(_2483, -1.0f, _2488)), (_2483 - _2480), mad(_2483, 0.5f, _2488)));
              } else {
                _2495 = 4.0f;
              }
            }
          } else {
            _2495 = -4.0f;
          }
          float _2497 = exp2(_2495 * 3.321928024291992f);
          float _2500 = log2(select((_2379 <= 0.0f), 6.103515625e-05f, _2379));
          float _2501 = _2500 * 0.3010300099849701f;
          if (!(_2501 <= -5.2601776123046875f)) {
            if ((bool)(_2501 > -5.2601776123046875f) && (bool)(_2501 < -0.7447274923324585f)) {
              float _2509 = (_2500 * 0.19999998807907104f) + 3.494786262512207f;
              int _2510 = int(_2509);
              float _2512 = _2509 - float(_2510);
              float _2514 = _global_0[_2510];
              float _2517 = _global_0[(_2510 + 1)];
              float _2522 = _2514 * 0.5f;
              _2554 = dot(float3((_2512 * _2512), _2512, 1.0f), float3(mad((_global_0[(_2510 + 2)]), 0.5f, mad(_2517, -1.0f, _2522)), (_2517 - _2514), mad(_2517, 0.5f, _2522)));
            } else {
              if ((bool)(_2501 >= -0.7447274923324585f) && (bool)(_2501 < 4.673812389373779f)) {
                float _2534 = (_2500 * 0.1666666567325592f) + 0.4123218357563019f;
                int _2535 = int(_2534);
                float _2537 = _2534 - float(_2535);
                float _2539 = _global_1[_2535];
                float _2542 = _global_1[(_2535 + 1)];
                float _2547 = _2539 * 0.5f;
                _2554 = dot(float3((_2537 * _2537), _2537, 1.0f), float3(mad((_global_1[(_2535 + 2)]), 0.5f, mad(_2542, -1.0f, _2547)), (_2542 - _2539), mad(_2542, 0.5f, _2547)));
              } else {
                _2554 = 4.0f;
              }
            }
          } else {
            _2554 = -4.0f;
          }
          float _2556 = exp2(_2554 * 3.321928024291992f);
          float _2559 = mad(0.16386906802654266f, _2556, mad(0.14067870378494263f, _2497, (_2438 * 0.6954522132873535f)));
          float _2562 = mad(0.0955343171954155f, _2556, mad(0.8596711158752441f, _2497, (_2438 * 0.044794563204050064f)));
          float _2565 = mad(1.0015007257461548f, _2556, mad(0.004025210160762072f, _2497, (_2438 * -0.005525882821530104f)));
          float _2568 = mad(-0.21492856740951538f, _2565, mad(-0.2365107536315918f, _2562, (_2559 * 1.4514392614364624f)));
          float _2571 = mad(-0.09967592358589172f, _2565, mad(1.17622971534729f, _2562, (_2559 * -0.07655377686023712f)));
          float _2574 = mad(0.9977163076400757f, _2565, mad(-0.006032449658960104f, _2562, (_2559 * 0.008316148072481155f)));
          float _2577 = log2(select((_2568 <= 0.0f), 9.999999747378752e-05f, _2568));
          float _2578 = _2577 * 0.3010300099849701f;
          if (!(_2578 <= -3.848327875137329f)) {
            if ((bool)(_2578 > -3.848327875137329f) && (bool)(_2578 < 0.6812411546707153f)) {
              float _2586 = (_2577 + 12.783867835998535f) * 0.46521204710006714f;
              int _2587 = int(_2586);
              float _2589 = _2586 - float(_2587);
              float _2591 = _global_4[_2587];
              float _2594 = _global_4[(_2587 + 1)];
              float _2599 = _2591 * 0.5f;
              _2634 = dot(float3((_2589 * _2589), _2589, 1.0f), float3(mad((_global_4[(_2587 + 2)]), 0.5f, mad(_2594, -1.0f, _2599)), (_2594 - _2591), mad(_2594, 0.5f, _2599)));
            } else {
              if ((bool)(_2578 >= 0.6812411546707153f) && (bool)(_2578 < 3.7613162994384766f)) {
                float _2611 = (_2577 + -2.2630341053009033f) * 0.6841424107551575f;
                int _2612 = int(_2611);
                float _2614 = _2611 - float(_2612);
                float _2616 = _global_5[_2612];
                float _2619 = _global_5[(_2612 + 1)];
                float _2624 = _2616 * 0.5f;
                _2634 = dot(float3((_2614 * _2614), _2614, 1.0f), float3(mad((_global_5[(_2612 + 2)]), 0.5f, mad(_2619, -1.0f, _2624)), (_2619 - _2616), mad(_2619, 0.5f, _2624)));
              } else {
                _2634 = ((_2577 * 0.036123599857091904f) + 2.849672317504883f);
              }
            }
          } else {
            _2634 = -2.301030158996582f;
          }
          float _2636 = exp2(_2634 * 3.321928024291992f);
          float _2639 = log2(select((_2571 <= 0.0f), 9.999999747378752e-05f, _2571));
          float _2640 = _2639 * 0.3010300099849701f;
          if (!(_2640 <= -3.848327875137329f)) {
            if ((bool)(_2640 > -3.848327875137329f) && (bool)(_2640 < 0.6812411546707153f)) {
              float _2648 = (_2639 + 12.783867835998535f) * 0.46521204710006714f;
              int _2649 = int(_2648);
              float _2651 = _2648 - float(_2649);
              float _2653 = _global_4[_2649];
              float _2656 = _global_4[(_2649 + 1)];
              float _2661 = _2653 * 0.5f;
              _2696 = dot(float3((_2651 * _2651), _2651, 1.0f), float3(mad((_global_4[(_2649 + 2)]), 0.5f, mad(_2656, -1.0f, _2661)), (_2656 - _2653), mad(_2656, 0.5f, _2661)));
            } else {
              if ((bool)(_2640 >= 0.6812411546707153f) && (bool)(_2640 < 3.7613162994384766f)) {
                float _2673 = (_2639 + -2.2630341053009033f) * 0.6841424107551575f;
                int _2674 = int(_2673);
                float _2676 = _2673 - float(_2674);
                float _2678 = _global_5[_2674];
                float _2681 = _global_5[(_2674 + 1)];
                float _2686 = _2678 * 0.5f;
                _2696 = dot(float3((_2676 * _2676), _2676, 1.0f), float3(mad((_global_5[(_2674 + 2)]), 0.5f, mad(_2681, -1.0f, _2686)), (_2681 - _2678), mad(_2681, 0.5f, _2686)));
              } else {
                _2696 = ((_2639 * 0.036123599857091904f) + 2.849672317504883f);
              }
            }
          } else {
            _2696 = -2.301030158996582f;
          }
          float _2698 = exp2(_2696 * 3.321928024291992f);
          float _2701 = log2(select((_2574 <= 0.0f), 9.999999747378752e-05f, _2574));
          float _2702 = _2701 * 0.3010300099849701f;
          if (!(_2702 <= -3.848327875137329f)) {
            if ((bool)(_2702 > -3.848327875137329f) && (bool)(_2702 < 0.6812411546707153f)) {
              float _2710 = (_2701 + 12.783867835998535f) * 0.46521204710006714f;
              int _2711 = int(_2710);
              float _2713 = _2710 - float(_2711);
              float _2715 = _global_4[_2711];
              float _2718 = _global_4[(_2711 + 1)];
              float _2723 = _2715 * 0.5f;
              _2758 = dot(float3((_2713 * _2713), _2713, 1.0f), float3(mad((_global_4[(_2711 + 2)]), 0.5f, mad(_2718, -1.0f, _2723)), (_2718 - _2715), mad(_2718, 0.5f, _2723)));
            } else {
              if ((bool)(_2702 >= 0.6812411546707153f) && (bool)(_2702 < 3.7613162994384766f)) {
                float _2735 = (_2701 + -2.2630341053009033f) * 0.6841424107551575f;
                int _2736 = int(_2735);
                float _2738 = _2735 - float(_2736);
                float _2740 = _global_5[_2736];
                float _2743 = _global_5[(_2736 + 1)];
                float _2748 = _2740 * 0.5f;
                _2758 = dot(float3((_2738 * _2738), _2738, 1.0f), float3(mad((_global_5[(_2736 + 2)]), 0.5f, mad(_2743, -1.0f, _2748)), (_2743 - _2740), mad(_2743, 0.5f, _2748)));
              } else {
                _2758 = ((_2701 * 0.036123599857091904f) + 2.849672317504883f);
              }
            }
          } else {
            _2758 = -2.301030158996582f;
          }
          float _2760 = exp2(_2758 * 3.321928024291992f);
          if (!((uint)(cb0_074x) == 6)) {
            _2772 = mad(_36, _2760, mad(_35, _2698, (_2636 * _34)));
            _2773 = mad(_39, _2760, mad(_38, _2698, (_2636 * _37)));
            _2774 = mad(_42, _2760, mad(_41, _2698, (_2636 * _40)));
          } else {
            _2772 = _2636;
            _2773 = _2698;
            _2774 = _2760;
          }
          float _2784 = exp2(log2(_2772 * 9.999999747378752e-05f) * 0.1593017578125f);
          float _2785 = exp2(log2(_2773 * 9.999999747378752e-05f) * 0.1593017578125f);
          float _2786 = exp2(log2(_2774 * 9.999999747378752e-05f) * 0.1593017578125f);
          _2932 = exp2(log2((1.0f / ((_2784 * 18.6875f) + 1.0f)) * ((_2784 * 18.8515625f) + 0.8359375f)) * 78.84375f);
          _2933 = exp2(log2((1.0f / ((_2785 * 18.6875f) + 1.0f)) * ((_2785 * 18.8515625f) + 0.8359375f)) * 78.84375f);
          _2934 = exp2(log2((1.0f / ((_2786 * 18.6875f) + 1.0f)) * ((_2786 * 18.8515625f) + 0.8359375f)) * 78.84375f);
        } else {
          if ((uint)(cb0_074x) == 7) {
            float _2819 = mad(0.04736635088920593f, _1462, mad(0.3395121395587921f, _1461, (_1460 * 0.613191545009613f)));
            float _2822 = mad(0.01345000695437193f, _1462, mad(0.9163357615470886f, _1461, (_1460 * 0.07020691782236099f)));
            float _2825 = mad(0.8696067929267883f, _1462, mad(0.1095672994852066f, _1461, (_1460 * 0.020618872717022896f)));
            float _2844 = exp2(log2(mad(_36, _2825, mad(_35, _2822, (_2819 * _34))) * 9.999999747378752e-05f) * 0.1593017578125f);
            float _2845 = exp2(log2(mad(_39, _2825, mad(_38, _2822, (_2819 * _37))) * 9.999999747378752e-05f) * 0.1593017578125f);
            float _2846 = exp2(log2(mad(_42, _2825, mad(_41, _2822, (_2819 * _40))) * 9.999999747378752e-05f) * 0.1593017578125f);
            _2932 = exp2(log2((1.0f / ((_2844 * 18.6875f) + 1.0f)) * ((_2844 * 18.8515625f) + 0.8359375f)) * 78.84375f);
            _2933 = exp2(log2((1.0f / ((_2845 * 18.6875f) + 1.0f)) * ((_2845 * 18.8515625f) + 0.8359375f)) * 78.84375f);
            _2934 = exp2(log2((1.0f / ((_2846 * 18.6875f) + 1.0f)) * ((_2846 * 18.8515625f) + 0.8359375f)) * 78.84375f);
          } else {
            if (!((uint)(cb0_074x) == 8)) {
              if ((uint)(cb0_074x) == 9) {
                float _2881 = mad(0.04736635088920593f, _1450, mad(0.3395121395587921f, _1449, (_1448 * 0.613191545009613f)));
                float _2884 = mad(0.01345000695437193f, _1450, mad(0.9163357615470886f, _1449, (_1448 * 0.07020691782236099f)));
                float _2887 = mad(0.8696067929267883f, _1450, mad(0.1095672994852066f, _1449, (_1448 * 0.020618872717022896f)));
                _2932 = mad(_36, _2887, mad(_35, _2884, (_2881 * _34)));
                _2933 = mad(_39, _2887, mad(_38, _2884, (_2881 * _37)));
                _2934 = mad(_42, _2887, mad(_41, _2884, (_2881 * _40)));
              } else {
                float _2900 = mad(0.04736635088920593f, _1476, mad(0.3395121395587921f, _1475, (_1474 * 0.613191545009613f)));
                float _2903 = mad(0.01345000695437193f, _1476, mad(0.9163357615470886f, _1475, (_1474 * 0.07020691782236099f)));
                float _2906 = mad(0.8696067929267883f, _1476, mad(0.1095672994852066f, _1475, (_1474 * 0.020618872717022896f)));
                float _2921 = ((0.4545454680919647f - cb0_027z) * cb0_038w) + cb0_027z;
                _2932 = exp2(_2921 * log2(mad(_36, _2906, mad(_35, _2903, (_2900 * _34)))));
                _2933 = exp2(_2921 * log2(mad(_39, _2906, mad(_38, _2903, (_2900 * _37)))));
                _2934 = exp2(_2921 * log2(mad(_42, _2906, mad(_41, _2903, (_2900 * _40)))));
              }
            } else {
              _2932 = _1460;
              _2933 = _1461;
              _2934 = _1462;
            }
          }
        }
      }
    }
  }
  SV_Target.x = (_2932 * 0.9523810148239136f);
  SV_Target.y = (_2933 * 0.9523810148239136f);
  SV_Target.z = (_2934 * 0.9523810148239136f);
  SV_Target.w = 0.0f;
  return SV_Target;
}
