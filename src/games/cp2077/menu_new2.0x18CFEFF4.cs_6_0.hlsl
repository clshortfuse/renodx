// menu (no render)

#include "./colormath.hlsl"
#include "./cp2077.h"
#include "./injectedBuffer.hlsl"

static float _291;

cbuffer _31_33 : register(b0, space0) {
  float4 cb0[30] : packoffset(c0);
};

cbuffer _40_42 : register(b6, space0) {
  float4 cb6[30] : packoffset(c0);
};

cbuffer _36_38 : register(b12, space0) {
  float4 cb12[99] : packoffset(c0);
};

Texture2D<float4> _8 : register(t32, space0);
Texture2D<uint2> _12 : register(t51, space0);
Texture2D<float4> _13 : register(t0, space0);
Texture2D<float4> _14 : register(t1, space0);
Texture2D<float4> _15 : register(t2, space0);
Texture2D<float4> _16 : register(t3, space0);
Texture2D<float4> _17 : register(t5, space0);
Texture2D<float4> _18 : register(t6, space0);
Texture2D<float4> _19 : register(t8, space0);
StructuredBuffer<float> _22 : register(t9, space0);
Texture2D<float4> _23 : register(t10, space0);
RWTexture2D<float4> _26 : register(u0, space0);
RWTexture2D<float4> _27 : register(u1, space0);
SamplerState _45 : register(s0, space0);

static uint3 gl_GlobalInvocationID;
struct SPIRV_Cross_Input {
  uint3 gl_GlobalInvocationID : SV_DispatchThreadID;
};

void comp_main() {
  float _70 = float(gl_GlobalInvocationID.x);
  float _71 = float(gl_GlobalInvocationID.y);
  float _81 = (_70 + 0.5f) / cb6[12u].z;
  float _82 = (_71 + 0.5f) / cb6[12u].w;
  bool _98 = ((_81 < cb6[9u].y) || (_82 < cb6[9u].z)) || (((1.0f - cb6[9u].y) < _81) || ((1.0f - cb6[9u].z) < _82));
  float _99;
  float _103;
  float _106;
  if (_98) {
    _99 = 0.0f;
    _103 = 0.0f;
    _106 = 0.0f;
  } else {
    bool _119 = cb6[0u].x > 0.0f;
    float _121 = _81 + (-0.5f);
    float _123 = _82 + (-0.5f);
    float _127 = cb6[0u].y + 0.119999997317790985107421875f;
    float _131 = max(_127 + abs(_121), 0.0f);
    float _132 = max(_127 + abs(_123), 0.0f);
    float _139 = clamp(sqrt((_132 * _132) + (_131 * _131)) * 20.0f, 0.0f, 1.0f);
    float _146 = ((_139 * _139) * cb6[0u].x) * (3.0f - (_139 * 2.0f));
    float _147 = _146 * 0.699999988079071044921875f;
    float _150 = ceil(_147) - _147;
    float _153 = (_150 * 50.0f) + 1.0f;
    float _162 = (((cos(cb0[0u].x) * 2.0f) + 200.0f) * _150) + 1.0f;
    float _174 = frac(floor(_153 * _81) * 0.103100001811981201171875f);
    float _175 = frac(floor(_162 * _82) * 0.103100001811981201171875f);
    float _176 = _175 + 33.3300018310546875f;
    float _178 = _174 + 33.3300018310546875f;
    float _179 = dot(float3(_174, _175, _174), float3(_176, _178, _178));
    float _185 = _175 + _174;
    float _188 = frac((_185 + (_179 * 2.0f)) * (_179 + _174));
    float _213 = abs(sin((_146 * 0.1680000126361846923828125f) * cb0[0u].x));
    float _218 = (_146 * 0.14000000059604644775390625f) + 1.0f;
    float _224 = dot(float3(_175, _174, _175), float3(_178, _176, _176));
    float _237 = (floor(frac(frac((_185 + (_224 * 2.0f)) * (_224 + _175)) + _213) * _218) * (1.0f / (((cos(frac(_188 + abs(sin(cb0[0u].x * 5000.0f))) * cb0[0u].x) * 0.0199999995529651641845703125f) + 1.0f) * _162))) + _82;
    float _239 = _237 * cb6[12u].w;
    float _248 = frac(round((_146 * 0.125f) * _239) * 0.103100001811981201171875f);
    float _249 = frac((_146 * 2.0620000362396240234375f) * cb0[0u].x);
    float _250 = _249 + 33.3300018310546875f;
    float _251 = _248 + 33.3300018310546875f;
    float _252 = dot(float3(_248, _249, _248), float3(_250, _251, _251));
    float _266 = frac(round((_146 * 0.012500000186264514923095703125f) * _239) * 0.103100001811981201171875f);
    float _267 = _266 + 33.3300018310546875f;
    float _268 = dot(float3(_266, _249, _266), float3(_250, _267, _267));
    float _285 = _119 ? ((((cb6[12u].z * ((floor(frac(_188 + _213) * _218) * (1.0f / (((sin(frac(_188 + abs(sin(cb0[0u].x * 100.0f))) * cb0[0u].x) * 0.0199999995529651641845703125f) + 1.0f) * _153))) + _81)) + 2.0f) + ((((_146 * _146) * 960.0f) * frac(((_249 + _248) + (_252 * 2.0f)) * (_252 + _248))) * frac(((_249 + _266) + (_268 * 2.0f)) * (_268 + _266)))) / cb6[12u].z) : _81;
    float _286 = _119 ? _237 : _82;
    bool _287 = cb6[0u].y > 0.0f;
    bool _289 = cb6[12u].x > 0.0f;
    float _953;
    float _954;
    float _955;
    float _957;
    float _959;
    if (_287) {
      float _315 = floor(_285 * 2.5f) * 0.4000000059604644775390625f;
      float _317 = floor(_286 * 10.0f) * 0.100000001490116119384765625f;
      float _319 = _315 + 0.20000000298023223876953125f;
      float _321 = _317 + 0.0500000007450580596923828125f;
      float _325 = floor((cb0[0u].x * 2.0f) + (cb6[0u].y * 20.0f));
      float _326 = _325 * 0.00999999977648258209228515625f;
      float _340 = _319 + (((_326 + 1.0f) - (floor(_325 * 9.9999997473787516355514526367188e-05f) * 100.0f)) * 0.00999999977648258209228515625f);
      float _341 = _321 + (((_325 + 1.0f) - (floor(_326) * 100.0f)) * 0.00999999977648258209228515625f);
      float _351 = frac(_340 * 0.103100001811981201171875f);
      float _352 = frac(_341 * 0.103100001811981201171875f);
      float _354 = _351 + 33.3300018310546875f;
      float _355 = dot(float3(_351, _352, _351), float3(_352 + 33.3300018310546875f, _354, _354));
      float _363 = frac(((_352 + _351) + (_355 * 2.0f)) * (_355 + _351));
      float _366 = ((1.0f - _363) * ((cb6[0u].y * 0.75f) + (-0.100000001490116119384765625f))) + _363;
      float _369 = round(_366 - (_366 * (0.5f - (cb6[0u].y * 0.375f))));
      float _370 = _369 * _369;
      float _371 = _285 - _319;
      float _372 = _286 - _321;
      float _373 = _319 * _340;
      float _374 = _321 * _341;
      float _379 = (_315 + 0.300000011920928955078125f) * _340;
      float _380 = (_317 + 0.1500000059604644775390625f) * _341;
      float _383 = frac(_373 * 0.103100001811981201171875f);
      float _384 = frac(_374 * 0.103100001811981201171875f);
      float _386 = _383 + 33.3300018310546875f;
      float _387 = dot(float3(_383, _384, _383), float3(_384 + 33.3300018310546875f, _386, _386));
      float _400 = frac((_373 + 0.100000001490116119384765625f) * 0.103100001811981201171875f);
      float _401 = frac((_374 + 0.100000001490116119384765625f) * 0.103100001811981201171875f);
      float _403 = _400 + 33.3300018310546875f;
      float _404 = dot(float3(_400, _401, _400), float3(_401 + 33.3300018310546875f, _403, _403));
      float _418 = floor(frac(((_384 + _383) + (_387 * 2.0f)) * (_387 + _383)) * 3.25f) * 0.100000001490116119384765625f;
      float _419 = floor(frac(((_401 + _400) + (_404 * 2.0f)) * (_404 + _400)) * 3.25f) * 0.02500000037252902984619140625f;
      float _421 = _418 + (-0.20000000298023223876953125f);
      float _423 = _419 + (-0.0500000007450580596923828125f);
      float _427 = frac(_379 * 0.103100001811981201171875f);
      float _428 = frac(_380 * 0.103100001811981201171875f);
      float _430 = _427 + 33.3300018310546875f;
      float _431 = dot(float3(_427, _428, _427), float3(_428 + 33.3300018310546875f, _430, _430));
      float _444 = frac((_379 + 0.100000001490116119384765625f) * 0.103100001811981201171875f);
      float _445 = frac((_380 + 0.100000001490116119384765625f) * 0.103100001811981201171875f);
      float _447 = _444 + 33.3300018310546875f;
      float _448 = dot(float3(_444, _445, _444), float3(_445 + 33.3300018310546875f, _447, _447));
      float _461 = floor(frac(((_428 + _427) + (_431 * 2.0f)) * (_431 + _427)) * 3.25f) * 0.100000001490116119384765625f;
      float _462 = floor(frac(((_445 + _444) + (_448 * 2.0f)) * (_448 + _444)) * 3.25f) * 0.02500000037252902984619140625f;
      float _463 = _461 + (-0.20000000298023223876953125f);
      float _464 = _462 + (-0.0500000007450580596923828125f);
      float _467 = _371 - _421;
      float _468 = _372 - _423;
      float _478 = (-0.0250000059604644775390625f) - _371;
      float _480 = _478 + _418;
      float _481 = (-0.006250001490116119384765625f) - _372;
      float _483 = _481 + _419;
      uint _498 = (((((uint(_480 > 0.0f) + ((_480 < 0.0f) ? 4294967295u : 0u)) + ((_467 < 0.0f) ? 4294967295u : 0u)) + uint(_467 > 0.0f)) + ((_468 < 0.0f) ? 4294967295u : 0u)) + uint(_468 > 0.0f)) + (uint(_483 > 0.0f) - uint(_483 < 0.0f));
      float _506 = min(float(int(uint(int(_498) > int(3u)) - uint(int(_498) < int(3u)))), 0.0f);
      float _511 = _371 - _463;
      float _512 = _372 - _464;
      float _521 = _478 + _461;
      float _522 = _481 + _462;
      uint _537 = (((((uint(_521 > 0.0f) + ((_521 < 0.0f) ? 4294967295u : 0u)) + ((_511 < 0.0f) ? 4294967295u : 0u)) + uint(_511 > 0.0f)) + ((_512 < 0.0f) ? 4294967295u : 0u)) + uint(_512 > 0.0f)) + (uint(_522 > 0.0f) - uint(_522 < 0.0f));
      float _544 = min(float(int(uint(int(_537) > int(3u)) - uint(int(_537) < int(3u)))), 0.0f);
      float _551 = _285 + ((_370 * (((_421 - _463) * _544) + ((_463 - _421) * _506))) * 1.2000000476837158203125f);
      float _555 = _286 + ((_370 * (((_423 - _464) * _544) + ((_464 - _423) * _506))) * 1.2000000476837158203125f);
      uint _556 = uint(_81);
      uint _557 = uint(_82);
      float4 _558 = _8.Load(int3(uint2(_556, _557), 0u));
      float _560 = _558.y;
      float _735;
      if (_289) {
        uint _646 = 1u << (_12.Load(int3(uint2(uint(cb12[79u].x * float(_556)), uint(cb12[79u].y * float(_557))), 0u)).y & 31u);
        float4 _650 = _14.Load(int3(uint2(_556 & 255u, _557 & 255u), 0u));
        float _653 = _650.y;
        float _657 = ((_650.x + _653) + _650.z) * 0.3333333432674407958984375f;
        float _659 = cb6[12u].x * _560;
        float _668 = _653 - _657;
        float _670 = _657 + (-0.5f);
        uint4 _677 = asuint(cb6[17u]);
        float _729 = (((((((_670 + (cb6[18u].w * _668)) * cb6[18u].y) * float(min((_677.x & _646), 1u))) + 1.0f) * (_659 / max(1.0f - _659, 9.9999999747524270787835121154785e-07f))) * ((((_670 + (cb6[19u].w * _668)) * cb6[19u].y) * float(min((_677.y & _646), 1u))) + 1.0f)) * ((((_670 + (cb6[20u].w * _668)) * cb6[20u].y) * float(min((_677.z & _646), 1u))) + 1.0f)) * ((((_670 + (cb6[21u].w * _668)) * cb6[21u].y) * float(min((_677.w & _646), 1u))) + 1.0f);
        _735 = cb6[12u].y * (_729 / max(_729 + 1.0f, 1.0f));
      } else {
        _735 = _560;
      }
      float _737 = _735 * cb6[0u].y;
      float _739 = (_551 + (-0.5f)) + _737;
      float _741 = (0.5f - _555) + _737;
      float _743 = atan(_741 / _739);
      bool _748 = _739 < 0.0f;
      bool _749 = _739 == 0.0f;
      bool _750 = _741 >= 0.0f;
      bool _751 = _741 < 0.0f;
      float _765 = sqrt((_739 * _739) + (_741 * _741));
      float _768 = ((_749 && _750) ? 1.57079637050628662109375f : ((_749 && _751) ? (-1.57079637050628662109375f) : ((_748 && _751) ? (_743 + (-3.1415927410125732421875f)) : ((_748 && _750) ? (_743 + 3.1415927410125732421875f) : _743)))) + clamp(cb6[0u].y * (_735 * 0.5f), 0.0f, 1.0f);
      uint _779 = uint(cb6[12u].z * frac((cos(_768) * _765) + 0.5f));
      uint _780 = uint(cb6[12u].w * frac(0.5f - (sin(_768) * _765)));
      float4 _781 = _8.Load(int3(uint2(_779, _780), 0u));
      float _783 = _781.x;
      float _784 = _781.y;
      float _785 = _781.z;
      float frontier_phi_13_11_ladder;
      float frontier_phi_13_11_ladder_1;
      float frontier_phi_13_11_ladder_2;
      float frontier_phi_13_11_ladder_3;
      float frontier_phi_13_11_ladder_4;
      if (_289) {
        uint _1057 = 1u << (_12.Load(int3(uint2(uint(cb12[79u].x * float(_779)), uint(cb12[79u].y * float(_780))), 0u)).y & 31u);
        float4 _1060 = _14.Load(int3(uint2(_779 & 255u, _780 & 255u), 0u));
        float _1062 = _1060.x;
        float _1063 = _1060.y;
        float _1064 = _1060.z;
        float _1067 = ((_1062 + _1063) + _1064) * 0.3333333432674407958984375f;
        float _1068 = cb6[12u].x * _783;
        float _1069 = cb6[12u].x * _784;
        float _1070 = cb6[12u].x * _785;
        float _1083 = _1062 - _1067;
        float _1084 = _1063 - _1067;
        float _1085 = _1064 - _1067;
        float _1089 = _1067 + (-0.5f);
        uint4 _1101 = asuint(cb6[17u]);
        float _1105 = float(min((_1101.x & _1057), 1u));
        float _1133 = float(min((_1101.y & _1057), 1u));
        float _1161 = float(min((_1101.z & _1057), 1u));
        float _1189 = float(min((_1101.w & _1057), 1u));
        float _1196 = (((((((_1089 + (cb6[18u].w * _1083)) * cb6[18u].x) * _1105) + 1.0f) * (_1068 / max(1.0f - _1068, 9.9999999747524270787835121154785e-07f))) * ((((_1089 + (cb6[19u].w * _1083)) * cb6[19u].x) * _1133) + 1.0f)) * ((((_1089 + (cb6[20u].w * _1083)) * cb6[20u].x) * _1161) + 1.0f)) * ((((_1089 + (cb6[21u].w * _1083)) * cb6[21u].x) * _1189) + 1.0f);
        float _1197 = (((((((_1089 + (cb6[18u].w * _1084)) * cb6[18u].y) * _1105) + 1.0f) * (_1069 / max(1.0f - _1069, 9.9999999747524270787835121154785e-07f))) * ((((_1089 + (cb6[19u].w * _1084)) * cb6[19u].y) * _1133) + 1.0f)) * ((((_1089 + (cb6[20u].w * _1084)) * cb6[20u].y) * _1161) + 1.0f)) * ((((_1089 + (cb6[21u].w * _1084)) * cb6[21u].y) * _1189) + 1.0f);
        float _1198 = (((((((_1089 + (cb6[18u].w * _1085)) * cb6[18u].z) * _1105) + 1.0f) * (_1070 / max(1.0f - _1070, 9.9999999747524270787835121154785e-07f))) * ((((_1089 + (cb6[19u].w * _1085)) * cb6[19u].z) * _1133) + 1.0f)) * ((((_1089 + (cb6[20u].w * _1085)) * cb6[20u].z) * _1161) + 1.0f)) * ((((_1089 + (cb6[21u].w * _1085)) * cb6[21u].z) * _1189) + 1.0f);
        frontier_phi_13_11_ladder = cb6[12u].y * (_1198 / max(_1198 + 1.0f, 1.0f));
        frontier_phi_13_11_ladder_1 = cb6[12u].y * (_1197 / max(_1197 + 1.0f, 1.0f));
        frontier_phi_13_11_ladder_2 = cb6[12u].y * (_1196 / max(_1196 + 1.0f, 1.0f));
        frontier_phi_13_11_ladder_3 = _555;
        frontier_phi_13_11_ladder_4 = _551;
      } else {
        frontier_phi_13_11_ladder = _785;
        frontier_phi_13_11_ladder_1 = _784;
        frontier_phi_13_11_ladder_2 = _783;
        frontier_phi_13_11_ladder_3 = _555;
        frontier_phi_13_11_ladder_4 = _551;
      }
      _953 = frontier_phi_13_11_ladder_4;
      _954 = frontier_phi_13_11_ladder_3;
      _955 = frontier_phi_13_11_ladder_2;
      _957 = frontier_phi_13_11_ladder_1;
      _959 = frontier_phi_13_11_ladder;
    } else {
      float4 _561 = _8.Load(int3(uint2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y), 0u));
      float _563 = _561.x;
      float _564 = _561.y;
      float _565 = _561.z;
      float frontier_phi_13_6_ladder;
      float frontier_phi_13_6_ladder_1;
      float frontier_phi_13_6_ladder_2;
      float frontier_phi_13_6_ladder_3;
      float frontier_phi_13_6_ladder_4;
      if (_289) {
        uint _798 = 1u << (_12.Load(int3(uint2(uint(cb12[79u].x * _70), uint(cb12[79u].y * _71)), 0u)).y & 31u);
        float4 _801 = _14.Load(int3(uint2(gl_GlobalInvocationID.x & 255u, gl_GlobalInvocationID.y & 255u), 0u));
        float _803 = _801.x;
        float _804 = _801.y;
        float _805 = _801.z;
        float _808 = ((_803 + _804) + _805) * 0.3333333432674407958984375f;
        float _809 = cb6[12u].x * _563;
        float _810 = cb6[12u].x * _564;
        float _811 = cb6[12u].x * _565;
        float _824 = _803 - _808;
        float _825 = _804 - _808;
        float _826 = _805 - _808;
        float _830 = _808 + (-0.5f);
        uint4 _842 = asuint(cb6[17u]);
        float _846 = float(min((_842.x & _798), 1u));
        float _874 = float(min((_842.y & _798), 1u));
        float _902 = float(min((_842.z & _798), 1u));
        float _930 = float(min((_842.w & _798), 1u));
        float _937 = (((((((_830 + (cb6[18u].w * _824)) * cb6[18u].x) * _846) + 1.0f) * (_809 / max(1.0f - _809, 9.9999999747524270787835121154785e-07f))) * ((((_830 + (cb6[19u].w * _824)) * cb6[19u].x) * _874) + 1.0f)) * ((((_830 + (cb6[20u].w * _824)) * cb6[20u].x) * _902) + 1.0f)) * ((((_830 + (cb6[21u].w * _824)) * cb6[21u].x) * _930) + 1.0f);
        float _938 = (((((((_830 + (cb6[18u].w * _825)) * cb6[18u].y) * _846) + 1.0f) * (_810 / max(1.0f - _810, 9.9999999747524270787835121154785e-07f))) * ((((_830 + (cb6[19u].w * _825)) * cb6[19u].y) * _874) + 1.0f)) * ((((_830 + (cb6[20u].w * _825)) * cb6[20u].y) * _902) + 1.0f)) * ((((_830 + (cb6[21u].w * _825)) * cb6[21u].y) * _930) + 1.0f);
        float _939 = (((((((_830 + (cb6[18u].w * _826)) * cb6[18u].z) * _846) + 1.0f) * (_811 / max(1.0f - _811, 9.9999999747524270787835121154785e-07f))) * ((((_830 + (cb6[19u].w * _826)) * cb6[19u].z) * _874) + 1.0f)) * ((((_830 + (cb6[20u].w * _826)) * cb6[20u].z) * _902) + 1.0f)) * ((((_830 + (cb6[21u].w * _826)) * cb6[21u].z) * _930) + 1.0f);
        frontier_phi_13_6_ladder = cb6[12u].y * (_939 / max(_939 + 1.0f, 1.0f));
        frontier_phi_13_6_ladder_1 = cb6[12u].y * (_938 / max(_938 + 1.0f, 1.0f));
        frontier_phi_13_6_ladder_2 = cb6[12u].y * (_937 / max(_937 + 1.0f, 1.0f));
        frontier_phi_13_6_ladder_3 = _286;
        frontier_phi_13_6_ladder_4 = _285;
      } else {
        frontier_phi_13_6_ladder = _565;
        frontier_phi_13_6_ladder_1 = _564;
        frontier_phi_13_6_ladder_2 = _563;
        frontier_phi_13_6_ladder_3 = _286;
        frontier_phi_13_6_ladder_4 = _285;
      }
      _953 = frontier_phi_13_6_ladder_4;
      _954 = frontier_phi_13_6_ladder_3;
      _955 = frontier_phi_13_6_ladder_2;
      _957 = frontier_phi_13_6_ladder_1;
      _959 = frontier_phi_13_6_ladder;
    }
    bool _969 = cb6[1u].z > 0.0f;
    float _1217;
    if ((asuint(cb6[13u]).z != 0u) && _969) {
      _1217 = (cb6[1u].z * (asfloat(_22.Load(6u).x) + (-1.0f))) + 1.0f;
    } else {
      _1217 = 1.0f;
    }
    float _1222 = _953 + (-0.5f);
    float _1224 = (_954 + (-0.5f)) * 2.0f;
    float _1232 = _953 - (((_1224 * _1224) * _1222) * cb6[3u].x);
    float _1233 = _954 - ((((_1222 * _1222) * 2.0f) * _1224) * cb6[3u].y);
    float _1236 = (_1232 + (-0.5f)) * 2.0f;
    float _1237 = (_1233 + (-0.5f)) * 2.0f;
    float _1239 = cb0[0u].x * 0.004999999888241291046142578125f;
    float _1242 = (clamp(_1233, 0.0f, 1.0f) + 1.0f) - _1239;
    float _1247 = clamp(abs(cos(_1242 * 650.0f)), 0.0f, 1.0f);
    float _1253 = clamp(_1232, 0.0f, 1.0f) + 1.0f;
    float _1254 = _1253 - _1239;
    float _1260 = sin(cb0[0u].x);
    float _1261 = _1253 + _1239;
    float _1276 = clamp(((((_1260 + _1260) * 0.100000001490116119384765625f) + 0.540000021457672119140625f) + ((clamp(abs(cos(_1261 * 550.0f)), 0.0f, 1.0f) + clamp(abs(cos(_1254 * 250.0f)), 0.0f, 1.0f)) * 0.1799999773502349853515625f)) * ((_1247 * 0.39999997615814208984375f) + 0.60000002384185791015625f), 0.0f, 1.0f);
    float _1428;
    float _1430;
    float _1432;
    if (cb6[1u].w > 0.0f) {
      float4 _1401 = _18.SampleLevel(_45, float2(_81, _82), 0.0f);
      float _1412 = (clamp(abs(cos(_1242 * 250.0f)), 0.0f, 1.0f) * 0.0007999999797903001308441162109375f) + 0.00120000005699694156646728515625f;
      float _1419 = (_1247 * 0.001199999940581619739532470703125f) + 0.001800000085495412349700927734375f;
      float _1421 = (_1412 + _1401.x) - _1419;
      float _1422 = (_1412 + _1401.y) - _1419;
      float _1423 = (_1412 + _1401.z) - _1419;
      float _1589;
      float _1590;
      float _1591;
      if (cb6[6u].x > 0.0f) {
        float _1579 = clamp((sqrt((_123 * _123) + (_121 * _121)) - cb6[5u].z) / (cb6[5u].w - cb6[5u].z), 0.0f, 1.0f);
        float _1585 = 1.0f - (((_1579 * _1579) * (3.0f - (_1579 * 2.0f))) * cb6[6u].x);
        _1589 = _1585 * _1421;
        _1590 = _1585 * _1422;
        _1591 = _1585 * _1423;
      } else {
        _1589 = _1421;
        _1590 = _1422;
        _1591 = _1423;
      }
      float _1593 = dot(float3(_1589, _1590, _1591), float3(0.2125999927520751953125f, 0.715200006961822509765625f, 0.072200000286102294921875f));
      _1428 = (((_1589 - _1593) * cb6[6u].y) + _1593) * cb6[1u].w;
      _1430 = (((_1590 - _1593) * cb6[6u].y) + _1593) * cb6[1u].w;
      _1432 = (((_1591 - _1593) * cb6[6u].y) + _1593) * cb6[1u].w;
    } else {
      _1428 = 0.0f;
      _1430 = 0.0f;
      _1432 = 0.0f;
    }
    float _1621;
    float _1622;
    float _1623;
    if (cb6[2u].x > 0.0f) {
      float4 _1610 = _17.SampleLevel(_45, float2(_1232, 1.0f - _1233), 0.0f);

      // Custom
      if (injectedData.toneMapGammaCorrection == 1.f) {
        _1610 = renodx::color::correct::GammaSafe(_1610);
      }

      _1621 = (cb6[2u].x * _1610.x) + _1428;
      _1622 = (cb6[2u].x * _1610.y) + _1430;
      _1623 = (cb6[2u].x * _1610.z) + _1432;
    } else {
      _1621 = _1428;
      _1622 = _1430;
      _1623 = _1432;
    }
    float _1801;
    float _1802;
    float _1803;
    if (_969) {
      float4 _1764 = _16.SampleLevel(_45, float2(_953, _954), 0.0f);
      float4 _1771 = _15.SampleLevel(_45, float2(_953, _954), 0.0f);
      float _1776 = _1771.w;
      float _1777 = 1.0f - _1776;
      float _1782 = (_1777 * _1764.w) + _1776;
      _1801 = (((_1782 * ((_1771.x - _955) + (_1777 * _1764.x))) + _955) * cb6[1u].z) + _1621;
      _1802 = (((_1782 * ((_1771.y - _957) + (_1777 * _1764.y))) + _957) * cb6[1u].z) + _1622;
      _1803 = (((_1782 * ((_1771.z - _959) + (_1777 * _1764.z))) + _959) * cb6[1u].z) + _1623;
    } else {
      _1801 = _1621;
      _1802 = _1622;
      _1803 = _1623;
    }
    float _1973;
    float _1975;
    float _1977;
    if (cb6[1u].x > 0.0f) {
      float _1880 = cb6[6u].w * _1236;
      float _1881 = cb6[6u].w * _1237;
      float4 _1885 = _13.SampleLevel(_45, float2(_1880 + _1232, _1881 + _1233), 0.0f);
      float4 _1889 = _13.SampleLevel(_45, float2(_1232, _1233), 0.0f);
      float4 _1896 = _13.SampleLevel(_45, float2(_1232 - _1880, _1233 - _1881), 0.0f);
      float4 _1911 = _13.SampleLevel(_45, float2((cb6[7u].x * _1236) + _1232, (cb6[7u].y * _1237) + _1233), 1.0f);
      float4 _1922 = _13.SampleLevel(_45, float2((cb6[7u].z * _1236) + _1232, (cb6[7u].w * _1237) + _1233), 2.0f);
      float4 _1937 = _13.SampleLevel(_45, float2((cb6[8u].x * _1236) + _1232, (cb6[8u].y * _1237) + _1233), 4.0f);

      // Custom
      if (injectedData.toneMapGammaCorrection == 1.f) {
        _1885 = renodx::color::correct::GammaSafe(_1885);
        _1889 = renodx::color::correct::GammaSafe(_1889);
        _1896 = renodx::color::correct::GammaSafe(_1896);
        _1911 = renodx::color::correct::GammaSafe(_1911);
        _1922 = renodx::color::correct::GammaSafe(_1922);
        _1937 = renodx::color::correct::GammaSafe(_1937);
      }

      float _1969 = 1.0f - (((_1889.w + _1885.w) + _1896.w) * 0.3333333432674407958984375f);
      float _1970 = clamp(_1276 * (((cb6[8u].w * _1922.x) + (cb6[8u].z * _1911.x)) + (cb6[9u].x * _1937.x)), 0.0f, 1.0f) * _1969;
      float _1971 = clamp(_1276 * (((cb6[8u].w * _1922.y) + (cb6[8u].z * _1911.y)) + (cb6[9u].x * _1937.y)), 0.0f, 1.0f) * _1969;
      float _1972 = clamp(_1276 * (((cb6[8u].w * _1922.z) + (cb6[8u].z * _1911.z)) + (cb6[9u].x * _1937.z)), 0.0f, 1.0f) * _1969;
      float _2064;
      float _2065;
      float _2066;
      if (_969) {
        float _2060 = 1.0f - (dot(float3(cb6[1u].z * _955, cb6[1u].z * _957, cb6[1u].z * _959), float3(0.2125999927520751953125f, 0.715200006961822509765625f, 0.072200000286102294921875f)) * 0.699999988079071044921875f);
        _2064 = _2060 * _1970;
        _2065 = _2060 * _1971;
        _2066 = _2060 * _1972;
      } else {
        _2064 = _1970;
        _2065 = _1971;
        _2066 = _1972;
      }
      float _2068 = dot(float3(_2064, _2065, _2066), float3(0.2125999927520751953125f, 0.715200006961822509765625f, 0.072200000286102294921875f));
      float _2080 = cb6[1u].x * _1217;
      float _2094 = _1232 - cb6[3u].z;
      float _2095 = _1233 - cb6[3u].w;
      float4 _2101 = _13.SampleLevel(_45, float2(_2094, _2095), 0.0f);
      float _2103 = _2101.w;
      float _2116 = 1.0f - (cb6[4u].x * clamp(exp2(log2(abs((clamp(cb6[4u].y, 0.0f, 1.0f) * (_19.SampleLevel(_45, float2(_2094, _2095), cb6[4u].y + (-1.0f)).w - _2103)) + _2103)) * 0.819999992847442626953125f), 0.0f, 1.0f));
      float _2117 = _1260 * 0.00999999977648258209228515625f;
      float _2145 = (((clamp((cos((_2117 + _1233) * 1700.0f) + 1.0f) * 0.75f, 0.0f, 1.0f) * 0.00850000046193599700927734375f) + 0.00150000001303851604461669921875f) * (((_2117 + 0.540000021457672119140625f) + (_1260 * 0.100000001490116119384765625f)) + ((clamp(abs(cos(_1261 * 350.0f)), 0.0f, 1.0f) + clamp(abs(cos(_1254 * 350.0f)), 0.0f, 1.0f)) * 0.1799999773502349853515625f))) + 0.9900000095367431640625f;
      float _2147 = (_1885.x * 2.0f) * _2145;
      float _2148 = (_1889.y * 2.0f) * _2145;
      float _2149 = (_1896.z * 2.0f) * _2145;
      float _2150 = dot(float3(_2147, _2148, _2149), float3(0.2125999927520751953125f, 0.715200006961822509765625f, 0.072200000286102294921875f));
      float _2177 = cb6[5u].x * _1217;
      float4 _2179 = _19.SampleLevel(_45, float2(_1232, _1233), cb6[5u].y);
      _1973 = (((((_2147 - _2150) * cb6[6u].z) + _2150) * _1217) + ((((_2080 * (((_2064 - _2068) * cb6[6u].z) + _2068)) + _1801) * _1969) * _2116)) + (_2179.x * _2177);
      _1975 = (((((_2148 - _2150) * cb6[6u].z) + _2150) * _1217) + ((((_2080 * (((_2065 - _2068) * cb6[6u].z) + _2068)) + _1802) * _1969) * _2116)) + (_2179.y * _2177);
      _1977 = (((((_2149 - _2150) * cb6[6u].z) + _2150) * _1217) + ((((_2080 * (((_2066 - _2068) * cb6[6u].z) + _2068)) + _1803) * _1969) * _2116)) + (_2179.z * _2177);
    } else {
      _1973 = _1801;
      _1975 = _1802;
      _1977 = _1803;
    }
    float _102;
    float _105;
    float _108;
    if (cb6[1u].y > 0.0f) {
      float4 _2187 = _13.Load(int3(uint2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y), 0u));
      float _2193 = (_1217 * 2.0f) * cb6[1u].y;
      _102 = (_2193 * _2187.x) + _1973;
      _105 = (_2193 * _2187.y) + _1975;
      _108 = (_2193 * _2187.z) + _1977;
    } else {
      _102 = _1973;
      _105 = _1975;
      _108 = _1977;
    }
    float frontier_phi_1_55_ladder;
    float frontier_phi_1_55_ladder_1;
    float frontier_phi_1_55_ladder_2;
    if (_287) {
      float _2277;
      float _2279;
      float _2281;
      float _2283;
      float _2285;
      float _2287;
      uint _2289;
      _2277 = 1.0f;
      _2279 = 1.0f;
      _2281 = 1.0f;
      _2283 = ((_70 / cb6[12u].z) * 0.800000011920928955078125f) * (cb6[12u].z / cb6[12u].w);
      _2285 = (_71 / cb6[12u].w) * 5.0f;
      _2287 = 1.0f;
      _2289 = 1u;
      float _2278;
      float _2280;
      float _2282;
      for (;;) {
        float _2291 = float(int(_2289));
        float _2292 = _2291 + _2283;
        float _2293 = _2291 + _2285;
        float _2294 = floor(_2292);
        float _2295 = floor(_2293);
        float _2303 = frac(_2294 * 0.103100001811981201171875f);
        float _2304 = frac(_2295 * 0.10300000011920928955078125f);
        float _2305 = frac(_2294 * 0.097300000488758087158203125f);
        float _2306 = frac(_2295 * 0.109899997711181640625f);
        float _2311 = dot(float4(_2303, _2304, _2305, _2306), float4(_2306 + 33.3300018310546875f, _2305 + 33.3300018310546875f, _2303 + 33.3300018310546875f, _2304 + 33.3300018310546875f));
        float _2314 = _2311 + _2303;
        float _2315 = _2311 + _2304;
        float _2316 = _2311 + _2305;
        float _2317 = _2311 + _2306;
        float _2326 = frac((_2314 + _2315) * _2316);
        float _2327 = frac((_2314 + _2316) * _2315);
        float _2328 = frac((_2315 + _2316) * _2317);
        bool _2347 = frac((_2316 + _2317) * _2314) > 0.5f;
        _2278 = (_2347 ? _2326 : 1.0f) * _2277;
        _2280 = (_2347 ? _2327 : 1.0f) * _2279;
        _2282 = (_2347 ? _2328 : 1.0f) * _2281;
        uint _2290 = _2289 + 1u;
        if (_2290 == 15u) {
          break;
        } else {
          _2277 = _2278;
          _2279 = _2280;
          _2281 = _2282;
          _2283 = (((_2328 * 0.20000000298023223876953125f) * (frac(_2292) - _2287)) * frac(floor(((cb0[0u].x * 0.1500000059604644775390625f) + 300.0f) / _2326) * _2326)) + _2283;
          _2285 = ((_2328 * _2327) * (frac(_2293) - _2287)) + _2285;
          _2287 *= (-2.0f);
          _2289 = _2290;
        }
      }
      float _2365 = floor((cb0[0u].x * 2.0f) + cb6[0u].y);
      float _2366 = _2365 * 0.00999999977648258209228515625f;
      float _2376 = ((_2366 + 1.0f) - (floor(_2365 * 9.9999997473787516355514526367188e-05f) * 100.0f)) * 0.00999999977648258209228515625f;
      float _2377 = ((_2365 + 1.0f) - (floor(_2366) * 100.0f)) * 0.00999999977648258209228515625f;
      float _2382 = 0.5f - (cb6[0u].y * 0.375f);
      float _2383 = (cb6[0u].y * 0.75f) + (-0.100000001490116119384765625f);
      float _2386 = frac((((floor(_953 * 10.0f) * 0.100000001490116119384765625f) + 0.0500000007450580596923828125f) + _2376) * 0.103100001811981201171875f);
      float _2387 = frac((((floor(_954 * 33.33333587646484375f) * 0.02999999932944774627685546875f) + 0.014999999664723873138427734375f) + _2377) * 0.103100001811981201171875f);
      float _2389 = _2386 + 33.3300018310546875f;
      float _2390 = dot(float3(_2386, _2387, _2386), float3(_2387 + 33.3300018310546875f, _2389, _2389));
      float _2398 = frac(((_2387 + _2386) + (_2390 * 2.0f)) * (_2390 + _2386));
      float _2401 = ((1.0f - _2398) * _2383) + _2398;
      float _2422 = frac((((floor(_953 * 11.111110687255859375f) * 0.0900000035762786865234375f) + 0.04500000178813934326171875f) + _2376) * 0.103100001811981201171875f);
      float _2423 = frac((((floor(_954 * 25.0f) * 0.039999999105930328369140625f) + 0.0199999995529651641845703125f) + _2377) * 0.103100001811981201171875f);
      float _2425 = _2422 + 33.3300018310546875f;
      float _2426 = dot(float3(_2422, _2423, _2422), float3(_2423 + 33.3300018310546875f, _2425, _2425));
      float _2434 = frac(((_2423 + _2422) + (_2426 * 2.0f)) * (_2426 + _2422));
      float _2437 = ((1.0f - _2434) * _2383) + _2434;
      float _2441 = max(0.0f, _2278);
      float _2442 = max(0.0f, _2280);
      float _2443 = max(0.0f, _2282);
      float _2445 = max(_2441, max(_2442, _2443));
      float _2446 = _2445 * _2445;
      float _2447 = _2441 * 2.0f;
      float _2448 = _2442 * 0.100000001490116119384765625f;
      float _2449 = _2443 * 0.25f;
      float _2457 = clamp((round(_2401 - (_2401 * _2382)) * 5.0f) * round(_2437 - (_2437 * _2382)), 0.0f, 1.0f) * 3.0f;
      frontier_phi_1_55_ladder = (((_2449 - _108) + (_2446 * _2449)) * _2457) + _108;
      frontier_phi_1_55_ladder_1 = (((_2448 - _105) + (_2446 * _2448)) * _2457) + _105;
      frontier_phi_1_55_ladder_2 = (((_2447 - _102) + (_2446 * _2447)) * _2457) + _102;
    } else {
      frontier_phi_1_55_ladder = _108;
      frontier_phi_1_55_ladder_1 = _105;
      frontier_phi_1_55_ladder_2 = _102;
    }
    _99 = frontier_phi_1_55_ladder_2;
    _103 = frontier_phi_1_55_ladder_1;
    _106 = frontier_phi_1_55_ladder;
  }
  bool _115 = asuint(cb6[15u]).x == 0u;
  float _290;
  float _293;
  float _295;
  if (_115) {
    _290 = _291;
    _293 = _291;
    _295 = _291;
  } else {
    float4 _302 = _8.Load(int3(uint2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y), 0u));
    float _305 = _302.x;
    float _306 = _302.y;
    float _307 = _302.z;
    float frontier_phi_3_4_ladder;
    float frontier_phi_3_4_ladder_1;
    float frontier_phi_3_4_ladder_2;
    if (_98) {
      frontier_phi_3_4_ladder = 0.0f;
      frontier_phi_3_4_ladder_1 = 0.0f;
      frontier_phi_3_4_ladder_2 = 0.0f;
    } else {
      float4 _595 = _16.SampleLevel(_45, float2(_81, _82), 0.0f);
      float4 _603 = _15.SampleLevel(_45, float2(_81, _82), 0.0f);
      float _608 = _603.w;
      float _609 = 1.0f - _608;
      float _614 = (_609 * _595.w) + _608;
      frontier_phi_3_4_ladder = ((_614 * ((_603.z - _307) + (_609 * _595.z))) + _307) * cb6[1u].z;
      frontier_phi_3_4_ladder_1 = ((_614 * ((_603.y - _306) + (_609 * _595.y))) + _306) * cb6[1u].z;
      frontier_phi_3_4_ladder_2 = ((_614 * ((_603.x - _305) + (_609 * _595.x))) + _305) * cb6[1u].z;
    }
    _290 = frontier_phi_3_4_ladder_2;
    _293 = frontier_phi_3_4_ladder_1;
    _295 = frontier_phi_3_4_ladder;
  }
  float _581;
  float _583;
  float _585;
  if (cb6[14u].w > 0.0f) {
    uint4 _569 = asuint(cb6[10u]);
    uint _570 = _569.x;
    uint _572 = _569.z;
    uint _575 = _569.y;
    uint _578 = _569.w;
    float frontier_phi_8_7_ladder;
    float frontier_phi_8_7_ladder_1;
    float frontier_phi_8_7_ladder_2;
    if ((((gl_GlobalInvocationID.x >= _570) && (gl_GlobalInvocationID.x < _572)) && (gl_GlobalInvocationID.y >= _575)) && (gl_GlobalInvocationID.y < _578)) {
      float4 _993 = _23.SampleLevel(_45, float2((cb6[11u].z * ((_70 - float(int(_570))) / float(int(_572 - _570)))) + cb6[11u].x, (cb6[11u].w * ((_71 - float(int(_575))) / float(int(_578 - _575)))) + cb6[11u].y), 0.0f);
      frontier_phi_8_7_ladder = _993.z * cb6[14u].w;
      frontier_phi_8_7_ladder_1 = _993.y * cb6[14u].w;
      frontier_phi_8_7_ladder_2 = _993.x * cb6[14u].w;
    } else {
      frontier_phi_8_7_ladder = _106;
      frontier_phi_8_7_ladder_1 = _103;
      frontier_phi_8_7_ladder_2 = _99;
    }
    _581 = frontier_phi_8_7_ladder_2;
    _583 = frontier_phi_8_7_ladder_1;
    _585 = frontier_phi_8_7_ladder;
  } else {
    _581 = _99;
    _583 = _103;
    _585 = _106;
  }

  // Custom: Switch to colormath
  /*
  uint4 _590 = asuint(cb6[13u]);
  float _998;
  float _1004;
  float _1010;
  if (_590.y == 0u) {
    _998 = _581;
    _1004 = _583;
    _1010 = _585;
  } else {
    uint _1041 = _590.w;
    float _1344;
    float _1345;
    float _1346;
    if (cb6[14u].z != 1.0f) {
      _1344 = exp2(log2(abs(_581)) * cb6[14u].z);
      _1345 = exp2(log2(abs(_583)) * cb6[14u].z);
      _1346 = exp2(log2(abs(_585)) * cb6[14u].z);
    } else {
      _1344 = _581;
      _1345 = _583;
      _1346 = _585;
    }
    float _1356 = frac(_70 * 211.1488037109375f);
    float _1357 = frac(_71 * 210.944000244140625f);
    float _1358 = frac(cb0[0u].x * 6.227200031280517578125f);
    float _1361 = _1358 + 33.3300018310546875f;
    float _1362 = dot(float3(_1356, _1357, _1358), float3(_1357 + 33.3300018310546875f, _1356 + 33.3300018310546875f, _1361));
    float _1365 = _1362 + _1356;
    float _1366 = _1362 + _1357;
    float _1368 = _1365 + _1366;
    float _1373 = frac(_1368 * (_1362 + _1358));
    float _1374 = frac((_1365 * 2.0f) * _1366);
    float _1375 = frac(_1368 * _1365);
    float _1381 = frac((_70 + 64.0f) * 211.1488037109375f);
    float _1382 = frac((_71 + 64.0f) * 210.944000244140625f);
    float _1385 = dot(float3(_1381, _1382, _1358), float3(_1382 + 33.3300018310546875f, _1381 + 33.3300018310546875f, _1361));
    float _1388 = _1385 + _1381;
    float _1389 = _1385 + _1382;
    float _1391 = _1388 + _1389;
    float _1396 = frac(_1391 * (_1385 + _1358));
    float _1397 = frac((_1388 * 2.0f) * _1389);
    float _1398 = frac(_1391 * _1388);
    float frontier_phi_15_23_ladder;
    float frontier_phi_15_23_ladder_1;
    float frontier_phi_15_23_ladder_2;
    if (_1041 == 0u) {
      float _1534 = (_1344 <= 0.003130800090730190277099609375f) ? (_1344 * 12.9200000762939453125f) : ((exp2(log2(abs(_1344)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
      float _1535 = (_1345 <= 0.003130800090730190277099609375f) ? (_1345 * 12.9200000762939453125f) : ((exp2(log2(abs(_1345)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
      float _1536 = (_1346 <= 0.003130800090730190277099609375f) ? (_1346 * 12.9200000762939453125f) : ((exp2(log2(abs(_1346)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
      float _1537 = _1534 * 510.0f;
      float _1539 = _1535 * 510.0f;
      float _1540 = _1536 * 510.0f;
      frontier_phi_15_23_ladder = (((_1374 + (-0.5f)) + (min(min(1.0f, _1539), 510.0f - _1539) * (_1397 + (-0.5f)))) * 0.0039215688593685626983642578125f) + _1535;
      frontier_phi_15_23_ladder_1 = (((_1375 + (-0.5f)) + (min(min(1.0f, _1540), 510.0f - _1540) * (_1398 + (-0.5f)))) * 0.0039215688593685626983642578125f) + _1536;
      frontier_phi_15_23_ladder_2 = (((_1373 + (-0.5f)) + (min(min(1.0f, _1537), 510.0f - _1537) * (_1396 + (-0.5f)))) * 0.0039215688593685626983642578125f) + _1534;
    } else {
      float frontier_phi_15_23_ladder_31_ladder;
      float frontier_phi_15_23_ladder_31_ladder_1;
      float frontier_phi_15_23_ladder_31_ladder_2;
      if (_1041 == 1u) {
        float _1683 = mad(0.043306000530719757080078125f, _1346, mad(0.329291999340057373046875f, _1345, _1344 * 0.627402007579803466796875f));
        float _1689 = mad(0.011359999887645244598388671875f, _1346, mad(0.9195439815521240234375f, _1345, _1344 * 0.06909500062465667724609375f));
        float _1695 = mad(0.89557802677154541015625f, _1346, mad(0.08802799880504608154296875f, _1345, _1344 * 0.0163940005004405975341796875f));
        float _1731 = exp2(log2(abs((((clamp(mad(_1695, cb6[22u].z, mad(_1689, cb6[22u].y, _1683 * cb6[22u].x)), 0.0f, 1.0f) - _1683) * cb6[16u].x) + _1683) * cb6[14u].x)) * 0.1593017578125f);
        float _1732 = exp2(log2(abs((((clamp(mad(_1695, cb6[23u].z, mad(_1689, cb6[23u].y, _1683 * cb6[23u].x)), 0.0f, 1.0f) - _1689) * cb6[16u].x) + _1689) * cb6[14u].x)) * 0.1593017578125f);
        float _1733 = exp2(log2(abs((((clamp(mad(_1695, cb6[24u].z, mad(_1689, cb6[24u].y, _1683 * cb6[24u].x)), 0.0f, 1.0f) - _1695) * cb6[16u].x) + _1695) * cb6[14u].x)) * 0.1593017578125f);
        frontier_phi_15_23_ladder_31_ladder = exp2(log2(abs(((_1732 * 18.8515625f) + 0.8359375f) / ((_1732 * 18.6875f) + 1.0f))) * 78.84375f);
        frontier_phi_15_23_ladder_31_ladder_1 = exp2(log2(abs(((_1733 * 18.8515625f) + 0.8359375f) / ((_1733 * 18.6875f) + 1.0f))) * 78.84375f);
        frontier_phi_15_23_ladder_31_ladder_2 = exp2(log2(abs(((_1731 * 18.8515625f) + 0.8359375f) / ((_1731 * 18.6875f) + 1.0f))) * 78.84375f);
      } else {
        float frontier_phi_15_23_ladder_31_ladder_39_ladder;
        float frontier_phi_15_23_ladder_31_ladder_39_ladder_1;
        float frontier_phi_15_23_ladder_31_ladder_39_ladder_2;
        if (_1041 == 2u) {
          frontier_phi_15_23_ladder_31_ladder_39_ladder = _1345 * cb6[14u].x;
          frontier_phi_15_23_ladder_31_ladder_39_ladder_1 = _1346 * cb6[14u].x;
          frontier_phi_15_23_ladder_31_ladder_39_ladder_2 = _1344 * cb6[14u].x;
        } else {
          float frontier_phi_15_23_ladder_31_ladder_39_ladder_45_ladder;
          float frontier_phi_15_23_ladder_31_ladder_39_ladder_45_ladder_1;
          float frontier_phi_15_23_ladder_31_ladder_39_ladder_45_ladder_2;
          if (_1041 == 3u) {
            float _1991 = mad(_1346, cb6[22u].z, mad(_1345, cb6[22u].y, _1344 * cb6[22u].x)) * cb6[14u].x;
            float _1992 = mad(_1346, cb6[23u].z, mad(_1345, cb6[23u].y, _1344 * cb6[23u].x)) * cb6[14u].x;
            float _1993 = mad(_1346, cb6[24u].z, mad(_1345, cb6[24u].y, _1344 * cb6[24u].x)) * cb6[14u].x;
            float _2018 = (_1991 <= 0.003130800090730190277099609375f) ? (_1991 * 12.9200000762939453125f) : ((exp2(log2(abs(_1991)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
            float _2019 = (_1992 <= 0.003130800090730190277099609375f) ? (_1992 * 12.9200000762939453125f) : ((exp2(log2(abs(_1992)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
            float _2020 = (_1993 <= 0.003130800090730190277099609375f) ? (_1993 * 12.9200000762939453125f) : ((exp2(log2(abs(_1993)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
            float _2021 = _2018 * 2046.0f;
            float _2023 = _2019 * 2046.0f;
            float _2024 = _2020 * 2046.0f;
            frontier_phi_15_23_ladder_31_ladder_39_ladder_45_ladder = (((_1374 + (-0.5f)) + (min(min(1.0f, _2023), 2046.0f - _2023) * (_1397 + (-0.5f)))) * 0.000977517105638980865478515625f) + _2019;
            frontier_phi_15_23_ladder_31_ladder_39_ladder_45_ladder_1 = (((_1375 + (-0.5f)) + (min(min(1.0f, _2024), 2046.0f - _2024) * (_1398 + (-0.5f)))) * 0.000977517105638980865478515625f) + _2020;
            frontier_phi_15_23_ladder_31_ladder_39_ladder_45_ladder_2 = (((_1373 + (-0.5f)) + (min(min(1.0f, _2021), 2046.0f - _2021) * (_1396 + (-0.5f)))) * 0.000977517105638980865478515625f) + _2018;
          } else {
            frontier_phi_15_23_ladder_31_ladder_39_ladder_45_ladder = (_1345 * cb6[14u].x) + cb6[14u].y;
            frontier_phi_15_23_ladder_31_ladder_39_ladder_45_ladder_1 = (_1346 * cb6[14u].x) + cb6[14u].y;
            frontier_phi_15_23_ladder_31_ladder_39_ladder_45_ladder_2 = (_1344 * cb6[14u].x) + cb6[14u].y;
          }
          frontier_phi_15_23_ladder_31_ladder_39_ladder = frontier_phi_15_23_ladder_31_ladder_39_ladder_45_ladder;
          frontier_phi_15_23_ladder_31_ladder_39_ladder_1 = frontier_phi_15_23_ladder_31_ladder_39_ladder_45_ladder_1;
          frontier_phi_15_23_ladder_31_ladder_39_ladder_2 = frontier_phi_15_23_ladder_31_ladder_39_ladder_45_ladder_2;
        }
        frontier_phi_15_23_ladder_31_ladder = frontier_phi_15_23_ladder_31_ladder_39_ladder;
        frontier_phi_15_23_ladder_31_ladder_1 = frontier_phi_15_23_ladder_31_ladder_39_ladder_1;
        frontier_phi_15_23_ladder_31_ladder_2 = frontier_phi_15_23_ladder_31_ladder_39_ladder_2;
      }
      frontier_phi_15_23_ladder = frontier_phi_15_23_ladder_31_ladder;
      frontier_phi_15_23_ladder_1 = frontier_phi_15_23_ladder_31_ladder_1;
      frontier_phi_15_23_ladder_2 = frontier_phi_15_23_ladder_31_ladder_2;
    }
    _998 = frontier_phi_15_23_ladder_2;
    _1004 = frontier_phi_15_23_ladder;
    _1010 = frontier_phi_15_23_ladder_1;
  }
  float _1279;
  float _1285;
  float _1291;
  if (_115) {
    _1279 = _290;
    _1285 = _293;
    _1291 = _295;
  } else {
    uint _1330 = _590.w;
    float _1453;
    float _1454;
    float _1455;
    if (cb6[15u].w != 1.0f) {
      _1453 = exp2(log2(abs(_290)) * cb6[15u].w);
      _1454 = exp2(log2(abs(_293)) * cb6[15u].w);
      _1455 = exp2(log2(abs(_295)) * cb6[15u].w);
    } else {
      _1453 = _290;
      _1454 = _293;
      _1455 = _295;
    }
    float _1462 = frac(_70 * 211.1488037109375f);
    float _1463 = frac(_71 * 210.944000244140625f);
    float _1464 = frac(cb0[0u].x * 6.227200031280517578125f);
    float _1467 = _1464 + 33.3300018310546875f;
    float _1468 = dot(float3(_1462, _1463, _1464), float3(_1463 + 33.3300018310546875f, _1462 + 33.3300018310546875f, _1467));
    float _1471 = _1468 + _1462;
    float _1472 = _1468 + _1463;
    float _1474 = _1471 + _1472;
    float _1479 = frac(_1474 * (_1468 + _1464));
    float _1480 = frac((_1471 * 2.0f) * _1472);
    float _1481 = frac(_1474 * _1471);
    float _1486 = frac((_70 + 64.0f) * 211.1488037109375f);
    float _1487 = frac((_71 + 64.0f) * 210.944000244140625f);
    float _1490 = dot(float3(_1486, _1487, _1464), float3(_1487 + 33.3300018310546875f, _1486 + 33.3300018310546875f, _1467));
    float _1493 = _1490 + _1486;
    float _1494 = _1490 + _1487;
    float _1496 = _1493 + _1494;
    float _1501 = frac(_1496 * (_1490 + _1464));
    float _1502 = frac((_1493 * 2.0f) * _1494);
    float _1503 = frac(_1496 * _1493);
    float frontier_phi_20_29_ladder;
    float frontier_phi_20_29_ladder_1;
    float frontier_phi_20_29_ladder_2;
    if (_1330 == 0u) {
      float _1648 = (_1453 <= 0.003130800090730190277099609375f) ? (_1453 * 12.9200000762939453125f) : ((exp2(log2(abs(_1453)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
      float _1649 = (_1454 <= 0.003130800090730190277099609375f) ? (_1454 * 12.9200000762939453125f) : ((exp2(log2(abs(_1454)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
      float _1650 = (_1455 <= 0.003130800090730190277099609375f) ? (_1455 * 12.9200000762939453125f) : ((exp2(log2(abs(_1455)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
      float _1651 = _1648 * 510.0f;
      float _1652 = _1649 * 510.0f;
      float _1653 = _1650 * 510.0f;
      frontier_phi_20_29_ladder = (((_1480 + (-0.5f)) + (min(min(1.0f, _1652), 510.0f - _1652) * (_1502 + (-0.5f)))) * 0.0039215688593685626983642578125f) + _1649;
      frontier_phi_20_29_ladder_1 = (((_1481 + (-0.5f)) + (min(min(1.0f, _1653), 510.0f - _1653) * (_1503 + (-0.5f)))) * 0.0039215688593685626983642578125f) + _1650;
      frontier_phi_20_29_ladder_2 = (((_1479 + (-0.5f)) + (min(min(1.0f, _1651), 510.0f - _1651) * (_1501 + (-0.5f)))) * 0.0039215688593685626983642578125f) + _1648;
    } else {
      float frontier_phi_20_29_ladder_37_ladder;
      float frontier_phi_20_29_ladder_37_ladder_1;
      float frontier_phi_20_29_ladder_37_ladder_2;
      if (_1330 == 1u) {
        float _1808 = mad(0.043306000530719757080078125f, _1455, mad(0.329291999340057373046875f, _1454, _1453 * 0.627402007579803466796875f));
        float _1811 = mad(0.011359999887645244598388671875f, _1455, mad(0.9195439815521240234375f, _1454, _1453 * 0.06909500062465667724609375f));
        float _1814 = mad(0.89557802677154541015625f, _1455, mad(0.08802799880504608154296875f, _1454, _1453 * 0.0163940005004405975341796875f));
        float _1848 = exp2(log2(abs((((clamp(mad(_1814, cb6[26u].z, mad(_1811, cb6[26u].y, _1808 * cb6[26u].x)), 0.0f, 1.0f) - _1808) * cb6[16u].x) + _1808) * cb6[15u].y)) * 0.1593017578125f);
        float _1849 = exp2(log2(abs((((clamp(mad(_1814, cb6[27u].z, mad(_1811, cb6[27u].y, _1808 * cb6[27u].x)), 0.0f, 1.0f) - _1811) * cb6[16u].x) + _1811) * cb6[15u].y)) * 0.1593017578125f);
        float _1850 = exp2(log2(abs((((clamp(mad(_1814, cb6[28u].z, mad(_1811, cb6[28u].y, _1808 * cb6[28u].x)), 0.0f, 1.0f) - _1814) * cb6[16u].x) + _1814) * cb6[15u].y)) * 0.1593017578125f);
        frontier_phi_20_29_ladder_37_ladder = exp2(log2(abs(((_1849 * 18.8515625f) + 0.8359375f) / ((_1849 * 18.6875f) + 1.0f))) * 78.84375f);
        frontier_phi_20_29_ladder_37_ladder_1 = exp2(log2(abs(((_1850 * 18.8515625f) + 0.8359375f) / ((_1850 * 18.6875f) + 1.0f))) * 78.84375f);
        frontier_phi_20_29_ladder_37_ladder_2 = exp2(log2(abs(((_1848 * 18.8515625f) + 0.8359375f) / ((_1848 * 18.6875f) + 1.0f))) * 78.84375f);
      } else {
        float frontier_phi_20_29_ladder_37_ladder_43_ladder;
        float frontier_phi_20_29_ladder_37_ladder_43_ladder_1;
        float frontier_phi_20_29_ladder_37_ladder_43_ladder_2;
        if (_1330 == 2u) {
          frontier_phi_20_29_ladder_37_ladder_43_ladder = _1454 * cb6[15u].y;
          frontier_phi_20_29_ladder_37_ladder_43_ladder_1 = _1455 * cb6[15u].y;
          frontier_phi_20_29_ladder_37_ladder_43_ladder_2 = _1453 * cb6[15u].y;
        } else {
          float frontier_phi_20_29_ladder_37_ladder_43_ladder_49_ladder;
          float frontier_phi_20_29_ladder_37_ladder_43_ladder_49_ladder_1;
          float frontier_phi_20_29_ladder_37_ladder_43_ladder_49_ladder_2;
          if (_1330 == 3u) {
            float _2209 = mad(_1455, cb6[26u].z, mad(_1454, cb6[26u].y, _1453 * cb6[26u].x)) * cb6[15u].y;
            float _2210 = mad(_1455, cb6[27u].z, mad(_1454, cb6[27u].y, _1453 * cb6[27u].x)) * cb6[15u].y;
            float _2211 = mad(_1455, cb6[28u].z, mad(_1454, cb6[28u].y, _1453 * cb6[28u].x)) * cb6[15u].y;
            float _2236 = (_2209 <= 0.003130800090730190277099609375f) ? (_2209 * 12.9200000762939453125f) : ((exp2(log2(abs(_2209)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
            float _2237 = (_2210 <= 0.003130800090730190277099609375f) ? (_2210 * 12.9200000762939453125f) : ((exp2(log2(abs(_2210)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
            float _2238 = (_2211 <= 0.003130800090730190277099609375f) ? (_2211 * 12.9200000762939453125f) : ((exp2(log2(abs(_2211)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
            float _2239 = _2236 * 2046.0f;
            float _2240 = _2237 * 2046.0f;
            float _2241 = _2238 * 2046.0f;
            frontier_phi_20_29_ladder_37_ladder_43_ladder_49_ladder = (((_1480 + (-0.5f)) + (min(min(1.0f, _2240), 2046.0f - _2240) * (_1502 + (-0.5f)))) * 0.000977517105638980865478515625f) + _2237;
            frontier_phi_20_29_ladder_37_ladder_43_ladder_49_ladder_1 = (((_1481 + (-0.5f)) + (min(min(1.0f, _2241), 2046.0f - _2241) * (_1503 + (-0.5f)))) * 0.000977517105638980865478515625f) + _2238;
            frontier_phi_20_29_ladder_37_ladder_43_ladder_49_ladder_2 = (((_1479 + (-0.5f)) + (min(min(1.0f, _2239), 2046.0f - _2239) * (_1501 + (-0.5f)))) * 0.000977517105638980865478515625f) + _2236;
          } else {
            frontier_phi_20_29_ladder_37_ladder_43_ladder_49_ladder = (_1454 * cb6[15u].y) + cb6[15u].z;
            frontier_phi_20_29_ladder_37_ladder_43_ladder_49_ladder_1 = (_1455 * cb6[15u].y) + cb6[15u].z;
            frontier_phi_20_29_ladder_37_ladder_43_ladder_49_ladder_2 = (_1453 * cb6[15u].y) + cb6[15u].z;
          }
          frontier_phi_20_29_ladder_37_ladder_43_ladder = frontier_phi_20_29_ladder_37_ladder_43_ladder_49_ladder;
          frontier_phi_20_29_ladder_37_ladder_43_ladder_1 = frontier_phi_20_29_ladder_37_ladder_43_ladder_49_ladder_1;
          frontier_phi_20_29_ladder_37_ladder_43_ladder_2 = frontier_phi_20_29_ladder_37_ladder_43_ladder_49_ladder_2;
        }
        frontier_phi_20_29_ladder_37_ladder = frontier_phi_20_29_ladder_37_ladder_43_ladder;
        frontier_phi_20_29_ladder_37_ladder_1 = frontier_phi_20_29_ladder_37_ladder_43_ladder_1;
        frontier_phi_20_29_ladder_37_ladder_2 = frontier_phi_20_29_ladder_37_ladder_43_ladder_2;
      }
      frontier_phi_20_29_ladder = frontier_phi_20_29_ladder_37_ladder;
      frontier_phi_20_29_ladder_1 = frontier_phi_20_29_ladder_37_ladder_1;
      frontier_phi_20_29_ladder_2 = frontier_phi_20_29_ladder_37_ladder_2;
    }
    _1279 = frontier_phi_20_29_ladder_2;
    _1285 = frontier_phi_20_29_ladder;
    _1291 = frontier_phi_20_29_ladder_1;
  }
  _26[uint2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y)] = float4(_998, _1004, _1010, 1.0f);
  if (!(asuint(cb6[15u]).x == 0u)) {
    _27[uint2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y)] = float4(_1279, _1285, _1291, 1.0f);
  }
  */
  uint outputTypeEnum = asuint(cb6[13u].w);

  float3 outputColor1 = float3(_581, _583, _585);
  if (asuint(cb6[13u].y) != 0u) {
    ConvertColorParams params = {
        outputTypeEnum,  // outputTypeEnum
        cb6[14u].x,      // paperWhiteScaling
        cb6[14u].y,      // blackFloorAdjust
        cb6[14u].z,      // gammaCorrection
        cb6[16u].x,      // pqSaturation
        float3x3(
            cb6[22u].x, cb6[22u].y, cb6[22u].z,
            cb6[23u].x, cb6[23u].y, cb6[23u].z,
            cb6[24u].x, cb6[24u].y, cb6[24u].z),                             // pqMatrix
        float3(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y, cb0[0u].x)  // random3
    };
    outputColor1 = convertColor(outputColor1, params);
  }

  _26[uint2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y)] = float4(outputColor1.rgb, 1.0f);

  if (asuint(cb6[15u]).x != 0u) {
    float3 outputColor2 = float3(_290, _293, _295);
    ConvertColorParams params = {
        outputTypeEnum,  // outputTypeEnum
        cb6[15u].y,      // paperWhiteScaling
        cb6[15u].z,      // blackFloorAdjust
        cb6[15u].w,      // gammaCorrection
        cb6[16u].x,      // pqSaturation
        float3x3(
            cb6[26u].x, cb6[26u].y, cb6[26u].z,
            cb6[27u].x, cb6[27u].y, cb6[27u].z,
            cb6[28u].x, cb6[28u].y, cb6[28u].z),                             // pqMatrix
        float3(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y, cb0[0u].x)  // random3
    };

    outputColor2 = convertColor(outputColor2, params);
    _27[uint2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y)] = float4(outputColor2.rgb, 1.0f);
  }
}

[numthreads(16, 16, 1)] void main(SPIRV_Cross_Input stage_input) {
  gl_GlobalInvocationID = stage_input.gl_GlobalInvocationID;
  comp_main();
}
