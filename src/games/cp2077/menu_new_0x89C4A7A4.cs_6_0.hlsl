#include "./colormath.hlsl"
#include "./cp2077.h"
#include "./injectedBuffer.hlsl"

static float _293;

cbuffer _32_34 : register(b0, space0) {
  float4 cb0[30] : packoffset(c0);
};

cbuffer _41_43 : register(b6, space0) {
  float4 cb6[30] : packoffset(c0);
};

cbuffer _37_39 : register(b12, space0) {
  float4 cb12[99] : packoffset(c0);
};

Texture2D<float4> _8 : register(t32, space0);
Texture2D<uint2> _12 : register(t51, space0);
Texture2D<float4> _13 : register(t0, space0);
Texture2D<float4> _14 : register(t1, space0);
Texture2D<float4> _15 : register(t2, space0);
Texture2D<float4> _16 : register(t3, space0);
Texture2D<float4> _17 : register(t4, space0);
Texture2D<float4> _18 : register(t5, space0);
Texture2D<float4> _19 : register(t6, space0);
Texture2D<float4> _20 : register(t8, space0);
StructuredBuffer<float> _23 : register(t9, space0);
Texture2D<float4> _24 : register(t10, space0);
RWTexture2D<float4> _27 : register(u0, space0);
RWTexture2D<float4> _28 : register(u1, space0);
SamplerState _46 : register(s0, space0);

static uint3 gl_GlobalInvocationID;
struct SPIRV_Cross_Input {
  uint3 gl_GlobalInvocationID : SV_DispatchThreadID;
};

void comp_main() {
  float _72 = float(gl_GlobalInvocationID.x);
  float _73 = float(gl_GlobalInvocationID.y);
  float _83 = (_72 + 0.5f) / cb6[12u].z;
  float _84 = (_73 + 0.5f) / cb6[12u].w;
  bool _100 = ((_83 < cb6[9u].y) || (_84 < cb6[9u].z)) || (((1.0f - cb6[9u].y) < _83) || ((1.0f - cb6[9u].z) < _84));
  float _101;
  float _105;
  float _108;
  if (_100) {
    _101 = 0.0f;
    _105 = 0.0f;
    _108 = 0.0f;
  } else {
    bool _121 = cb6[0u].x > 0.0f;
    float _123 = _83 + (-0.5f);
    float _125 = _84 + (-0.5f);
    float _129 = cb6[0u].y + 0.119999997317790985107421875f;
    float _133 = max(_129 + abs(_123), 0.0f);
    float _134 = max(_129 + abs(_125), 0.0f);
    float _141 = clamp(sqrt((_134 * _134) + (_133 * _133)) * 20.0f, 0.0f, 1.0f);
    float _148 = ((_141 * _141) * cb6[0u].x) * (3.0f - (_141 * 2.0f));
    float _149 = _148 * 0.699999988079071044921875f;
    float _152 = ceil(_149) - _149;
    float _155 = (_152 * 50.0f) + 1.0f;
    float _164 = (((cos(cb0[0u].x) * 2.0f) + 200.0f) * _152) + 1.0f;
    float _176 = frac(floor(_155 * _83) * 0.103100001811981201171875f);
    float _177 = frac(floor(_164 * _84) * 0.103100001811981201171875f);
    float _178 = _177 + 33.3300018310546875f;
    float _180 = _176 + 33.3300018310546875f;
    float _181 = dot(float3(_176, _177, _176), float3(_178, _180, _180));
    float _187 = _177 + _176;
    float _190 = frac((_187 + (_181 * 2.0f)) * (_181 + _176));
    float _215 = abs(sin((_148 * 0.1680000126361846923828125f) * cb0[0u].x));
    float _220 = (_148 * 0.14000000059604644775390625f) + 1.0f;
    float _226 = dot(float3(_177, _176, _177), float3(_180, _178, _178));
    float _239 = (floor(frac(frac((_187 + (_226 * 2.0f)) * (_226 + _177)) + _215) * _220) * (1.0f / (((cos(frac(_190 + abs(sin(cb0[0u].x * 5000.0f))) * cb0[0u].x) * 0.0199999995529651641845703125f) + 1.0f) * _164))) + _84;
    float _241 = _239 * cb6[12u].w;
    float _250 = frac(round((_148 * 0.125f) * _241) * 0.103100001811981201171875f);
    float _251 = frac((_148 * 2.0620000362396240234375f) * cb0[0u].x);
    float _252 = _251 + 33.3300018310546875f;
    float _253 = _250 + 33.3300018310546875f;
    float _254 = dot(float3(_250, _251, _250), float3(_252, _253, _253));
    float _268 = frac(round((_148 * 0.012500000186264514923095703125f) * _241) * 0.103100001811981201171875f);
    float _269 = _268 + 33.3300018310546875f;
    float _270 = dot(float3(_268, _251, _268), float3(_252, _269, _269));
    float _287 = _121 ? ((((cb6[12u].z * ((floor(frac(_190 + _215) * _220) * (1.0f / (((sin(frac(_190 + abs(sin(cb0[0u].x * 100.0f))) * cb0[0u].x) * 0.0199999995529651641845703125f) + 1.0f) * _155))) + _83)) + 2.0f) + ((((_148 * _148) * 960.0f) * frac(((_251 + _250) + (_254 * 2.0f)) * (_254 + _250))) * frac(((_251 + _268) + (_270 * 2.0f)) * (_270 + _268)))) / cb6[12u].z) : _83;
    float _288 = _121 ? _239 : _84;
    bool _289 = cb6[0u].y > 0.0f;
    bool _291 = cb6[12u].x > 0.0f;
    float _975;
    float _976;
    float _977;
    float _979;
    float _981;
    if (_289) {
      float _317 = floor(_287 * 2.5f) * 0.4000000059604644775390625f;
      float _319 = floor(_288 * 10.0f) * 0.100000001490116119384765625f;
      float _321 = _317 + 0.20000000298023223876953125f;
      float _323 = _319 + 0.0500000007450580596923828125f;
      float _327 = floor((cb0[0u].x * 2.0f) + (cb6[0u].y * 20.0f));
      float _328 = _327 * 0.00999999977648258209228515625f;
      float _342 = _321 + (((_328 + 1.0f) - (floor(_327 * 9.9999997473787516355514526367188e-05f) * 100.0f)) * 0.00999999977648258209228515625f);
      float _343 = _323 + (((_327 + 1.0f) - (floor(_328) * 100.0f)) * 0.00999999977648258209228515625f);
      float _353 = frac(_342 * 0.103100001811981201171875f);
      float _354 = frac(_343 * 0.103100001811981201171875f);
      float _356 = _353 + 33.3300018310546875f;
      float _357 = dot(float3(_353, _354, _353), float3(_354 + 33.3300018310546875f, _356, _356));
      float _365 = frac(((_354 + _353) + (_357 * 2.0f)) * (_357 + _353));
      float _368 = ((1.0f - _365) * ((cb6[0u].y * 0.75f) + (-0.100000001490116119384765625f))) + _365;
      float _371 = round(_368 - (_368 * (0.5f - (cb6[0u].y * 0.375f))));
      float _372 = _371 * _371;
      float _373 = _287 - _321;
      float _374 = _288 - _323;
      float _375 = _321 * _342;
      float _376 = _323 * _343;
      float _381 = (_317 + 0.300000011920928955078125f) * _342;
      float _382 = (_319 + 0.1500000059604644775390625f) * _343;
      float _385 = frac(_375 * 0.103100001811981201171875f);
      float _386 = frac(_376 * 0.103100001811981201171875f);
      float _388 = _385 + 33.3300018310546875f;
      float _389 = dot(float3(_385, _386, _385), float3(_386 + 33.3300018310546875f, _388, _388));
      float _402 = frac((_375 + 0.100000001490116119384765625f) * 0.103100001811981201171875f);
      float _403 = frac((_376 + 0.100000001490116119384765625f) * 0.103100001811981201171875f);
      float _405 = _402 + 33.3300018310546875f;
      float _406 = dot(float3(_402, _403, _402), float3(_403 + 33.3300018310546875f, _405, _405));
      float _420 = floor(frac(((_386 + _385) + (_389 * 2.0f)) * (_389 + _385)) * 3.25f) * 0.100000001490116119384765625f;
      float _421 = floor(frac(((_403 + _402) + (_406 * 2.0f)) * (_406 + _402)) * 3.25f) * 0.02500000037252902984619140625f;
      float _423 = _420 + (-0.20000000298023223876953125f);
      float _425 = _421 + (-0.0500000007450580596923828125f);
      float _429 = frac(_381 * 0.103100001811981201171875f);
      float _430 = frac(_382 * 0.103100001811981201171875f);
      float _432 = _429 + 33.3300018310546875f;
      float _433 = dot(float3(_429, _430, _429), float3(_430 + 33.3300018310546875f, _432, _432));
      float _446 = frac((_381 + 0.100000001490116119384765625f) * 0.103100001811981201171875f);
      float _447 = frac((_382 + 0.100000001490116119384765625f) * 0.103100001811981201171875f);
      float _449 = _446 + 33.3300018310546875f;
      float _450 = dot(float3(_446, _447, _446), float3(_447 + 33.3300018310546875f, _449, _449));
      float _463 = floor(frac(((_430 + _429) + (_433 * 2.0f)) * (_433 + _429)) * 3.25f) * 0.100000001490116119384765625f;
      float _464 = floor(frac(((_447 + _446) + (_450 * 2.0f)) * (_450 + _446)) * 3.25f) * 0.02500000037252902984619140625f;
      float _465 = _463 + (-0.20000000298023223876953125f);
      float _466 = _464 + (-0.0500000007450580596923828125f);
      float _469 = _373 - _423;
      float _470 = _374 - _425;
      float _480 = (-0.0250000059604644775390625f) - _373;
      float _482 = _480 + _420;
      float _483 = (-0.006250001490116119384765625f) - _374;
      float _485 = _483 + _421;
      uint _500 = (((((uint(_482 > 0.0f) + ((_482 < 0.0f) ? 4294967295u : 0u)) + ((_469 < 0.0f) ? 4294967295u : 0u)) + uint(_469 > 0.0f)) + ((_470 < 0.0f) ? 4294967295u : 0u)) + uint(_470 > 0.0f)) + (uint(_485 > 0.0f) - uint(_485 < 0.0f));
      float _508 = min(float(int(uint(int(_500) > int(3u)) - uint(int(_500) < int(3u)))), 0.0f);
      float _513 = _373 - _465;
      float _514 = _374 - _466;
      float _523 = _480 + _463;
      float _524 = _483 + _464;
      uint _539 = (((((uint(_523 > 0.0f) + ((_523 < 0.0f) ? 4294967295u : 0u)) + ((_513 < 0.0f) ? 4294967295u : 0u)) + uint(_513 > 0.0f)) + ((_514 < 0.0f) ? 4294967295u : 0u)) + uint(_514 > 0.0f)) + (uint(_524 > 0.0f) - uint(_524 < 0.0f));
      float _546 = min(float(int(uint(int(_539) > int(3u)) - uint(int(_539) < int(3u)))), 0.0f);
      float _553 = _287 + ((_372 * (((_423 - _465) * _546) + ((_465 - _423) * _508))) * 1.2000000476837158203125f);
      float _557 = _288 + ((_372 * (((_425 - _466) * _546) + ((_466 - _425) * _508))) * 1.2000000476837158203125f);
      uint _558 = uint(_83);
      uint _559 = uint(_84);
      float _566 = _8.Load(int3(uint2(_558, _559), 0u)).y - _17.Load(int3(uint2(_558, _559), 0u)).y;
      float _749;
      if (_291) {
        uint _660 = 1u << (_12.Load(int3(uint2(uint(cb12[79u].x * float(_558)), uint(cb12[79u].y * float(_559))), 0u)).y & 31u);
        float4 _664 = _14.Load(int3(uint2(_558 & 255u, _559 & 255u), 0u));
        float _667 = _664.y;
        float _671 = ((_664.x + _667) + _664.z) * 0.3333333432674407958984375f;
        float _673 = cb6[12u].x * _566;
        float _682 = _667 - _671;
        float _684 = _671 + (-0.5f);
        uint4 _691 = asuint(cb6[17u]);
        float _743 = (((((((_684 + (cb6[18u].w * _682)) * cb6[18u].y) * float(min((_691.x & _660), 1u))) + 1.0f) * (_673 / max(1.0f - _673, 9.9999999747524270787835121154785e-07f))) * ((((_684 + (cb6[19u].w * _682)) * cb6[19u].y) * float(min((_691.y & _660), 1u))) + 1.0f)) * ((((_684 + (cb6[20u].w * _682)) * cb6[20u].y) * float(min((_691.z & _660), 1u))) + 1.0f)) * ((((_684 + (cb6[21u].w * _682)) * cb6[21u].y) * float(min((_691.w & _660), 1u))) + 1.0f);
        _749 = cb6[12u].y * (_743 / max(_743 + 1.0f, 1.0f));
      } else {
        _749 = _566;
      }
      float _751 = _749 * cb6[0u].y;
      float _753 = (_553 + (-0.5f)) + _751;
      float _755 = (0.5f - _557) + _751;
      float _757 = atan(_755 / _753);
      bool _762 = _753 < 0.0f;
      bool _763 = _753 == 0.0f;
      bool _764 = _755 >= 0.0f;
      bool _765 = _755 < 0.0f;
      float _779 = sqrt((_753 * _753) + (_755 * _755));
      float _782 = ((_763 && _764) ? 1.57079637050628662109375f : ((_763 && _765) ? (-1.57079637050628662109375f) : ((_762 && _765) ? (_757 + (-3.1415927410125732421875f)) : ((_762 && _764) ? (_757 + 3.1415927410125732421875f) : _757)))) + clamp(cb6[0u].y * (_749 * 0.5f), 0.0f, 1.0f);
      uint _793 = uint(cb6[12u].z * frac((cos(_782) * _779) + 0.5f));
      uint _794 = uint(cb6[12u].w * frac(0.5f - (sin(_782) * _779)));
      float4 _795 = _8.Load(int3(uint2(_793, _794), 0u));
      float4 _800 = _17.Load(int3(uint2(_793, _794), 0u));
      float _805 = _795.x - _800.x;
      float _806 = _795.y - _800.y;
      float _807 = _795.z - _800.z;
      float frontier_phi_13_11_ladder;
      float frontier_phi_13_11_ladder_1;
      float frontier_phi_13_11_ladder_2;
      float frontier_phi_13_11_ladder_3;
      float frontier_phi_13_11_ladder_4;
      if (_291) {
        uint _1079 = 1u << (_12.Load(int3(uint2(uint(cb12[79u].x * float(_793)), uint(cb12[79u].y * float(_794))), 0u)).y & 31u);
        float4 _1082 = _14.Load(int3(uint2(_793 & 255u, _794 & 255u), 0u));
        float _1084 = _1082.x;
        float _1085 = _1082.y;
        float _1086 = _1082.z;
        float _1089 = ((_1084 + _1085) + _1086) * 0.3333333432674407958984375f;
        float _1090 = cb6[12u].x * _805;
        float _1091 = cb6[12u].x * _806;
        float _1092 = cb6[12u].x * _807;
        float _1105 = _1084 - _1089;
        float _1106 = _1085 - _1089;
        float _1107 = _1086 - _1089;
        float _1111 = _1089 + (-0.5f);
        uint4 _1123 = asuint(cb6[17u]);
        float _1127 = float(min((_1123.x & _1079), 1u));
        float _1155 = float(min((_1123.y & _1079), 1u));
        float _1183 = float(min((_1123.z & _1079), 1u));
        float _1211 = float(min((_1123.w & _1079), 1u));
        float _1218 = (((((((_1111 + (cb6[18u].w * _1105)) * cb6[18u].x) * _1127) + 1.0f) * (_1090 / max(1.0f - _1090, 9.9999999747524270787835121154785e-07f))) * ((((_1111 + (cb6[19u].w * _1105)) * cb6[19u].x) * _1155) + 1.0f)) * ((((_1111 + (cb6[20u].w * _1105)) * cb6[20u].x) * _1183) + 1.0f)) * ((((_1111 + (cb6[21u].w * _1105)) * cb6[21u].x) * _1211) + 1.0f);
        float _1219 = (((((((_1111 + (cb6[18u].w * _1106)) * cb6[18u].y) * _1127) + 1.0f) * (_1091 / max(1.0f - _1091, 9.9999999747524270787835121154785e-07f))) * ((((_1111 + (cb6[19u].w * _1106)) * cb6[19u].y) * _1155) + 1.0f)) * ((((_1111 + (cb6[20u].w * _1106)) * cb6[20u].y) * _1183) + 1.0f)) * ((((_1111 + (cb6[21u].w * _1106)) * cb6[21u].y) * _1211) + 1.0f);
        float _1220 = (((((((_1111 + (cb6[18u].w * _1107)) * cb6[18u].z) * _1127) + 1.0f) * (_1092 / max(1.0f - _1092, 9.9999999747524270787835121154785e-07f))) * ((((_1111 + (cb6[19u].w * _1107)) * cb6[19u].z) * _1155) + 1.0f)) * ((((_1111 + (cb6[20u].w * _1107)) * cb6[20u].z) * _1183) + 1.0f)) * ((((_1111 + (cb6[21u].w * _1107)) * cb6[21u].z) * _1211) + 1.0f);
        frontier_phi_13_11_ladder = cb6[12u].y * (_1220 / max(_1220 + 1.0f, 1.0f));
        frontier_phi_13_11_ladder_1 = cb6[12u].y * (_1219 / max(_1219 + 1.0f, 1.0f));
        frontier_phi_13_11_ladder_2 = cb6[12u].y * (_1218 / max(_1218 + 1.0f, 1.0f));
        frontier_phi_13_11_ladder_3 = _557;
        frontier_phi_13_11_ladder_4 = _553;
      } else {
        frontier_phi_13_11_ladder = _807;
        frontier_phi_13_11_ladder_1 = _806;
        frontier_phi_13_11_ladder_2 = _805;
        frontier_phi_13_11_ladder_3 = _557;
        frontier_phi_13_11_ladder_4 = _553;
      }
      _975 = frontier_phi_13_11_ladder_4;
      _976 = frontier_phi_13_11_ladder_3;
      _977 = frontier_phi_13_11_ladder_2;
      _979 = frontier_phi_13_11_ladder_1;
      _981 = frontier_phi_13_11_ladder;
    } else {
      float4 _567 = _8.Load(int3(uint2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y), 0u));
      float4 _572 = _17.Load(int3(uint2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y), 0u));
      float _577 = _567.x - _572.x;
      float _578 = _567.y - _572.y;
      float _579 = _567.z - _572.z;
      float frontier_phi_13_6_ladder;
      float frontier_phi_13_6_ladder_1;
      float frontier_phi_13_6_ladder_2;
      float frontier_phi_13_6_ladder_3;
      float frontier_phi_13_6_ladder_4;
      if (_291) {
        uint _820 = 1u << (_12.Load(int3(uint2(uint(cb12[79u].x * _72), uint(cb12[79u].y * _73)), 0u)).y & 31u);
        float4 _823 = _14.Load(int3(uint2(gl_GlobalInvocationID.x & 255u, gl_GlobalInvocationID.y & 255u), 0u));
        float _825 = _823.x;
        float _826 = _823.y;
        float _827 = _823.z;
        float _830 = ((_825 + _826) + _827) * 0.3333333432674407958984375f;
        float _831 = cb6[12u].x * _577;
        float _832 = cb6[12u].x * _578;
        float _833 = cb6[12u].x * _579;
        float _846 = _825 - _830;
        float _847 = _826 - _830;
        float _848 = _827 - _830;
        float _852 = _830 + (-0.5f);
        uint4 _864 = asuint(cb6[17u]);
        float _868 = float(min((_864.x & _820), 1u));
        float _896 = float(min((_864.y & _820), 1u));
        float _924 = float(min((_864.z & _820), 1u));
        float _952 = float(min((_864.w & _820), 1u));
        float _959 = (((((((_852 + (cb6[18u].w * _846)) * cb6[18u].x) * _868) + 1.0f) * (_831 / max(1.0f - _831, 9.9999999747524270787835121154785e-07f))) * ((((_852 + (cb6[19u].w * _846)) * cb6[19u].x) * _896) + 1.0f)) * ((((_852 + (cb6[20u].w * _846)) * cb6[20u].x) * _924) + 1.0f)) * ((((_852 + (cb6[21u].w * _846)) * cb6[21u].x) * _952) + 1.0f);
        float _960 = (((((((_852 + (cb6[18u].w * _847)) * cb6[18u].y) * _868) + 1.0f) * (_832 / max(1.0f - _832, 9.9999999747524270787835121154785e-07f))) * ((((_852 + (cb6[19u].w * _847)) * cb6[19u].y) * _896) + 1.0f)) * ((((_852 + (cb6[20u].w * _847)) * cb6[20u].y) * _924) + 1.0f)) * ((((_852 + (cb6[21u].w * _847)) * cb6[21u].y) * _952) + 1.0f);
        float _961 = (((((((_852 + (cb6[18u].w * _848)) * cb6[18u].z) * _868) + 1.0f) * (_833 / max(1.0f - _833, 9.9999999747524270787835121154785e-07f))) * ((((_852 + (cb6[19u].w * _848)) * cb6[19u].z) * _896) + 1.0f)) * ((((_852 + (cb6[20u].w * _848)) * cb6[20u].z) * _924) + 1.0f)) * ((((_852 + (cb6[21u].w * _848)) * cb6[21u].z) * _952) + 1.0f);
        frontier_phi_13_6_ladder = cb6[12u].y * (_961 / max(_961 + 1.0f, 1.0f));
        frontier_phi_13_6_ladder_1 = cb6[12u].y * (_960 / max(_960 + 1.0f, 1.0f));
        frontier_phi_13_6_ladder_2 = cb6[12u].y * (_959 / max(_959 + 1.0f, 1.0f));
        frontier_phi_13_6_ladder_3 = _288;
        frontier_phi_13_6_ladder_4 = _287;
      } else {
        frontier_phi_13_6_ladder = _579;
        frontier_phi_13_6_ladder_1 = _578;
        frontier_phi_13_6_ladder_2 = _577;
        frontier_phi_13_6_ladder_3 = _288;
        frontier_phi_13_6_ladder_4 = _287;
      }
      _975 = frontier_phi_13_6_ladder_4;
      _976 = frontier_phi_13_6_ladder_3;
      _977 = frontier_phi_13_6_ladder_2;
      _979 = frontier_phi_13_6_ladder_1;
      _981 = frontier_phi_13_6_ladder;
    }
    bool _991 = cb6[1u].z > 0.0f;
    float _1239;
    if ((asuint(cb6[13u]).z != 0u) && _991) {
      _1239 = (cb6[1u].z * (asfloat(_23.Load(6u).x) + (-1.0f))) + 1.0f;
    } else {
      _1239 = 1.0f;
    }
    float _1244 = _975 + (-0.5f);
    float _1246 = (_976 + (-0.5f)) * 2.0f;
    float _1254 = _975 - (((_1246 * _1246) * _1244) * cb6[3u].x);
    float _1255 = _976 - ((((_1244 * _1244) * 2.0f) * _1246) * cb6[3u].y);
    float _1258 = (_1254 + (-0.5f)) * 2.0f;
    float _1259 = (_1255 + (-0.5f)) * 2.0f;
    float _1261 = cb0[0u].x * 0.004999999888241291046142578125f;
    float _1264 = (clamp(_1255, 0.0f, 1.0f) + 1.0f) - _1261;
    float _1269 = clamp(abs(cos(_1264 * 650.0f)), 0.0f, 1.0f);
    float _1275 = clamp(_1254, 0.0f, 1.0f) + 1.0f;
    float _1276 = _1275 - _1261;
    float _1282 = sin(cb0[0u].x);
    float _1283 = _1275 + _1261;
    float _1298 = clamp(((((_1282 + _1282) * 0.100000001490116119384765625f) + 0.540000021457672119140625f) + ((clamp(abs(cos(_1283 * 550.0f)), 0.0f, 1.0f) + clamp(abs(cos(_1276 * 250.0f)), 0.0f, 1.0f)) * 0.1799999773502349853515625f)) * ((_1269 * 0.39999997615814208984375f) + 0.60000002384185791015625f), 0.0f, 1.0f);
    float _1450;
    float _1452;
    float _1454;
    if (cb6[1u].w > 0.0f) {
      float4 _1423 = _19.SampleLevel(_46, float2(_83, _84), 0.0f);
      float _1434 = (clamp(abs(cos(_1264 * 250.0f)), 0.0f, 1.0f) * 0.0007999999797903001308441162109375f) + 0.00120000005699694156646728515625f;
      float _1441 = (_1269 * 0.001199999940581619739532470703125f) + 0.001800000085495412349700927734375f;
      float _1443 = (_1434 + _1423.x) - _1441;
      float _1444 = (_1434 + _1423.y) - _1441;
      float _1445 = (_1434 + _1423.z) - _1441;
      float _1611;
      float _1612;
      float _1613;
      if (cb6[6u].x > 0.0f) {
        float _1601 = clamp((sqrt((_125 * _125) + (_123 * _123)) - cb6[5u].z) / (cb6[5u].w - cb6[5u].z), 0.0f, 1.0f);
        float _1607 = 1.0f - (((_1601 * _1601) * (3.0f - (_1601 * 2.0f))) * cb6[6u].x);
        _1611 = _1607 * _1443;
        _1612 = _1607 * _1444;
        _1613 = _1607 * _1445;
      } else {
        _1611 = _1443;
        _1612 = _1444;
        _1613 = _1445;
      }
      float _1615 = dot(float3(_1611, _1612, _1613), float3(0.2125999927520751953125f, 0.715200006961822509765625f, 0.072200000286102294921875f));
      _1450 = (((_1611 - _1615) * cb6[6u].y) + _1615) * cb6[1u].w;
      _1452 = (((_1612 - _1615) * cb6[6u].y) + _1615) * cb6[1u].w;
      _1454 = (((_1613 - _1615) * cb6[6u].y) + _1615) * cb6[1u].w;
    } else {
      _1450 = 0.0f;
      _1452 = 0.0f;
      _1454 = 0.0f;
    }
    float _1643;
    float _1644;
    float _1645;
    if (cb6[2u].x > 0.0f) {
      float4 _1632 = _18.SampleLevel(_46, float2(_1254, 1.0f - _1255), 0.0f);

      // Custom
      if (injectedData.toneMapGammaCorrection == 1.f) {
        _1632 = renodx::color::correct::GammaSafe(_1632);
      }

      _1643 = (cb6[2u].x * _1632.x) + _1450;
      _1644 = (cb6[2u].x * _1632.y) + _1452;
      _1645 = (cb6[2u].x * _1632.z) + _1454;
    } else {
      _1643 = _1450;
      _1644 = _1452;
      _1645 = _1454;
    }
    float _1823;
    float _1824;
    float _1825;
    if (_991) {
      float4 _1786 = _16.SampleLevel(_46, float2(_975, _976), 0.0f);
      float4 _1793 = _15.SampleLevel(_46, float2(_975, _976), 0.0f);
      float _1798 = _1793.w;
      float _1799 = 1.0f - _1798;
      float _1804 = (_1799 * _1786.w) + _1798;
      _1823 = (((_1804 * ((_1793.x - _977) + (_1799 * _1786.x))) + _977) * cb6[1u].z) + _1643;
      _1824 = (((_1804 * ((_1793.y - _979) + (_1799 * _1786.y))) + _979) * cb6[1u].z) + _1644;
      _1825 = (((_1804 * ((_1793.z - _981) + (_1799 * _1786.z))) + _981) * cb6[1u].z) + _1645;
    } else {
      _1823 = _1643;
      _1824 = _1644;
      _1825 = _1645;
    }
    float _1995;
    float _1997;
    float _1999;
    if (cb6[1u].x > 0.0f) {
      float _1902 = cb6[6u].w * _1258;
      float _1903 = cb6[6u].w * _1259;
      float4 _1907 = _13.SampleLevel(_46, float2(_1902 + _1254, _1903 + _1255), 0.0f);
      float4 _1911 = _13.SampleLevel(_46, float2(_1254, _1255), 0.0f);
      float4 _1918 = _13.SampleLevel(_46, float2(_1254 - _1902, _1255 - _1903), 0.0f);
      float4 _1933 = _13.SampleLevel(_46, float2((cb6[7u].x * _1258) + _1254, (cb6[7u].y * _1259) + _1255), 1.0f);
      float4 _1944 = _13.SampleLevel(_46, float2((cb6[7u].z * _1258) + _1254, (cb6[7u].w * _1259) + _1255), 2.0f);
      float4 _1959 = _13.SampleLevel(_46, float2((cb6[8u].x * _1258) + _1254, (cb6[8u].y * _1259) + _1255), 4.0f);

      // Custom
      if (injectedData.toneMapGammaCorrection == 1.f) {
        _1907 = renodx::color::correct::GammaSafe(_1907);
        _1911 = renodx::color::correct::GammaSafe(_1911);
        _1918 = renodx::color::correct::GammaSafe(_1918);
        _1933 = renodx::color::correct::GammaSafe(_1933);
        _1944 = renodx::color::correct::GammaSafe(_1944);
        _1959 = renodx::color::correct::GammaSafe(_1959);
      }

      float _1991 = 1.0f - (((_1911.w + _1907.w) + _1918.w) * 0.3333333432674407958984375f);
      float _1992 = clamp(_1298 * (((cb6[8u].w * _1944.x) + (cb6[8u].z * _1933.x)) + (cb6[9u].x * _1959.x)), 0.0f, 1.0f) * _1991;
      float _1993 = clamp(_1298 * (((cb6[8u].w * _1944.y) + (cb6[8u].z * _1933.y)) + (cb6[9u].x * _1959.y)), 0.0f, 1.0f) * _1991;
      float _1994 = clamp(_1298 * (((cb6[8u].w * _1944.z) + (cb6[8u].z * _1933.z)) + (cb6[9u].x * _1959.z)), 0.0f, 1.0f) * _1991;
      float _2086;
      float _2087;
      float _2088;
      if (_991) {
        float _2082 = 1.0f - (dot(float3(cb6[1u].z * _977, cb6[1u].z * _979, cb6[1u].z * _981), float3(0.2125999927520751953125f, 0.715200006961822509765625f, 0.072200000286102294921875f)) * 0.699999988079071044921875f);
        _2086 = _2082 * _1992;
        _2087 = _2082 * _1993;
        _2088 = _2082 * _1994;
      } else {
        _2086 = _1992;
        _2087 = _1993;
        _2088 = _1994;
      }
      float _2090 = dot(float3(_2086, _2087, _2088), float3(0.2125999927520751953125f, 0.715200006961822509765625f, 0.072200000286102294921875f));
      float _2102 = cb6[1u].x * _1239;
      float _2116 = _1254 - cb6[3u].z;
      float _2117 = _1255 - cb6[3u].w;
      float4 _2123 = _13.SampleLevel(_46, float2(_2116, _2117), 0.0f);
      float _2125 = _2123.w;
      float _2138 = 1.0f - (cb6[4u].x * clamp(exp2(log2(abs((clamp(cb6[4u].y, 0.0f, 1.0f) * (_20.SampleLevel(_46, float2(_2116, _2117), cb6[4u].y + (-1.0f)).w - _2125)) + _2125)) * 0.819999992847442626953125f), 0.0f, 1.0f));
      float _2139 = _1282 * 0.00999999977648258209228515625f;
      float _2167 = (((clamp((cos((_2139 + _1255) * 1700.0f) + 1.0f) * 0.75f, 0.0f, 1.0f) * 0.00850000046193599700927734375f) + 0.00150000001303851604461669921875f) * (((_2139 + 0.540000021457672119140625f) + (_1282 * 0.100000001490116119384765625f)) + ((clamp(abs(cos(_1283 * 350.0f)), 0.0f, 1.0f) + clamp(abs(cos(_1276 * 350.0f)), 0.0f, 1.0f)) * 0.1799999773502349853515625f))) + 0.9900000095367431640625f;
      float _2169 = (_1907.x * 2.0f) * _2167;
      float _2170 = (_1911.y * 2.0f) * _2167;
      float _2171 = (_1918.z * 2.0f) * _2167;
      float _2172 = dot(float3(_2169, _2170, _2171), float3(0.2125999927520751953125f, 0.715200006961822509765625f, 0.072200000286102294921875f));
      float _2199 = cb6[5u].x * _1239;
      float4 _2201 = _20.SampleLevel(_46, float2(_1254, _1255), cb6[5u].y);
      _1995 = (((((_2169 - _2172) * cb6[6u].z) + _2172) * _1239) + ((((_2102 * (((_2086 - _2090) * cb6[6u].z) + _2090)) + _1823) * _1991) * _2138)) + (_2201.x * _2199);
      _1997 = (((((_2170 - _2172) * cb6[6u].z) + _2172) * _1239) + ((((_2102 * (((_2087 - _2090) * cb6[6u].z) + _2090)) + _1824) * _1991) * _2138)) + (_2201.y * _2199);
      _1999 = (((((_2171 - _2172) * cb6[6u].z) + _2172) * _1239) + ((((_2102 * (((_2088 - _2090) * cb6[6u].z) + _2090)) + _1825) * _1991) * _2138)) + (_2201.z * _2199);
    } else {
      _1995 = _1823;
      _1997 = _1824;
      _1999 = _1825;
    }
    float _104;
    float _107;
    float _110;
    if (cb6[1u].y > 0.0f) {
      float4 _2209 = _13.Load(int3(uint2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y), 0u));
      float _2215 = (_1239 * 2.0f) * cb6[1u].y;
      _104 = (_2215 * _2209.x) + _1995;
      _107 = (_2215 * _2209.y) + _1997;
      _110 = (_2215 * _2209.z) + _1999;
    } else {
      _104 = _1995;
      _107 = _1997;
      _110 = _1999;
    }
    float frontier_phi_1_55_ladder;
    float frontier_phi_1_55_ladder_1;
    float frontier_phi_1_55_ladder_2;
    if (_289) {
      float _2299;
      float _2301;
      float _2303;
      float _2305;
      float _2307;
      float _2309;
      uint _2311;
      _2299 = 1.0f;
      _2301 = 1.0f;
      _2303 = 1.0f;
      _2305 = ((_72 / cb6[12u].z) * 0.800000011920928955078125f) * (cb6[12u].z / cb6[12u].w);
      _2307 = (_73 / cb6[12u].w) * 5.0f;
      _2309 = 1.0f;
      _2311 = 1u;
      float _2300;
      float _2302;
      float _2304;
      for (;;) {
        float _2313 = float(int(_2311));
        float _2314 = _2313 + _2305;
        float _2315 = _2313 + _2307;
        float _2316 = floor(_2314);
        float _2317 = floor(_2315);
        float _2325 = frac(_2316 * 0.103100001811981201171875f);
        float _2326 = frac(_2317 * 0.10300000011920928955078125f);
        float _2327 = frac(_2316 * 0.097300000488758087158203125f);
        float _2328 = frac(_2317 * 0.109899997711181640625f);
        float _2333 = dot(float4(_2325, _2326, _2327, _2328), float4(_2328 + 33.3300018310546875f, _2327 + 33.3300018310546875f, _2325 + 33.3300018310546875f, _2326 + 33.3300018310546875f));
        float _2336 = _2333 + _2325;
        float _2337 = _2333 + _2326;
        float _2338 = _2333 + _2327;
        float _2339 = _2333 + _2328;
        float _2348 = frac((_2336 + _2337) * _2338);
        float _2349 = frac((_2336 + _2338) * _2337);
        float _2350 = frac((_2337 + _2338) * _2339);
        bool _2369 = frac((_2338 + _2339) * _2336) > 0.5f;
        _2300 = (_2369 ? _2348 : 1.0f) * _2299;
        _2302 = (_2369 ? _2349 : 1.0f) * _2301;
        _2304 = (_2369 ? _2350 : 1.0f) * _2303;
        uint _2312 = _2311 + 1u;
        if (_2312 == 15u) {
          break;
        } else {
          _2299 = _2300;
          _2301 = _2302;
          _2303 = _2304;
          _2305 = (((_2350 * 0.20000000298023223876953125f) * (frac(_2314) - _2309)) * frac(floor(((cb0[0u].x * 0.1500000059604644775390625f) + 300.0f) / _2348) * _2348)) + _2305;
          _2307 = ((_2350 * _2349) * (frac(_2315) - _2309)) + _2307;
          _2309 *= (-2.0f);
          _2311 = _2312;
        }
      }
      float _2387 = floor((cb0[0u].x * 2.0f) + cb6[0u].y);
      float _2388 = _2387 * 0.00999999977648258209228515625f;
      float _2398 = ((_2388 + 1.0f) - (floor(_2387 * 9.9999997473787516355514526367188e-05f) * 100.0f)) * 0.00999999977648258209228515625f;
      float _2399 = ((_2387 + 1.0f) - (floor(_2388) * 100.0f)) * 0.00999999977648258209228515625f;
      float _2404 = 0.5f - (cb6[0u].y * 0.375f);
      float _2405 = (cb6[0u].y * 0.75f) + (-0.100000001490116119384765625f);
      float _2408 = frac((((floor(_975 * 10.0f) * 0.100000001490116119384765625f) + 0.0500000007450580596923828125f) + _2398) * 0.103100001811981201171875f);
      float _2409 = frac((((floor(_976 * 33.33333587646484375f) * 0.02999999932944774627685546875f) + 0.014999999664723873138427734375f) + _2399) * 0.103100001811981201171875f);
      float _2411 = _2408 + 33.3300018310546875f;
      float _2412 = dot(float3(_2408, _2409, _2408), float3(_2409 + 33.3300018310546875f, _2411, _2411));
      float _2420 = frac(((_2409 + _2408) + (_2412 * 2.0f)) * (_2412 + _2408));
      float _2423 = ((1.0f - _2420) * _2405) + _2420;
      float _2444 = frac((((floor(_975 * 11.111110687255859375f) * 0.0900000035762786865234375f) + 0.04500000178813934326171875f) + _2398) * 0.103100001811981201171875f);
      float _2445 = frac((((floor(_976 * 25.0f) * 0.039999999105930328369140625f) + 0.0199999995529651641845703125f) + _2399) * 0.103100001811981201171875f);
      float _2447 = _2444 + 33.3300018310546875f;
      float _2448 = dot(float3(_2444, _2445, _2444), float3(_2445 + 33.3300018310546875f, _2447, _2447));
      float _2456 = frac(((_2445 + _2444) + (_2448 * 2.0f)) * (_2448 + _2444));
      float _2459 = ((1.0f - _2456) * _2405) + _2456;
      float _2463 = max(0.0f, _2300);
      float _2464 = max(0.0f, _2302);
      float _2465 = max(0.0f, _2304);
      float _2467 = max(_2463, max(_2464, _2465));
      float _2468 = _2467 * _2467;
      float _2469 = _2463 * 2.0f;
      float _2470 = _2464 * 0.100000001490116119384765625f;
      float _2471 = _2465 * 0.25f;
      float _2479 = clamp((round(_2423 - (_2423 * _2404)) * 5.0f) * round(_2459 - (_2459 * _2404)), 0.0f, 1.0f) * 3.0f;
      frontier_phi_1_55_ladder = (((_2471 - _110) + (_2468 * _2471)) * _2479) + _110;
      frontier_phi_1_55_ladder_1 = (((_2470 - _107) + (_2468 * _2470)) * _2479) + _107;
      frontier_phi_1_55_ladder_2 = (((_2469 - _104) + (_2468 * _2469)) * _2479) + _104;
    } else {
      frontier_phi_1_55_ladder = _110;
      frontier_phi_1_55_ladder_1 = _107;
      frontier_phi_1_55_ladder_2 = _104;
    }
    _101 = frontier_phi_1_55_ladder_2;
    _105 = frontier_phi_1_55_ladder_1;
    _108 = frontier_phi_1_55_ladder;
  }
  bool _117 = asuint(cb6[15u]).x == 0u;
  float _292;
  float _295;
  float _297;
  if (_117) {
    _292 = _293;
    _295 = _293;
    _297 = _293;
  } else {
    float4 _304 = _8.Load(int3(uint2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y), 0u));
    float _307 = _304.x;
    float _308 = _304.y;
    float _309 = _304.z;
    float frontier_phi_3_4_ladder;
    float frontier_phi_3_4_ladder_1;
    float frontier_phi_3_4_ladder_2;
    if (_100) {
      frontier_phi_3_4_ladder = 0.0f;
      frontier_phi_3_4_ladder_1 = 0.0f;
      frontier_phi_3_4_ladder_2 = 0.0f;
    } else {
      float4 _609 = _16.SampleLevel(_46, float2(_83, _84), 0.0f);
      float4 _617 = _15.SampleLevel(_46, float2(_83, _84), 0.0f);
      float _622 = _617.w;
      float _623 = 1.0f - _622;
      float _628 = (_623 * _609.w) + _622;
      frontier_phi_3_4_ladder = ((_628 * ((_617.z - _309) + (_623 * _609.z))) + _309) * cb6[1u].z;
      frontier_phi_3_4_ladder_1 = ((_628 * ((_617.y - _308) + (_623 * _609.y))) + _308) * cb6[1u].z;
      frontier_phi_3_4_ladder_2 = ((_628 * ((_617.x - _307) + (_623 * _609.x))) + _307) * cb6[1u].z;
    }
    _292 = frontier_phi_3_4_ladder_2;
    _295 = frontier_phi_3_4_ladder_1;
    _297 = frontier_phi_3_4_ladder;
  }
  float _595;
  float _597;
  float _599;
  if (cb6[14u].w > 0.0f) {
    uint4 _583 = asuint(cb6[10u]);
    uint _584 = _583.x;
    uint _586 = _583.z;
    uint _589 = _583.y;
    uint _592 = _583.w;
    float frontier_phi_8_7_ladder;
    float frontier_phi_8_7_ladder_1;
    float frontier_phi_8_7_ladder_2;
    if ((((gl_GlobalInvocationID.x >= _584) && (gl_GlobalInvocationID.x < _586)) && (gl_GlobalInvocationID.y >= _589)) && (gl_GlobalInvocationID.y < _592)) {
      float4 _1015 = _24.SampleLevel(_46, float2((cb6[11u].z * ((_72 - float(int(_584))) / float(int(_586 - _584)))) + cb6[11u].x, (cb6[11u].w * ((_73 - float(int(_589))) / float(int(_592 - _589)))) + cb6[11u].y), 0.0f);
      frontier_phi_8_7_ladder = _1015.z * cb6[14u].w;
      frontier_phi_8_7_ladder_1 = _1015.y * cb6[14u].w;
      frontier_phi_8_7_ladder_2 = _1015.x * cb6[14u].w;
    } else {
      frontier_phi_8_7_ladder = _108;
      frontier_phi_8_7_ladder_1 = _105;
      frontier_phi_8_7_ladder_2 = _101;
    }
    _595 = frontier_phi_8_7_ladder_2;
    _597 = frontier_phi_8_7_ladder_1;
    _599 = frontier_phi_8_7_ladder;
  } else {
    _595 = _101;
    _597 = _105;
    _599 = _108;
  }
  // Custom: Switch to colormath
  /*
  uint4 _604 = asuint(cb6[13u]);
  float _1020;
  float _1026;
  float _1032;
  if (_604.y == 0u)
  {
      _1020 = _595;
      _1026 = _597;
      _1032 = _599;
  }
  else
  {
      uint _1063 = _604.w;
      float _1366;
      float _1367;
      float _1368;
      if (cb6[14u].z != 1.0f)
      {
          _1366 = exp2(log2(abs(_595)) * cb6[14u].z);
          _1367 = exp2(log2(abs(_597)) * cb6[14u].z);
          _1368 = exp2(log2(abs(_599)) * cb6[14u].z);
      }
      else
      {
          _1366 = _595;
          _1367 = _597;
          _1368 = _599;
      }
      float _1378 = frac(_72 * 211.1488037109375f);
      float _1379 = frac(_73 * 210.944000244140625f);
      float _1380 = frac(cb0[0u].x * 6.227200031280517578125f);
      float _1383 = _1380 + 33.3300018310546875f;
      float _1384 = dot(float3(_1378, _1379, _1380), float3(_1379 + 33.3300018310546875f, _1378 + 33.3300018310546875f, _1383));
      float _1387 = _1384 + _1378;
      float _1388 = _1384 + _1379;
      float _1390 = _1387 + _1388;
      float _1395 = frac(_1390 * (_1384 + _1380));
      float _1396 = frac((_1387 * 2.0f) * _1388);
      float _1397 = frac(_1390 * _1387);
      float _1403 = frac((_72 + 64.0f) * 211.1488037109375f);
      float _1404 = frac((_73 + 64.0f) * 210.944000244140625f);
      float _1407 = dot(float3(_1403, _1404, _1380), float3(_1404 + 33.3300018310546875f, _1403 + 33.3300018310546875f, _1383));
      float _1410 = _1407 + _1403;
      float _1411 = _1407 + _1404;
      float _1413 = _1410 + _1411;
      float _1418 = frac(_1413 * (_1407 + _1380));
      float _1419 = frac((_1410 * 2.0f) * _1411);
      float _1420 = frac(_1413 * _1410);
      float frontier_phi_15_23_ladder;
      float frontier_phi_15_23_ladder_1;
      float frontier_phi_15_23_ladder_2;
      if (_1063 == 0u)
      {
          float _1556 = (_1366 <= 0.003130800090730190277099609375f) ? (_1366 * 12.9200000762939453125f) : ((exp2(log2(abs(_1366)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
          float _1557 = (_1367 <= 0.003130800090730190277099609375f) ? (_1367 * 12.9200000762939453125f) : ((exp2(log2(abs(_1367)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
          float _1558 = (_1368 <= 0.003130800090730190277099609375f) ? (_1368 * 12.9200000762939453125f) : ((exp2(log2(abs(_1368)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
          float _1559 = _1556 * 510.0f;
          float _1561 = _1557 * 510.0f;
          float _1562 = _1558 * 510.0f;
          frontier_phi_15_23_ladder = (((_1396 + (-0.5f)) + (min(min(1.0f, _1561), 510.0f - _1561) * (_1419 + (-0.5f)))) * 0.0039215688593685626983642578125f) + _1557;
          frontier_phi_15_23_ladder_1 = (((_1397 + (-0.5f)) + (min(min(1.0f, _1562), 510.0f - _1562) * (_1420 + (-0.5f)))) * 0.0039215688593685626983642578125f) + _1558;
          frontier_phi_15_23_ladder_2 = (((_1395 + (-0.5f)) + (min(min(1.0f, _1559), 510.0f - _1559) * (_1418 + (-0.5f)))) * 0.0039215688593685626983642578125f) + _1556;
      }
      else
      {
          float frontier_phi_15_23_ladder_31_ladder;
          float frontier_phi_15_23_ladder_31_ladder_1;
          float frontier_phi_15_23_ladder_31_ladder_2;
          if (_1063 == 1u)
          {
              float _1705 = mad(0.043306000530719757080078125f, _1368, mad(0.329291999340057373046875f, _1367, _1366 * 0.627402007579803466796875f));
              float _1711 = mad(0.011359999887645244598388671875f, _1368, mad(0.9195439815521240234375f, _1367, _1366 * 0.06909500062465667724609375f));
              float _1717 = mad(0.89557802677154541015625f, _1368, mad(0.08802799880504608154296875f, _1367, _1366 * 0.0163940005004405975341796875f));
              float _1753 = exp2(log2(abs((((clamp(mad(_1717, cb6[22u].z, mad(_1711, cb6[22u].y, _1705 * cb6[22u].x)), 0.0f, 1.0f) - _1705) * cb6[16u].x) + _1705) * cb6[14u].x)) * 0.1593017578125f);
              float _1754 = exp2(log2(abs((((clamp(mad(_1717, cb6[23u].z, mad(_1711, cb6[23u].y, _1705 * cb6[23u].x)), 0.0f, 1.0f) - _1711) * cb6[16u].x) + _1711) * cb6[14u].x)) * 0.1593017578125f);
              float _1755 = exp2(log2(abs((((clamp(mad(_1717, cb6[24u].z, mad(_1711, cb6[24u].y, _1705 * cb6[24u].x)), 0.0f, 1.0f) - _1717) * cb6[16u].x) + _1717) * cb6[14u].x)) * 0.1593017578125f);
              frontier_phi_15_23_ladder_31_ladder = exp2(log2(abs(((_1754 * 18.8515625f) + 0.8359375f) / ((_1754 * 18.6875f) + 1.0f))) * 78.84375f);
              frontier_phi_15_23_ladder_31_ladder_1 = exp2(log2(abs(((_1755 * 18.8515625f) + 0.8359375f) / ((_1755 * 18.6875f) + 1.0f))) * 78.84375f);
              frontier_phi_15_23_ladder_31_ladder_2 = exp2(log2(abs(((_1753 * 18.8515625f) + 0.8359375f) / ((_1753 * 18.6875f) + 1.0f))) * 78.84375f);
          }
          else
          {
              float frontier_phi_15_23_ladder_31_ladder_39_ladder;
              float frontier_phi_15_23_ladder_31_ladder_39_ladder_1;
              float frontier_phi_15_23_ladder_31_ladder_39_ladder_2;
              if (_1063 == 2u)
              {
                  frontier_phi_15_23_ladder_31_ladder_39_ladder = _1367 * cb6[14u].x;
                  frontier_phi_15_23_ladder_31_ladder_39_ladder_1 = _1368 * cb6[14u].x;
                  frontier_phi_15_23_ladder_31_ladder_39_ladder_2 = _1366 * cb6[14u].x;
              }
              else
              {
                  float frontier_phi_15_23_ladder_31_ladder_39_ladder_45_ladder;
                  float frontier_phi_15_23_ladder_31_ladder_39_ladder_45_ladder_1;
                  float frontier_phi_15_23_ladder_31_ladder_39_ladder_45_ladder_2;
                  if (_1063 == 3u)
                  {
                      float _2013 = mad(_1368, cb6[22u].z, mad(_1367, cb6[22u].y, _1366 * cb6[22u].x)) * cb6[14u].x;
                      float _2014 = mad(_1368, cb6[23u].z, mad(_1367, cb6[23u].y, _1366 * cb6[23u].x)) * cb6[14u].x;
                      float _2015 = mad(_1368, cb6[24u].z, mad(_1367, cb6[24u].y, _1366 * cb6[24u].x)) * cb6[14u].x;
                      float _2040 = (_2013 <= 0.003130800090730190277099609375f) ? (_2013 * 12.9200000762939453125f) : ((exp2(log2(abs(_2013)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
                      float _2041 = (_2014 <= 0.003130800090730190277099609375f) ? (_2014 * 12.9200000762939453125f) : ((exp2(log2(abs(_2014)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
                      float _2042 = (_2015 <= 0.003130800090730190277099609375f) ? (_2015 * 12.9200000762939453125f) : ((exp2(log2(abs(_2015)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
                      float _2043 = _2040 * 2046.0f;
                      float _2045 = _2041 * 2046.0f;
                      float _2046 = _2042 * 2046.0f;
                      frontier_phi_15_23_ladder_31_ladder_39_ladder_45_ladder = (((_1396 + (-0.5f)) + (min(min(1.0f, _2045), 2046.0f - _2045) * (_1419 + (-0.5f)))) * 0.000977517105638980865478515625f) + _2041;
                      frontier_phi_15_23_ladder_31_ladder_39_ladder_45_ladder_1 = (((_1397 + (-0.5f)) + (min(min(1.0f, _2046), 2046.0f - _2046) * (_1420 + (-0.5f)))) * 0.000977517105638980865478515625f) + _2042;
                      frontier_phi_15_23_ladder_31_ladder_39_ladder_45_ladder_2 = (((_1395 + (-0.5f)) + (min(min(1.0f, _2043), 2046.0f - _2043) * (_1418 + (-0.5f)))) * 0.000977517105638980865478515625f) + _2040;
                  }
                  else
                  {
                      frontier_phi_15_23_ladder_31_ladder_39_ladder_45_ladder = (_1367 * cb6[14u].x) + cb6[14u].y;
                      frontier_phi_15_23_ladder_31_ladder_39_ladder_45_ladder_1 = (_1368 * cb6[14u].x) + cb6[14u].y;
                      frontier_phi_15_23_ladder_31_ladder_39_ladder_45_ladder_2 = (_1366 * cb6[14u].x) + cb6[14u].y;
                  }
                  frontier_phi_15_23_ladder_31_ladder_39_ladder = frontier_phi_15_23_ladder_31_ladder_39_ladder_45_ladder;
                  frontier_phi_15_23_ladder_31_ladder_39_ladder_1 = frontier_phi_15_23_ladder_31_ladder_39_ladder_45_ladder_1;
                  frontier_phi_15_23_ladder_31_ladder_39_ladder_2 = frontier_phi_15_23_ladder_31_ladder_39_ladder_45_ladder_2;
              }
              frontier_phi_15_23_ladder_31_ladder = frontier_phi_15_23_ladder_31_ladder_39_ladder;
              frontier_phi_15_23_ladder_31_ladder_1 = frontier_phi_15_23_ladder_31_ladder_39_ladder_1;
              frontier_phi_15_23_ladder_31_ladder_2 = frontier_phi_15_23_ladder_31_ladder_39_ladder_2;
          }
          frontier_phi_15_23_ladder = frontier_phi_15_23_ladder_31_ladder;
          frontier_phi_15_23_ladder_1 = frontier_phi_15_23_ladder_31_ladder_1;
          frontier_phi_15_23_ladder_2 = frontier_phi_15_23_ladder_31_ladder_2;
      }
      _1020 = frontier_phi_15_23_ladder_2;
      _1026 = frontier_phi_15_23_ladder;
      _1032 = frontier_phi_15_23_ladder_1;
  }
  float _1301;
  float _1307;
  float _1313;
  if (_117)
  {
      _1301 = _292;
      _1307 = _295;
      _1313 = _297;
  }
  else
  {
      uint _1352 = _604.w;
      float _1475;
      float _1476;
      float _1477;
      if (cb6[15u].w != 1.0f)
      {
          _1475 = exp2(log2(abs(_292)) * cb6[15u].w);
          _1476 = exp2(log2(abs(_295)) * cb6[15u].w);
          _1477 = exp2(log2(abs(_297)) * cb6[15u].w);
      }
      else
      {
          _1475 = _292;
          _1476 = _295;
          _1477 = _297;
      }
      float _1484 = frac(_72 * 211.1488037109375f);
      float _1485 = frac(_73 * 210.944000244140625f);
      float _1486 = frac(cb0[0u].x * 6.227200031280517578125f);
      float _1489 = _1486 + 33.3300018310546875f;
      float _1490 = dot(float3(_1484, _1485, _1486), float3(_1485 + 33.3300018310546875f, _1484 + 33.3300018310546875f, _1489));
      float _1493 = _1490 + _1484;
      float _1494 = _1490 + _1485;
      float _1496 = _1493 + _1494;
      float _1501 = frac(_1496 * (_1490 + _1486));
      float _1502 = frac((_1493 * 2.0f) * _1494);
      float _1503 = frac(_1496 * _1493);
      float _1508 = frac((_72 + 64.0f) * 211.1488037109375f);
      float _1509 = frac((_73 + 64.0f) * 210.944000244140625f);
      float _1512 = dot(float3(_1508, _1509, _1486), float3(_1509 + 33.3300018310546875f, _1508 + 33.3300018310546875f, _1489));
      float _1515 = _1512 + _1508;
      float _1516 = _1512 + _1509;
      float _1518 = _1515 + _1516;
      float _1523 = frac(_1518 * (_1512 + _1486));
      float _1524 = frac((_1515 * 2.0f) * _1516);
      float _1525 = frac(_1518 * _1515);
      float frontier_phi_20_29_ladder;
      float frontier_phi_20_29_ladder_1;
      float frontier_phi_20_29_ladder_2;
      if (_1352 == 0u)
      {
          float _1670 = (_1475 <= 0.003130800090730190277099609375f) ? (_1475 * 12.9200000762939453125f) : ((exp2(log2(abs(_1475)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
          float _1671 = (_1476 <= 0.003130800090730190277099609375f) ? (_1476 * 12.9200000762939453125f) : ((exp2(log2(abs(_1476)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
          float _1672 = (_1477 <= 0.003130800090730190277099609375f) ? (_1477 * 12.9200000762939453125f) : ((exp2(log2(abs(_1477)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
          float _1673 = _1670 * 510.0f;
          float _1674 = _1671 * 510.0f;
          float _1675 = _1672 * 510.0f;
          frontier_phi_20_29_ladder = (((_1502 + (-0.5f)) + (min(min(1.0f, _1674), 510.0f - _1674) * (_1524 + (-0.5f)))) * 0.0039215688593685626983642578125f) + _1671;
          frontier_phi_20_29_ladder_1 = (((_1503 + (-0.5f)) + (min(min(1.0f, _1675), 510.0f - _1675) * (_1525 + (-0.5f)))) * 0.0039215688593685626983642578125f) + _1672;
          frontier_phi_20_29_ladder_2 = (((_1501 + (-0.5f)) + (min(min(1.0f, _1673), 510.0f - _1673) * (_1523 + (-0.5f)))) * 0.0039215688593685626983642578125f) + _1670;
      }
      else
      {
          float frontier_phi_20_29_ladder_37_ladder;
          float frontier_phi_20_29_ladder_37_ladder_1;
          float frontier_phi_20_29_ladder_37_ladder_2;
          if (_1352 == 1u)
          {
              float _1830 = mad(0.043306000530719757080078125f, _1477, mad(0.329291999340057373046875f, _1476, _1475 * 0.627402007579803466796875f));
              float _1833 = mad(0.011359999887645244598388671875f, _1477, mad(0.9195439815521240234375f, _1476, _1475 * 0.06909500062465667724609375f));
              float _1836 = mad(0.89557802677154541015625f, _1477, mad(0.08802799880504608154296875f, _1476, _1475 * 0.0163940005004405975341796875f));
              float _1870 = exp2(log2(abs((((clamp(mad(_1836, cb6[26u].z, mad(_1833, cb6[26u].y, _1830 * cb6[26u].x)), 0.0f, 1.0f) - _1830) * cb6[16u].x) + _1830) * cb6[15u].y)) * 0.1593017578125f);
              float _1871 = exp2(log2(abs((((clamp(mad(_1836, cb6[27u].z, mad(_1833, cb6[27u].y, _1830 * cb6[27u].x)), 0.0f, 1.0f) - _1833) * cb6[16u].x) + _1833) * cb6[15u].y)) * 0.1593017578125f);
              float _1872 = exp2(log2(abs((((clamp(mad(_1836, cb6[28u].z, mad(_1833, cb6[28u].y, _1830 * cb6[28u].x)), 0.0f, 1.0f) - _1836) * cb6[16u].x) + _1836) * cb6[15u].y)) * 0.1593017578125f);
              frontier_phi_20_29_ladder_37_ladder = exp2(log2(abs(((_1871 * 18.8515625f) + 0.8359375f) / ((_1871 * 18.6875f) + 1.0f))) * 78.84375f);
              frontier_phi_20_29_ladder_37_ladder_1 = exp2(log2(abs(((_1872 * 18.8515625f) + 0.8359375f) / ((_1872 * 18.6875f) + 1.0f))) * 78.84375f);
              frontier_phi_20_29_ladder_37_ladder_2 = exp2(log2(abs(((_1870 * 18.8515625f) + 0.8359375f) / ((_1870 * 18.6875f) + 1.0f))) * 78.84375f);
          }
          else
          {
              float frontier_phi_20_29_ladder_37_ladder_43_ladder;
              float frontier_phi_20_29_ladder_37_ladder_43_ladder_1;
              float frontier_phi_20_29_ladder_37_ladder_43_ladder_2;
              if (_1352 == 2u)
              {
                  frontier_phi_20_29_ladder_37_ladder_43_ladder = _1476 * cb6[15u].y;
                  frontier_phi_20_29_ladder_37_ladder_43_ladder_1 = _1477 * cb6[15u].y;
                  frontier_phi_20_29_ladder_37_ladder_43_ladder_2 = _1475 * cb6[15u].y;
              }
              else
              {
                  float frontier_phi_20_29_ladder_37_ladder_43_ladder_49_ladder;
                  float frontier_phi_20_29_ladder_37_ladder_43_ladder_49_ladder_1;
                  float frontier_phi_20_29_ladder_37_ladder_43_ladder_49_ladder_2;
                  if (_1352 == 3u)
                  {
                      float _2231 = mad(_1477, cb6[26u].z, mad(_1476, cb6[26u].y, _1475 * cb6[26u].x)) * cb6[15u].y;
                      float _2232 = mad(_1477, cb6[27u].z, mad(_1476, cb6[27u].y, _1475 * cb6[27u].x)) * cb6[15u].y;
                      float _2233 = mad(_1477, cb6[28u].z, mad(_1476, cb6[28u].y, _1475 * cb6[28u].x)) * cb6[15u].y;
                      float _2258 = (_2231 <= 0.003130800090730190277099609375f) ? (_2231 * 12.9200000762939453125f) : ((exp2(log2(abs(_2231)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
                      float _2259 = (_2232 <= 0.003130800090730190277099609375f) ? (_2232 * 12.9200000762939453125f) : ((exp2(log2(abs(_2232)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
                      float _2260 = (_2233 <= 0.003130800090730190277099609375f) ? (_2233 * 12.9200000762939453125f) : ((exp2(log2(abs(_2233)) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f));
                      float _2261 = _2258 * 2046.0f;
                      float _2262 = _2259 * 2046.0f;
                      float _2263 = _2260 * 2046.0f;
                      frontier_phi_20_29_ladder_37_ladder_43_ladder_49_ladder = (((_1502 + (-0.5f)) + (min(min(1.0f, _2262), 2046.0f - _2262) * (_1524 + (-0.5f)))) * 0.000977517105638980865478515625f) + _2259;
                      frontier_phi_20_29_ladder_37_ladder_43_ladder_49_ladder_1 = (((_1503 + (-0.5f)) + (min(min(1.0f, _2263), 2046.0f - _2263) * (_1525 + (-0.5f)))) * 0.000977517105638980865478515625f) + _2260;
                      frontier_phi_20_29_ladder_37_ladder_43_ladder_49_ladder_2 = (((_1501 + (-0.5f)) + (min(min(1.0f, _2261), 2046.0f - _2261) * (_1523 + (-0.5f)))) * 0.000977517105638980865478515625f) + _2258;
                  }
                  else
                  {
                      frontier_phi_20_29_ladder_37_ladder_43_ladder_49_ladder = (_1476 * cb6[15u].y) + cb6[15u].z;
                      frontier_phi_20_29_ladder_37_ladder_43_ladder_49_ladder_1 = (_1477 * cb6[15u].y) + cb6[15u].z;
                      frontier_phi_20_29_ladder_37_ladder_43_ladder_49_ladder_2 = (_1475 * cb6[15u].y) + cb6[15u].z;
                  }
                  frontier_phi_20_29_ladder_37_ladder_43_ladder = frontier_phi_20_29_ladder_37_ladder_43_ladder_49_ladder;
                  frontier_phi_20_29_ladder_37_ladder_43_ladder_1 = frontier_phi_20_29_ladder_37_ladder_43_ladder_49_ladder_1;
                  frontier_phi_20_29_ladder_37_ladder_43_ladder_2 = frontier_phi_20_29_ladder_37_ladder_43_ladder_49_ladder_2;
              }
              frontier_phi_20_29_ladder_37_ladder = frontier_phi_20_29_ladder_37_ladder_43_ladder;
              frontier_phi_20_29_ladder_37_ladder_1 = frontier_phi_20_29_ladder_37_ladder_43_ladder_1;
              frontier_phi_20_29_ladder_37_ladder_2 = frontier_phi_20_29_ladder_37_ladder_43_ladder_2;
          }
          frontier_phi_20_29_ladder = frontier_phi_20_29_ladder_37_ladder;
          frontier_phi_20_29_ladder_1 = frontier_phi_20_29_ladder_37_ladder_1;
          frontier_phi_20_29_ladder_2 = frontier_phi_20_29_ladder_37_ladder_2;
      }
      _1301 = frontier_phi_20_29_ladder_2;
      _1307 = frontier_phi_20_29_ladder;
      _1313 = frontier_phi_20_29_ladder_1;
  }
  _27[uint2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y)] = float4(_1020, _1026, _1032, 1.0f);

  if (!(asuint(cb6[15u]).x == 0u))
  {
      _28[uint2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y)] = float4(_1301, _1307, _1313, 1.0f);
  }

  */
  uint outputTypeEnum = asuint(cb6[13u].w);

  float3 outputColor1 = float3(_595, _597, _599);
  if (asuint(cb6[13u].y) != 0u) {
    ConvertColorParams params = {
        outputTypeEnum,  // outputTypeEnum
        cb6[14u].x,      // paperWhiteScaling
        cb6[14u].y,      // blackFloorAdjust
        cb6[14u].z,      // gammaCorrection
        cb6[16u].x,      // pqSaturation
        float3x3(
            cb6[22u].x, cb6[22u].y, cb6[22u].z,
            cb6[23u].x, cb6[23u].y, cb6[23u].z,
            cb6[24u].x, cb6[24u].y, cb6[24u].z),  // pqMatrix
        float3(_72, _73, cb0[0u].x)               // random3
    };
    outputColor1 = convertColor(outputColor1, params);
  }

  _27[uint2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y)] = float4(outputColor1.rgb, 1.0f);

  if (!_117) {
    float3 outputColor2 = float3(_292, _295, _297);
    ConvertColorParams params = {
        outputTypeEnum,  // outputTypeEnum
        cb6[15u].y,      // paperWhiteScaling
        cb6[15u].z,      // blackFloorAdjust
        cb6[15u].w,      // gammaCorrection
        cb6[16u].x,      // pqSaturation
        float3x3(
            cb6[26u].x, cb6[26u].y, cb6[26u].z,
            cb6[27u].x, cb6[27u].y, cb6[27u].z,
            cb6[28u].x, cb6[28u].y, cb6[28u].z),  // pqMatrix
        float3(_72, _73, cb0[0u].x)               // random3
    };

    outputColor2 = convertColor(outputColor2, params);
    _28[uint2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y)] = float4(outputColor2.rgb, 1.0f);
  }
}

[numthreads(16, 16, 1)] void main(SPIRV_Cross_Input stage_input) {
  gl_GlobalInvocationID = stage_input.gl_GlobalInvocationID;
  comp_main();
}
