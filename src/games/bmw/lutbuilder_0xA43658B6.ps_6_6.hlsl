#include "./common.hlsl"

Texture2D<float4> t0 : register(t0);

Texture2D<float4> t1 : register(t1);

cbuffer cb0 : register(b0) {
  float cb0_005x : packoffset(c005.x);
  float cb0_005y : packoffset(c005.y);
  float cb0_005z : packoffset(c005.z);
  float cb0_007x : packoffset(c007.x);
  float cb0_007y : packoffset(c007.y);
  float cb0_007z : packoffset(c007.z);
  float cb0_007w : packoffset(c007.w);
  float cb0_008x : packoffset(c008.x);
  float cb0_009x : packoffset(c009.x);
  float cb0_009y : packoffset(c009.y);
  float cb0_009z : packoffset(c009.z);
  float cb0_009w : packoffset(c009.w);
  float cb0_010x : packoffset(c010.x);
  float cb0_010y : packoffset(c010.y);
  float cb0_010z : packoffset(c010.z);
  float cb0_010w : packoffset(c010.w);
  float cb0_011x : packoffset(c011.x);
  float cb0_011y : packoffset(c011.y);
  float cb0_011z : packoffset(c011.z);
  float cb0_011w : packoffset(c011.w);
  float cb0_012x : packoffset(c012.x);
  float cb0_012y : packoffset(c012.y);
  float cb0_012z : packoffset(c012.z);
  float cb0_012w : packoffset(c012.w);
  float cb0_013x : packoffset(c013.x);
  float cb0_013y : packoffset(c013.y);
  float cb0_013z : packoffset(c013.z);
  float cb0_014x : packoffset(c014.x);
  float cb0_014y : packoffset(c014.y);
  float cb0_014z : packoffset(c014.z);
  float cb0_014w : packoffset(c014.w);
  float cb0_015x : packoffset(c015.x);
  float cb0_015y : packoffset(c015.y);
  float cb0_015z : packoffset(c015.z);
  float cb0_015w : packoffset(c015.w);
  float cb0_016x : packoffset(c016.x);
  float cb0_016y : packoffset(c016.y);
  float cb0_016z : packoffset(c016.z);
  float cb0_016w : packoffset(c016.w);
  float cb0_017x : packoffset(c017.x);
  float cb0_017y : packoffset(c017.y);
  float cb0_017z : packoffset(c017.z);
  float cb0_017w : packoffset(c017.w);
  float cb0_018x : packoffset(c018.x);
  float cb0_018y : packoffset(c018.y);
  float cb0_018z : packoffset(c018.z);
  float cb0_018w : packoffset(c018.w);
  float cb0_019x : packoffset(c019.x);
  float cb0_019y : packoffset(c019.y);
  float cb0_019z : packoffset(c019.z);
  float cb0_019w : packoffset(c019.w);
  float cb0_020x : packoffset(c020.x);
  float cb0_020y : packoffset(c020.y);
  float cb0_020z : packoffset(c020.z);
  float cb0_020w : packoffset(c020.w);
  float cb0_021x : packoffset(c021.x);
  float cb0_021y : packoffset(c021.y);
  float cb0_021z : packoffset(c021.z);
  float cb0_021w : packoffset(c021.w);
  float cb0_022x : packoffset(c022.x);
  float cb0_022y : packoffset(c022.y);
  float cb0_022z : packoffset(c022.z);
  float cb0_022w : packoffset(c022.w);
  float cb0_023x : packoffset(c023.x);
  float cb0_023y : packoffset(c023.y);
  float cb0_023z : packoffset(c023.z);
  float cb0_023w : packoffset(c023.w);
  float cb0_024x : packoffset(c024.x);
  float cb0_024y : packoffset(c024.y);
  float cb0_024z : packoffset(c024.z);
  float cb0_024w : packoffset(c024.w);
  float cb0_025x : packoffset(c025.x);
  float cb0_025y : packoffset(c025.y);
  float cb0_025z : packoffset(c025.z);
  float cb0_025w : packoffset(c025.w);
  float cb0_026x : packoffset(c026.x);
  float cb0_026y : packoffset(c026.y);
  float cb0_026z : packoffset(c026.z);
  float cb0_026w : packoffset(c026.w);
  float cb0_027x : packoffset(c027.x);
  float cb0_027y : packoffset(c027.y);
  float cb0_027z : packoffset(c027.z);
  float cb0_027w : packoffset(c027.w);
  float cb0_028x : packoffset(c028.x);
  float cb0_028y : packoffset(c028.y);
  float cb0_028z : packoffset(c028.z);
  float cb0_028w : packoffset(c028.w);
  float cb0_029x : packoffset(c029.x);
  float cb0_029y : packoffset(c029.y);
  float cb0_029z : packoffset(c029.z);
  float cb0_029w : packoffset(c029.w);
  float cb0_030x : packoffset(c030.x);
  float cb0_030y : packoffset(c030.y);
  float cb0_030z : packoffset(c030.z);
  float cb0_030w : packoffset(c030.w);
  float cb0_031x : packoffset(c031.x);
  float cb0_031y : packoffset(c031.y);
  float cb0_031z : packoffset(c031.z);
  float cb0_031w : packoffset(c031.w);
  float cb0_032x : packoffset(c032.x);
  float cb0_032y : packoffset(c032.y);
  float cb0_032z : packoffset(c032.z);
  float cb0_032w : packoffset(c032.w);
  float cb0_033x : packoffset(c033.x);
  float cb0_033y : packoffset(c033.y);
  float cb0_033z : packoffset(c033.z);
  float cb0_033w : packoffset(c033.w);
  float cb0_034x : packoffset(c034.x);
  float cb0_034y : packoffset(c034.y);
  float cb0_034z : packoffset(c034.z);
  float cb0_034w : packoffset(c034.w);
  float cb0_035x : packoffset(c035.x);
  float cb0_035y : packoffset(c035.y);
  float cb0_035z : packoffset(c035.z);
  float cb0_035w : packoffset(c035.w);
  float cb0_036x : packoffset(c036.x);
  float cb0_036y : packoffset(c036.y);
  float cb0_036z : packoffset(c036.z);
  float cb0_036w : packoffset(c036.w);
  float cb0_037x : packoffset(c037.x);
  uint cb0_037z : packoffset(c037.z);
  float cb0_038x : packoffset(c038.x);
  float cb0_038y : packoffset(c038.y);
  float cb0_038z : packoffset(c038.z);
  float cb0_039y : packoffset(c039.y);
  float cb0_039z : packoffset(c039.z);
  uint cb0_039w : packoffset(c039.w);
  uint cb0_040x : packoffset(c040.x);
};

SamplerState s0 : register(s0);

SamplerState s1 : register(s1);

float4 main(
  noperspective float2 TEXCOORD : TEXCOORD,
  noperspective float4 SV_Position : SV_Position,
  nointerpolation uint SV_RenderTargetArrayIndex : SV_RenderTargetArrayIndex
) : SV_Target {
  float4 SV_Target;
  float _10[6];
  float _11[6];
  float _12[6];
  float _13[6];
  float _14 = (TEXCOORD.x) + -0.015625f;
  float _15 = (TEXCOORD.y) + -0.015625f;
  float _18 = float((uint)(SV_RenderTargetArrayIndex));
  float _39 = 1.379158854484558f;
  float _40 = -0.3088507056236267f;
  float _41 = -0.07034677267074585f;
  float _42 = -0.06933528929948807f;
  float _43 = 1.0822921991348267f;
  float _44 = -0.012962047010660172f;
  float _45 = -0.002159259282052517f;
  float _46 = -0.045465391129255295f;
  float _47 = 1.0477596521377563f;
  float _105;
  float _106;
  float _107;
  float _825;
  float _861;
  float _872;
  float _936;
  float _1115;
  float _1126;
  float _1137;
  float _1302;
  float _1313;
  float _1464;
  float _1479;
  float _1494;
  float _1502;
  float _1503;
  float _1504;
  float _1565;
  float _1601;
  float _1612;
  float _1651;
  float _1761;
  float _1835;
  float _1909;
  float _1987;
  float _1988;
  float _1989;
  float _2122;
  float _2137;
  float _2152;
  float _2160;
  float _2161;
  float _2162;
  float _2223;
  float _2259;
  float _2270;
  float _2309;
  float _2419;
  float _2493;
  float _2567;
  float _2645;
  float _2646;
  float _2647;
  float _2800;
  float _2801;
  float _2802;
  if (!((((uint)(cb0_040x)) == 1))) {
    _39 = 1.02579927444458f;
    _40 = -0.020052503794431686f;
    _41 = -0.0057713985443115234f;
    _42 = -0.0022350111976265907f;
    _43 = 1.0045825242996216f;
    _44 = -0.002352306619286537f;
    _45 = -0.005014004185795784f;
    _46 = -0.025293385609984398f;
    _47 = 1.0304402112960815f;
    if (!((((uint)(cb0_040x)) == 2))) {
      _39 = 0.6954522132873535f;
      _40 = 0.14067870378494263f;
      _41 = 0.16386906802654266f;
      _42 = 0.044794563204050064f;
      _43 = 0.8596711158752441f;
      _44 = 0.0955343171954155f;
      _45 = -0.005525882821530104f;
      _46 = 0.004025210160762072f;
      _47 = 1.0015007257461548f;
      if (!((((uint)(cb0_040x)) == 3))) {
        bool _28 = (((uint)(cb0_040x)) == 4);
        _39 = ((_28 ? 1.0f : 1.7050515413284302f));
        _40 = ((_28 ? 0.0f : -0.6217905879020691f));
        _41 = ((_28 ? 0.0f : -0.0832584798336029f));
        _42 = ((_28 ? 0.0f : -0.13025718927383423f));
        _43 = ((_28 ? 1.0f : 1.1408027410507202f));
        _44 = ((_28 ? 0.0f : -0.010548528283834457f));
        _45 = ((_28 ? 0.0f : -0.024003278464078903f));
        _46 = ((_28 ? 0.0f : -0.1289687603712082f));
        _47 = ((_28 ? 1.0f : 1.152971863746643f));
      }
    }
  }
  if (((((uint)(cb0_039w)) > 2))) {
    float _58 = exp2(((log2((_14 * 1.0322580337524414f))) * 0.012683313339948654f));
    float _59 = exp2(((log2((_15 * 1.0322580337524414f))) * 0.012683313339948654f));
    float _60 = exp2(((log2((_18 * 0.032258063554763794f))) * 0.012683313339948654f));
    _105 = ((exp2(((log2(((max(0.0f, (_58 + -0.8359375f))) / (18.8515625f - (_58 * 18.6875f))))) * 6.277394771575928f))) * 100.0f);
    _106 = ((exp2(((log2(((max(0.0f, (_59 + -0.8359375f))) / (18.8515625f - (_59 * 18.6875f))))) * 6.277394771575928f))) * 100.0f);
    _107 = ((exp2(((log2(((max(0.0f, (_60 + -0.8359375f))) / (18.8515625f - (_60 * 18.6875f))))) * 6.277394771575928f))) * 100.0f);
  } else {
    _105 = (((exp2(((_14 * 14.45161247253418f) + -6.07624626159668f))) * 0.18000000715255737f) + -0.002667719265446067f);
    _106 = (((exp2(((_15 * 14.45161247253418f) + -6.07624626159668f))) * 0.18000000715255737f) + -0.002667719265446067f);
    _107 = (((exp2(((_18 * 0.4516128897666931f) + -6.07624626159668f))) * 0.18000000715255737f) + -0.002667719265446067f);
  }
  float _111 = 0.9994439482688904f / (cb0_034x);
  float _125 = (((bool)((((cb0_034x) * 1.0005563497543335f) <= 7000.0f))) ? (((((2967800.0f - (_111 * 4607000064.0f)) * _111) + 99.11000061035156f) * _111) + 0.24406300485134125f) : (((((1901800.0f - (_111 * 2006400000.0f)) * _111) + 247.47999572753906f) * _111) + 0.23703999817371368f));
  float _139 = (((((cb0_034x) * 1.2864121856637212e-07f) + 0.00015411825734190643f) * (cb0_034x)) + 0.8601177334785461f) / (((((cb0_034x) * 7.081451371959702e-07f) + 0.0008424202096648514f) * (cb0_034x)) + 1.0f);
  float _146 = (cb0_034x) * (cb0_034x);
  float _149 = (((((cb0_034x) * 4.204816761443908e-08f) + 4.228062607580796e-05f) * (cb0_034x)) + 0.31739872694015503f) / ((1.0f - ((cb0_034x) * 2.8974181986995973e-05f)) + (_146 * 1.6145605741257896e-07f));
  float _154 = ((_139 * 2.0f) + 4.0f) - (_149 * 8.0f);
  float _155 = (_139 * 3.0f) / _154;
  float _157 = (_149 * 2.0f) / _154;
  bool _158 = ((cb0_034x) < 4000.0f);
  float _168 = (((cb0_034x) + 1189.6199951171875f) * (cb0_034x)) + 1412139.875f;
  float _170 = ((-1137581184.0f - ((cb0_034x) * 1916156.25f)) - (_146 * 1.5317699909210205f)) / (_168 * _168);
  float _177 = (6193636.0f - ((cb0_034x) * 179.45599365234375f)) + _146;
  float _179 = ((1974715392.0f - ((cb0_034x) * 705674.0f)) - (_146 * 308.60699462890625f)) / (_177 * _177);
  float _181 = rsqrt((dot(float2(_170, _179), float2(_170, _179))));
  float _182 = (cb0_034y) * 0.05000000074505806f;
  float _185 = ((_182 * _179) * _181) + _139;
  float _188 = _149 - ((_182 * _170) * _181);
  float _193 = (4.0f - (_188 * 8.0f)) + (_185 * 2.0f);
  float _199 = (((_185 * 3.0f) / _193) - _155) + ((_158 ? _155 : _125));
  float _200 = (((_188 * 2.0f) / _193) - _157) + ((_158 ? _157 : (((_125 * 2.869999885559082f) + -0.2750000059604645f) - ((_125 * _125) * 3.0f))));
  bool _203 = (((uint)(cb0_037z)) != 0);
  float _204 = (_203 ? _199 : 0.3127000033855438f);
  float _205 = (_203 ? _200 : 0.32899999618530273f);
  float _206 = (_203 ? 0.3127000033855438f : _199);
  float _207 = (_203 ? 0.32899999618530273f : _200);
  float _208 = max(_205, 1.000000013351432e-10f);
  float _209 = _204 / _208;
  float _212 = ((1.0f - _204) - _205) / _208;
  float _213 = max(_207, 1.000000013351432e-10f);
  float _214 = _206 / _213;
  float _217 = ((1.0f - _206) - _207) / _213;
  float _236 = (mad(-0.16140000522136688f, _217, ((_214 * 0.8950999975204468f) + 0.266400009393692f))) / (mad(-0.16140000522136688f, _212, ((_209 * 0.8950999975204468f) + 0.266400009393692f)));
  float _237 = (mad(0.03669999912381172f, _217, (1.7135000228881836f - (_214 * 0.7501999735832214f)))) / (mad(0.03669999912381172f, _212, (1.7135000228881836f - (_209 * 0.7501999735832214f))));
  float _238 = (mad(1.0296000242233276f, _217, ((_214 * 0.03889999911189079f) + -0.06849999725818634f))) / (mad(1.0296000242233276f, _212, ((_209 * 0.03889999911189079f) + -0.06849999725818634f)));
  float _239 = mad(_237, -0.7501999735832214f, 0.0f);
  float _240 = mad(_237, 1.7135000228881836f, 0.0f);
  float _241 = mad(_237, 0.03669999912381172f, -0.0f);
  float _242 = mad(_238, 0.03889999911189079f, 0.0f);
  float _243 = mad(_238, -0.06849999725818634f, 0.0f);
  float _244 = mad(_238, 1.0296000242233276f, 0.0f);
  float _247 = mad(0.1599626988172531f, _242, (mad(-0.1470542997121811f, _239, (_236 * 0.883457362651825f))));
  float _250 = mad(0.1599626988172531f, _243, (mad(-0.1470542997121811f, _240, (_236 * 0.26293492317199707f))));
  float _253 = mad(0.1599626988172531f, _244, (mad(-0.1470542997121811f, _241, (_236 * -0.15930065512657166f))));
  float _256 = mad(0.04929120093584061f, _242, (mad(0.5183603167533875f, _239, (_236 * 0.38695648312568665f))));
  float _259 = mad(0.04929120093584061f, _243, (mad(0.5183603167533875f, _240, (_236 * 0.11516613513231277f))));
  float _262 = mad(0.04929120093584061f, _244, (mad(0.5183603167533875f, _241, (_236 * -0.0697740763425827f))));
  float _265 = mad(0.9684867262840271f, _242, (mad(0.04004279896616936f, _239, (_236 * -0.007634039502590895f))));
  float _268 = mad(0.9684867262840271f, _243, (mad(0.04004279896616936f, _240, (_236 * -0.0022720457054674625f))));
  float _271 = mad(0.9684867262840271f, _244, (mad(0.04004279896616936f, _241, (_236 * 0.0013765322510153055f))));
  float _274 = mad(_253, 0.01933390088379383f, (mad(_250, 0.2126729041337967f, (_247 * 0.4124563932418823f))));
  float _277 = mad(_253, 0.11919199675321579f, (mad(_250, 0.7151522040367126f, (_247 * 0.3575761020183563f))));
  float _280 = mad(_253, 0.9503040909767151f, (mad(_250, 0.07217500358819962f, (_247 * 0.18043750524520874f))));
  float _283 = mad(_262, 0.01933390088379383f, (mad(_259, 0.2126729041337967f, (_256 * 0.4124563932418823f))));
  float _286 = mad(_262, 0.11919199675321579f, (mad(_259, 0.7151522040367126f, (_256 * 0.3575761020183563f))));
  float _289 = mad(_262, 0.9503040909767151f, (mad(_259, 0.07217500358819962f, (_256 * 0.18043750524520874f))));
  float _292 = mad(_271, 0.01933390088379383f, (mad(_268, 0.2126729041337967f, (_265 * 0.4124563932418823f))));
  float _295 = mad(_271, 0.11919199675321579f, (mad(_268, 0.7151522040367126f, (_265 * 0.3575761020183563f))));
  float _298 = mad(_271, 0.9503040909767151f, (mad(_268, 0.07217500358819962f, (_265 * 0.18043750524520874f))));
  float _328 = mad((mad(-0.4986107647418976f, _298, (mad(-1.5373831987380981f, _289, (_280 * 3.2409698963165283f))))), _107, (mad((mad(-0.4986107647418976f, _295, (mad(-1.5373831987380981f, _286, (_277 * 3.2409698963165283f))))), _106, ((mad(-0.4986107647418976f, _292, (mad(-1.5373831987380981f, _283, (_274 * 3.2409698963165283f))))) * _105))));
  float _331 = mad((mad(0.04155505821108818f, _298, (mad(1.8759675025939941f, _289, (_280 * -0.9692436456680298f))))), _107, (mad((mad(0.04155505821108818f, _295, (mad(1.8759675025939941f, _286, (_277 * -0.9692436456680298f))))), _106, ((mad(0.04155505821108818f, _292, (mad(1.8759675025939941f, _283, (_274 * -0.9692436456680298f))))) * _105))));
  float _334 = mad((mad(1.056971549987793f, _298, (mad(-0.20397695899009705f, _289, (_280 * 0.05563008040189743f))))), _107, (mad((mad(1.056971549987793f, _295, (mad(-0.20397695899009705f, _286, (_277 * 0.05563008040189743f))))), _106, ((mad(1.056971549987793f, _292, (mad(-0.20397695899009705f, _283, (_274 * 0.05563008040189743f))))) * _105))));
  float _337 = mad(0.04736635088920593f, _334, (mad(0.3395121395587921f, _331, (_328 * 0.613191545009613f))));
  float _340 = mad(0.01345000695437193f, _334, (mad(0.9163357615470886f, _331, (_328 * 0.07020691782236099f))));
  float _343 = mad(0.8696067929267883f, _334, (mad(0.1095672994852066f, _331, (_328 * 0.020618872717022896f))));
  float _344 = dot(float3(_337, _340, _343), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
  float _348 = (_337 / _344) + -1.0f;
  float _349 = (_340 / _344) + -1.0f;
  float _350 = (_343 / _344) + -1.0f;
  float _362 = (1.0f - (exp2((((_344 * _344) * -4.0f) * (cb0_035z))))) * (1.0f - (exp2(((dot(float3(_348, _349, _350), float3(_348, _349, _350))) * -4.0f))));
  float _378 = (((mad(-0.06368283927440643f, _343, (mad(-0.32929131388664246f, _340, (_337 * 1.370412826538086f))))) - _337) * _362) + _337;
  float _379 = (((mad(-0.010861567221581936f, _343, (mad(1.0970908403396606f, _340, (_337 * -0.08343426138162613f))))) - _340) * _362) + _340;
  float _380 = (((mad(1.203694462776184f, _343, (mad(-0.09862564504146576f, _340, (_337 * -0.02579325996339321f))))) - _343) * _362) + _343;
  float _381 = dot(float3(_378, _379, _380), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
  float _395 = (cb0_018w) + (cb0_023w);
  float _409 = (cb0_017w) * (cb0_022w);
  float _423 = (cb0_016w) * (cb0_021w);
  float _437 = (cb0_015w) * (cb0_020w);
  float _451 = (cb0_014w) * (cb0_019w);
  float _455 = _378 - _381;
  float _456 = _379 - _381;
  float _457 = _380 - _381;
  float _514 = saturate((_381 / (cb0_034z)));
  float _518 = (_514 * _514) * (3.0f - (_514 * 2.0f));
  float _519 = 1.0f - _518;
  float _528 = (cb0_018w) + (cb0_033w);
  float _537 = (cb0_017w) * (cb0_032w);
  float _546 = (cb0_016w) * (cb0_031w);
  float _555 = (cb0_015w) * (cb0_030w);
  float _564 = (cb0_014w) * (cb0_029w);
  float _628 = saturate(((_381 - (cb0_034w)) / ((cb0_035x) - (cb0_034w))));
  float _632 = (_628 * _628) * (3.0f - (_628 * 2.0f));
  float _641 = (cb0_018w) + (cb0_028w);
  float _650 = (cb0_017w) * (cb0_027w);
  float _659 = (cb0_016w) * (cb0_026w);
  float _668 = (cb0_015w) * (cb0_025w);
  float _677 = (cb0_014w) * (cb0_024w);
  float _735 = _518 - _632;
  float _746 = ((_632 * ((((cb0_018x) + (cb0_033x)) + _528) + ((((cb0_017x) * (cb0_032x)) * _537) * (exp2(((log2(((exp2(((((cb0_015x) * (cb0_030x)) * _555) * (log2(((max(0.0f, (((((cb0_014x) * (cb0_029x)) * _564) * _455) + _381))) * 5.55555534362793f)))))) * 0.18000000715255737f))) * (1.0f / (((cb0_016x) * (cb0_031x)) * _546)))))))) + (_519 * ((((cb0_018x) + (cb0_023x)) + _395) + ((((cb0_017x) * (cb0_022x)) * _409) * (exp2(((log2(((exp2(((((cb0_015x) * (cb0_020x)) * _437) * (log2(((max(0.0f, (((((cb0_014x) * (cb0_019x)) * _451) * _455) + _381))) * 5.55555534362793f)))))) * 0.18000000715255737f))) * (1.0f / (((cb0_016x) * (cb0_021x)) * _423))))))))) + (((((cb0_018x) + (cb0_028x)) + _641) + ((((cb0_017x) * (cb0_027x)) * _650) * (exp2(((log2(((exp2(((((cb0_015x) * (cb0_025x)) * _668) * (log2(((max(0.0f, (((((cb0_014x) * (cb0_024x)) * _677) * _455) + _381))) * 5.55555534362793f)))))) * 0.18000000715255737f))) * (1.0f / (((cb0_016x) * (cb0_026x)) * _659))))))) * _735);
  float _748 = ((_632 * ((((cb0_018y) + (cb0_033y)) + _528) + ((((cb0_017y) * (cb0_032y)) * _537) * (exp2(((log2(((exp2(((((cb0_015y) * (cb0_030y)) * _555) * (log2(((max(0.0f, (((((cb0_014y) * (cb0_029y)) * _564) * _456) + _381))) * 5.55555534362793f)))))) * 0.18000000715255737f))) * (1.0f / (((cb0_016y) * (cb0_031y)) * _546)))))))) + (_519 * ((((cb0_018y) + (cb0_023y)) + _395) + ((((cb0_017y) * (cb0_022y)) * _409) * (exp2(((log2(((exp2(((((cb0_015y) * (cb0_020y)) * _437) * (log2(((max(0.0f, (((((cb0_014y) * (cb0_019y)) * _451) * _456) + _381))) * 5.55555534362793f)))))) * 0.18000000715255737f))) * (1.0f / (((cb0_016y) * (cb0_021y)) * _423))))))))) + (((((cb0_018y) + (cb0_028y)) + _641) + ((((cb0_017y) * (cb0_027y)) * _650) * (exp2(((log2(((exp2(((((cb0_015y) * (cb0_025y)) * _668) * (log2(((max(0.0f, (((((cb0_014y) * (cb0_024y)) * _677) * _456) + _381))) * 5.55555534362793f)))))) * 0.18000000715255737f))) * (1.0f / (((cb0_016y) * (cb0_026y)) * _659))))))) * _735);
  float _750 = ((_632 * ((((cb0_018z) + (cb0_033z)) + _528) + ((((cb0_017z) * (cb0_032z)) * _537) * (exp2(((log2(((exp2(((((cb0_015z) * (cb0_030z)) * _555) * (log2(((max(0.0f, (((((cb0_014z) * (cb0_029z)) * _564) * _457) + _381))) * 5.55555534362793f)))))) * 0.18000000715255737f))) * (1.0f / (((cb0_016z) * (cb0_031z)) * _546)))))))) + (_519 * ((((cb0_018z) + (cb0_023z)) + _395) + ((((cb0_017z) * (cb0_022z)) * _409) * (exp2(((log2(((exp2(((((cb0_015z) * (cb0_020z)) * _437) * (log2(((max(0.0f, (((((cb0_014z) * (cb0_019z)) * _451) * _457) + _381))) * 5.55555534362793f)))))) * 0.18000000715255737f))) * (1.0f / (((cb0_016z) * (cb0_021z)) * _423))))))))) + (((((cb0_018z) + (cb0_028z)) + _641) + ((((cb0_017z) * (cb0_027z)) * _650) * (exp2(((log2(((exp2(((((cb0_015z) * (cb0_025z)) * _668) * (log2(((max(0.0f, (((((cb0_014z) * (cb0_024z)) * _677) * _457) + _381))) * 5.55555534362793f)))))) * 0.18000000715255737f))) * (1.0f / (((cb0_016z) * (cb0_026z)) * _659))))))) * _735);

  float3 untonemapped_ap1 = float3(_746, _748, _750);

  float _765 = (((mad(0.061360642313957214f, _750, (mad(-4.540197551250458e-09f, _748, (_746 * 0.9386394023895264f))))) - _746) * (cb0_035y)) + _746;
  float _766 = (((mad(0.169205904006958f, _750, (mad(0.8307942152023315f, _748, (_746 * 6.775371730327606e-08f))))) - _748) * (cb0_035y)) + _748;
  float _767 = ((mad(-2.3283064365386963e-10f, _748, (_746 * -9.313225746154785e-10f))) * (cb0_035y)) + _750;
  float _770 = mad(0.16386905312538147f, _767, (mad(0.14067868888378143f, _766, (_765 * 0.6954522132873535f))));
  float _773 = mad(0.0955343246459961f, _767, (mad(0.8596711158752441f, _766, (_765 * 0.044794581830501556f))));
  float _776 = mad(1.0015007257461548f, _767, (mad(0.004025210160762072f, _766, (_765 * -0.005525882821530104f))));
  float _780 = max((max(_770, _773)), _776);
  float _785 = ((max(_780, 1.000000013351432e-10f)) - (max((min((min(_770, _773)), _776)), 1.000000013351432e-10f))) / (max(_780, 0.009999999776482582f));
  float _798 = ((_773 + _770) + _776) + ((sqrt(((((_776 - _773) * _776) + ((_773 - _770) * _773)) + ((_770 - _776) * _770)))) * 1.75f);
  float _799 = _798 * 0.3333333432674408f;
  float _800 = _785 + -0.4000000059604645f;
  float _801 = _800 * 5.0f;
  float _805 = max((1.0f - (abs((_800 * 2.5f)))), 0.0f);
  float _816 = (((float(((int(((bool)((_801 > 0.0f))))) - (int(((bool)((_801 < 0.0f)))))))) * (1.0f - (_805 * _805))) + 1.0f) * 0.02500000037252903f;
  _825 = _816;
  if ((!(_799 <= 0.0533333346247673f))) {
    _825 = 0.0f;
    if ((!(_799 >= 0.1599999964237213f))) {
      _825 = (((0.23999999463558197f / _798) + -0.5f) * _816);
    }
  }
  float _826 = _825 + 1.0f;
  float _827 = _826 * _770;
  float _828 = _826 * _773;
  float _829 = _826 * _776;
  _861 = 0.0f;
  if (!(((bool)((_827 == _828))) && ((bool)((_828 == _829))))) {
    float _836 = ((_827 * 2.0f) - _828) - _829;
    float _839 = ((_773 - _776) * 1.7320507764816284f) * _826;
    float _841 = atan((_839 / _836));
    bool _844 = (_836 < 0.0f);
    bool _845 = (_836 == 0.0f);
    bool _846 = (_839 >= 0.0f);
    bool _847 = (_839 < 0.0f);
    float _856 = (((bool)(_846 && _845)) ? 90.0f : ((((bool)(_847 && _845)) ? -90.0f : (((((bool)(_847 && _844)) ? (_841 + -3.1415927410125732f) : ((((bool)(_846 && _844)) ? (_841 + 3.1415927410125732f) : _841)))) * 57.2957763671875f))));
    _861 = _856;
    if (((_856 < 0.0f))) {
      _861 = (_856 + 360.0f);
    }
  }
  float _863 = min((max(_861, 0.0f)), 360.0f);
  if (((_863 < -180.0f))) {
    _872 = (_863 + 360.0f);
  } else {
    _872 = _863;
    if (((_863 > 180.0f))) {
      _872 = (_863 + -360.0f);
    }
  }
  float _876 = saturate((1.0f - (abs((_872 * 0.014814814552664757f)))));
  float _880 = (_876 * _876) * (3.0f - (_876 * 2.0f));
  float _886 = ((_880 * _880) * ((_785 * 0.18000000715255737f) * (0.029999999329447746f - _827))) + _827;
  float _896 = max(0.0f, (mad(-0.21492856740951538f, _829, (mad(-0.2365107536315918f, _828, (_886 * 1.4514392614364624f))))));
  float _897 = max(0.0f, (mad(-0.09967592358589172f, _829, (mad(1.17622971534729f, _828, (_886 * -0.07655377686023712f))))));
  float _898 = max(0.0f, (mad(0.9977163076400757f, _829, (mad(-0.006032449658960104f, _828, (_886 * 0.008316148072481155f))))));
  float _899 = dot(float3(_896, _897, _898), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
  float _913 = ((cb0_036w) + 1.0f) - (cb0_036y);
  float _916 = (cb0_037x) + 1.0f;
  float _918 = _916 - (cb0_036z);
  if ((((cb0_036y) > 0.800000011920929f))) {
    _936 = (((0.8199999928474426f - (cb0_036y)) / (cb0_036x)) + -0.7447274923324585f);
  } else {
    float _927 = ((cb0_036w) + 0.18000000715255737f) / _913;
    _936 = (-0.7447274923324585f - (((log2((_927 / (2.0f - _927)))) * 0.3465735912322998f) * (_913 / (cb0_036x))));
  }
  float _939 = ((1.0f - (cb0_036y)) / (cb0_036x)) - _936;
  float _941 = ((cb0_036z) / (cb0_036x)) - _939;
  float _945 = (log2((((_896 - _899) * 0.9599999785423279f) + _899))) * 0.3010300099849701f;
  float _946 = (log2((((_897 - _899) * 0.9599999785423279f) + _899))) * 0.3010300099849701f;
  float _947 = (log2((((_898 - _899) * 0.9599999785423279f) + _899))) * 0.3010300099849701f;
  float _951 = (cb0_036x) * (_945 + _939);
  float _952 = (cb0_036x) * (_946 + _939);
  float _953 = (cb0_036x) * (_947 + _939);
  float _954 = _913 * 2.0f;
  float _956 = ((cb0_036x) * -2.0f) / _913;
  float _957 = _945 - _936;
  float _958 = _946 - _936;
  float _959 = _947 - _936;
  float _978 = _918 * 2.0f;
  float _980 = ((cb0_036x) * 2.0f) / _918;
  float _1005 = (((bool)((_945 < _936))) ? ((_954 / ((exp2(((_957 * 1.4426950216293335f) * _956))) + 1.0f)) - (cb0_036w)) : _951);
  float _1006 = (((bool)((_946 < _936))) ? ((_954 / ((exp2(((_958 * 1.4426950216293335f) * _956))) + 1.0f)) - (cb0_036w)) : _952);
  float _1007 = (((bool)((_947 < _936))) ? ((_954 / ((exp2(((_959 * 1.4426950216293335f) * _956))) + 1.0f)) - (cb0_036w)) : _953);
  float _1014 = _941 - _936;
  float _1018 = saturate((_957 / _1014));
  float _1019 = saturate((_958 / _1014));
  float _1020 = saturate((_959 / _1014));
  bool _1021 = (_941 < _936);
  float _1025 = (_1021 ? (1.0f - _1018) : _1018);
  float _1026 = (_1021 ? (1.0f - _1019) : _1019);
  float _1027 = (_1021 ? (1.0f - _1020) : _1020);
  float _1046 = (((_1025 * _1025) * (((((bool)((_945 > _941))) ? (_916 - (_978 / ((exp2((((_945 - _941) * 1.4426950216293335f) * _980))) + 1.0f))) : _951)) - _1005)) * (3.0f - (_1025 * 2.0f))) + _1005;
  float _1047 = (((_1026 * _1026) * (((((bool)((_946 > _941))) ? (_916 - (_978 / ((exp2((((_946 - _941) * 1.4426950216293335f) * _980))) + 1.0f))) : _952)) - _1006)) * (3.0f - (_1026 * 2.0f))) + _1006;
  float _1048 = (((_1027 * _1027) * (((((bool)((_947 > _941))) ? (_916 - (_978 / ((exp2((((_947 - _941) * 1.4426950216293335f) * _980))) + 1.0f))) : _953)) - _1007)) * (3.0f - (_1027 * 2.0f))) + _1007;
  float _1049 = dot(float3(_1046, _1047, _1048), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
  float _1069 = ((cb0_035w) * ((max(0.0f, (((_1046 - _1049) * 0.9300000071525574f) + _1049))) - _765)) + _765;
  float _1070 = ((cb0_035w) * ((max(0.0f, (((_1047 - _1049) * 0.9300000071525574f) + _1049))) - _766)) + _766;
  float _1071 = ((cb0_035w) * ((max(0.0f, (((_1048 - _1049) * 0.9300000071525574f) + _1049))) - _767)) + _767;
  float _1087 = (((mad(-0.06537103652954102f, _1071, (mad(1.451815478503704e-06f, _1070, (_1069 * 1.065374732017517f))))) - _1069) * (cb0_035y)) + _1069;
  float _1088 = (((mad(-0.20366770029067993f, _1071, (mad(1.2036634683609009f, _1070, (_1069 * -2.57161445915699e-07f))))) - _1070) * (cb0_035y)) + _1070;
  float _1089 = (((mad(0.9999996423721313f, _1071, (mad(2.0954757928848267e-08f, _1070, (_1069 * 1.862645149230957e-08f))))) - _1071) * (cb0_035y)) + _1071;
  float _1102 = saturate((max(0.0f, (mad(-0.0832584798336029f, _1089, (mad(-0.6217905879020691f, _1088, (_1087 * 1.7050515413284302f))))))));
  float _1103 = saturate((max(0.0f, (mad(-0.010548528283834457f, _1089, (mad(1.1408027410507202f, _1088, (_1087 * -0.13025718927383423f))))))));
  float _1104 = saturate((max(0.0f, (mad(1.152971863746643f, _1089, (mad(-0.1289687603712082f, _1088, (_1087 * -0.024003278464078903f))))))));
  if (((_1102 < 0.0031306699384003878f))) {
    _1115 = (_1102 * 12.920000076293945f);
  } else {
    _1115 = (((exp2(((log2(_1102)) * 0.4166666567325592f))) * 1.0549999475479126f) + -0.054999999701976776f);
  }
  if (((_1103 < 0.0031306699384003878f))) {
    _1126 = (_1103 * 12.920000076293945f);
  } else {
    _1126 = (((exp2(((log2(_1103)) * 0.4166666567325592f))) * 1.0549999475479126f) + -0.054999999701976776f);
  }
  if (((_1104 < 0.0031306699384003878f))) {
    _1137 = (_1104 * 12.920000076293945f);
  } else {
    _1137 = (((exp2(((log2(_1104)) * 0.4166666567325592f))) * 1.0549999475479126f) + -0.054999999701976776f);
  }
  float _1141 = (_1126 * 0.9375f) + 0.03125f;
  float _1148 = _1137 * 15.0f;
  float _1149 = floor(_1148);
  float _1150 = _1148 - _1149;
  float _1152 = (_1149 + ((_1115 * 0.9375f) + 0.03125f)) * 0.0625f;
  float4 _1155 = t0.Sample(s0, float2(_1152, _1141));
  float _1159 = _1152 + 0.0625f;
  float4 _1162 = t0.Sample(s0, float2(_1159, _1141));
  float4 _1185 = t1.Sample(s1, float2(_1152, _1141));
  float4 _1191 = t1.Sample(s1, float2(_1159, _1141));
  float _1210 = max(6.103519990574569e-05f, (((((((_1162.x) - (_1155.x)) * _1150) + (_1155.x)) * (cb0_005y)) + ((cb0_005x) * _1115)) + (((((_1191.x) - (_1185.x)) * _1150) + (_1185.x)) * (cb0_005z))));
  float _1211 = max(6.103519990574569e-05f, (((((((_1162.y) - (_1155.y)) * _1150) + (_1155.y)) * (cb0_005y)) + ((cb0_005x) * _1126)) + (((((_1191.y) - (_1185.y)) * _1150) + (_1185.y)) * (cb0_005z))));
  float _1212 = max(6.103519990574569e-05f, (((((((_1162.z) - (_1155.z)) * _1150) + (_1155.z)) * (cb0_005y)) + ((cb0_005x) * _1137)) + (((((_1191.z) - (_1185.z)) * _1150) + (_1185.z)) * (cb0_005z))));
  float _1234 = (((bool)((_1210 > 0.040449999272823334f))) ? (exp2(((log2(((_1210 * 0.9478672742843628f) + 0.05213269963860512f))) * 2.4000000953674316f))) : (_1210 * 0.07739938050508499f));
  float _1235 = (((bool)((_1211 > 0.040449999272823334f))) ? (exp2(((log2(((_1211 * 0.9478672742843628f) + 0.05213269963860512f))) * 2.4000000953674316f))) : (_1211 * 0.07739938050508499f));
  float _1236 = (((bool)((_1212 > 0.040449999272823334f))) ? (exp2(((log2(((_1212 * 0.9478672742843628f) + 0.05213269963860512f))) * 2.4000000953674316f))) : (_1212 * 0.07739938050508499f));
  float _1246 = (((cb0_038y) + ((cb0_038x) * _1234)) * _1234) + (cb0_038z);
  float _1249 = (((cb0_038y) + ((cb0_038x) * _1235)) * _1235) + (cb0_038z);
  float _1252 = (((cb0_038y) + ((cb0_038x) * _1236)) * _1236) + (cb0_038z);
  float _1262 = (cb0_013x) * _1246;
  float _1263 = (cb0_013y) * _1249;
  float _1264 = (cb0_013z) * _1252;
  float _1271 = (((cb0_012x) - _1262) * (cb0_012w)) + _1262;
  float _1272 = (((cb0_012y) - _1263) * (cb0_012w)) + _1263;
  float _1273 = (((cb0_012z) - _1264) * (cb0_012w)) + _1264;
  float _1285 = exp2(((log2((max(0.0f, _1271)))) * (cb0_039y)));
  float _1286 = exp2(((log2((max(0.0f, _1272)))) * (cb0_039y)));
  float _1287 = exp2(((log2((max(0.0f, _1273)))) * (cb0_039y)));

  if (injectedData.toneMapType != 0) {
    return LutBuilderToneMap(untonemapped_ap1, float3(_1285, _1286, _1287));
  }

  if (((((uint)(cb0_039w)) == 0))) {
    do {
      if (((_1285 < 0.0031306699384003878f))) {
        _1302 = (_1285 * 12.920000076293945f);
      } else {
        _1302 = (((exp2(((log2(_1285)) * 0.4166666567325592f))) * 1.0549999475479126f) + -0.054999999701976776f);
      }
      do {
        if (((_1286 < 0.0031306699384003878f))) {
          _1313 = (_1286 * 12.920000076293945f);
        } else {
          _1313 = (((exp2(((log2(_1286)) * 0.4166666567325592f))) * 1.0549999475479126f) + -0.054999999701976776f);
        }
        if (((_1287 < 0.0031306699384003878f))) {
          _2800 = _1302;
          _2801 = _1313;
          _2802 = (_1287 * 12.920000076293945f);
        } else {
          _2800 = _1302;
          _2801 = _1313;
          _2802 = (((exp2(((log2(_1287)) * 0.4166666567325592f))) * 1.0549999475479126f) + -0.054999999701976776f);
        }
      } while (false);
    } while (false);
  } else {
    if (((((uint)(cb0_039w)) == 1))) {
      float _1328 = mad(0.04736635088920593f, _1287, (mad(0.3395121395587921f, _1286, (_1285 * 0.613191545009613f))));
      float _1331 = mad(0.01345000695437193f, _1287, (mad(0.9163357615470886f, _1286, (_1285 * 0.07020691782236099f))));
      float _1334 = mad(0.8696067929267883f, _1287, (mad(0.1095672994852066f, _1286, (_1285 * 0.020618872717022896f))));
      float _1344 = max(6.103519990574569e-05f, (mad(_41, _1334, (mad(_40, _1331, (_1328 * _39))))));
      float _1345 = max(6.103519990574569e-05f, (mad(_44, _1334, (mad(_43, _1331, (_1328 * _42))))));
      float _1346 = max(6.103519990574569e-05f, (mad(_47, _1334, (mad(_46, _1331, (_1328 * _45))))));
      _2800 = (min((_1344 * 4.5f), (((exp2(((log2((max(_1344, 0.017999999225139618f)))) * 0.44999998807907104f))) * 1.0989999771118164f) + -0.0989999994635582f)));
      _2801 = (min((_1345 * 4.5f), (((exp2(((log2((max(_1345, 0.017999999225139618f)))) * 0.44999998807907104f))) * 1.0989999771118164f) + -0.0989999994635582f)));
      _2802 = (min((_1346 * 4.5f), (((exp2(((log2((max(_1346, 0.017999999225139618f)))) * 0.44999998807907104f))) * 1.0989999771118164f) + -0.0989999994635582f)));
    } else {
      bool _1373 = (((uint)(cb0_039w)) == 5);
      if ((((bool)((((uint)(cb0_039w)) == 3))) || _1373)) {
        _12[0] = (cb0_009x);
        _12[1] = (cb0_009y);
        _12[2] = (cb0_009z);
        _12[3] = (cb0_009w);
        _12[4] = (cb0_011x);
        _12[5] = (cb0_011x);
        _13[0] = (cb0_010x);
        _13[1] = (cb0_010y);
        _13[2] = (cb0_010z);
        _13[3] = (cb0_010w);
        _13[4] = (cb0_011y);
        _13[5] = (cb0_011y);
        float _1412 = (cb0_011z) * _1246;
        float _1413 = (cb0_011z) * _1249;
        float _1414 = (cb0_011z) * _1252;
        float _1417 = mad(0.17733481526374817f, _1414, (mad(0.38297808170318604f, _1413, (_1412 * 0.43970081210136414f))));
        float _1420 = mad(0.09676162153482437f, _1414, (mad(0.8134231567382812f, _1413, (_1412 * 0.08979231864213943f))));
        float _1423 = mad(0.870704174041748f, _1414, (mad(0.11154405772686005f, _1413, (_1412 * 0.017543988302350044f))));
        float _1426 = mad(-0.21492856740951538f, _1423, (mad(-0.2365107536315918f, _1420, (_1417 * 1.4514392614364624f))));
        float _1429 = mad(-0.09967592358589172f, _1423, (mad(1.17622971534729f, _1420, (_1417 * -0.07655377686023712f))));
        float _1432 = mad(0.9977163076400757f, _1423, (mad(-0.006032449658960104f, _1420, (_1417 * 0.008316148072481155f))));
        float _1434 = max(_1426, (max(_1429, _1432)));
        _1502 = _1426;
        _1503 = _1429;
        _1504 = _1432;
        do {
          if (!(((bool)(((bool)(((bool)((_1417 < 0.0f))) || ((bool)((_1420 < 0.0f))))) || ((bool)((_1423 < 0.0f))))) || ((bool)((_1434 < 1.000000013351432e-10f))))) {
            float _1444 = abs(_1434);
            float _1445 = (_1434 - _1426) / _1444;
            float _1447 = (_1434 - _1429) / _1444;
            float _1449 = (_1434 - _1432) / _1444;
            _1464 = _1445;
            do {
              if (!((_1445 < 0.8149999976158142f))) {
                float _1452 = _1445 + -0.8149999976158142f;
                _1464 = ((_1452 / (exp2(((log2(((exp2(((log2((_1452 * 3.0552830696105957f))) * 1.2000000476837158f))) + 1.0f))) * 0.8333333134651184f)))) + 0.8149999976158142f);
              }
              _1479 = _1447;
              do {
                if (!((_1447 < 0.8029999732971191f))) {
                  float _1467 = _1447 + -0.8029999732971191f;
                  _1479 = ((_1467 / (exp2(((log2(((exp2(((log2((_1467 * 3.4972610473632812f))) * 1.2000000476837158f))) + 1.0f))) * 0.8333333134651184f)))) + 0.8029999732971191f);
                }
                _1494 = _1449;
                do {
                  if (!((_1449 < 0.8799999952316284f))) {
                    float _1482 = _1449 + -0.8799999952316284f;
                    _1494 = ((_1482 / (exp2(((log2(((exp2(((log2((_1482 * 6.810994625091553f))) * 1.2000000476837158f))) + 1.0f))) * 0.8333333134651184f)))) + 0.8799999952316284f);
                  }
                  _1502 = (_1434 - (_1444 * _1464));
                  _1503 = (_1434 - (_1444 * _1479));
                  _1504 = (_1434 - (_1444 * _1494));
                } while (false);
              } while (false);
            } while (false);
          }
          float _1507 = mad(0.16386906802654266f, _1504, (mad(0.14067870378494263f, _1503, (_1502 * 0.6954522132873535f))));
          float _1514 = ((_1507 - _1417) * (cb0_011w)) + _1417;
          float _1515 = ((_1507 - _1420) * (cb0_011w)) + _1420;
          float _1516 = ((_1507 - _1423) * (cb0_011w)) + _1423;
          float _1520 = max((max(_1514, _1515)), _1516);
          float _1525 = ((max(_1520, 1.000000013351432e-10f)) - (max((min((min(_1514, _1515)), _1516)), 1.000000013351432e-10f))) / (max(_1520, 0.009999999776482582f));
          float _1538 = ((_1516 + _1515) + _1514) + ((sqrt(((((_1516 - _1515) * _1516) + ((_1515 - _1514) * _1515)) + ((_1514 - _1516) * _1514)))) * 1.75f);
          float _1539 = _1538 * 0.3333333432674408f;
          float _1540 = _1525 + -0.4000000059604645f;
          float _1541 = _1540 * 5.0f;
          float _1545 = max((1.0f - (abs((_1540 * 2.5f)))), 0.0f);
          float _1556 = (((float(((int(((bool)((_1541 > 0.0f))))) - (int(((bool)((_1541 < 0.0f)))))))) * (1.0f - (_1545 * _1545))) + 1.0f) * 0.02500000037252903f;
          _1565 = _1556;
          do {
            if ((!(_1539 <= 0.0533333346247673f))) {
              _1565 = 0.0f;
              if ((!(_1539 >= 0.1599999964237213f))) {
                _1565 = (((0.23999999463558197f / _1538) + -0.5f) * _1556);
              }
            }
            float _1566 = _1565 + 1.0f;
            float _1567 = _1566 * _1514;
            float _1568 = _1566 * _1515;
            float _1569 = _1566 * _1516;
            _1601 = 0.0f;
            do {
              if (!(((bool)((_1567 == _1568))) && ((bool)((_1568 == _1569))))) {
                float _1576 = ((_1567 * 2.0f) - _1568) - _1569;
                float _1579 = ((_1515 - _1516) * 1.7320507764816284f) * _1566;
                float _1581 = atan((_1579 / _1576));
                bool _1584 = (_1576 < 0.0f);
                bool _1585 = (_1576 == 0.0f);
                bool _1586 = (_1579 >= 0.0f);
                bool _1587 = (_1579 < 0.0f);
                float _1596 = (((bool)(_1586 && _1585)) ? 90.0f : ((((bool)(_1587 && _1585)) ? -90.0f : (((((bool)(_1587 && _1584)) ? (_1581 + -3.1415927410125732f) : ((((bool)(_1586 && _1584)) ? (_1581 + 3.1415927410125732f) : _1581)))) * 57.2957763671875f))));
                _1601 = _1596;
                if (((_1596 < 0.0f))) {
                  _1601 = (_1596 + 360.0f);
                }
              }
              float _1603 = min((max(_1601, 0.0f)), 360.0f);
              do {
                if (((_1603 < -180.0f))) {
                  _1612 = (_1603 + 360.0f);
                } else {
                  _1612 = _1603;
                  if (((_1603 > 180.0f))) {
                    _1612 = (_1603 + -360.0f);
                  }
                }
                _1651 = 0.0f;
                do {
                  if ((((bool)((_1612 > -67.5f))) && ((bool)((_1612 < 67.5f))))) {
                    float _1618 = (_1612 + 67.5f) * 0.029629629105329514f;
                    int _1619 = int(1619);
                    float _1621 = _1618 - (float(_1619));
                    float _1622 = _1621 * _1621;
                    float _1623 = _1622 * _1621;
                    if (((_1619 == 3))) {
                      _1651 = (((0.1666666716337204f - (_1621 * 0.5f)) + (_1622 * 0.5f)) - (_1623 * 0.1666666716337204f));
                    } else {
                      if (((_1619 == 2))) {
                        _1651 = ((0.6666666865348816f - _1622) + (_1623 * 0.5f));
                      } else {
                        if (((_1619 == 1))) {
                          _1651 = (((_1623 * -0.5f) + 0.1666666716337204f) + ((_1622 + _1621) * 0.5f));
                        } else {
                          _1651 = ((((bool)((_1619 == 0))) ? (_1623 * 0.1666666716337204f) : 0.0f));
                        }
                      }
                    }
                  }
                  float _1660 = min((max(((((_1525 * 0.27000001072883606f) * (0.029999999329447746f - _1567)) * _1651) + _1567), 0.0f)), 65535.0f);
                  float _1661 = min((max(_1568, 0.0f)), 65535.0f);
                  float _1662 = min((max(_1569, 0.0f)), 65535.0f);
                  float _1675 = min((max((mad(-0.21492856740951538f, _1662, (mad(-0.2365107536315918f, _1661, (_1660 * 1.4514392614364624f))))), 0.0f)), 65504.0f);
                  float _1676 = min((max((mad(-0.09967592358589172f, _1662, (mad(1.17622971534729f, _1661, (_1660 * -0.07655377686023712f))))), 0.0f)), 65504.0f);
                  float _1677 = min((max((mad(0.9977163076400757f, _1662, (mad(-0.006032449658960104f, _1661, (_1660 * 0.008316148072481155f))))), 0.0f)), 65504.0f);
                  float _1678 = dot(float3(_1675, _1676, _1677), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
                  float _1689 = log2((max((((_1675 - _1678) * 0.9599999785423279f) + _1678), 1.000000013351432e-10f)));
                  float _1690 = _1689 * 0.3010300099849701f;
                  float _1691 = log2((cb0_007x));
                  float _1692 = _1691 * 0.3010300099849701f;
                  do {
                    if (!(!(_1690 <= _1692))) {
                      _1761 = ((log2((cb0_007y))) * 0.3010300099849701f);
                    } else {
                      float _1699 = log2((cb0_008x));
                      float _1700 = _1699 * 0.3010300099849701f;
                      if ((((bool)((_1690 > _1692))) && ((bool)((_1690 < _1700))))) {
                        float _1708 = ((_1689 - _1691) * 0.9030900001525879f) / ((_1699 - _1691) * 0.3010300099849701f);
                        int _1709 = int(1709);
                        float _1711 = _1708 - (float(_1709));
                        float _1713 = _12[_1709];
                        float _1716 = _12[(_1709 + 1)];
                        float _1721 = _1713 * 0.5f;
                        _1761 = (dot(float3((_1711 * _1711), _1711, 1.0f), float3((mad((_12[(_1709 + 2)]), 0.5f, (mad(_1716, -1.0f, _1721)))), (_1716 - _1713), (mad(_1716, 0.5f, _1721)))));
                      } else {
                        float _1729 = log2((cb0_007z));
                        if ((((bool)((_1690 >= _1700))) && ((bool)((_1690 < (_1729 * 0.3010300099849701f)))))) {
                          float _1738 = ((_1689 - _1699) * 0.9030900001525879f) / ((_1729 - _1699) * 0.3010300099849701f);
                          int _1739 = int(1739);
                          float _1741 = _1738 - (float(_1739));
                          float _1743 = _13[_1739];
                          float _1746 = _13[(_1739 + 1)];
                          float _1751 = _1743 * 0.5f;
                          _1761 = (dot(float3((_1741 * _1741), _1741, 1.0f), float3((mad((_13[(_1739 + 2)]), 0.5f, (mad(_1746, -1.0f, _1751)))), (_1746 - _1743), (mad(_1746, 0.5f, _1751)))));
                        } else {
                          _1761 = ((log2((cb0_007w))) * 0.3010300099849701f);
                        }
                      }
                    }
                    float _1765 = log2((max((((_1676 - _1678) * 0.9599999785423279f) + _1678), 1.000000013351432e-10f)));
                    float _1766 = _1765 * 0.3010300099849701f;
                    do {
                      if (!(!(_1766 <= _1692))) {
                        _1835 = ((log2((cb0_007y))) * 0.3010300099849701f);
                      } else {
                        float _1773 = log2((cb0_008x));
                        float _1774 = _1773 * 0.3010300099849701f;
                        if ((((bool)((_1766 > _1692))) && ((bool)((_1766 < _1774))))) {
                          float _1782 = ((_1765 - _1691) * 0.9030900001525879f) / ((_1773 - _1691) * 0.3010300099849701f);
                          int _1783 = int(1783);
                          float _1785 = _1782 - (float(_1783));
                          float _1787 = _12[_1783];
                          float _1790 = _12[(_1783 + 1)];
                          float _1795 = _1787 * 0.5f;
                          _1835 = (dot(float3((_1785 * _1785), _1785, 1.0f), float3((mad((_12[(_1783 + 2)]), 0.5f, (mad(_1790, -1.0f, _1795)))), (_1790 - _1787), (mad(_1790, 0.5f, _1795)))));
                        } else {
                          float _1803 = log2((cb0_007z));
                          if ((((bool)((_1766 >= _1774))) && ((bool)((_1766 < (_1803 * 0.3010300099849701f)))))) {
                            float _1812 = ((_1765 - _1773) * 0.9030900001525879f) / ((_1803 - _1773) * 0.3010300099849701f);
                            int _1813 = int(1813);
                            float _1815 = _1812 - (float(_1813));
                            float _1817 = _13[_1813];
                            float _1820 = _13[(_1813 + 1)];
                            float _1825 = _1817 * 0.5f;
                            _1835 = (dot(float3((_1815 * _1815), _1815, 1.0f), float3((mad((_13[(_1813 + 2)]), 0.5f, (mad(_1820, -1.0f, _1825)))), (_1820 - _1817), (mad(_1820, 0.5f, _1825)))));
                          } else {
                            _1835 = ((log2((cb0_007w))) * 0.3010300099849701f);
                          }
                        }
                      }
                      float _1839 = log2((max((((_1677 - _1678) * 0.9599999785423279f) + _1678), 1.000000013351432e-10f)));
                      float _1840 = _1839 * 0.3010300099849701f;
                      do {
                        if (!(!(_1840 <= _1692))) {
                          _1909 = ((log2((cb0_007y))) * 0.3010300099849701f);
                        } else {
                          float _1847 = log2((cb0_008x));
                          float _1848 = _1847 * 0.3010300099849701f;
                          if ((((bool)((_1840 > _1692))) && ((bool)((_1840 < _1848))))) {
                            float _1856 = ((_1839 - _1691) * 0.9030900001525879f) / ((_1847 - _1691) * 0.3010300099849701f);
                            int _1857 = int(1857);
                            float _1859 = _1856 - (float(_1857));
                            float _1861 = _12[_1857];
                            float _1864 = _12[(_1857 + 1)];
                            float _1869 = _1861 * 0.5f;
                            _1909 = (dot(float3((_1859 * _1859), _1859, 1.0f), float3((mad((_12[(_1857 + 2)]), 0.5f, (mad(_1864, -1.0f, _1869)))), (_1864 - _1861), (mad(_1864, 0.5f, _1869)))));
                          } else {
                            float _1877 = log2((cb0_007z));
                            if ((((bool)((_1840 >= _1848))) && ((bool)((_1840 < (_1877 * 0.3010300099849701f)))))) {
                              float _1886 = ((_1839 - _1847) * 0.9030900001525879f) / ((_1877 - _1847) * 0.3010300099849701f);
                              int _1887 = int(1887);
                              float _1889 = _1886 - (float(_1887));
                              float _1891 = _13[_1887];
                              float _1894 = _13[(_1887 + 1)];
                              float _1899 = _1891 * 0.5f;
                              _1909 = (dot(float3((_1889 * _1889), _1889, 1.0f), float3((mad((_13[(_1887 + 2)]), 0.5f, (mad(_1894, -1.0f, _1899)))), (_1894 - _1891), (mad(_1894, 0.5f, _1899)))));
                            } else {
                              _1909 = ((log2((cb0_007w))) * 0.3010300099849701f);
                            }
                          }
                        }
                        float _1913 = (cb0_007w) - (cb0_007y);
                        float _1914 = ((exp2((_1761 * 3.321928024291992f))) - (cb0_007y)) / _1913;
                        float _1916 = ((exp2((_1835 * 3.321928024291992f))) - (cb0_007y)) / _1913;
                        float _1918 = ((exp2((_1909 * 3.321928024291992f))) - (cb0_007y)) / _1913;
                        float _1921 = mad(0.15618768334388733f, _1918, (mad(0.13400420546531677f, _1916, (_1914 * 0.6624541878700256f))));
                        float _1924 = mad(0.053689517080783844f, _1918, (mad(0.6740817427635193f, _1916, (_1914 * 0.2722287178039551f))));
                        float _1927 = mad(1.0103391408920288f, _1918, (mad(0.00406073359772563f, _1916, (_1914 * -0.005574649665504694f))));
                        float _1940 = min((max((mad(-0.23642469942569733f, _1927, (mad(-0.32480329275131226f, _1924, (_1921 * 1.6410233974456787f))))), 0.0f)), 1.0f);
                        float _1941 = min((max((mad(0.016756348311901093f, _1927, (mad(1.6153316497802734f, _1924, (_1921 * -0.663662850856781f))))), 0.0f)), 1.0f);
                        float _1942 = min((max((mad(0.9883948564529419f, _1927, (mad(-0.008284442126750946f, _1924, (_1921 * 0.011721894145011902f))))), 0.0f)), 1.0f);
                        float _1945 = mad(0.15618768334388733f, _1942, (mad(0.13400420546531677f, _1941, (_1940 * 0.6624541878700256f))));
                        float _1948 = mad(0.053689517080783844f, _1942, (mad(0.6740817427635193f, _1941, (_1940 * 0.2722287178039551f))));
                        float _1951 = mad(1.0103391408920288f, _1942, (mad(0.00406073359772563f, _1941, (_1940 * -0.005574649665504694f))));
                        float _1973 = min((max(((min((max((mad(-0.23642469942569733f, _1951, (mad(-0.32480329275131226f, _1948, (_1945 * 1.6410233974456787f))))), 0.0f)), 65535.0f)) * (cb0_007w)), 0.0f)), 65535.0f);
                        float _1974 = min((max(((min((max((mad(0.016756348311901093f, _1951, (mad(1.6153316497802734f, _1948, (_1945 * -0.663662850856781f))))), 0.0f)), 65535.0f)) * (cb0_007w)), 0.0f)), 65535.0f);
                        float _1975 = min((max(((min((max((mad(0.9883948564529419f, _1951, (mad(-0.008284442126750946f, _1948, (_1945 * 0.011721894145011902f))))), 0.0f)), 65535.0f)) * (cb0_007w)), 0.0f)), 65535.0f);
                        _1987 = _1973;
                        _1988 = _1974;
                        _1989 = _1975;
                        do {
                          if (!_1373) {
                            _1987 = (mad(_41, _1975, (mad(_40, _1974, (_1973 * _39)))));
                            _1988 = (mad(_44, _1975, (mad(_43, _1974, (_1973 * _42)))));
                            _1989 = (mad(_47, _1975, (mad(_46, _1974, (_1973 * _45)))));
                          }
                          float _1999 = exp2(((log2((_1987 * 9.999999747378752e-05f))) * 0.1593017578125f));
                          float _2000 = exp2(((log2((_1988 * 9.999999747378752e-05f))) * 0.1593017578125f));
                          float _2001 = exp2(((log2((_1989 * 9.999999747378752e-05f))) * 0.1593017578125f));
                          _2800 = (exp2(((log2(((1.0f / ((_1999 * 18.6875f) + 1.0f)) * ((_1999 * 18.8515625f) + 0.8359375f)))) * 78.84375f)));
                          _2801 = (exp2(((log2(((1.0f / ((_2000 * 18.6875f) + 1.0f)) * ((_2000 * 18.8515625f) + 0.8359375f)))) * 78.84375f)));
                          _2802 = (exp2(((log2(((1.0f / ((_2001 * 18.6875f) + 1.0f)) * ((_2001 * 18.8515625f) + 0.8359375f)))) * 78.84375f)));
                        } while (false);
                      } while (false);
                    } while (false);
                  } while (false);
                } while (false);
              } while (false);
            } while (false);
          } while (false);
        } while (false);
      } else {
        if ((((((uint)(cb0_039w)) & -3) == 4))) {
          _10[0] = (cb0_009x);
          _10[1] = (cb0_009y);
          _10[2] = (cb0_009z);
          _10[3] = (cb0_009w);
          _10[4] = (cb0_011x);
          _10[5] = (cb0_011x);
          _11[0] = (cb0_010x);
          _11[1] = (cb0_010y);
          _11[2] = (cb0_010z);
          _11[3] = (cb0_010w);
          _11[4] = (cb0_011y);
          _11[5] = (cb0_011y);
          float _2070 = (cb0_011z) * _1246;
          float _2071 = (cb0_011z) * _1249;
          float _2072 = (cb0_011z) * _1252;
          float _2075 = mad(0.17733481526374817f, _2072, (mad(0.38297808170318604f, _2071, (_2070 * 0.43970081210136414f))));
          float _2078 = mad(0.09676162153482437f, _2072, (mad(0.8134231567382812f, _2071, (_2070 * 0.08979231864213943f))));
          float _2081 = mad(0.870704174041748f, _2072, (mad(0.11154405772686005f, _2071, (_2070 * 0.017543988302350044f))));
          float _2084 = mad(-0.21492856740951538f, _2081, (mad(-0.2365107536315918f, _2078, (_2075 * 1.4514392614364624f))));
          float _2087 = mad(-0.09967592358589172f, _2081, (mad(1.17622971534729f, _2078, (_2075 * -0.07655377686023712f))));
          float _2090 = mad(0.9977163076400757f, _2081, (mad(-0.006032449658960104f, _2078, (_2075 * 0.008316148072481155f))));
          float _2092 = max(_2084, (max(_2087, _2090)));
          _2160 = _2084;
          _2161 = _2087;
          _2162 = _2090;
          do {
            if (!(((bool)(((bool)(((bool)((_2075 < 0.0f))) || ((bool)((_2078 < 0.0f))))) || ((bool)((_2081 < 0.0f))))) || ((bool)((_2092 < 1.000000013351432e-10f))))) {
              float _2102 = abs(_2092);
              float _2103 = (_2092 - _2084) / _2102;
              float _2105 = (_2092 - _2087) / _2102;
              float _2107 = (_2092 - _2090) / _2102;
              _2122 = _2103;
              do {
                if (!((_2103 < 0.8149999976158142f))) {
                  float _2110 = _2103 + -0.8149999976158142f;
                  _2122 = ((_2110 / (exp2(((log2(((exp2(((log2((_2110 * 3.0552830696105957f))) * 1.2000000476837158f))) + 1.0f))) * 0.8333333134651184f)))) + 0.8149999976158142f);
                }
                _2137 = _2105;
                do {
                  if (!((_2105 < 0.8029999732971191f))) {
                    float _2125 = _2105 + -0.8029999732971191f;
                    _2137 = ((_2125 / (exp2(((log2(((exp2(((log2((_2125 * 3.4972610473632812f))) * 1.2000000476837158f))) + 1.0f))) * 0.8333333134651184f)))) + 0.8029999732971191f);
                  }
                  _2152 = _2107;
                  do {
                    if (!((_2107 < 0.8799999952316284f))) {
                      float _2140 = _2107 + -0.8799999952316284f;
                      _2152 = ((_2140 / (exp2(((log2(((exp2(((log2((_2140 * 6.810994625091553f))) * 1.2000000476837158f))) + 1.0f))) * 0.8333333134651184f)))) + 0.8799999952316284f);
                    }
                    _2160 = (_2092 - (_2102 * _2122));
                    _2161 = (_2092 - (_2102 * _2137));
                    _2162 = (_2092 - (_2102 * _2152));
                  } while (false);
                } while (false);
              } while (false);
            }
            float _2165 = mad(0.16386906802654266f, _2162, (mad(0.14067870378494263f, _2161, (_2160 * 0.6954522132873535f))));
            float _2172 = ((_2165 - _2075) * (cb0_011w)) + _2075;
            float _2173 = ((_2165 - _2078) * (cb0_011w)) + _2078;
            float _2174 = ((_2165 - _2081) * (cb0_011w)) + _2081;
            float _2178 = max((max(_2172, _2173)), _2174);
            float _2183 = ((max(_2178, 1.000000013351432e-10f)) - (max((min((min(_2172, _2173)), _2174)), 1.000000013351432e-10f))) / (max(_2178, 0.009999999776482582f));
            float _2196 = ((_2174 + _2173) + _2172) + ((sqrt(((((_2174 - _2173) * _2174) + ((_2173 - _2172) * _2173)) + ((_2172 - _2174) * _2172)))) * 1.75f);
            float _2197 = _2196 * 0.3333333432674408f;
            float _2198 = _2183 + -0.4000000059604645f;
            float _2199 = _2198 * 5.0f;
            float _2203 = max((1.0f - (abs((_2198 * 2.5f)))), 0.0f);
            float _2214 = (((float(((int(((bool)((_2199 > 0.0f))))) - (int(((bool)((_2199 < 0.0f)))))))) * (1.0f - (_2203 * _2203))) + 1.0f) * 0.02500000037252903f;
            _2223 = _2214;
            do {
              if ((!(_2197 <= 0.0533333346247673f))) {
                _2223 = 0.0f;
                if ((!(_2197 >= 0.1599999964237213f))) {
                  _2223 = (((0.23999999463558197f / _2196) + -0.5f) * _2214);
                }
              }
              float _2224 = _2223 + 1.0f;
              float _2225 = _2224 * _2172;
              float _2226 = _2224 * _2173;
              float _2227 = _2224 * _2174;
              _2259 = 0.0f;
              do {
                if (!(((bool)((_2225 == _2226))) && ((bool)((_2226 == _2227))))) {
                  float _2234 = ((_2225 * 2.0f) - _2226) - _2227;
                  float _2237 = ((_2173 - _2174) * 1.7320507764816284f) * _2224;
                  float _2239 = atan((_2237 / _2234));
                  bool _2242 = (_2234 < 0.0f);
                  bool _2243 = (_2234 == 0.0f);
                  bool _2244 = (_2237 >= 0.0f);
                  bool _2245 = (_2237 < 0.0f);
                  float _2254 = (((bool)(_2244 && _2243)) ? 90.0f : ((((bool)(_2245 && _2243)) ? -90.0f : (((((bool)(_2245 && _2242)) ? (_2239 + -3.1415927410125732f) : ((((bool)(_2244 && _2242)) ? (_2239 + 3.1415927410125732f) : _2239)))) * 57.2957763671875f))));
                  _2259 = _2254;
                  if (((_2254 < 0.0f))) {
                    _2259 = (_2254 + 360.0f);
                  }
                }
                float _2261 = min((max(_2259, 0.0f)), 360.0f);
                do {
                  if (((_2261 < -180.0f))) {
                    _2270 = (_2261 + 360.0f);
                  } else {
                    _2270 = _2261;
                    if (((_2261 > 180.0f))) {
                      _2270 = (_2261 + -360.0f);
                    }
                  }
                  _2309 = 0.0f;
                  do {
                    if ((((bool)((_2270 > -67.5f))) && ((bool)((_2270 < 67.5f))))) {
                      float _2276 = (_2270 + 67.5f) * 0.029629629105329514f;
                      int _2277 = int(2277);
                      float _2279 = _2276 - (float(_2277));
                      float _2280 = _2279 * _2279;
                      float _2281 = _2280 * _2279;
                      if (((_2277 == 3))) {
                        _2309 = (((0.1666666716337204f - (_2279 * 0.5f)) + (_2280 * 0.5f)) - (_2281 * 0.1666666716337204f));
                      } else {
                        if (((_2277 == 2))) {
                          _2309 = ((0.6666666865348816f - _2280) + (_2281 * 0.5f));
                        } else {
                          if (((_2277 == 1))) {
                            _2309 = (((_2281 * -0.5f) + 0.1666666716337204f) + ((_2280 + _2279) * 0.5f));
                          } else {
                            _2309 = ((((bool)((_2277 == 0))) ? (_2281 * 0.1666666716337204f) : 0.0f));
                          }
                        }
                      }
                    }
                    float _2318 = min((max(((((_2183 * 0.27000001072883606f) * (0.029999999329447746f - _2225)) * _2309) + _2225), 0.0f)), 65535.0f);
                    float _2319 = min((max(_2226, 0.0f)), 65535.0f);
                    float _2320 = min((max(_2227, 0.0f)), 65535.0f);
                    float _2333 = min((max((mad(-0.21492856740951538f, _2320, (mad(-0.2365107536315918f, _2319, (_2318 * 1.4514392614364624f))))), 0.0f)), 65504.0f);
                    float _2334 = min((max((mad(-0.09967592358589172f, _2320, (mad(1.17622971534729f, _2319, (_2318 * -0.07655377686023712f))))), 0.0f)), 65504.0f);
                    float _2335 = min((max((mad(0.9977163076400757f, _2320, (mad(-0.006032449658960104f, _2319, (_2318 * 0.008316148072481155f))))), 0.0f)), 65504.0f);
                    float _2336 = dot(float3(_2333, _2334, _2335), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
                    float _2347 = log2((max((((_2333 - _2336) * 0.9599999785423279f) + _2336), 1.000000013351432e-10f)));
                    float _2348 = _2347 * 0.3010300099849701f;
                    float _2349 = log2((cb0_007x));
                    float _2350 = _2349 * 0.3010300099849701f;
                    do {
                      if (!(!(_2348 <= _2350))) {
                        _2419 = ((log2((cb0_007y))) * 0.3010300099849701f);
                      } else {
                        float _2357 = log2((cb0_008x));
                        float _2358 = _2357 * 0.3010300099849701f;
                        if ((((bool)((_2348 > _2350))) && ((bool)((_2348 < _2358))))) {
                          float _2366 = ((_2347 - _2349) * 0.9030900001525879f) / ((_2357 - _2349) * 0.3010300099849701f);
                          int _2367 = int(2367);
                          float _2369 = _2366 - (float(_2367));
                          float _2371 = _10[_2367];
                          float _2374 = _10[(_2367 + 1)];
                          float _2379 = _2371 * 0.5f;
                          _2419 = (dot(float3((_2369 * _2369), _2369, 1.0f), float3((mad((_10[(_2367 + 2)]), 0.5f, (mad(_2374, -1.0f, _2379)))), (_2374 - _2371), (mad(_2374, 0.5f, _2379)))));
                        } else {
                          float _2387 = log2((cb0_007z));
                          if ((((bool)((_2348 >= _2358))) && ((bool)((_2348 < (_2387 * 0.3010300099849701f)))))) {
                            float _2396 = ((_2347 - _2357) * 0.9030900001525879f) / ((_2387 - _2357) * 0.3010300099849701f);
                            int _2397 = int(2397);
                            float _2399 = _2396 - (float(_2397));
                            float _2401 = _11[_2397];
                            float _2404 = _11[(_2397 + 1)];
                            float _2409 = _2401 * 0.5f;
                            _2419 = (dot(float3((_2399 * _2399), _2399, 1.0f), float3((mad((_11[(_2397 + 2)]), 0.5f, (mad(_2404, -1.0f, _2409)))), (_2404 - _2401), (mad(_2404, 0.5f, _2409)))));
                          } else {
                            _2419 = ((log2((cb0_007w))) * 0.3010300099849701f);
                          }
                        }
                      }
                      float _2423 = log2((max((((_2334 - _2336) * 0.9599999785423279f) + _2336), 1.000000013351432e-10f)));
                      float _2424 = _2423 * 0.3010300099849701f;
                      do {
                        if (!(!(_2424 <= _2350))) {
                          _2493 = ((log2((cb0_007y))) * 0.3010300099849701f);
                        } else {
                          float _2431 = log2((cb0_008x));
                          float _2432 = _2431 * 0.3010300099849701f;
                          if ((((bool)((_2424 > _2350))) && ((bool)((_2424 < _2432))))) {
                            float _2440 = ((_2423 - _2349) * 0.9030900001525879f) / ((_2431 - _2349) * 0.3010300099849701f);
                            int _2441 = int(2441);
                            float _2443 = _2440 - (float(_2441));
                            float _2445 = _10[_2441];
                            float _2448 = _10[(_2441 + 1)];
                            float _2453 = _2445 * 0.5f;
                            _2493 = (dot(float3((_2443 * _2443), _2443, 1.0f), float3((mad((_10[(_2441 + 2)]), 0.5f, (mad(_2448, -1.0f, _2453)))), (_2448 - _2445), (mad(_2448, 0.5f, _2453)))));
                          } else {
                            float _2461 = log2((cb0_007z));
                            if ((((bool)((_2424 >= _2432))) && ((bool)((_2424 < (_2461 * 0.3010300099849701f)))))) {
                              float _2470 = ((_2423 - _2431) * 0.9030900001525879f) / ((_2461 - _2431) * 0.3010300099849701f);
                              int _2471 = int(2471);
                              float _2473 = _2470 - (float(_2471));
                              float _2475 = _11[_2471];
                              float _2478 = _11[(_2471 + 1)];
                              float _2483 = _2475 * 0.5f;
                              _2493 = (dot(float3((_2473 * _2473), _2473, 1.0f), float3((mad((_11[(_2471 + 2)]), 0.5f, (mad(_2478, -1.0f, _2483)))), (_2478 - _2475), (mad(_2478, 0.5f, _2483)))));
                            } else {
                              _2493 = ((log2((cb0_007w))) * 0.3010300099849701f);
                            }
                          }
                        }
                        float _2497 = log2((max((((_2335 - _2336) * 0.9599999785423279f) + _2336), 1.000000013351432e-10f)));
                        float _2498 = _2497 * 0.3010300099849701f;
                        do {
                          if (!(!(_2498 <= _2350))) {
                            _2567 = ((log2((cb0_007y))) * 0.3010300099849701f);
                          } else {
                            float _2505 = log2((cb0_008x));
                            float _2506 = _2505 * 0.3010300099849701f;
                            if ((((bool)((_2498 > _2350))) && ((bool)((_2498 < _2506))))) {
                              float _2514 = ((_2497 - _2349) * 0.9030900001525879f) / ((_2505 - _2349) * 0.3010300099849701f);
                              int _2515 = int(2515);
                              float _2517 = _2514 - (float(_2515));
                              float _2519 = _10[_2515];
                              float _2522 = _10[(_2515 + 1)];
                              float _2527 = _2519 * 0.5f;
                              _2567 = (dot(float3((_2517 * _2517), _2517, 1.0f), float3((mad((_10[(_2515 + 2)]), 0.5f, (mad(_2522, -1.0f, _2527)))), (_2522 - _2519), (mad(_2522, 0.5f, _2527)))));
                            } else {
                              float _2535 = log2((cb0_007z));
                              if ((((bool)((_2498 >= _2506))) && ((bool)((_2498 < (_2535 * 0.3010300099849701f)))))) {
                                float _2544 = ((_2497 - _2505) * 0.9030900001525879f) / ((_2535 - _2505) * 0.3010300099849701f);
                                int _2545 = int(2545);
                                float _2547 = _2544 - (float(_2545));
                                float _2549 = _11[_2545];
                                float _2552 = _11[(_2545 + 1)];
                                float _2557 = _2549 * 0.5f;
                                _2567 = (dot(float3((_2547 * _2547), _2547, 1.0f), float3((mad((_11[(_2545 + 2)]), 0.5f, (mad(_2552, -1.0f, _2557)))), (_2552 - _2549), (mad(_2552, 0.5f, _2557)))));
                              } else {
                                _2567 = ((log2((cb0_007w))) * 0.3010300099849701f);
                              }
                            }
                          }
                          float _2571 = (cb0_007w) - (cb0_007y);
                          float _2572 = ((exp2((_2419 * 3.321928024291992f))) - (cb0_007y)) / _2571;
                          float _2574 = ((exp2((_2493 * 3.321928024291992f))) - (cb0_007y)) / _2571;
                          float _2576 = ((exp2((_2567 * 3.321928024291992f))) - (cb0_007y)) / _2571;
                          float _2579 = mad(0.15618768334388733f, _2576, (mad(0.13400420546531677f, _2574, (_2572 * 0.6624541878700256f))));
                          float _2582 = mad(0.053689517080783844f, _2576, (mad(0.6740817427635193f, _2574, (_2572 * 0.2722287178039551f))));
                          float _2585 = mad(1.0103391408920288f, _2576, (mad(0.00406073359772563f, _2574, (_2572 * -0.005574649665504694f))));
                          float _2598 = min((max((mad(-0.23642469942569733f, _2585, (mad(-0.32480329275131226f, _2582, (_2579 * 1.6410233974456787f))))), 0.0f)), 1.0f);
                          float _2599 = min((max((mad(0.016756348311901093f, _2585, (mad(1.6153316497802734f, _2582, (_2579 * -0.663662850856781f))))), 0.0f)), 1.0f);
                          float _2600 = min((max((mad(0.9883948564529419f, _2585, (mad(-0.008284442126750946f, _2582, (_2579 * 0.011721894145011902f))))), 0.0f)), 1.0f);
                          float _2603 = mad(0.15618768334388733f, _2600, (mad(0.13400420546531677f, _2599, (_2598 * 0.6624541878700256f))));
                          float _2606 = mad(0.053689517080783844f, _2600, (mad(0.6740817427635193f, _2599, (_2598 * 0.2722287178039551f))));
                          float _2609 = mad(1.0103391408920288f, _2600, (mad(0.00406073359772563f, _2599, (_2598 * -0.005574649665504694f))));
                          float _2631 = min((max(((min((max((mad(-0.23642469942569733f, _2609, (mad(-0.32480329275131226f, _2606, (_2603 * 1.6410233974456787f))))), 0.0f)), 65535.0f)) * (cb0_007w)), 0.0f)), 65535.0f);
                          float _2632 = min((max(((min((max((mad(0.016756348311901093f, _2609, (mad(1.6153316497802734f, _2606, (_2603 * -0.663662850856781f))))), 0.0f)), 65535.0f)) * (cb0_007w)), 0.0f)), 65535.0f);
                          float _2633 = min((max(((min((max((mad(0.9883948564529419f, _2609, (mad(-0.008284442126750946f, _2606, (_2603 * 0.011721894145011902f))))), 0.0f)), 65535.0f)) * (cb0_007w)), 0.0f)), 65535.0f);
                          _2645 = _2631;
                          _2646 = _2632;
                          _2647 = _2633;
                          do {
                            if (!((((uint)(cb0_039w)) == 6))) {
                              _2645 = (mad(_41, _2633, (mad(_40, _2632, (_2631 * _39)))));
                              _2646 = (mad(_44, _2633, (mad(_43, _2632, (_2631 * _42)))));
                              _2647 = (mad(_47, _2633, (mad(_46, _2632, (_2631 * _45)))));
                            }
                            float _2657 = exp2(((log2((_2645 * 9.999999747378752e-05f))) * 0.1593017578125f));
                            float _2658 = exp2(((log2((_2646 * 9.999999747378752e-05f))) * 0.1593017578125f));
                            float _2659 = exp2(((log2((_2647 * 9.999999747378752e-05f))) * 0.1593017578125f));
                            _2800 = (exp2(((log2(((1.0f / ((_2657 * 18.6875f) + 1.0f)) * ((_2657 * 18.8515625f) + 0.8359375f)))) * 78.84375f)));
                            _2801 = (exp2(((log2(((1.0f / ((_2658 * 18.6875f) + 1.0f)) * ((_2658 * 18.8515625f) + 0.8359375f)))) * 78.84375f)));
                            _2802 = (exp2(((log2(((1.0f / ((_2659 * 18.6875f) + 1.0f)) * ((_2659 * 18.8515625f) + 0.8359375f)))) * 78.84375f)));
                          } while (false);
                        } while (false);
                      } while (false);
                    } while (false);
                  } while (false);
                } while (false);
              } while (false);
            } while (false);
          } while (false);
        } else {
          if (((((uint)(cb0_039w)) == 7))) {
            float _2692 = mad(0.04736635088920593f, _1252, (mad(0.3395121395587921f, _1249, (_1246 * 0.613191545009613f))));
            float _2695 = mad(0.01345000695437193f, _1252, (mad(0.9163357615470886f, _1249, (_1246 * 0.07020691782236099f))));
            float _2698 = mad(0.8696067929267883f, _1252, (mad(0.1095672994852066f, _1249, (_1246 * 0.020618872717022896f))));
            float _2717 = exp2(((log2(((mad(_41, _2698, (mad(_40, _2695, (_2692 * _39))))) * 9.999999747378752e-05f))) * 0.1593017578125f));
            float _2718 = exp2(((log2(((mad(_44, _2698, (mad(_43, _2695, (_2692 * _42))))) * 9.999999747378752e-05f))) * 0.1593017578125f));
            float _2719 = exp2(((log2(((mad(_47, _2698, (mad(_46, _2695, (_2692 * _45))))) * 9.999999747378752e-05f))) * 0.1593017578125f));
            _2800 = (exp2(((log2(((1.0f / ((_2717 * 18.6875f) + 1.0f)) * ((_2717 * 18.8515625f) + 0.8359375f)))) * 78.84375f)));
            _2801 = (exp2(((log2(((1.0f / ((_2718 * 18.6875f) + 1.0f)) * ((_2718 * 18.8515625f) + 0.8359375f)))) * 78.84375f)));
            _2802 = (exp2(((log2(((1.0f / ((_2719 * 18.6875f) + 1.0f)) * ((_2719 * 18.8515625f) + 0.8359375f)))) * 78.84375f)));
          } else {
            _2800 = _1246;
            _2801 = _1249;
            _2802 = _1252;
            if (!((((uint)(cb0_039w)) == 8))) {
              if (((((uint)(cb0_039w)) == 9))) {
                float _2754 = mad(0.04736635088920593f, _1273, (mad(0.3395121395587921f, _1272, (_1271 * 0.613191545009613f))));
                float _2757 = mad(0.01345000695437193f, _1273, (mad(0.9163357615470886f, _1272, (_1271 * 0.07020691782236099f))));
                float _2760 = mad(0.8696067929267883f, _1273, (mad(0.1095672994852066f, _1272, (_1271 * 0.020618872717022896f))));
                _2800 = (mad(_41, _2760, (mad(_40, _2757, (_2754 * _39)))));
                _2801 = (mad(_44, _2760, (mad(_43, _2757, (_2754 * _42)))));
                _2802 = (mad(_47, _2760, (mad(_46, _2757, (_2754 * _45)))));
              } else {
                float _2773 = mad(0.04736635088920593f, _1287, (mad(0.3395121395587921f, _1286, (_1285 * 0.613191545009613f))));
                float _2776 = mad(0.01345000695437193f, _1287, (mad(0.9163357615470886f, _1286, (_1285 * 0.07020691782236099f))));
                float _2779 = mad(0.8696067929267883f, _1287, (mad(0.1095672994852066f, _1286, (_1285 * 0.020618872717022896f))));
                _2800 = (exp2(((log2((mad(_41, _2779, (mad(_40, _2776, (_2773 * _39))))))) * (cb0_039z))));
                _2801 = (exp2(((log2((mad(_44, _2779, (mad(_43, _2776, (_2773 * _42))))))) * (cb0_039z))));
                _2802 = (exp2(((log2((mad(_47, _2779, (mad(_46, _2776, (_2773 * _45))))))) * (cb0_039z))));
              }
            }
          }
        }
      }
    }
  }
  SV_Target.x = (_2800 * 0.9523810148239136f);
  SV_Target.y = (_2801 * 0.9523810148239136f);
  SV_Target.z = (_2802 * 0.9523810148239136f);
  SV_Target.w = 0.0f;
  return SV_Target;
}
