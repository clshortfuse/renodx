#include "./common.hlsl"

Texture2D<float4> t0 : register(t0);

cbuffer cb0 : register(b0) {
  float cb0_005x : packoffset(c005.x);
  float cb0_005y : packoffset(c005.y);
  float cb0_007x : packoffset(c007.x);
  float cb0_007y : packoffset(c007.y);
  float cb0_007z : packoffset(c007.z);
  float cb0_007w : packoffset(c007.w);
  float cb0_008x : packoffset(c008.x);
  float cb0_009x : packoffset(c009.x);
  float cb0_009y : packoffset(c009.y);
  float cb0_009z : packoffset(c009.z);
  float cb0_009w : packoffset(c009.w);
  float cb0_010x : packoffset(c010.x);
  float cb0_010y : packoffset(c010.y);
  float cb0_010z : packoffset(c010.z);
  float cb0_010w : packoffset(c010.w);
  float cb0_011x : packoffset(c011.x);
  float cb0_011y : packoffset(c011.y);
  float cb0_011z : packoffset(c011.z);
  float cb0_011w : packoffset(c011.w);
  float cb0_012x : packoffset(c012.x);
  float cb0_012y : packoffset(c012.y);
  float cb0_012z : packoffset(c012.z);
  float cb0_012w : packoffset(c012.w);
  float cb0_013x : packoffset(c013.x);
  float cb0_013y : packoffset(c013.y);
  float cb0_013z : packoffset(c013.z);
  float cb0_014x : packoffset(c014.x);
  float cb0_014y : packoffset(c014.y);
  float cb0_014z : packoffset(c014.z);
  float cb0_014w : packoffset(c014.w);
  float cb0_015x : packoffset(c015.x);
  float cb0_015y : packoffset(c015.y);
  float cb0_015z : packoffset(c015.z);
  float cb0_015w : packoffset(c015.w);
  float cb0_016x : packoffset(c016.x);
  float cb0_016y : packoffset(c016.y);
  float cb0_016z : packoffset(c016.z);
  float cb0_016w : packoffset(c016.w);
  float cb0_017x : packoffset(c017.x);
  float cb0_017y : packoffset(c017.y);
  float cb0_017z : packoffset(c017.z);
  float cb0_017w : packoffset(c017.w);
  float cb0_018x : packoffset(c018.x);
  float cb0_018y : packoffset(c018.y);
  float cb0_018z : packoffset(c018.z);
  float cb0_018w : packoffset(c018.w);
  float cb0_019x : packoffset(c019.x);
  float cb0_019y : packoffset(c019.y);
  float cb0_019z : packoffset(c019.z);
  float cb0_019w : packoffset(c019.w);
  float cb0_020x : packoffset(c020.x);
  float cb0_020y : packoffset(c020.y);
  float cb0_020z : packoffset(c020.z);
  float cb0_020w : packoffset(c020.w);
  float cb0_021x : packoffset(c021.x);
  float cb0_021y : packoffset(c021.y);
  float cb0_021z : packoffset(c021.z);
  float cb0_021w : packoffset(c021.w);
  float cb0_022x : packoffset(c022.x);
  float cb0_022y : packoffset(c022.y);
  float cb0_022z : packoffset(c022.z);
  float cb0_022w : packoffset(c022.w);
  float cb0_023x : packoffset(c023.x);
  float cb0_023y : packoffset(c023.y);
  float cb0_023z : packoffset(c023.z);
  float cb0_023w : packoffset(c023.w);
  float cb0_024x : packoffset(c024.x);
  float cb0_024y : packoffset(c024.y);
  float cb0_024z : packoffset(c024.z);
  float cb0_024w : packoffset(c024.w);
  float cb0_025x : packoffset(c025.x);
  float cb0_025y : packoffset(c025.y);
  float cb0_025z : packoffset(c025.z);
  float cb0_025w : packoffset(c025.w);
  float cb0_026x : packoffset(c026.x);
  float cb0_026y : packoffset(c026.y);
  float cb0_026z : packoffset(c026.z);
  float cb0_026w : packoffset(c026.w);
  float cb0_027x : packoffset(c027.x);
  float cb0_027y : packoffset(c027.y);
  float cb0_027z : packoffset(c027.z);
  float cb0_027w : packoffset(c027.w);
  float cb0_028x : packoffset(c028.x);
  float cb0_028y : packoffset(c028.y);
  float cb0_028z : packoffset(c028.z);
  float cb0_028w : packoffset(c028.w);
  float cb0_029x : packoffset(c029.x);
  float cb0_029y : packoffset(c029.y);
  float cb0_029z : packoffset(c029.z);
  float cb0_029w : packoffset(c029.w);
  float cb0_030x : packoffset(c030.x);
  float cb0_030y : packoffset(c030.y);
  float cb0_030z : packoffset(c030.z);
  float cb0_030w : packoffset(c030.w);
  float cb0_031x : packoffset(c031.x);
  float cb0_031y : packoffset(c031.y);
  float cb0_031z : packoffset(c031.z);
  float cb0_031w : packoffset(c031.w);
  float cb0_032x : packoffset(c032.x);
  float cb0_032y : packoffset(c032.y);
  float cb0_032z : packoffset(c032.z);
  float cb0_032w : packoffset(c032.w);
  float cb0_033x : packoffset(c033.x);
  float cb0_033y : packoffset(c033.y);
  float cb0_033z : packoffset(c033.z);
  float cb0_033w : packoffset(c033.w);
  float cb0_034x : packoffset(c034.x);
  float cb0_034y : packoffset(c034.y);
  float cb0_034z : packoffset(c034.z);
  float cb0_034w : packoffset(c034.w);
  float cb0_035x : packoffset(c035.x);
  float cb0_035y : packoffset(c035.y);
  float cb0_035z : packoffset(c035.z);
  float cb0_035w : packoffset(c035.w);
  float cb0_036x : packoffset(c036.x);
  float cb0_036y : packoffset(c036.y);
  float cb0_036z : packoffset(c036.z);
  float cb0_036w : packoffset(c036.w);
  float cb0_037x : packoffset(c037.x);
  uint cb0_037z : packoffset(c037.z);
  float cb0_038x : packoffset(c038.x);
  float cb0_038y : packoffset(c038.y);
  float cb0_038z : packoffset(c038.z);
  float cb0_039y : packoffset(c039.y);
  float cb0_039z : packoffset(c039.z);
  uint cb0_039w : packoffset(c039.w);
  uint cb0_040x : packoffset(c040.x);
};

SamplerState s0 : register(s0);

float4 main(
  noperspective float2 TEXCOORD : TEXCOORD,
  noperspective float4 SV_Position : SV_Position,
  nointerpolation uint SV_RenderTargetArrayIndex : SV_RenderTargetArrayIndex
) : SV_Target {
  float4 SV_Target;
  float _8[6];
  float _9[6];
  float _10[6];
  float _11[6];
  float _12 = (TEXCOORD.x) + -0.015625f;
  float _13 = (TEXCOORD.y) + -0.015625f;
  float _16 = float((uint)(SV_RenderTargetArrayIndex));
  float _37 = 1.379158854484558f;
  float _38 = -0.3088507056236267f;
  float _39 = -0.07034677267074585f;
  float _40 = -0.06933528929948807f;
  float _41 = 1.0822921991348267f;
  float _42 = -0.012962047010660172f;
  float _43 = -0.002159259282052517f;
  float _44 = -0.045465391129255295f;
  float _45 = 1.0477596521377563f;
  float _103;
  float _104;
  float _105;
  float _823;
  float _859;
  float _870;
  float _934;
  float _1113;
  float _1124;
  float _1135;
  float _1271;
  float _1282;
  float _1433;
  float _1448;
  float _1463;
  float _1471;
  float _1472;
  float _1473;
  float _1534;
  float _1570;
  float _1581;
  float _1620;
  float _1730;
  float _1804;
  float _1878;
  float _1956;
  float _1957;
  float _1958;
  float _2091;
  float _2106;
  float _2121;
  float _2129;
  float _2130;
  float _2131;
  float _2192;
  float _2228;
  float _2239;
  float _2278;
  float _2388;
  float _2462;
  float _2536;
  float _2614;
  float _2615;
  float _2616;
  float _2769;
  float _2770;
  float _2771;
  if (!((((uint)(cb0_040x)) == 1))) {
    _37 = 1.02579927444458f;
    _38 = -0.020052503794431686f;
    _39 = -0.0057713985443115234f;
    _40 = -0.0022350111976265907f;
    _41 = 1.0045825242996216f;
    _42 = -0.002352306619286537f;
    _43 = -0.005014004185795784f;
    _44 = -0.025293385609984398f;
    _45 = 1.0304402112960815f;
    if (!((((uint)(cb0_040x)) == 2))) {
      _37 = 0.6954522132873535f;
      _38 = 0.14067870378494263f;
      _39 = 0.16386906802654266f;
      _40 = 0.044794563204050064f;
      _41 = 0.8596711158752441f;
      _42 = 0.0955343171954155f;
      _43 = -0.005525882821530104f;
      _44 = 0.004025210160762072f;
      _45 = 1.0015007257461548f;
      if (!((((uint)(cb0_040x)) == 3))) {
        bool _26 = (((uint)(cb0_040x)) == 4);
        _37 = ((_26 ? 1.0f : 1.7050515413284302f));
        _38 = ((_26 ? 0.0f : -0.6217905879020691f));
        _39 = ((_26 ? 0.0f : -0.0832584798336029f));
        _40 = ((_26 ? 0.0f : -0.13025718927383423f));
        _41 = ((_26 ? 1.0f : 1.1408027410507202f));
        _42 = ((_26 ? 0.0f : -0.010548528283834457f));
        _43 = ((_26 ? 0.0f : -0.024003278464078903f));
        _44 = ((_26 ? 0.0f : -0.1289687603712082f));
        _45 = ((_26 ? 1.0f : 1.152971863746643f));
      }
    }
  }
  if (((((uint)(cb0_039w)) > 2))) {
    float _56 = exp2(((log2((_12 * 1.0322580337524414f))) * 0.012683313339948654f));
    float _57 = exp2(((log2((_13 * 1.0322580337524414f))) * 0.012683313339948654f));
    float _58 = exp2(((log2((_16 * 0.032258063554763794f))) * 0.012683313339948654f));
    _103 = ((exp2(((log2(((max(0.0f, (_56 + -0.8359375f))) / (18.8515625f - (_56 * 18.6875f))))) * 6.277394771575928f))) * 100.0f);
    _104 = ((exp2(((log2(((max(0.0f, (_57 + -0.8359375f))) / (18.8515625f - (_57 * 18.6875f))))) * 6.277394771575928f))) * 100.0f);
    _105 = ((exp2(((log2(((max(0.0f, (_58 + -0.8359375f))) / (18.8515625f - (_58 * 18.6875f))))) * 6.277394771575928f))) * 100.0f);
  } else {
    _103 = (((exp2(((_12 * 14.45161247253418f) + -6.07624626159668f))) * 0.18000000715255737f) + -0.002667719265446067f);
    _104 = (((exp2(((_13 * 14.45161247253418f) + -6.07624626159668f))) * 0.18000000715255737f) + -0.002667719265446067f);
    _105 = (((exp2(((_16 * 0.4516128897666931f) + -6.07624626159668f))) * 0.18000000715255737f) + -0.002667719265446067f);
  }
  float _109 = 0.9994439482688904f / (cb0_034x);
  float _123 = (((bool)((((cb0_034x) * 1.0005563497543335f) <= 7000.0f))) ? (((((2967800.0f - (_109 * 4607000064.0f)) * _109) + 99.11000061035156f) * _109) + 0.24406300485134125f) : (((((1901800.0f - (_109 * 2006400000.0f)) * _109) + 247.47999572753906f) * _109) + 0.23703999817371368f));
  float _137 = (((((cb0_034x) * 1.2864121856637212e-07f) + 0.00015411825734190643f) * (cb0_034x)) + 0.8601177334785461f) / (((((cb0_034x) * 7.081451371959702e-07f) + 0.0008424202096648514f) * (cb0_034x)) + 1.0f);
  float _144 = (cb0_034x) * (cb0_034x);
  float _147 = (((((cb0_034x) * 4.204816761443908e-08f) + 4.228062607580796e-05f) * (cb0_034x)) + 0.31739872694015503f) / ((1.0f - ((cb0_034x) * 2.8974181986995973e-05f)) + (_144 * 1.6145605741257896e-07f));
  float _152 = ((_137 * 2.0f) + 4.0f) - (_147 * 8.0f);
  float _153 = (_137 * 3.0f) / _152;
  float _155 = (_147 * 2.0f) / _152;
  bool _156 = ((cb0_034x) < 4000.0f);
  float _166 = (((cb0_034x) + 1189.6199951171875f) * (cb0_034x)) + 1412139.875f;
  float _168 = ((-1137581184.0f - ((cb0_034x) * 1916156.25f)) - (_144 * 1.5317699909210205f)) / (_166 * _166);
  float _175 = (6193636.0f - ((cb0_034x) * 179.45599365234375f)) + _144;
  float _177 = ((1974715392.0f - ((cb0_034x) * 705674.0f)) - (_144 * 308.60699462890625f)) / (_175 * _175);
  float _179 = rsqrt((dot(float2(_168, _177), float2(_168, _177))));
  float _180 = (cb0_034y) * 0.05000000074505806f;
  float _183 = ((_180 * _177) * _179) + _137;
  float _186 = _147 - ((_180 * _168) * _179);
  float _191 = (4.0f - (_186 * 8.0f)) + (_183 * 2.0f);
  float _197 = (((_183 * 3.0f) / _191) - _153) + ((_156 ? _153 : _123));
  float _198 = (((_186 * 2.0f) / _191) - _155) + ((_156 ? _155 : (((_123 * 2.869999885559082f) + -0.2750000059604645f) - ((_123 * _123) * 3.0f))));
  bool _201 = (((uint)(cb0_037z)) != 0);
  float _202 = (_201 ? _197 : 0.3127000033855438f);
  float _203 = (_201 ? _198 : 0.32899999618530273f);
  float _204 = (_201 ? 0.3127000033855438f : _197);
  float _205 = (_201 ? 0.32899999618530273f : _198);
  float _206 = max(_203, 1.000000013351432e-10f);
  float _207 = _202 / _206;
  float _210 = ((1.0f - _202) - _203) / _206;
  float _211 = max(_205, 1.000000013351432e-10f);
  float _212 = _204 / _211;
  float _215 = ((1.0f - _204) - _205) / _211;
  float _234 = (mad(-0.16140000522136688f, _215, ((_212 * 0.8950999975204468f) + 0.266400009393692f))) / (mad(-0.16140000522136688f, _210, ((_207 * 0.8950999975204468f) + 0.266400009393692f)));
  float _235 = (mad(0.03669999912381172f, _215, (1.7135000228881836f - (_212 * 0.7501999735832214f)))) / (mad(0.03669999912381172f, _210, (1.7135000228881836f - (_207 * 0.7501999735832214f))));
  float _236 = (mad(1.0296000242233276f, _215, ((_212 * 0.03889999911189079f) + -0.06849999725818634f))) / (mad(1.0296000242233276f, _210, ((_207 * 0.03889999911189079f) + -0.06849999725818634f)));
  float _237 = mad(_235, -0.7501999735832214f, 0.0f);
  float _238 = mad(_235, 1.7135000228881836f, 0.0f);
  float _239 = mad(_235, 0.03669999912381172f, -0.0f);
  float _240 = mad(_236, 0.03889999911189079f, 0.0f);
  float _241 = mad(_236, -0.06849999725818634f, 0.0f);
  float _242 = mad(_236, 1.0296000242233276f, 0.0f);
  float _245 = mad(0.1599626988172531f, _240, (mad(-0.1470542997121811f, _237, (_234 * 0.883457362651825f))));
  float _248 = mad(0.1599626988172531f, _241, (mad(-0.1470542997121811f, _238, (_234 * 0.26293492317199707f))));
  float _251 = mad(0.1599626988172531f, _242, (mad(-0.1470542997121811f, _239, (_234 * -0.15930065512657166f))));
  float _254 = mad(0.04929120093584061f, _240, (mad(0.5183603167533875f, _237, (_234 * 0.38695648312568665f))));
  float _257 = mad(0.04929120093584061f, _241, (mad(0.5183603167533875f, _238, (_234 * 0.11516613513231277f))));
  float _260 = mad(0.04929120093584061f, _242, (mad(0.5183603167533875f, _239, (_234 * -0.0697740763425827f))));
  float _263 = mad(0.9684867262840271f, _240, (mad(0.04004279896616936f, _237, (_234 * -0.007634039502590895f))));
  float _266 = mad(0.9684867262840271f, _241, (mad(0.04004279896616936f, _238, (_234 * -0.0022720457054674625f))));
  float _269 = mad(0.9684867262840271f, _242, (mad(0.04004279896616936f, _239, (_234 * 0.0013765322510153055f))));
  float _272 = mad(_251, 0.01933390088379383f, (mad(_248, 0.2126729041337967f, (_245 * 0.4124563932418823f))));
  float _275 = mad(_251, 0.11919199675321579f, (mad(_248, 0.7151522040367126f, (_245 * 0.3575761020183563f))));
  float _278 = mad(_251, 0.9503040909767151f, (mad(_248, 0.07217500358819962f, (_245 * 0.18043750524520874f))));
  float _281 = mad(_260, 0.01933390088379383f, (mad(_257, 0.2126729041337967f, (_254 * 0.4124563932418823f))));
  float _284 = mad(_260, 0.11919199675321579f, (mad(_257, 0.7151522040367126f, (_254 * 0.3575761020183563f))));
  float _287 = mad(_260, 0.9503040909767151f, (mad(_257, 0.07217500358819962f, (_254 * 0.18043750524520874f))));
  float _290 = mad(_269, 0.01933390088379383f, (mad(_266, 0.2126729041337967f, (_263 * 0.4124563932418823f))));
  float _293 = mad(_269, 0.11919199675321579f, (mad(_266, 0.7151522040367126f, (_263 * 0.3575761020183563f))));
  float _296 = mad(_269, 0.9503040909767151f, (mad(_266, 0.07217500358819962f, (_263 * 0.18043750524520874f))));
  float _326 = mad((mad(-0.4986107647418976f, _296, (mad(-1.5373831987380981f, _287, (_278 * 3.2409698963165283f))))), _105, (mad((mad(-0.4986107647418976f, _293, (mad(-1.5373831987380981f, _284, (_275 * 3.2409698963165283f))))), _104, ((mad(-0.4986107647418976f, _290, (mad(-1.5373831987380981f, _281, (_272 * 3.2409698963165283f))))) * _103))));
  float _329 = mad((mad(0.04155505821108818f, _296, (mad(1.8759675025939941f, _287, (_278 * -0.9692436456680298f))))), _105, (mad((mad(0.04155505821108818f, _293, (mad(1.8759675025939941f, _284, (_275 * -0.9692436456680298f))))), _104, ((mad(0.04155505821108818f, _290, (mad(1.8759675025939941f, _281, (_272 * -0.9692436456680298f))))) * _103))));
  float _332 = mad((mad(1.056971549987793f, _296, (mad(-0.20397695899009705f, _287, (_278 * 0.05563008040189743f))))), _105, (mad((mad(1.056971549987793f, _293, (mad(-0.20397695899009705f, _284, (_275 * 0.05563008040189743f))))), _104, ((mad(1.056971549987793f, _290, (mad(-0.20397695899009705f, _281, (_272 * 0.05563008040189743f))))) * _103))));
  float _335 = mad(0.04736635088920593f, _332, (mad(0.3395121395587921f, _329, (_326 * 0.613191545009613f))));
  float _338 = mad(0.01345000695437193f, _332, (mad(0.9163357615470886f, _329, (_326 * 0.07020691782236099f))));
  float _341 = mad(0.8696067929267883f, _332, (mad(0.1095672994852066f, _329, (_326 * 0.020618872717022896f))));
  float _342 = dot(float3(_335, _338, _341), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
  float _346 = (_335 / _342) + -1.0f;
  float _347 = (_338 / _342) + -1.0f;
  float _348 = (_341 / _342) + -1.0f;
  float _360 = (1.0f - (exp2((((_342 * _342) * -4.0f) * (cb0_035z))))) * (1.0f - (exp2(((dot(float3(_346, _347, _348), float3(_346, _347, _348))) * -4.0f))));
  float _376 = (((mad(-0.06368283927440643f, _341, (mad(-0.32929131388664246f, _338, (_335 * 1.370412826538086f))))) - _335) * _360) + _335;
  float _377 = (((mad(-0.010861567221581936f, _341, (mad(1.0970908403396606f, _338, (_335 * -0.08343426138162613f))))) - _338) * _360) + _338;
  float _378 = (((mad(1.203694462776184f, _341, (mad(-0.09862564504146576f, _338, (_335 * -0.02579325996339321f))))) - _341) * _360) + _341;
  float _379 = dot(float3(_376, _377, _378), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
  float _393 = (cb0_018w) + (cb0_023w);
  float _407 = (cb0_017w) * (cb0_022w);
  float _421 = (cb0_016w) * (cb0_021w);
  float _435 = (cb0_015w) * (cb0_020w);
  float _449 = (cb0_014w) * (cb0_019w);
  float _453 = _376 - _379;
  float _454 = _377 - _379;
  float _455 = _378 - _379;
  float _512 = saturate((_379 / (cb0_034z)));
  float _516 = (_512 * _512) * (3.0f - (_512 * 2.0f));
  float _517 = 1.0f - _516;
  float _526 = (cb0_018w) + (cb0_033w);
  float _535 = (cb0_017w) * (cb0_032w);
  float _544 = (cb0_016w) * (cb0_031w);
  float _553 = (cb0_015w) * (cb0_030w);
  float _562 = (cb0_014w) * (cb0_029w);
  float _626 = saturate(((_379 - (cb0_034w)) / ((cb0_035x) - (cb0_034w))));
  float _630 = (_626 * _626) * (3.0f - (_626 * 2.0f));
  float _639 = (cb0_018w) + (cb0_028w);
  float _648 = (cb0_017w) * (cb0_027w);
  float _657 = (cb0_016w) * (cb0_026w);
  float _666 = (cb0_015w) * (cb0_025w);
  float _675 = (cb0_014w) * (cb0_024w);
  float _733 = _516 - _630;
  float _744 = ((_630 * ((((cb0_018x) + (cb0_033x)) + _526) + ((((cb0_017x) * (cb0_032x)) * _535) * (exp2(((log2(((exp2(((((cb0_015x) * (cb0_030x)) * _553) * (log2(((max(0.0f, (((((cb0_014x) * (cb0_029x)) * _562) * _453) + _379))) * 5.55555534362793f)))))) * 0.18000000715255737f))) * (1.0f / (((cb0_016x) * (cb0_031x)) * _544)))))))) + (_517 * ((((cb0_018x) + (cb0_023x)) + _393) + ((((cb0_017x) * (cb0_022x)) * _407) * (exp2(((log2(((exp2(((((cb0_015x) * (cb0_020x)) * _435) * (log2(((max(0.0f, (((((cb0_014x) * (cb0_019x)) * _449) * _453) + _379))) * 5.55555534362793f)))))) * 0.18000000715255737f))) * (1.0f / (((cb0_016x) * (cb0_021x)) * _421))))))))) + (((((cb0_018x) + (cb0_028x)) + _639) + ((((cb0_017x) * (cb0_027x)) * _648) * (exp2(((log2(((exp2(((((cb0_015x) * (cb0_025x)) * _666) * (log2(((max(0.0f, (((((cb0_014x) * (cb0_024x)) * _675) * _453) + _379))) * 5.55555534362793f)))))) * 0.18000000715255737f))) * (1.0f / (((cb0_016x) * (cb0_026x)) * _657))))))) * _733);
  float _746 = ((_630 * ((((cb0_018y) + (cb0_033y)) + _526) + ((((cb0_017y) * (cb0_032y)) * _535) * (exp2(((log2(((exp2(((((cb0_015y) * (cb0_030y)) * _553) * (log2(((max(0.0f, (((((cb0_014y) * (cb0_029y)) * _562) * _454) + _379))) * 5.55555534362793f)))))) * 0.18000000715255737f))) * (1.0f / (((cb0_016y) * (cb0_031y)) * _544)))))))) + (_517 * ((((cb0_018y) + (cb0_023y)) + _393) + ((((cb0_017y) * (cb0_022y)) * _407) * (exp2(((log2(((exp2(((((cb0_015y) * (cb0_020y)) * _435) * (log2(((max(0.0f, (((((cb0_014y) * (cb0_019y)) * _449) * _454) + _379))) * 5.55555534362793f)))))) * 0.18000000715255737f))) * (1.0f / (((cb0_016y) * (cb0_021y)) * _421))))))))) + (((((cb0_018y) + (cb0_028y)) + _639) + ((((cb0_017y) * (cb0_027y)) * _648) * (exp2(((log2(((exp2(((((cb0_015y) * (cb0_025y)) * _666) * (log2(((max(0.0f, (((((cb0_014y) * (cb0_024y)) * _675) * _454) + _379))) * 5.55555534362793f)))))) * 0.18000000715255737f))) * (1.0f / (((cb0_016y) * (cb0_026y)) * _657))))))) * _733);
  float _748 = ((_630 * ((((cb0_018z) + (cb0_033z)) + _526) + ((((cb0_017z) * (cb0_032z)) * _535) * (exp2(((log2(((exp2(((((cb0_015z) * (cb0_030z)) * _553) * (log2(((max(0.0f, (((((cb0_014z) * (cb0_029z)) * _562) * _455) + _379))) * 5.55555534362793f)))))) * 0.18000000715255737f))) * (1.0f / (((cb0_016z) * (cb0_031z)) * _544)))))))) + (_517 * ((((cb0_018z) + (cb0_023z)) + _393) + ((((cb0_017z) * (cb0_022z)) * _407) * (exp2(((log2(((exp2(((((cb0_015z) * (cb0_020z)) * _435) * (log2(((max(0.0f, (((((cb0_014z) * (cb0_019z)) * _449) * _455) + _379))) * 5.55555534362793f)))))) * 0.18000000715255737f))) * (1.0f / (((cb0_016z) * (cb0_021z)) * _421))))))))) + (((((cb0_018z) + (cb0_028z)) + _639) + ((((cb0_017z) * (cb0_027z)) * _648) * (exp2(((log2(((exp2(((((cb0_015z) * (cb0_025z)) * _666) * (log2(((max(0.0f, (((((cb0_014z) * (cb0_024z)) * _675) * _455) + _379))) * 5.55555534362793f)))))) * 0.18000000715255737f))) * (1.0f / (((cb0_016z) * (cb0_026z)) * _657))))))) * _733);

  float3 untonemapped_ap1 = float3(_744, _746, _748);

  float _763 = (((mad(0.061360642313957214f, _748, (mad(-4.540197551250458e-09f, _746, (_744 * 0.9386394023895264f))))) - _744) * (cb0_035y)) + _744;
  float _764 = (((mad(0.169205904006958f, _748, (mad(0.8307942152023315f, _746, (_744 * 6.775371730327606e-08f))))) - _746) * (cb0_035y)) + _746;
  float _765 = ((mad(-2.3283064365386963e-10f, _746, (_744 * -9.313225746154785e-10f))) * (cb0_035y)) + _748;
  float _768 = mad(0.16386905312538147f, _765, (mad(0.14067868888378143f, _764, (_763 * 0.6954522132873535f))));
  float _771 = mad(0.0955343246459961f, _765, (mad(0.8596711158752441f, _764, (_763 * 0.044794581830501556f))));
  float _774 = mad(1.0015007257461548f, _765, (mad(0.004025210160762072f, _764, (_763 * -0.005525882821530104f))));
  float _778 = max((max(_768, _771)), _774);
  float _783 = ((max(_778, 1.000000013351432e-10f)) - (max((min((min(_768, _771)), _774)), 1.000000013351432e-10f))) / (max(_778, 0.009999999776482582f));
  float _796 = ((_771 + _768) + _774) + ((sqrt(((((_774 - _771) * _774) + ((_771 - _768) * _771)) + ((_768 - _774) * _768)))) * 1.75f);
  float _797 = _796 * 0.3333333432674408f;
  float _798 = _783 + -0.4000000059604645f;
  float _799 = _798 * 5.0f;
  float _803 = max((1.0f - (abs((_798 * 2.5f)))), 0.0f);
  float _814 = (((float(((int(((bool)((_799 > 0.0f))))) - (int(((bool)((_799 < 0.0f)))))))) * (1.0f - (_803 * _803))) + 1.0f) * 0.02500000037252903f;
  _823 = _814;
  if ((!(_797 <= 0.0533333346247673f))) {
    _823 = 0.0f;
    if ((!(_797 >= 0.1599999964237213f))) {
      _823 = (((0.23999999463558197f / _796) + -0.5f) * _814);
    }
  }
  float _824 = _823 + 1.0f;
  float _825 = _824 * _768;
  float _826 = _824 * _771;
  float _827 = _824 * _774;
  _859 = 0.0f;
  if (!(((bool)((_825 == _826))) && ((bool)((_826 == _827))))) {
    float _834 = ((_825 * 2.0f) - _826) - _827;
    float _837 = ((_771 - _774) * 1.7320507764816284f) * _824;
    float _839 = atan((_837 / _834));
    bool _842 = (_834 < 0.0f);
    bool _843 = (_834 == 0.0f);
    bool _844 = (_837 >= 0.0f);
    bool _845 = (_837 < 0.0f);
    float _854 = (((bool)(_844 && _843)) ? 90.0f : ((((bool)(_845 && _843)) ? -90.0f : (((((bool)(_845 && _842)) ? (_839 + -3.1415927410125732f) : ((((bool)(_844 && _842)) ? (_839 + 3.1415927410125732f) : _839)))) * 57.2957763671875f))));
    _859 = _854;
    if (((_854 < 0.0f))) {
      _859 = (_854 + 360.0f);
    }
  }
  float _861 = min((max(_859, 0.0f)), 360.0f);
  if (((_861 < -180.0f))) {
    _870 = (_861 + 360.0f);
  } else {
    _870 = _861;
    if (((_861 > 180.0f))) {
      _870 = (_861 + -360.0f);
    }
  }
  float _874 = saturate((1.0f - (abs((_870 * 0.014814814552664757f)))));
  float _878 = (_874 * _874) * (3.0f - (_874 * 2.0f));
  float _884 = ((_878 * _878) * ((_783 * 0.18000000715255737f) * (0.029999999329447746f - _825))) + _825;
  float _894 = max(0.0f, (mad(-0.21492856740951538f, _827, (mad(-0.2365107536315918f, _826, (_884 * 1.4514392614364624f))))));
  float _895 = max(0.0f, (mad(-0.09967592358589172f, _827, (mad(1.17622971534729f, _826, (_884 * -0.07655377686023712f))))));
  float _896 = max(0.0f, (mad(0.9977163076400757f, _827, (mad(-0.006032449658960104f, _826, (_884 * 0.008316148072481155f))))));
  float _897 = dot(float3(_894, _895, _896), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
  float _911 = ((cb0_036w) + 1.0f) - (cb0_036y);
  float _914 = (cb0_037x) + 1.0f;
  float _916 = _914 - (cb0_036z);
  if ((((cb0_036y) > 0.800000011920929f))) {
    _934 = (((0.8199999928474426f - (cb0_036y)) / (cb0_036x)) + -0.7447274923324585f);
  } else {
    float _925 = ((cb0_036w) + 0.18000000715255737f) / _911;
    _934 = (-0.7447274923324585f - (((log2((_925 / (2.0f - _925)))) * 0.3465735912322998f) * (_911 / (cb0_036x))));
  }
  float _937 = ((1.0f - (cb0_036y)) / (cb0_036x)) - _934;
  float _939 = ((cb0_036z) / (cb0_036x)) - _937;
  float _943 = (log2((((_894 - _897) * 0.9599999785423279f) + _897))) * 0.3010300099849701f;
  float _944 = (log2((((_895 - _897) * 0.9599999785423279f) + _897))) * 0.3010300099849701f;
  float _945 = (log2((((_896 - _897) * 0.9599999785423279f) + _897))) * 0.3010300099849701f;
  float _949 = (cb0_036x) * (_943 + _937);
  float _950 = (cb0_036x) * (_944 + _937);
  float _951 = (cb0_036x) * (_945 + _937);
  float _952 = _911 * 2.0f;
  float _954 = ((cb0_036x) * -2.0f) / _911;
  float _955 = _943 - _934;
  float _956 = _944 - _934;
  float _957 = _945 - _934;
  float _976 = _916 * 2.0f;
  float _978 = ((cb0_036x) * 2.0f) / _916;
  float _1003 = (((bool)((_943 < _934))) ? ((_952 / ((exp2(((_955 * 1.4426950216293335f) * _954))) + 1.0f)) - (cb0_036w)) : _949);
  float _1004 = (((bool)((_944 < _934))) ? ((_952 / ((exp2(((_956 * 1.4426950216293335f) * _954))) + 1.0f)) - (cb0_036w)) : _950);
  float _1005 = (((bool)((_945 < _934))) ? ((_952 / ((exp2(((_957 * 1.4426950216293335f) * _954))) + 1.0f)) - (cb0_036w)) : _951);
  float _1012 = _939 - _934;
  float _1016 = saturate((_955 / _1012));
  float _1017 = saturate((_956 / _1012));
  float _1018 = saturate((_957 / _1012));
  bool _1019 = (_939 < _934);
  float _1023 = (_1019 ? (1.0f - _1016) : _1016);
  float _1024 = (_1019 ? (1.0f - _1017) : _1017);
  float _1025 = (_1019 ? (1.0f - _1018) : _1018);
  float _1044 = (((_1023 * _1023) * (((((bool)((_943 > _939))) ? (_914 - (_976 / ((exp2((((_943 - _939) * 1.4426950216293335f) * _978))) + 1.0f))) : _949)) - _1003)) * (3.0f - (_1023 * 2.0f))) + _1003;
  float _1045 = (((_1024 * _1024) * (((((bool)((_944 > _939))) ? (_914 - (_976 / ((exp2((((_944 - _939) * 1.4426950216293335f) * _978))) + 1.0f))) : _950)) - _1004)) * (3.0f - (_1024 * 2.0f))) + _1004;
  float _1046 = (((_1025 * _1025) * (((((bool)((_945 > _939))) ? (_914 - (_976 / ((exp2((((_945 - _939) * 1.4426950216293335f) * _978))) + 1.0f))) : _951)) - _1005)) * (3.0f - (_1025 * 2.0f))) + _1005;
  float _1047 = dot(float3(_1044, _1045, _1046), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
  float _1067 = ((cb0_035w) * ((max(0.0f, (((_1044 - _1047) * 0.9300000071525574f) + _1047))) - _763)) + _763;
  float _1068 = ((cb0_035w) * ((max(0.0f, (((_1045 - _1047) * 0.9300000071525574f) + _1047))) - _764)) + _764;
  float _1069 = ((cb0_035w) * ((max(0.0f, (((_1046 - _1047) * 0.9300000071525574f) + _1047))) - _765)) + _765;
  float _1085 = (((mad(-0.06537103652954102f, _1069, (mad(1.451815478503704e-06f, _1068, (_1067 * 1.065374732017517f))))) - _1067) * (cb0_035y)) + _1067;
  float _1086 = (((mad(-0.20366770029067993f, _1069, (mad(1.2036634683609009f, _1068, (_1067 * -2.57161445915699e-07f))))) - _1068) * (cb0_035y)) + _1068;
  float _1087 = (((mad(0.9999996423721313f, _1069, (mad(2.0954757928848267e-08f, _1068, (_1067 * 1.862645149230957e-08f))))) - _1069) * (cb0_035y)) + _1069;
  float _1100 = saturate((max(0.0f, (mad(-0.0832584798336029f, _1087, (mad(-0.6217905879020691f, _1086, (_1085 * 1.7050515413284302f))))))));
  float _1101 = saturate((max(0.0f, (mad(-0.010548528283834457f, _1087, (mad(1.1408027410507202f, _1086, (_1085 * -0.13025718927383423f))))))));
  float _1102 = saturate((max(0.0f, (mad(1.152971863746643f, _1087, (mad(-0.1289687603712082f, _1086, (_1085 * -0.024003278464078903f))))))));
  if (((_1100 < 0.0031306699384003878f))) {
    _1113 = (_1100 * 12.920000076293945f);
  } else {
    _1113 = (((exp2(((log2(_1100)) * 0.4166666567325592f))) * 1.0549999475479126f) + -0.054999999701976776f);
  }
  if (((_1101 < 0.0031306699384003878f))) {
    _1124 = (_1101 * 12.920000076293945f);
  } else {
    _1124 = (((exp2(((log2(_1101)) * 0.4166666567325592f))) * 1.0549999475479126f) + -0.054999999701976776f);
  }
  if (((_1102 < 0.0031306699384003878f))) {
    _1135 = (_1102 * 12.920000076293945f);
  } else {
    _1135 = (((exp2(((log2(_1102)) * 0.4166666567325592f))) * 1.0549999475479126f) + -0.054999999701976776f);
  }
  float _1139 = (_1124 * 0.9375f) + 0.03125f;
  float _1146 = _1135 * 15.0f;
  float _1147 = floor(_1146);
  float _1148 = _1146 - _1147;
  float _1150 = (((_1113 * 0.9375f) + 0.03125f) + _1147) * 0.0625f;
  float4 _1153 = t0.Sample(s0, float2(_1150, _1139));
  float4 _1160 = t0.Sample(s0, float2((_1150 + 0.0625f), _1139));
  float _1179 = max(6.103519990574569e-05f, ((((((_1160.x) - (_1153.x)) * _1148) + (_1153.x)) * (cb0_005y)) + ((cb0_005x) * _1113)));
  float _1180 = max(6.103519990574569e-05f, ((((((_1160.y) - (_1153.y)) * _1148) + (_1153.y)) * (cb0_005y)) + ((cb0_005x) * _1124)));
  float _1181 = max(6.103519990574569e-05f, ((((((_1160.z) - (_1153.z)) * _1148) + (_1153.z)) * (cb0_005y)) + ((cb0_005x) * _1135)));
  float _1203 = (((bool)((_1179 > 0.040449999272823334f))) ? (exp2(((log2(((_1179 * 0.9478672742843628f) + 0.05213269963860512f))) * 2.4000000953674316f))) : (_1179 * 0.07739938050508499f));
  float _1204 = (((bool)((_1180 > 0.040449999272823334f))) ? (exp2(((log2(((_1180 * 0.9478672742843628f) + 0.05213269963860512f))) * 2.4000000953674316f))) : (_1180 * 0.07739938050508499f));
  float _1205 = (((bool)((_1181 > 0.040449999272823334f))) ? (exp2(((log2(((_1181 * 0.9478672742843628f) + 0.05213269963860512f))) * 2.4000000953674316f))) : (_1181 * 0.07739938050508499f));
  float _1215 = (((cb0_038y) + ((cb0_038x) * _1203)) * _1203) + (cb0_038z);
  float _1218 = (((cb0_038y) + ((cb0_038x) * _1204)) * _1204) + (cb0_038z);
  float _1221 = (((cb0_038y) + ((cb0_038x) * _1205)) * _1205) + (cb0_038z);
  float _1231 = (cb0_013x) * _1215;
  float _1232 = (cb0_013y) * _1218;
  float _1233 = (cb0_013z) * _1221;
  float _1240 = (((cb0_012x) - _1231) * (cb0_012w)) + _1231;
  float _1241 = (((cb0_012y) - _1232) * (cb0_012w)) + _1232;
  float _1242 = (((cb0_012z) - _1233) * (cb0_012w)) + _1233;
  float _1254 = exp2(((log2((max(0.0f, _1240)))) * (cb0_039y)));
  float _1255 = exp2(((log2((max(0.0f, _1241)))) * (cb0_039y)));
  float _1256 = exp2(((log2((max(0.0f, _1242)))) * (cb0_039y)));

  if (injectedData.toneMapType != 0) {
    return LutBuilderToneMap(untonemapped_ap1, float3(_1254, _1255, _1256));
  }

  if (((((uint)(cb0_039w)) == 0))) {
    do {
      if (((_1254 < 0.0031306699384003878f))) {
        _1271 = (_1254 * 12.920000076293945f);
      } else {
        _1271 = (((exp2(((log2(_1254)) * 0.4166666567325592f))) * 1.0549999475479126f) + -0.054999999701976776f);
      }
      do {
        if (((_1255 < 0.0031306699384003878f))) {
          _1282 = (_1255 * 12.920000076293945f);
        } else {
          _1282 = (((exp2(((log2(_1255)) * 0.4166666567325592f))) * 1.0549999475479126f) + -0.054999999701976776f);
        }
        if (((_1256 < 0.0031306699384003878f))) {
          _2769 = _1271;
          _2770 = _1282;
          _2771 = (_1256 * 12.920000076293945f);
        } else {
          _2769 = _1271;
          _2770 = _1282;
          _2771 = (((exp2(((log2(_1256)) * 0.4166666567325592f))) * 1.0549999475479126f) + -0.054999999701976776f);
        }
      } while (false);
    } while (false);
  } else {
    if (((((uint)(cb0_039w)) == 1))) {
      float _1297 = mad(0.04736635088920593f, _1256, (mad(0.3395121395587921f, _1255, (_1254 * 0.613191545009613f))));
      float _1300 = mad(0.01345000695437193f, _1256, (mad(0.9163357615470886f, _1255, (_1254 * 0.07020691782236099f))));
      float _1303 = mad(0.8696067929267883f, _1256, (mad(0.1095672994852066f, _1255, (_1254 * 0.020618872717022896f))));
      float _1313 = max(6.103519990574569e-05f, (mad(_39, _1303, (mad(_38, _1300, (_1297 * _37))))));
      float _1314 = max(6.103519990574569e-05f, (mad(_42, _1303, (mad(_41, _1300, (_1297 * _40))))));
      float _1315 = max(6.103519990574569e-05f, (mad(_45, _1303, (mad(_44, _1300, (_1297 * _43))))));
      _2769 = (min((_1313 * 4.5f), (((exp2(((log2((max(_1313, 0.017999999225139618f)))) * 0.44999998807907104f))) * 1.0989999771118164f) + -0.0989999994635582f)));
      _2770 = (min((_1314 * 4.5f), (((exp2(((log2((max(_1314, 0.017999999225139618f)))) * 0.44999998807907104f))) * 1.0989999771118164f) + -0.0989999994635582f)));
      _2771 = (min((_1315 * 4.5f), (((exp2(((log2((max(_1315, 0.017999999225139618f)))) * 0.44999998807907104f))) * 1.0989999771118164f) + -0.0989999994635582f)));
    } else {
      bool _1342 = (((uint)(cb0_039w)) == 5);
      if ((((bool)((((uint)(cb0_039w)) == 3))) || _1342)) {
        _10[0] = (cb0_009x);
        _10[1] = (cb0_009y);
        _10[2] = (cb0_009z);
        _10[3] = (cb0_009w);
        _10[4] = (cb0_011x);
        _10[5] = (cb0_011x);
        _11[0] = (cb0_010x);
        _11[1] = (cb0_010y);
        _11[2] = (cb0_010z);
        _11[3] = (cb0_010w);
        _11[4] = (cb0_011y);
        _11[5] = (cb0_011y);
        float _1381 = (cb0_011z) * _1215;
        float _1382 = (cb0_011z) * _1218;
        float _1383 = (cb0_011z) * _1221;
        float _1386 = mad(0.17733481526374817f, _1383, (mad(0.38297808170318604f, _1382, (_1381 * 0.43970081210136414f))));
        float _1389 = mad(0.09676162153482437f, _1383, (mad(0.8134231567382812f, _1382, (_1381 * 0.08979231864213943f))));
        float _1392 = mad(0.870704174041748f, _1383, (mad(0.11154405772686005f, _1382, (_1381 * 0.017543988302350044f))));
        float _1395 = mad(-0.21492856740951538f, _1392, (mad(-0.2365107536315918f, _1389, (_1386 * 1.4514392614364624f))));
        float _1398 = mad(-0.09967592358589172f, _1392, (mad(1.17622971534729f, _1389, (_1386 * -0.07655377686023712f))));
        float _1401 = mad(0.9977163076400757f, _1392, (mad(-0.006032449658960104f, _1389, (_1386 * 0.008316148072481155f))));
        float _1403 = max(_1395, (max(_1398, _1401)));
        _1471 = _1395;
        _1472 = _1398;
        _1473 = _1401;
        do {
          if (!(((bool)(((bool)(((bool)((_1386 < 0.0f))) || ((bool)((_1389 < 0.0f))))) || ((bool)((_1392 < 0.0f))))) || ((bool)((_1403 < 1.000000013351432e-10f))))) {
            float _1413 = abs(_1403);
            float _1414 = (_1403 - _1395) / _1413;
            float _1416 = (_1403 - _1398) / _1413;
            float _1418 = (_1403 - _1401) / _1413;
            _1433 = _1414;
            do {
              if (!((_1414 < 0.8149999976158142f))) {
                float _1421 = _1414 + -0.8149999976158142f;
                _1433 = ((_1421 / (exp2(((log2(((exp2(((log2((_1421 * 3.0552830696105957f))) * 1.2000000476837158f))) + 1.0f))) * 0.8333333134651184f)))) + 0.8149999976158142f);
              }
              _1448 = _1416;
              do {
                if (!((_1416 < 0.8029999732971191f))) {
                  float _1436 = _1416 + -0.8029999732971191f;
                  _1448 = ((_1436 / (exp2(((log2(((exp2(((log2((_1436 * 3.4972610473632812f))) * 1.2000000476837158f))) + 1.0f))) * 0.8333333134651184f)))) + 0.8029999732971191f);
                }
                _1463 = _1418;
                do {
                  if (!((_1418 < 0.8799999952316284f))) {
                    float _1451 = _1418 + -0.8799999952316284f;
                    _1463 = ((_1451 / (exp2(((log2(((exp2(((log2((_1451 * 6.810994625091553f))) * 1.2000000476837158f))) + 1.0f))) * 0.8333333134651184f)))) + 0.8799999952316284f);
                  }
                  _1471 = (_1403 - (_1413 * _1433));
                  _1472 = (_1403 - (_1413 * _1448));
                  _1473 = (_1403 - (_1413 * _1463));
                } while (false);
              } while (false);
            } while (false);
          }
          float _1476 = mad(0.16386906802654266f, _1473, (mad(0.14067870378494263f, _1472, (_1471 * 0.6954522132873535f))));
          float _1483 = ((_1476 - _1386) * (cb0_011w)) + _1386;
          float _1484 = ((_1476 - _1389) * (cb0_011w)) + _1389;
          float _1485 = ((_1476 - _1392) * (cb0_011w)) + _1392;
          float _1489 = max((max(_1483, _1484)), _1485);
          float _1494 = ((max(_1489, 1.000000013351432e-10f)) - (max((min((min(_1483, _1484)), _1485)), 1.000000013351432e-10f))) / (max(_1489, 0.009999999776482582f));
          float _1507 = ((_1485 + _1484) + _1483) + ((sqrt(((((_1485 - _1484) * _1485) + ((_1484 - _1483) * _1484)) + ((_1483 - _1485) * _1483)))) * 1.75f);
          float _1508 = _1507 * 0.3333333432674408f;
          float _1509 = _1494 + -0.4000000059604645f;
          float _1510 = _1509 * 5.0f;
          float _1514 = max((1.0f - (abs((_1509 * 2.5f)))), 0.0f);
          float _1525 = (((float(((int(((bool)((_1510 > 0.0f))))) - (int(((bool)((_1510 < 0.0f)))))))) * (1.0f - (_1514 * _1514))) + 1.0f) * 0.02500000037252903f;
          _1534 = _1525;
          do {
            if ((!(_1508 <= 0.0533333346247673f))) {
              _1534 = 0.0f;
              if ((!(_1508 >= 0.1599999964237213f))) {
                _1534 = (((0.23999999463558197f / _1507) + -0.5f) * _1525);
              }
            }
            float _1535 = _1534 + 1.0f;
            float _1536 = _1535 * _1483;
            float _1537 = _1535 * _1484;
            float _1538 = _1535 * _1485;
            _1570 = 0.0f;
            do {
              if (!(((bool)((_1536 == _1537))) && ((bool)((_1537 == _1538))))) {
                float _1545 = ((_1536 * 2.0f) - _1537) - _1538;
                float _1548 = ((_1484 - _1485) * 1.7320507764816284f) * _1535;
                float _1550 = atan((_1548 / _1545));
                bool _1553 = (_1545 < 0.0f);
                bool _1554 = (_1545 == 0.0f);
                bool _1555 = (_1548 >= 0.0f);
                bool _1556 = (_1548 < 0.0f);
                float _1565 = (((bool)(_1555 && _1554)) ? 90.0f : ((((bool)(_1556 && _1554)) ? -90.0f : (((((bool)(_1556 && _1553)) ? (_1550 + -3.1415927410125732f) : ((((bool)(_1555 && _1553)) ? (_1550 + 3.1415927410125732f) : _1550)))) * 57.2957763671875f))));
                _1570 = _1565;
                if (((_1565 < 0.0f))) {
                  _1570 = (_1565 + 360.0f);
                }
              }
              float _1572 = min((max(_1570, 0.0f)), 360.0f);
              do {
                if (((_1572 < -180.0f))) {
                  _1581 = (_1572 + 360.0f);
                } else {
                  _1581 = _1572;
                  if (((_1572 > 180.0f))) {
                    _1581 = (_1572 + -360.0f);
                  }
                }
                _1620 = 0.0f;
                do {
                  if ((((bool)((_1581 > -67.5f))) && ((bool)((_1581 < 67.5f))))) {
                    float _1587 = (_1581 + 67.5f) * 0.029629629105329514f;
                    int _1588 = int(1588);
                    float _1590 = _1587 - (float(_1588));
                    float _1591 = _1590 * _1590;
                    float _1592 = _1591 * _1590;
                    if (((_1588 == 3))) {
                      _1620 = (((0.1666666716337204f - (_1590 * 0.5f)) + (_1591 * 0.5f)) - (_1592 * 0.1666666716337204f));
                    } else {
                      if (((_1588 == 2))) {
                        _1620 = ((0.6666666865348816f - _1591) + (_1592 * 0.5f));
                      } else {
                        if (((_1588 == 1))) {
                          _1620 = (((_1592 * -0.5f) + 0.1666666716337204f) + ((_1591 + _1590) * 0.5f));
                        } else {
                          _1620 = ((((bool)((_1588 == 0))) ? (_1592 * 0.1666666716337204f) : 0.0f));
                        }
                      }
                    }
                  }
                  float _1629 = min((max(((((_1494 * 0.27000001072883606f) * (0.029999999329447746f - _1536)) * _1620) + _1536), 0.0f)), 65535.0f);
                  float _1630 = min((max(_1537, 0.0f)), 65535.0f);
                  float _1631 = min((max(_1538, 0.0f)), 65535.0f);
                  float _1644 = min((max((mad(-0.21492856740951538f, _1631, (mad(-0.2365107536315918f, _1630, (_1629 * 1.4514392614364624f))))), 0.0f)), 65504.0f);
                  float _1645 = min((max((mad(-0.09967592358589172f, _1631, (mad(1.17622971534729f, _1630, (_1629 * -0.07655377686023712f))))), 0.0f)), 65504.0f);
                  float _1646 = min((max((mad(0.9977163076400757f, _1631, (mad(-0.006032449658960104f, _1630, (_1629 * 0.008316148072481155f))))), 0.0f)), 65504.0f);
                  float _1647 = dot(float3(_1644, _1645, _1646), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
                  float _1658 = log2((max((((_1644 - _1647) * 0.9599999785423279f) + _1647), 1.000000013351432e-10f)));
                  float _1659 = _1658 * 0.3010300099849701f;
                  float _1660 = log2((cb0_007x));
                  float _1661 = _1660 * 0.3010300099849701f;
                  do {
                    if (!(!(_1659 <= _1661))) {
                      _1730 = ((log2((cb0_007y))) * 0.3010300099849701f);
                    } else {
                      float _1668 = log2((cb0_008x));
                      float _1669 = _1668 * 0.3010300099849701f;
                      if ((((bool)((_1659 > _1661))) && ((bool)((_1659 < _1669))))) {
                        float _1677 = ((_1658 - _1660) * 0.9030900001525879f) / ((_1668 - _1660) * 0.3010300099849701f);
                        int _1678 = int(1678);
                        float _1680 = _1677 - (float(_1678));
                        float _1682 = _10[_1678];
                        float _1685 = _10[(_1678 + 1)];
                        float _1690 = _1682 * 0.5f;
                        _1730 = (dot(float3((_1680 * _1680), _1680, 1.0f), float3((mad((_10[(_1678 + 2)]), 0.5f, (mad(_1685, -1.0f, _1690)))), (_1685 - _1682), (mad(_1685, 0.5f, _1690)))));
                      } else {
                        float _1698 = log2((cb0_007z));
                        if ((((bool)((_1659 >= _1669))) && ((bool)((_1659 < (_1698 * 0.3010300099849701f)))))) {
                          float _1707 = ((_1658 - _1668) * 0.9030900001525879f) / ((_1698 - _1668) * 0.3010300099849701f);
                          int _1708 = int(1708);
                          float _1710 = _1707 - (float(_1708));
                          float _1712 = _11[_1708];
                          float _1715 = _11[(_1708 + 1)];
                          float _1720 = _1712 * 0.5f;
                          _1730 = (dot(float3((_1710 * _1710), _1710, 1.0f), float3((mad((_11[(_1708 + 2)]), 0.5f, (mad(_1715, -1.0f, _1720)))), (_1715 - _1712), (mad(_1715, 0.5f, _1720)))));
                        } else {
                          _1730 = ((log2((cb0_007w))) * 0.3010300099849701f);
                        }
                      }
                    }
                    float _1734 = log2((max((((_1645 - _1647) * 0.9599999785423279f) + _1647), 1.000000013351432e-10f)));
                    float _1735 = _1734 * 0.3010300099849701f;
                    do {
                      if (!(!(_1735 <= _1661))) {
                        _1804 = ((log2((cb0_007y))) * 0.3010300099849701f);
                      } else {
                        float _1742 = log2((cb0_008x));
                        float _1743 = _1742 * 0.3010300099849701f;
                        if ((((bool)((_1735 > _1661))) && ((bool)((_1735 < _1743))))) {
                          float _1751 = ((_1734 - _1660) * 0.9030900001525879f) / ((_1742 - _1660) * 0.3010300099849701f);
                          int _1752 = int(1752);
                          float _1754 = _1751 - (float(_1752));
                          float _1756 = _10[_1752];
                          float _1759 = _10[(_1752 + 1)];
                          float _1764 = _1756 * 0.5f;
                          _1804 = (dot(float3((_1754 * _1754), _1754, 1.0f), float3((mad((_10[(_1752 + 2)]), 0.5f, (mad(_1759, -1.0f, _1764)))), (_1759 - _1756), (mad(_1759, 0.5f, _1764)))));
                        } else {
                          float _1772 = log2((cb0_007z));
                          if ((((bool)((_1735 >= _1743))) && ((bool)((_1735 < (_1772 * 0.3010300099849701f)))))) {
                            float _1781 = ((_1734 - _1742) * 0.9030900001525879f) / ((_1772 - _1742) * 0.3010300099849701f);
                            int _1782 = int(1782);
                            float _1784 = _1781 - (float(_1782));
                            float _1786 = _11[_1782];
                            float _1789 = _11[(_1782 + 1)];
                            float _1794 = _1786 * 0.5f;
                            _1804 = (dot(float3((_1784 * _1784), _1784, 1.0f), float3((mad((_11[(_1782 + 2)]), 0.5f, (mad(_1789, -1.0f, _1794)))), (_1789 - _1786), (mad(_1789, 0.5f, _1794)))));
                          } else {
                            _1804 = ((log2((cb0_007w))) * 0.3010300099849701f);
                          }
                        }
                      }
                      float _1808 = log2((max((((_1646 - _1647) * 0.9599999785423279f) + _1647), 1.000000013351432e-10f)));
                      float _1809 = _1808 * 0.3010300099849701f;
                      do {
                        if (!(!(_1809 <= _1661))) {
                          _1878 = ((log2((cb0_007y))) * 0.3010300099849701f);
                        } else {
                          float _1816 = log2((cb0_008x));
                          float _1817 = _1816 * 0.3010300099849701f;
                          if ((((bool)((_1809 > _1661))) && ((bool)((_1809 < _1817))))) {
                            float _1825 = ((_1808 - _1660) * 0.9030900001525879f) / ((_1816 - _1660) * 0.3010300099849701f);
                            int _1826 = int(1826);
                            float _1828 = _1825 - (float(_1826));
                            float _1830 = _10[_1826];
                            float _1833 = _10[(_1826 + 1)];
                            float _1838 = _1830 * 0.5f;
                            _1878 = (dot(float3((_1828 * _1828), _1828, 1.0f), float3((mad((_10[(_1826 + 2)]), 0.5f, (mad(_1833, -1.0f, _1838)))), (_1833 - _1830), (mad(_1833, 0.5f, _1838)))));
                          } else {
                            float _1846 = log2((cb0_007z));
                            if ((((bool)((_1809 >= _1817))) && ((bool)((_1809 < (_1846 * 0.3010300099849701f)))))) {
                              float _1855 = ((_1808 - _1816) * 0.9030900001525879f) / ((_1846 - _1816) * 0.3010300099849701f);
                              int _1856 = int(1856);
                              float _1858 = _1855 - (float(_1856));
                              float _1860 = _11[_1856];
                              float _1863 = _11[(_1856 + 1)];
                              float _1868 = _1860 * 0.5f;
                              _1878 = (dot(float3((_1858 * _1858), _1858, 1.0f), float3((mad((_11[(_1856 + 2)]), 0.5f, (mad(_1863, -1.0f, _1868)))), (_1863 - _1860), (mad(_1863, 0.5f, _1868)))));
                            } else {
                              _1878 = ((log2((cb0_007w))) * 0.3010300099849701f);
                            }
                          }
                        }
                        float _1882 = (cb0_007w) - (cb0_007y);
                        float _1883 = ((exp2((_1730 * 3.321928024291992f))) - (cb0_007y)) / _1882;
                        float _1885 = ((exp2((_1804 * 3.321928024291992f))) - (cb0_007y)) / _1882;
                        float _1887 = ((exp2((_1878 * 3.321928024291992f))) - (cb0_007y)) / _1882;
                        float _1890 = mad(0.15618768334388733f, _1887, (mad(0.13400420546531677f, _1885, (_1883 * 0.6624541878700256f))));
                        float _1893 = mad(0.053689517080783844f, _1887, (mad(0.6740817427635193f, _1885, (_1883 * 0.2722287178039551f))));
                        float _1896 = mad(1.0103391408920288f, _1887, (mad(0.00406073359772563f, _1885, (_1883 * -0.005574649665504694f))));
                        float _1909 = min((max((mad(-0.23642469942569733f, _1896, (mad(-0.32480329275131226f, _1893, (_1890 * 1.6410233974456787f))))), 0.0f)), 1.0f);
                        float _1910 = min((max((mad(0.016756348311901093f, _1896, (mad(1.6153316497802734f, _1893, (_1890 * -0.663662850856781f))))), 0.0f)), 1.0f);
                        float _1911 = min((max((mad(0.9883948564529419f, _1896, (mad(-0.008284442126750946f, _1893, (_1890 * 0.011721894145011902f))))), 0.0f)), 1.0f);
                        float _1914 = mad(0.15618768334388733f, _1911, (mad(0.13400420546531677f, _1910, (_1909 * 0.6624541878700256f))));
                        float _1917 = mad(0.053689517080783844f, _1911, (mad(0.6740817427635193f, _1910, (_1909 * 0.2722287178039551f))));
                        float _1920 = mad(1.0103391408920288f, _1911, (mad(0.00406073359772563f, _1910, (_1909 * -0.005574649665504694f))));
                        float _1942 = min((max(((min((max((mad(-0.23642469942569733f, _1920, (mad(-0.32480329275131226f, _1917, (_1914 * 1.6410233974456787f))))), 0.0f)), 65535.0f)) * (cb0_007w)), 0.0f)), 65535.0f);
                        float _1943 = min((max(((min((max((mad(0.016756348311901093f, _1920, (mad(1.6153316497802734f, _1917, (_1914 * -0.663662850856781f))))), 0.0f)), 65535.0f)) * (cb0_007w)), 0.0f)), 65535.0f);
                        float _1944 = min((max(((min((max((mad(0.9883948564529419f, _1920, (mad(-0.008284442126750946f, _1917, (_1914 * 0.011721894145011902f))))), 0.0f)), 65535.0f)) * (cb0_007w)), 0.0f)), 65535.0f);
                        _1956 = _1942;
                        _1957 = _1943;
                        _1958 = _1944;
                        do {
                          if (!_1342) {
                            _1956 = (mad(_39, _1944, (mad(_38, _1943, (_1942 * _37)))));
                            _1957 = (mad(_42, _1944, (mad(_41, _1943, (_1942 * _40)))));
                            _1958 = (mad(_45, _1944, (mad(_44, _1943, (_1942 * _43)))));
                          }
                          float _1968 = exp2(((log2((_1956 * 9.999999747378752e-05f))) * 0.1593017578125f));
                          float _1969 = exp2(((log2((_1957 * 9.999999747378752e-05f))) * 0.1593017578125f));
                          float _1970 = exp2(((log2((_1958 * 9.999999747378752e-05f))) * 0.1593017578125f));
                          _2769 = (exp2(((log2(((1.0f / ((_1968 * 18.6875f) + 1.0f)) * ((_1968 * 18.8515625f) + 0.8359375f)))) * 78.84375f)));
                          _2770 = (exp2(((log2(((1.0f / ((_1969 * 18.6875f) + 1.0f)) * ((_1969 * 18.8515625f) + 0.8359375f)))) * 78.84375f)));
                          _2771 = (exp2(((log2(((1.0f / ((_1970 * 18.6875f) + 1.0f)) * ((_1970 * 18.8515625f) + 0.8359375f)))) * 78.84375f)));
                        } while (false);
                      } while (false);
                    } while (false);
                  } while (false);
                } while (false);
              } while (false);
            } while (false);
          } while (false);
        } while (false);
      } else {
        if ((((((uint)(cb0_039w)) & -3) == 4))) {
          _8[0] = (cb0_009x);
          _8[1] = (cb0_009y);
          _8[2] = (cb0_009z);
          _8[3] = (cb0_009w);
          _8[4] = (cb0_011x);
          _8[5] = (cb0_011x);
          _9[0] = (cb0_010x);
          _9[1] = (cb0_010y);
          _9[2] = (cb0_010z);
          _9[3] = (cb0_010w);
          _9[4] = (cb0_011y);
          _9[5] = (cb0_011y);
          float _2039 = (cb0_011z) * _1215;
          float _2040 = (cb0_011z) * _1218;
          float _2041 = (cb0_011z) * _1221;
          float _2044 = mad(0.17733481526374817f, _2041, (mad(0.38297808170318604f, _2040, (_2039 * 0.43970081210136414f))));
          float _2047 = mad(0.09676162153482437f, _2041, (mad(0.8134231567382812f, _2040, (_2039 * 0.08979231864213943f))));
          float _2050 = mad(0.870704174041748f, _2041, (mad(0.11154405772686005f, _2040, (_2039 * 0.017543988302350044f))));
          float _2053 = mad(-0.21492856740951538f, _2050, (mad(-0.2365107536315918f, _2047, (_2044 * 1.4514392614364624f))));
          float _2056 = mad(-0.09967592358589172f, _2050, (mad(1.17622971534729f, _2047, (_2044 * -0.07655377686023712f))));
          float _2059 = mad(0.9977163076400757f, _2050, (mad(-0.006032449658960104f, _2047, (_2044 * 0.008316148072481155f))));
          float _2061 = max(_2053, (max(_2056, _2059)));
          _2129 = _2053;
          _2130 = _2056;
          _2131 = _2059;
          do {
            if (!(((bool)(((bool)(((bool)((_2044 < 0.0f))) || ((bool)((_2047 < 0.0f))))) || ((bool)((_2050 < 0.0f))))) || ((bool)((_2061 < 1.000000013351432e-10f))))) {
              float _2071 = abs(_2061);
              float _2072 = (_2061 - _2053) / _2071;
              float _2074 = (_2061 - _2056) / _2071;
              float _2076 = (_2061 - _2059) / _2071;
              _2091 = _2072;
              do {
                if (!((_2072 < 0.8149999976158142f))) {
                  float _2079 = _2072 + -0.8149999976158142f;
                  _2091 = ((_2079 / (exp2(((log2(((exp2(((log2((_2079 * 3.0552830696105957f))) * 1.2000000476837158f))) + 1.0f))) * 0.8333333134651184f)))) + 0.8149999976158142f);
                }
                _2106 = _2074;
                do {
                  if (!((_2074 < 0.8029999732971191f))) {
                    float _2094 = _2074 + -0.8029999732971191f;
                    _2106 = ((_2094 / (exp2(((log2(((exp2(((log2((_2094 * 3.4972610473632812f))) * 1.2000000476837158f))) + 1.0f))) * 0.8333333134651184f)))) + 0.8029999732971191f);
                  }
                  _2121 = _2076;
                  do {
                    if (!((_2076 < 0.8799999952316284f))) {
                      float _2109 = _2076 + -0.8799999952316284f;
                      _2121 = ((_2109 / (exp2(((log2(((exp2(((log2((_2109 * 6.810994625091553f))) * 1.2000000476837158f))) + 1.0f))) * 0.8333333134651184f)))) + 0.8799999952316284f);
                    }
                    _2129 = (_2061 - (_2071 * _2091));
                    _2130 = (_2061 - (_2071 * _2106));
                    _2131 = (_2061 - (_2071 * _2121));
                  } while (false);
                } while (false);
              } while (false);
            }
            float _2134 = mad(0.16386906802654266f, _2131, (mad(0.14067870378494263f, _2130, (_2129 * 0.6954522132873535f))));
            float _2141 = ((_2134 - _2044) * (cb0_011w)) + _2044;
            float _2142 = ((_2134 - _2047) * (cb0_011w)) + _2047;
            float _2143 = ((_2134 - _2050) * (cb0_011w)) + _2050;
            float _2147 = max((max(_2141, _2142)), _2143);
            float _2152 = ((max(_2147, 1.000000013351432e-10f)) - (max((min((min(_2141, _2142)), _2143)), 1.000000013351432e-10f))) / (max(_2147, 0.009999999776482582f));
            float _2165 = ((_2143 + _2142) + _2141) + ((sqrt(((((_2143 - _2142) * _2143) + ((_2142 - _2141) * _2142)) + ((_2141 - _2143) * _2141)))) * 1.75f);
            float _2166 = _2165 * 0.3333333432674408f;
            float _2167 = _2152 + -0.4000000059604645f;
            float _2168 = _2167 * 5.0f;
            float _2172 = max((1.0f - (abs((_2167 * 2.5f)))), 0.0f);
            float _2183 = (((float(((int(((bool)((_2168 > 0.0f))))) - (int(((bool)((_2168 < 0.0f)))))))) * (1.0f - (_2172 * _2172))) + 1.0f) * 0.02500000037252903f;
            _2192 = _2183;
            do {
              if ((!(_2166 <= 0.0533333346247673f))) {
                _2192 = 0.0f;
                if ((!(_2166 >= 0.1599999964237213f))) {
                  _2192 = (((0.23999999463558197f / _2165) + -0.5f) * _2183);
                }
              }
              float _2193 = _2192 + 1.0f;
              float _2194 = _2193 * _2141;
              float _2195 = _2193 * _2142;
              float _2196 = _2193 * _2143;
              _2228 = 0.0f;
              do {
                if (!(((bool)((_2194 == _2195))) && ((bool)((_2195 == _2196))))) {
                  float _2203 = ((_2194 * 2.0f) - _2195) - _2196;
                  float _2206 = ((_2142 - _2143) * 1.7320507764816284f) * _2193;
                  float _2208 = atan((_2206 / _2203));
                  bool _2211 = (_2203 < 0.0f);
                  bool _2212 = (_2203 == 0.0f);
                  bool _2213 = (_2206 >= 0.0f);
                  bool _2214 = (_2206 < 0.0f);
                  float _2223 = (((bool)(_2213 && _2212)) ? 90.0f : ((((bool)(_2214 && _2212)) ? -90.0f : (((((bool)(_2214 && _2211)) ? (_2208 + -3.1415927410125732f) : ((((bool)(_2213 && _2211)) ? (_2208 + 3.1415927410125732f) : _2208)))) * 57.2957763671875f))));
                  _2228 = _2223;
                  if (((_2223 < 0.0f))) {
                    _2228 = (_2223 + 360.0f);
                  }
                }
                float _2230 = min((max(_2228, 0.0f)), 360.0f);
                do {
                  if (((_2230 < -180.0f))) {
                    _2239 = (_2230 + 360.0f);
                  } else {
                    _2239 = _2230;
                    if (((_2230 > 180.0f))) {
                      _2239 = (_2230 + -360.0f);
                    }
                  }
                  _2278 = 0.0f;
                  do {
                    if ((((bool)((_2239 > -67.5f))) && ((bool)((_2239 < 67.5f))))) {
                      float _2245 = (_2239 + 67.5f) * 0.029629629105329514f;
                      int _2246 = int(2246);
                      float _2248 = _2245 - (float(_2246));
                      float _2249 = _2248 * _2248;
                      float _2250 = _2249 * _2248;
                      if (((_2246 == 3))) {
                        _2278 = (((0.1666666716337204f - (_2248 * 0.5f)) + (_2249 * 0.5f)) - (_2250 * 0.1666666716337204f));
                      } else {
                        if (((_2246 == 2))) {
                          _2278 = ((0.6666666865348816f - _2249) + (_2250 * 0.5f));
                        } else {
                          if (((_2246 == 1))) {
                            _2278 = (((_2250 * -0.5f) + 0.1666666716337204f) + ((_2249 + _2248) * 0.5f));
                          } else {
                            _2278 = ((((bool)((_2246 == 0))) ? (_2250 * 0.1666666716337204f) : 0.0f));
                          }
                        }
                      }
                    }
                    float _2287 = min((max(((((_2152 * 0.27000001072883606f) * (0.029999999329447746f - _2194)) * _2278) + _2194), 0.0f)), 65535.0f);
                    float _2288 = min((max(_2195, 0.0f)), 65535.0f);
                    float _2289 = min((max(_2196, 0.0f)), 65535.0f);
                    float _2302 = min((max((mad(-0.21492856740951538f, _2289, (mad(-0.2365107536315918f, _2288, (_2287 * 1.4514392614364624f))))), 0.0f)), 65504.0f);
                    float _2303 = min((max((mad(-0.09967592358589172f, _2289, (mad(1.17622971534729f, _2288, (_2287 * -0.07655377686023712f))))), 0.0f)), 65504.0f);
                    float _2304 = min((max((mad(0.9977163076400757f, _2289, (mad(-0.006032449658960104f, _2288, (_2287 * 0.008316148072481155f))))), 0.0f)), 65504.0f);
                    float _2305 = dot(float3(_2302, _2303, _2304), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
                    float _2316 = log2((max((((_2302 - _2305) * 0.9599999785423279f) + _2305), 1.000000013351432e-10f)));
                    float _2317 = _2316 * 0.3010300099849701f;
                    float _2318 = log2((cb0_007x));
                    float _2319 = _2318 * 0.3010300099849701f;
                    do {
                      if (!(!(_2317 <= _2319))) {
                        _2388 = ((log2((cb0_007y))) * 0.3010300099849701f);
                      } else {
                        float _2326 = log2((cb0_008x));
                        float _2327 = _2326 * 0.3010300099849701f;
                        if ((((bool)((_2317 > _2319))) && ((bool)((_2317 < _2327))))) {
                          float _2335 = ((_2316 - _2318) * 0.9030900001525879f) / ((_2326 - _2318) * 0.3010300099849701f);
                          int _2336 = int(2336);
                          float _2338 = _2335 - (float(_2336));
                          float _2340 = _8[_2336];
                          float _2343 = _8[(_2336 + 1)];
                          float _2348 = _2340 * 0.5f;
                          _2388 = (dot(float3((_2338 * _2338), _2338, 1.0f), float3((mad((_8[(_2336 + 2)]), 0.5f, (mad(_2343, -1.0f, _2348)))), (_2343 - _2340), (mad(_2343, 0.5f, _2348)))));
                        } else {
                          float _2356 = log2((cb0_007z));
                          if ((((bool)((_2317 >= _2327))) && ((bool)((_2317 < (_2356 * 0.3010300099849701f)))))) {
                            float _2365 = ((_2316 - _2326) * 0.9030900001525879f) / ((_2356 - _2326) * 0.3010300099849701f);
                            int _2366 = int(2366);
                            float _2368 = _2365 - (float(_2366));
                            float _2370 = _9[_2366];
                            float _2373 = _9[(_2366 + 1)];
                            float _2378 = _2370 * 0.5f;
                            _2388 = (dot(float3((_2368 * _2368), _2368, 1.0f), float3((mad((_9[(_2366 + 2)]), 0.5f, (mad(_2373, -1.0f, _2378)))), (_2373 - _2370), (mad(_2373, 0.5f, _2378)))));
                          } else {
                            _2388 = ((log2((cb0_007w))) * 0.3010300099849701f);
                          }
                        }
                      }
                      float _2392 = log2((max((((_2303 - _2305) * 0.9599999785423279f) + _2305), 1.000000013351432e-10f)));
                      float _2393 = _2392 * 0.3010300099849701f;
                      do {
                        if (!(!(_2393 <= _2319))) {
                          _2462 = ((log2((cb0_007y))) * 0.3010300099849701f);
                        } else {
                          float _2400 = log2((cb0_008x));
                          float _2401 = _2400 * 0.3010300099849701f;
                          if ((((bool)((_2393 > _2319))) && ((bool)((_2393 < _2401))))) {
                            float _2409 = ((_2392 - _2318) * 0.9030900001525879f) / ((_2400 - _2318) * 0.3010300099849701f);
                            int _2410 = int(2410);
                            float _2412 = _2409 - (float(_2410));
                            float _2414 = _8[_2410];
                            float _2417 = _8[(_2410 + 1)];
                            float _2422 = _2414 * 0.5f;
                            _2462 = (dot(float3((_2412 * _2412), _2412, 1.0f), float3((mad((_8[(_2410 + 2)]), 0.5f, (mad(_2417, -1.0f, _2422)))), (_2417 - _2414), (mad(_2417, 0.5f, _2422)))));
                          } else {
                            float _2430 = log2((cb0_007z));
                            if ((((bool)((_2393 >= _2401))) && ((bool)((_2393 < (_2430 * 0.3010300099849701f)))))) {
                              float _2439 = ((_2392 - _2400) * 0.9030900001525879f) / ((_2430 - _2400) * 0.3010300099849701f);
                              int _2440 = int(2440);
                              float _2442 = _2439 - (float(_2440));
                              float _2444 = _9[_2440];
                              float _2447 = _9[(_2440 + 1)];
                              float _2452 = _2444 * 0.5f;
                              _2462 = (dot(float3((_2442 * _2442), _2442, 1.0f), float3((mad((_9[(_2440 + 2)]), 0.5f, (mad(_2447, -1.0f, _2452)))), (_2447 - _2444), (mad(_2447, 0.5f, _2452)))));
                            } else {
                              _2462 = ((log2((cb0_007w))) * 0.3010300099849701f);
                            }
                          }
                        }
                        float _2466 = log2((max((((_2304 - _2305) * 0.9599999785423279f) + _2305), 1.000000013351432e-10f)));
                        float _2467 = _2466 * 0.3010300099849701f;
                        do {
                          if (!(!(_2467 <= _2319))) {
                            _2536 = ((log2((cb0_007y))) * 0.3010300099849701f);
                          } else {
                            float _2474 = log2((cb0_008x));
                            float _2475 = _2474 * 0.3010300099849701f;
                            if ((((bool)((_2467 > _2319))) && ((bool)((_2467 < _2475))))) {
                              float _2483 = ((_2466 - _2318) * 0.9030900001525879f) / ((_2474 - _2318) * 0.3010300099849701f);
                              int _2484 = int(2484);
                              float _2486 = _2483 - (float(_2484));
                              float _2488 = _8[_2484];
                              float _2491 = _8[(_2484 + 1)];
                              float _2496 = _2488 * 0.5f;
                              _2536 = (dot(float3((_2486 * _2486), _2486, 1.0f), float3((mad((_8[(_2484 + 2)]), 0.5f, (mad(_2491, -1.0f, _2496)))), (_2491 - _2488), (mad(_2491, 0.5f, _2496)))));
                            } else {
                              float _2504 = log2((cb0_007z));
                              if ((((bool)((_2467 >= _2475))) && ((bool)((_2467 < (_2504 * 0.3010300099849701f)))))) {
                                float _2513 = ((_2466 - _2474) * 0.9030900001525879f) / ((_2504 - _2474) * 0.3010300099849701f);
                                int _2514 = int(2514);
                                float _2516 = _2513 - (float(_2514));
                                float _2518 = _9[_2514];
                                float _2521 = _9[(_2514 + 1)];
                                float _2526 = _2518 * 0.5f;
                                _2536 = (dot(float3((_2516 * _2516), _2516, 1.0f), float3((mad((_9[(_2514 + 2)]), 0.5f, (mad(_2521, -1.0f, _2526)))), (_2521 - _2518), (mad(_2521, 0.5f, _2526)))));
                              } else {
                                _2536 = ((log2((cb0_007w))) * 0.3010300099849701f);
                              }
                            }
                          }
                          float _2540 = (cb0_007w) - (cb0_007y);
                          float _2541 = ((exp2((_2388 * 3.321928024291992f))) - (cb0_007y)) / _2540;
                          float _2543 = ((exp2((_2462 * 3.321928024291992f))) - (cb0_007y)) / _2540;
                          float _2545 = ((exp2((_2536 * 3.321928024291992f))) - (cb0_007y)) / _2540;
                          float _2548 = mad(0.15618768334388733f, _2545, (mad(0.13400420546531677f, _2543, (_2541 * 0.6624541878700256f))));
                          float _2551 = mad(0.053689517080783844f, _2545, (mad(0.6740817427635193f, _2543, (_2541 * 0.2722287178039551f))));
                          float _2554 = mad(1.0103391408920288f, _2545, (mad(0.00406073359772563f, _2543, (_2541 * -0.005574649665504694f))));
                          float _2567 = min((max((mad(-0.23642469942569733f, _2554, (mad(-0.32480329275131226f, _2551, (_2548 * 1.6410233974456787f))))), 0.0f)), 1.0f);
                          float _2568 = min((max((mad(0.016756348311901093f, _2554, (mad(1.6153316497802734f, _2551, (_2548 * -0.663662850856781f))))), 0.0f)), 1.0f);
                          float _2569 = min((max((mad(0.9883948564529419f, _2554, (mad(-0.008284442126750946f, _2551, (_2548 * 0.011721894145011902f))))), 0.0f)), 1.0f);
                          float _2572 = mad(0.15618768334388733f, _2569, (mad(0.13400420546531677f, _2568, (_2567 * 0.6624541878700256f))));
                          float _2575 = mad(0.053689517080783844f, _2569, (mad(0.6740817427635193f, _2568, (_2567 * 0.2722287178039551f))));
                          float _2578 = mad(1.0103391408920288f, _2569, (mad(0.00406073359772563f, _2568, (_2567 * -0.005574649665504694f))));
                          float _2600 = min((max(((min((max((mad(-0.23642469942569733f, _2578, (mad(-0.32480329275131226f, _2575, (_2572 * 1.6410233974456787f))))), 0.0f)), 65535.0f)) * (cb0_007w)), 0.0f)), 65535.0f);
                          float _2601 = min((max(((min((max((mad(0.016756348311901093f, _2578, (mad(1.6153316497802734f, _2575, (_2572 * -0.663662850856781f))))), 0.0f)), 65535.0f)) * (cb0_007w)), 0.0f)), 65535.0f);
                          float _2602 = min((max(((min((max((mad(0.9883948564529419f, _2578, (mad(-0.008284442126750946f, _2575, (_2572 * 0.011721894145011902f))))), 0.0f)), 65535.0f)) * (cb0_007w)), 0.0f)), 65535.0f);
                          _2614 = _2600;
                          _2615 = _2601;
                          _2616 = _2602;
                          do {
                            if (!((((uint)(cb0_039w)) == 6))) {
                              _2614 = (mad(_39, _2602, (mad(_38, _2601, (_2600 * _37)))));
                              _2615 = (mad(_42, _2602, (mad(_41, _2601, (_2600 * _40)))));
                              _2616 = (mad(_45, _2602, (mad(_44, _2601, (_2600 * _43)))));
                            }
                            float _2626 = exp2(((log2((_2614 * 9.999999747378752e-05f))) * 0.1593017578125f));
                            float _2627 = exp2(((log2((_2615 * 9.999999747378752e-05f))) * 0.1593017578125f));
                            float _2628 = exp2(((log2((_2616 * 9.999999747378752e-05f))) * 0.1593017578125f));
                            _2769 = (exp2(((log2(((1.0f / ((_2626 * 18.6875f) + 1.0f)) * ((_2626 * 18.8515625f) + 0.8359375f)))) * 78.84375f)));
                            _2770 = (exp2(((log2(((1.0f / ((_2627 * 18.6875f) + 1.0f)) * ((_2627 * 18.8515625f) + 0.8359375f)))) * 78.84375f)));
                            _2771 = (exp2(((log2(((1.0f / ((_2628 * 18.6875f) + 1.0f)) * ((_2628 * 18.8515625f) + 0.8359375f)))) * 78.84375f)));
                          } while (false);
                        } while (false);
                      } while (false);
                    } while (false);
                  } while (false);
                } while (false);
              } while (false);
            } while (false);
          } while (false);
        } else {
          if (((((uint)(cb0_039w)) == 7))) {
            float _2661 = mad(0.04736635088920593f, _1221, (mad(0.3395121395587921f, _1218, (_1215 * 0.613191545009613f))));
            float _2664 = mad(0.01345000695437193f, _1221, (mad(0.9163357615470886f, _1218, (_1215 * 0.07020691782236099f))));
            float _2667 = mad(0.8696067929267883f, _1221, (mad(0.1095672994852066f, _1218, (_1215 * 0.020618872717022896f))));
            float _2686 = exp2(((log2(((mad(_39, _2667, (mad(_38, _2664, (_2661 * _37))))) * 9.999999747378752e-05f))) * 0.1593017578125f));
            float _2687 = exp2(((log2(((mad(_42, _2667, (mad(_41, _2664, (_2661 * _40))))) * 9.999999747378752e-05f))) * 0.1593017578125f));
            float _2688 = exp2(((log2(((mad(_45, _2667, (mad(_44, _2664, (_2661 * _43))))) * 9.999999747378752e-05f))) * 0.1593017578125f));
            _2769 = (exp2(((log2(((1.0f / ((_2686 * 18.6875f) + 1.0f)) * ((_2686 * 18.8515625f) + 0.8359375f)))) * 78.84375f)));
            _2770 = (exp2(((log2(((1.0f / ((_2687 * 18.6875f) + 1.0f)) * ((_2687 * 18.8515625f) + 0.8359375f)))) * 78.84375f)));
            _2771 = (exp2(((log2(((1.0f / ((_2688 * 18.6875f) + 1.0f)) * ((_2688 * 18.8515625f) + 0.8359375f)))) * 78.84375f)));
          } else {
            _2769 = _1215;
            _2770 = _1218;
            _2771 = _1221;
            if (!((((uint)(cb0_039w)) == 8))) {
              if (((((uint)(cb0_039w)) == 9))) {
                float _2723 = mad(0.04736635088920593f, _1242, (mad(0.3395121395587921f, _1241, (_1240 * 0.613191545009613f))));
                float _2726 = mad(0.01345000695437193f, _1242, (mad(0.9163357615470886f, _1241, (_1240 * 0.07020691782236099f))));
                float _2729 = mad(0.8696067929267883f, _1242, (mad(0.1095672994852066f, _1241, (_1240 * 0.020618872717022896f))));
                _2769 = (mad(_39, _2729, (mad(_38, _2726, (_2723 * _37)))));
                _2770 = (mad(_42, _2729, (mad(_41, _2726, (_2723 * _40)))));
                _2771 = (mad(_45, _2729, (mad(_44, _2726, (_2723 * _43)))));
              } else {
                float _2742 = mad(0.04736635088920593f, _1256, (mad(0.3395121395587921f, _1255, (_1254 * 0.613191545009613f))));
                float _2745 = mad(0.01345000695437193f, _1256, (mad(0.9163357615470886f, _1255, (_1254 * 0.07020691782236099f))));
                float _2748 = mad(0.8696067929267883f, _1256, (mad(0.1095672994852066f, _1255, (_1254 * 0.020618872717022896f))));
                _2769 = (exp2(((log2((mad(_39, _2748, (mad(_38, _2745, (_2742 * _37))))))) * (cb0_039z))));
                _2770 = (exp2(((log2((mad(_42, _2748, (mad(_41, _2745, (_2742 * _40))))))) * (cb0_039z))));
                _2771 = (exp2(((log2((mad(_45, _2748, (mad(_44, _2745, (_2742 * _43))))))) * (cb0_039z))));
              }
            }
          }
        }
      }
    }
  }
  SV_Target.x = (_2769 * 0.9523810148239136f);
  SV_Target.y = (_2770 * 0.9523810148239136f);
  SV_Target.z = (_2771 * 0.9523810148239136f);
  SV_Target.w = 0.0f;
  return SV_Target;
}
