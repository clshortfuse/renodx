#include "./common.hlsl"

Texture2D<float4> t0 : register(t0);

Texture2D<float4> t1 : register(t1);

cbuffer cb0 : register(b0) {
  float cb0_005x : packoffset(c005.x);
  float cb0_005y : packoffset(c005.y);
  float cb0_005z : packoffset(c005.z);
  float cb0_007x : packoffset(c007.x);
  float cb0_007y : packoffset(c007.y);
  float cb0_007z : packoffset(c007.z);
  float cb0_007w : packoffset(c007.w);
  float cb0_008x : packoffset(c008.x);
  float cb0_009x : packoffset(c009.x);
  float cb0_009y : packoffset(c009.y);
  float cb0_009z : packoffset(c009.z);
  float cb0_009w : packoffset(c009.w);
  float cb0_010x : packoffset(c010.x);
  float cb0_010y : packoffset(c010.y);
  float cb0_010z : packoffset(c010.z);
  float cb0_010w : packoffset(c010.w);
  float cb0_011x : packoffset(c011.x);
  float cb0_011y : packoffset(c011.y);
  float cb0_011z : packoffset(c011.z);
  float cb0_011w : packoffset(c011.w);
  float cb0_012x : packoffset(c012.x);
  float cb0_012y : packoffset(c012.y);
  float cb0_012z : packoffset(c012.z);
  float cb0_012w : packoffset(c012.w);
  float cb0_013x : packoffset(c013.x);
  float cb0_013y : packoffset(c013.y);
  float cb0_013z : packoffset(c013.z);
  float cb0_014x : packoffset(c014.x);
  float cb0_014y : packoffset(c014.y);
  float cb0_014z : packoffset(c014.z);
  float cb0_014w : packoffset(c014.w);
  float cb0_015x : packoffset(c015.x);
  float cb0_015y : packoffset(c015.y);
  float cb0_015z : packoffset(c015.z);
  float cb0_015w : packoffset(c015.w);
  float cb0_016x : packoffset(c016.x);
  float cb0_016y : packoffset(c016.y);
  float cb0_016z : packoffset(c016.z);
  float cb0_016w : packoffset(c016.w);
  float cb0_017x : packoffset(c017.x);
  float cb0_017y : packoffset(c017.y);
  float cb0_017z : packoffset(c017.z);
  float cb0_017w : packoffset(c017.w);
  float cb0_018x : packoffset(c018.x);
  float cb0_018y : packoffset(c018.y);
  float cb0_018z : packoffset(c018.z);
  float cb0_018w : packoffset(c018.w);
  float cb0_019x : packoffset(c019.x);
  float cb0_019y : packoffset(c019.y);
  float cb0_019z : packoffset(c019.z);
  float cb0_019w : packoffset(c019.w);
  float cb0_020x : packoffset(c020.x);
  float cb0_020y : packoffset(c020.y);
  float cb0_020z : packoffset(c020.z);
  float cb0_020w : packoffset(c020.w);
  float cb0_021x : packoffset(c021.x);
  float cb0_021y : packoffset(c021.y);
  float cb0_021z : packoffset(c021.z);
  float cb0_021w : packoffset(c021.w);
  float cb0_022x : packoffset(c022.x);
  float cb0_022y : packoffset(c022.y);
  float cb0_022z : packoffset(c022.z);
  float cb0_022w : packoffset(c022.w);
  float cb0_023x : packoffset(c023.x);
  float cb0_023y : packoffset(c023.y);
  float cb0_023z : packoffset(c023.z);
  float cb0_023w : packoffset(c023.w);
  float cb0_024x : packoffset(c024.x);
  float cb0_024y : packoffset(c024.y);
  float cb0_024z : packoffset(c024.z);
  float cb0_024w : packoffset(c024.w);
  float cb0_025x : packoffset(c025.x);
  float cb0_025y : packoffset(c025.y);
  float cb0_025z : packoffset(c025.z);
  float cb0_025w : packoffset(c025.w);
  float cb0_026x : packoffset(c026.x);
  float cb0_026y : packoffset(c026.y);
  float cb0_026z : packoffset(c026.z);
  float cb0_026w : packoffset(c026.w);
  float cb0_027x : packoffset(c027.x);
  float cb0_027y : packoffset(c027.y);
  float cb0_027z : packoffset(c027.z);
  float cb0_027w : packoffset(c027.w);
  float cb0_028x : packoffset(c028.x);
  float cb0_028y : packoffset(c028.y);
  float cb0_028z : packoffset(c028.z);
  float cb0_028w : packoffset(c028.w);
  float cb0_029x : packoffset(c029.x);
  float cb0_029y : packoffset(c029.y);
  float cb0_029z : packoffset(c029.z);
  float cb0_029w : packoffset(c029.w);
  float cb0_030x : packoffset(c030.x);
  float cb0_030y : packoffset(c030.y);
  float cb0_030z : packoffset(c030.z);
  float cb0_030w : packoffset(c030.w);
  float cb0_031x : packoffset(c031.x);
  float cb0_031y : packoffset(c031.y);
  float cb0_031z : packoffset(c031.z);
  float cb0_031w : packoffset(c031.w);
  float cb0_032x : packoffset(c032.x);
  float cb0_032y : packoffset(c032.y);
  float cb0_032z : packoffset(c032.z);
  float cb0_032w : packoffset(c032.w);
  float cb0_033x : packoffset(c033.x);
  float cb0_033y : packoffset(c033.y);
  float cb0_033z : packoffset(c033.z);
  float cb0_033w : packoffset(c033.w);
  float cb0_034z : packoffset(c034.z);
  float cb0_034w : packoffset(c034.w);
  float cb0_035x : packoffset(c035.x);
  float cb0_035y : packoffset(c035.y);
  float cb0_035z : packoffset(c035.z);
  float cb0_035w : packoffset(c035.w);
  float cb0_036x : packoffset(c036.x);
  float cb0_036y : packoffset(c036.y);
  float cb0_036z : packoffset(c036.z);
  float cb0_036w : packoffset(c036.w);
  float cb0_037x : packoffset(c037.x);
  float cb0_038x : packoffset(c038.x);
  float cb0_038y : packoffset(c038.y);
  float cb0_038z : packoffset(c038.z);
  float cb0_039y : packoffset(c039.y);
  float cb0_039z : packoffset(c039.z);
  uint cb0_039w : packoffset(c039.w);
  uint cb0_040x : packoffset(c040.x);
};

SamplerState s0 : register(s0);

SamplerState s1 : register(s1);

float4 main(
  noperspective float2 TEXCOORD : TEXCOORD,
  noperspective float4 SV_Position : SV_Position,
  nointerpolation uint SV_RenderTargetArrayIndex : SV_RenderTargetArrayIndex
) : SV_Target {
  float4 SV_Target;
  float _10[6];
  float _11[6];
  float _12[6];
  float _13[6];
  float _14 = (TEXCOORD.x) + -0.015625f;
  float _15 = (TEXCOORD.y) + -0.015625f;
  float _18 = float((uint)(SV_RenderTargetArrayIndex));
  float _39 = 1.379158854484558f;
  float _40 = -0.3088507056236267f;
  float _41 = -0.07034677267074585f;
  float _42 = -0.06933528929948807f;
  float _43 = 1.0822921991348267f;
  float _44 = -0.012962047010660172f;
  float _45 = -0.002159259282052517f;
  float _46 = -0.045465391129255295f;
  float _47 = 1.0477596521377563f;
  float _105;
  float _106;
  float _107;
  float _598;
  float _634;
  float _645;
  float _709;
  float _888;
  float _899;
  float _910;
  float _1075;
  float _1086;
  float _1237;
  float _1252;
  float _1267;
  float _1275;
  float _1276;
  float _1277;
  float _1338;
  float _1374;
  float _1385;
  float _1424;
  float _1534;
  float _1608;
  float _1682;
  float _1760;
  float _1761;
  float _1762;
  float _1895;
  float _1910;
  float _1925;
  float _1933;
  float _1934;
  float _1935;
  float _1996;
  float _2032;
  float _2043;
  float _2082;
  float _2192;
  float _2266;
  float _2340;
  float _2418;
  float _2419;
  float _2420;
  float _2573;
  float _2574;
  float _2575;
  if (!((((uint)(cb0_040x)) == 1))) {
    _39 = 1.02579927444458f;
    _40 = -0.020052503794431686f;
    _41 = -0.0057713985443115234f;
    _42 = -0.0022350111976265907f;
    _43 = 1.0045825242996216f;
    _44 = -0.002352306619286537f;
    _45 = -0.005014004185795784f;
    _46 = -0.025293385609984398f;
    _47 = 1.0304402112960815f;
    if (!((((uint)(cb0_040x)) == 2))) {
      _39 = 0.6954522132873535f;
      _40 = 0.14067870378494263f;
      _41 = 0.16386906802654266f;
      _42 = 0.044794563204050064f;
      _43 = 0.8596711158752441f;
      _44 = 0.0955343171954155f;
      _45 = -0.005525882821530104f;
      _46 = 0.004025210160762072f;
      _47 = 1.0015007257461548f;
      if (!((((uint)(cb0_040x)) == 3))) {
        bool _28 = (((uint)(cb0_040x)) == 4);
        _39 = ((_28 ? 1.0f : 1.7050515413284302f));
        _40 = ((_28 ? 0.0f : -0.6217905879020691f));
        _41 = ((_28 ? 0.0f : -0.0832584798336029f));
        _42 = ((_28 ? 0.0f : -0.13025718927383423f));
        _43 = ((_28 ? 1.0f : 1.1408027410507202f));
        _44 = ((_28 ? 0.0f : -0.010548528283834457f));
        _45 = ((_28 ? 0.0f : -0.024003278464078903f));
        _46 = ((_28 ? 0.0f : -0.1289687603712082f));
        _47 = ((_28 ? 1.0f : 1.152971863746643f));
      }
    }
  }
  if (((((uint)(cb0_039w)) > 2))) {
    float _58 = exp2(((log2((_14 * 1.0322580337524414f))) * 0.012683313339948654f));
    float _59 = exp2(((log2((_15 * 1.0322580337524414f))) * 0.012683313339948654f));
    float _60 = exp2(((log2((_18 * 0.032258063554763794f))) * 0.012683313339948654f));
    _105 = ((exp2(((log2(((max(0.0f, (_58 + -0.8359375f))) / (18.8515625f - (_58 * 18.6875f))))) * 6.277394771575928f))) * 100.0f);
    _106 = ((exp2(((log2(((max(0.0f, (_59 + -0.8359375f))) / (18.8515625f - (_59 * 18.6875f))))) * 6.277394771575928f))) * 100.0f);
    _107 = ((exp2(((log2(((max(0.0f, (_60 + -0.8359375f))) / (18.8515625f - (_60 * 18.6875f))))) * 6.277394771575928f))) * 100.0f);
  } else {
    _105 = (((exp2(((_14 * 14.45161247253418f) + -6.07624626159668f))) * 0.18000000715255737f) + -0.002667719265446067f);
    _106 = (((exp2(((_15 * 14.45161247253418f) + -6.07624626159668f))) * 0.18000000715255737f) + -0.002667719265446067f);
    _107 = (((exp2(((_18 * 0.4516128897666931f) + -6.07624626159668f))) * 0.18000000715255737f) + -0.002667719265446067f);
  }
  float _110 = mad(0.04736635088920593f, _107, (mad(0.3395121395587921f, _106, (_105 * 0.613191545009613f))));
  float _113 = mad(0.01345000695437193f, _107, (mad(0.9163357615470886f, _106, (_105 * 0.07020691782236099f))));
  float _116 = mad(0.8696067929267883f, _107, (mad(0.1095672994852066f, _106, (_105 * 0.020618872717022896f))));
  float _117 = dot(float3(_110, _113, _116), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
  float _121 = (_110 / _117) + -1.0f;
  float _122 = (_113 / _117) + -1.0f;
  float _123 = (_116 / _117) + -1.0f;
  float _135 = (1.0f - (exp2((((_117 * _117) * -4.0f) * (cb0_035z))))) * (1.0f - (exp2(((dot(float3(_121, _122, _123), float3(_121, _122, _123))) * -4.0f))));
  float _151 = (((mad(-0.06368283927440643f, _116, (mad(-0.32929131388664246f, _113, (_110 * 1.370412826538086f))))) - _110) * _135) + _110;
  float _152 = (((mad(-0.010861567221581936f, _116, (mad(1.0970908403396606f, _113, (_110 * -0.08343426138162613f))))) - _113) * _135) + _113;
  float _153 = (((mad(1.203694462776184f, _116, (mad(-0.09862564504146576f, _113, (_110 * -0.02579325996339321f))))) - _116) * _135) + _116;
  float _154 = dot(float3(_151, _152, _153), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
  float _168 = (cb0_018w) + (cb0_023w);
  float _182 = (cb0_017w) * (cb0_022w);
  float _196 = (cb0_016w) * (cb0_021w);
  float _210 = (cb0_015w) * (cb0_020w);
  float _224 = (cb0_014w) * (cb0_019w);
  float _228 = _151 - _154;
  float _229 = _152 - _154;
  float _230 = _153 - _154;
  float _288 = saturate((_154 / (cb0_034z)));
  float _292 = (_288 * _288) * (3.0f - (_288 * 2.0f));
  float _293 = 1.0f - _292;
  float _302 = (cb0_018w) + (cb0_033w);
  float _311 = (cb0_017w) * (cb0_032w);
  float _320 = (cb0_016w) * (cb0_031w);
  float _329 = (cb0_015w) * (cb0_030w);
  float _338 = (cb0_014w) * (cb0_029w);
  float _401 = saturate(((_154 - (cb0_034w)) / ((cb0_035x) - (cb0_034w))));
  float _405 = (_401 * _401) * (3.0f - (_401 * 2.0f));
  float _414 = (cb0_018w) + (cb0_028w);
  float _423 = (cb0_017w) * (cb0_027w);
  float _432 = (cb0_016w) * (cb0_026w);
  float _441 = (cb0_015w) * (cb0_025w);
  float _450 = (cb0_014w) * (cb0_024w);
  float _508 = _292 - _405;
  float _519 = ((_405 * ((((cb0_018x) + (cb0_033x)) + _302) + ((((cb0_017x) * (cb0_032x)) * _311) * (exp2(((log2(((exp2(((((cb0_015x) * (cb0_030x)) * _329) * (log2(((max(0.0f, (((((cb0_014x) * (cb0_029x)) * _338) * _228) + _154))) * 5.55555534362793f)))))) * 0.18000000715255737f))) * (1.0f / (((cb0_016x) * (cb0_031x)) * _320)))))))) + (_293 * ((((cb0_018x) + (cb0_023x)) + _168) + ((((cb0_017x) * (cb0_022x)) * _182) * (exp2(((log2(((exp2(((((cb0_015x) * (cb0_020x)) * _210) * (log2(((max(0.0f, (((((cb0_014x) * (cb0_019x)) * _224) * _228) + _154))) * 5.55555534362793f)))))) * 0.18000000715255737f))) * (1.0f / (((cb0_016x) * (cb0_021x)) * _196))))))))) + (((((cb0_018x) + (cb0_028x)) + _414) + ((((cb0_017x) * (cb0_027x)) * _423) * (exp2(((log2(((exp2(((((cb0_015x) * (cb0_025x)) * _441) * (log2(((max(0.0f, (((((cb0_014x) * (cb0_024x)) * _450) * _228) + _154))) * 5.55555534362793f)))))) * 0.18000000715255737f))) * (1.0f / (((cb0_016x) * (cb0_026x)) * _432))))))) * _508);
  float _521 = ((_405 * ((((cb0_018y) + (cb0_033y)) + _302) + ((((cb0_017y) * (cb0_032y)) * _311) * (exp2(((log2(((exp2(((((cb0_015y) * (cb0_030y)) * _329) * (log2(((max(0.0f, (((((cb0_014y) * (cb0_029y)) * _338) * _229) + _154))) * 5.55555534362793f)))))) * 0.18000000715255737f))) * (1.0f / (((cb0_016y) * (cb0_031y)) * _320)))))))) + (_293 * ((((cb0_018y) + (cb0_023y)) + _168) + ((((cb0_017y) * (cb0_022y)) * _182) * (exp2(((log2(((exp2(((((cb0_015y) * (cb0_020y)) * _210) * (log2(((max(0.0f, (((((cb0_014y) * (cb0_019y)) * _224) * _229) + _154))) * 5.55555534362793f)))))) * 0.18000000715255737f))) * (1.0f / (((cb0_016y) * (cb0_021y)) * _196))))))))) + (((((cb0_018y) + (cb0_028y)) + _414) + ((((cb0_017y) * (cb0_027y)) * _423) * (exp2(((log2(((exp2(((((cb0_015y) * (cb0_025y)) * _441) * (log2(((max(0.0f, (((((cb0_014y) * (cb0_024y)) * _450) * _229) + _154))) * 5.55555534362793f)))))) * 0.18000000715255737f))) * (1.0f / (((cb0_016y) * (cb0_026y)) * _432))))))) * _508);
  float _523 = ((_405 * ((((cb0_018z) + (cb0_033z)) + _302) + ((((cb0_017z) * (cb0_032z)) * _311) * (exp2(((log2(((exp2(((((cb0_015z) * (cb0_030z)) * _329) * (log2(((max(0.0f, (((((cb0_014z) * (cb0_029z)) * _338) * _230) + _154))) * 5.55555534362793f)))))) * 0.18000000715255737f))) * (1.0f / (((cb0_016z) * (cb0_031z)) * _320)))))))) + (_293 * ((((cb0_018z) + (cb0_023z)) + _168) + ((((cb0_017z) * (cb0_022z)) * _182) * (exp2(((log2(((exp2(((((cb0_015z) * (cb0_020z)) * _210) * (log2(((max(0.0f, (((((cb0_014z) * (cb0_019z)) * _224) * _230) + _154))) * 5.55555534362793f)))))) * 0.18000000715255737f))) * (1.0f / (((cb0_016z) * (cb0_021z)) * _196))))))))) + (((((cb0_018z) + (cb0_028z)) + _414) + ((((cb0_017z) * (cb0_027z)) * _423) * (exp2(((log2(((exp2(((((cb0_015z) * (cb0_025z)) * _441) * (log2(((max(0.0f, (((((cb0_014z) * (cb0_024z)) * _450) * _230) + _154))) * 5.55555534362793f)))))) * 0.18000000715255737f))) * (1.0f / (((cb0_016z) * (cb0_026z)) * _432))))))) * _508);

  float3 untonemapped_ap1 = float3(_519, _521, _523);

  float _538 = (((mad(0.061360642313957214f, _523, (mad(-4.540197551250458e-09f, _521, (_519 * 0.9386394023895264f))))) - _519) * (cb0_035y)) + _519;
  float _539 = (((mad(0.169205904006958f, _523, (mad(0.8307942152023315f, _521, (_519 * 6.775371730327606e-08f))))) - _521) * (cb0_035y)) + _521;
  float _540 = ((mad(-2.3283064365386963e-10f, _521, (_519 * -9.313225746154785e-10f))) * (cb0_035y)) + _523;
  float _543 = mad(0.16386905312538147f, _540, (mad(0.14067868888378143f, _539, (_538 * 0.6954522132873535f))));
  float _546 = mad(0.0955343246459961f, _540, (mad(0.8596711158752441f, _539, (_538 * 0.044794581830501556f))));
  float _549 = mad(1.0015007257461548f, _540, (mad(0.004025210160762072f, _539, (_538 * -0.005525882821530104f))));
  float _553 = max((max(_543, _546)), _549);
  float _558 = ((max(_553, 1.000000013351432e-10f)) - (max((min((min(_543, _546)), _549)), 1.000000013351432e-10f))) / (max(_553, 0.009999999776482582f));
  float _571 = ((_546 + _543) + _549) + ((sqrt(((((_549 - _546) * _549) + ((_546 - _543) * _546)) + ((_543 - _549) * _543)))) * 1.75f);
  float _572 = _571 * 0.3333333432674408f;
  float _573 = _558 + -0.4000000059604645f;
  float _574 = _573 * 5.0f;
  float _578 = max((1.0f - (abs((_573 * 2.5f)))), 0.0f);
  float _589 = (((float(((int(((bool)((_574 > 0.0f))))) - (int(((bool)((_574 < 0.0f)))))))) * (1.0f - (_578 * _578))) + 1.0f) * 0.02500000037252903f;
  _598 = _589;
  if ((!(_572 <= 0.0533333346247673f))) {
    _598 = 0.0f;
    if ((!(_572 >= 0.1599999964237213f))) {
      _598 = (((0.23999999463558197f / _571) + -0.5f) * _589);
    }
  }
  float _599 = _598 + 1.0f;
  float _600 = _599 * _543;
  float _601 = _599 * _546;
  float _602 = _599 * _549;
  _634 = 0.0f;
  if (!(((bool)((_600 == _601))) && ((bool)((_601 == _602))))) {
    float _609 = ((_600 * 2.0f) - _601) - _602;
    float _612 = ((_546 - _549) * 1.7320507764816284f) * _599;
    float _614 = atan((_612 / _609));
    bool _617 = (_609 < 0.0f);
    bool _618 = (_609 == 0.0f);
    bool _619 = (_612 >= 0.0f);
    bool _620 = (_612 < 0.0f);
    float _629 = (((bool)(_619 && _618)) ? 90.0f : ((((bool)(_620 && _618)) ? -90.0f : (((((bool)(_620 && _617)) ? (_614 + -3.1415927410125732f) : ((((bool)(_619 && _617)) ? (_614 + 3.1415927410125732f) : _614)))) * 57.2957763671875f))));
    _634 = _629;
    if (((_629 < 0.0f))) {
      _634 = (_629 + 360.0f);
    }
  }
  float _636 = min((max(_634, 0.0f)), 360.0f);
  if (((_636 < -180.0f))) {
    _645 = (_636 + 360.0f);
  } else {
    _645 = _636;
    if (((_636 > 180.0f))) {
      _645 = (_636 + -360.0f);
    }
  }
  float _649 = saturate((1.0f - (abs((_645 * 0.014814814552664757f)))));
  float _653 = (_649 * _649) * (3.0f - (_649 * 2.0f));
  float _659 = ((_653 * _653) * ((_558 * 0.18000000715255737f) * (0.029999999329447746f - _600))) + _600;
  float _669 = max(0.0f, (mad(-0.21492856740951538f, _602, (mad(-0.2365107536315918f, _601, (_659 * 1.4514392614364624f))))));
  float _670 = max(0.0f, (mad(-0.09967592358589172f, _602, (mad(1.17622971534729f, _601, (_659 * -0.07655377686023712f))))));
  float _671 = max(0.0f, (mad(0.9977163076400757f, _602, (mad(-0.006032449658960104f, _601, (_659 * 0.008316148072481155f))))));
  float _672 = dot(float3(_669, _670, _671), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
  float _686 = ((cb0_036w) + 1.0f) - (cb0_036y);
  float _689 = (cb0_037x) + 1.0f;
  float _691 = _689 - (cb0_036z);
  if ((((cb0_036y) > 0.800000011920929f))) {
    _709 = (((0.8199999928474426f - (cb0_036y)) / (cb0_036x)) + -0.7447274923324585f);
  } else {
    float _700 = ((cb0_036w) + 0.18000000715255737f) / _686;
    _709 = (-0.7447274923324585f - (((log2((_700 / (2.0f - _700)))) * 0.3465735912322998f) * (_686 / (cb0_036x))));
  }
  float _712 = ((1.0f - (cb0_036y)) / (cb0_036x)) - _709;
  float _714 = ((cb0_036z) / (cb0_036x)) - _712;
  float _718 = (log2((((_669 - _672) * 0.9599999785423279f) + _672))) * 0.3010300099849701f;
  float _719 = (log2((((_670 - _672) * 0.9599999785423279f) + _672))) * 0.3010300099849701f;
  float _720 = (log2((((_671 - _672) * 0.9599999785423279f) + _672))) * 0.3010300099849701f;
  float _724 = (cb0_036x) * (_718 + _712);
  float _725 = (cb0_036x) * (_719 + _712);
  float _726 = (cb0_036x) * (_720 + _712);
  float _727 = _686 * 2.0f;
  float _729 = ((cb0_036x) * -2.0f) / _686;
  float _730 = _718 - _709;
  float _731 = _719 - _709;
  float _732 = _720 - _709;
  float _751 = _691 * 2.0f;
  float _753 = ((cb0_036x) * 2.0f) / _691;
  float _778 = (((bool)((_718 < _709))) ? ((_727 / ((exp2(((_730 * 1.4426950216293335f) * _729))) + 1.0f)) - (cb0_036w)) : _724);
  float _779 = (((bool)((_719 < _709))) ? ((_727 / ((exp2(((_731 * 1.4426950216293335f) * _729))) + 1.0f)) - (cb0_036w)) : _725);
  float _780 = (((bool)((_720 < _709))) ? ((_727 / ((exp2(((_732 * 1.4426950216293335f) * _729))) + 1.0f)) - (cb0_036w)) : _726);
  float _787 = _714 - _709;
  float _791 = saturate((_730 / _787));
  float _792 = saturate((_731 / _787));
  float _793 = saturate((_732 / _787));
  bool _794 = (_714 < _709);
  float _798 = (_794 ? (1.0f - _791) : _791);
  float _799 = (_794 ? (1.0f - _792) : _792);
  float _800 = (_794 ? (1.0f - _793) : _793);
  float _819 = (((_798 * _798) * (((((bool)((_718 > _714))) ? (_689 - (_751 / ((exp2((((_718 - _714) * 1.4426950216293335f) * _753))) + 1.0f))) : _724)) - _778)) * (3.0f - (_798 * 2.0f))) + _778;
  float _820 = (((_799 * _799) * (((((bool)((_719 > _714))) ? (_689 - (_751 / ((exp2((((_719 - _714) * 1.4426950216293335f) * _753))) + 1.0f))) : _725)) - _779)) * (3.0f - (_799 * 2.0f))) + _779;
  float _821 = (((_800 * _800) * (((((bool)((_720 > _714))) ? (_689 - (_751 / ((exp2((((_720 - _714) * 1.4426950216293335f) * _753))) + 1.0f))) : _726)) - _780)) * (3.0f - (_800 * 2.0f))) + _780;
  float _822 = dot(float3(_819, _820, _821), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
  float _842 = ((cb0_035w) * ((max(0.0f, (((_819 - _822) * 0.9300000071525574f) + _822))) - _538)) + _538;
  float _843 = ((cb0_035w) * ((max(0.0f, (((_820 - _822) * 0.9300000071525574f) + _822))) - _539)) + _539;
  float _844 = ((cb0_035w) * ((max(0.0f, (((_821 - _822) * 0.9300000071525574f) + _822))) - _540)) + _540;
  float _860 = (((mad(-0.06537103652954102f, _844, (mad(1.451815478503704e-06f, _843, (_842 * 1.065374732017517f))))) - _842) * (cb0_035y)) + _842;
  float _861 = (((mad(-0.20366770029067993f, _844, (mad(1.2036634683609009f, _843, (_842 * -2.57161445915699e-07f))))) - _843) * (cb0_035y)) + _843;
  float _862 = (((mad(0.9999996423721313f, _844, (mad(2.0954757928848267e-08f, _843, (_842 * 1.862645149230957e-08f))))) - _844) * (cb0_035y)) + _844;
  float _875 = saturate((max(0.0f, (mad(-0.0832584798336029f, _862, (mad(-0.6217905879020691f, _861, (_860 * 1.7050515413284302f))))))));
  float _876 = saturate((max(0.0f, (mad(-0.010548528283834457f, _862, (mad(1.1408027410507202f, _861, (_860 * -0.13025718927383423f))))))));
  float _877 = saturate((max(0.0f, (mad(1.152971863746643f, _862, (mad(-0.1289687603712082f, _861, (_860 * -0.024003278464078903f))))))));
  if (((_875 < 0.0031306699384003878f))) {
    _888 = (_875 * 12.920000076293945f);
  } else {
    _888 = (((exp2(((log2(_875)) * 0.4166666567325592f))) * 1.0549999475479126f) + -0.054999999701976776f);
  }
  if (((_876 < 0.0031306699384003878f))) {
    _899 = (_876 * 12.920000076293945f);
  } else {
    _899 = (((exp2(((log2(_876)) * 0.4166666567325592f))) * 1.0549999475479126f) + -0.054999999701976776f);
  }
  if (((_877 < 0.0031306699384003878f))) {
    _910 = (_877 * 12.920000076293945f);
  } else {
    _910 = (((exp2(((log2(_877)) * 0.4166666567325592f))) * 1.0549999475479126f) + -0.054999999701976776f);
  }
  float _914 = (_899 * 0.9375f) + 0.03125f;
  float _921 = _910 * 15.0f;
  float _922 = floor(_921);
  float _923 = _921 - _922;
  float _925 = (_922 + ((_888 * 0.9375f) + 0.03125f)) * 0.0625f;
  float4 _928 = t0.Sample(s0, float2(_925, _914));
  float _932 = _925 + 0.0625f;
  float4 _935 = t0.Sample(s0, float2(_932, _914));
  float4 _958 = t1.Sample(s1, float2(_925, _914));
  float4 _964 = t1.Sample(s1, float2(_932, _914));
  float _983 = max(6.103519990574569e-05f, (((((((_935.x) - (_928.x)) * _923) + (_928.x)) * (cb0_005y)) + ((cb0_005x) * _888)) + (((((_964.x) - (_958.x)) * _923) + (_958.x)) * (cb0_005z))));
  float _984 = max(6.103519990574569e-05f, (((((((_935.y) - (_928.y)) * _923) + (_928.y)) * (cb0_005y)) + ((cb0_005x) * _899)) + (((((_964.y) - (_958.y)) * _923) + (_958.y)) * (cb0_005z))));
  float _985 = max(6.103519990574569e-05f, (((((((_935.z) - (_928.z)) * _923) + (_928.z)) * (cb0_005y)) + ((cb0_005x) * _910)) + (((((_964.z) - (_958.z)) * _923) + (_958.z)) * (cb0_005z))));
  float _1007 = (((bool)((_983 > 0.040449999272823334f))) ? (exp2(((log2(((_983 * 0.9478672742843628f) + 0.05213269963860512f))) * 2.4000000953674316f))) : (_983 * 0.07739938050508499f));
  float _1008 = (((bool)((_984 > 0.040449999272823334f))) ? (exp2(((log2(((_984 * 0.9478672742843628f) + 0.05213269963860512f))) * 2.4000000953674316f))) : (_984 * 0.07739938050508499f));
  float _1009 = (((bool)((_985 > 0.040449999272823334f))) ? (exp2(((log2(((_985 * 0.9478672742843628f) + 0.05213269963860512f))) * 2.4000000953674316f))) : (_985 * 0.07739938050508499f));
  float _1019 = (((cb0_038y) + ((cb0_038x) * _1007)) * _1007) + (cb0_038z);
  float _1022 = (((cb0_038y) + ((cb0_038x) * _1008)) * _1008) + (cb0_038z);
  float _1025 = (((cb0_038y) + ((cb0_038x) * _1009)) * _1009) + (cb0_038z);
  float _1035 = (cb0_013x) * _1019;
  float _1036 = (cb0_013y) * _1022;
  float _1037 = (cb0_013z) * _1025;
  float _1044 = (((cb0_012x) - _1035) * (cb0_012w)) + _1035;
  float _1045 = (((cb0_012y) - _1036) * (cb0_012w)) + _1036;
  float _1046 = (((cb0_012z) - _1037) * (cb0_012w)) + _1037;
  float _1058 = exp2(((log2((max(0.0f, _1044)))) * (cb0_039y)));
  float _1059 = exp2(((log2((max(0.0f, _1045)))) * (cb0_039y)));
  float _1060 = exp2(((log2((max(0.0f, _1046)))) * (cb0_039y)));

  return LutBuilderToneMap(untonemapped_ap1, float3(_1058, _1059, _1060));

  if (((((uint)(cb0_039w)) == 0))) {
    do {
      if (((_1058 < 0.0031306699384003878f))) {
        _1075 = (_1058 * 12.920000076293945f);
      } else {
        _1075 = (((exp2(((log2(_1058)) * 0.4166666567325592f))) * 1.0549999475479126f) + -0.054999999701976776f);
      }
      do {
        if (((_1059 < 0.0031306699384003878f))) {
          _1086 = (_1059 * 12.920000076293945f);
        } else {
          _1086 = (((exp2(((log2(_1059)) * 0.4166666567325592f))) * 1.0549999475479126f) + -0.054999999701976776f);
        }
        if (((_1060 < 0.0031306699384003878f))) {
          _2573 = _1075;
          _2574 = _1086;
          _2575 = (_1060 * 12.920000076293945f);
        } else {
          _2573 = _1075;
          _2574 = _1086;
          _2575 = (((exp2(((log2(_1060)) * 0.4166666567325592f))) * 1.0549999475479126f) + -0.054999999701976776f);
        }
      } while (false);
    } while (false);
  } else {
    if (((((uint)(cb0_039w)) == 1))) {
      float _1101 = mad(0.04736635088920593f, _1060, (mad(0.3395121395587921f, _1059, (_1058 * 0.613191545009613f))));
      float _1104 = mad(0.01345000695437193f, _1060, (mad(0.9163357615470886f, _1059, (_1058 * 0.07020691782236099f))));
      float _1107 = mad(0.8696067929267883f, _1060, (mad(0.1095672994852066f, _1059, (_1058 * 0.020618872717022896f))));
      float _1117 = max(6.103519990574569e-05f, (mad(_41, _1107, (mad(_40, _1104, (_1101 * _39))))));
      float _1118 = max(6.103519990574569e-05f, (mad(_44, _1107, (mad(_43, _1104, (_1101 * _42))))));
      float _1119 = max(6.103519990574569e-05f, (mad(_47, _1107, (mad(_46, _1104, (_1101 * _45))))));
      _2573 = (min((_1117 * 4.5f), (((exp2(((log2((max(_1117, 0.017999999225139618f)))) * 0.44999998807907104f))) * 1.0989999771118164f) + -0.0989999994635582f)));
      _2574 = (min((_1118 * 4.5f), (((exp2(((log2((max(_1118, 0.017999999225139618f)))) * 0.44999998807907104f))) * 1.0989999771118164f) + -0.0989999994635582f)));
      _2575 = (min((_1119 * 4.5f), (((exp2(((log2((max(_1119, 0.017999999225139618f)))) * 0.44999998807907104f))) * 1.0989999771118164f) + -0.0989999994635582f)));
    } else {
      bool _1146 = (((uint)(cb0_039w)) == 5);
      if ((((bool)((((uint)(cb0_039w)) == 3))) || _1146)) {
        _12[0] = (cb0_009x);
        _12[1] = (cb0_009y);
        _12[2] = (cb0_009z);
        _12[3] = (cb0_009w);
        _12[4] = (cb0_011x);
        _12[5] = (cb0_011x);
        _13[0] = (cb0_010x);
        _13[1] = (cb0_010y);
        _13[2] = (cb0_010z);
        _13[3] = (cb0_010w);
        _13[4] = (cb0_011y);
        _13[5] = (cb0_011y);
        float _1185 = (cb0_011z) * _1019;
        float _1186 = (cb0_011z) * _1022;
        float _1187 = (cb0_011z) * _1025;
        float _1190 = mad(0.17733481526374817f, _1187, (mad(0.38297808170318604f, _1186, (_1185 * 0.43970081210136414f))));
        float _1193 = mad(0.09676162153482437f, _1187, (mad(0.8134231567382812f, _1186, (_1185 * 0.08979231864213943f))));
        float _1196 = mad(0.870704174041748f, _1187, (mad(0.11154405772686005f, _1186, (_1185 * 0.017543988302350044f))));
        float _1199 = mad(-0.21492856740951538f, _1196, (mad(-0.2365107536315918f, _1193, (_1190 * 1.4514392614364624f))));
        float _1202 = mad(-0.09967592358589172f, _1196, (mad(1.17622971534729f, _1193, (_1190 * -0.07655377686023712f))));
        float _1205 = mad(0.9977163076400757f, _1196, (mad(-0.006032449658960104f, _1193, (_1190 * 0.008316148072481155f))));
        float _1207 = max(_1199, (max(_1202, _1205)));
        _1275 = _1199;
        _1276 = _1202;
        _1277 = _1205;
        do {
          if (!(((bool)(((bool)(((bool)((_1190 < 0.0f))) || ((bool)((_1193 < 0.0f))))) || ((bool)((_1196 < 0.0f))))) || ((bool)((_1207 < 1.000000013351432e-10f))))) {
            float _1217 = abs(_1207);
            float _1218 = (_1207 - _1199) / _1217;
            float _1220 = (_1207 - _1202) / _1217;
            float _1222 = (_1207 - _1205) / _1217;
            _1237 = _1218;
            do {
              if (!((_1218 < 0.8149999976158142f))) {
                float _1225 = _1218 + -0.8149999976158142f;
                _1237 = ((_1225 / (exp2(((log2(((exp2(((log2((_1225 * 3.0552830696105957f))) * 1.2000000476837158f))) + 1.0f))) * 0.8333333134651184f)))) + 0.8149999976158142f);
              }
              _1252 = _1220;
              do {
                if (!((_1220 < 0.8029999732971191f))) {
                  float _1240 = _1220 + -0.8029999732971191f;
                  _1252 = ((_1240 / (exp2(((log2(((exp2(((log2((_1240 * 3.4972610473632812f))) * 1.2000000476837158f))) + 1.0f))) * 0.8333333134651184f)))) + 0.8029999732971191f);
                }
                _1267 = _1222;
                do {
                  if (!((_1222 < 0.8799999952316284f))) {
                    float _1255 = _1222 + -0.8799999952316284f;
                    _1267 = ((_1255 / (exp2(((log2(((exp2(((log2((_1255 * 6.810994625091553f))) * 1.2000000476837158f))) + 1.0f))) * 0.8333333134651184f)))) + 0.8799999952316284f);
                  }
                  _1275 = (_1207 - (_1217 * _1237));
                  _1276 = (_1207 - (_1217 * _1252));
                  _1277 = (_1207 - (_1217 * _1267));
                } while (false);
              } while (false);
            } while (false);
          }
          float _1280 = mad(0.16386906802654266f, _1277, (mad(0.14067870378494263f, _1276, (_1275 * 0.6954522132873535f))));
          float _1287 = ((_1280 - _1190) * (cb0_011w)) + _1190;
          float _1288 = ((_1280 - _1193) * (cb0_011w)) + _1193;
          float _1289 = ((_1280 - _1196) * (cb0_011w)) + _1196;
          float _1293 = max((max(_1287, _1288)), _1289);
          float _1298 = ((max(_1293, 1.000000013351432e-10f)) - (max((min((min(_1287, _1288)), _1289)), 1.000000013351432e-10f))) / (max(_1293, 0.009999999776482582f));
          float _1311 = ((_1289 + _1288) + _1287) + ((sqrt(((((_1289 - _1288) * _1289) + ((_1288 - _1287) * _1288)) + ((_1287 - _1289) * _1287)))) * 1.75f);
          float _1312 = _1311 * 0.3333333432674408f;
          float _1313 = _1298 + -0.4000000059604645f;
          float _1314 = _1313 * 5.0f;
          float _1318 = max((1.0f - (abs((_1313 * 2.5f)))), 0.0f);
          float _1329 = (((float(((int(((bool)((_1314 > 0.0f))))) - (int(((bool)((_1314 < 0.0f)))))))) * (1.0f - (_1318 * _1318))) + 1.0f) * 0.02500000037252903f;
          _1338 = _1329;
          do {
            if ((!(_1312 <= 0.0533333346247673f))) {
              _1338 = 0.0f;
              if ((!(_1312 >= 0.1599999964237213f))) {
                _1338 = (((0.23999999463558197f / _1311) + -0.5f) * _1329);
              }
            }
            float _1339 = _1338 + 1.0f;
            float _1340 = _1339 * _1287;
            float _1341 = _1339 * _1288;
            float _1342 = _1339 * _1289;
            _1374 = 0.0f;
            do {
              if (!(((bool)((_1340 == _1341))) && ((bool)((_1341 == _1342))))) {
                float _1349 = ((_1340 * 2.0f) - _1341) - _1342;
                float _1352 = ((_1288 - _1289) * 1.7320507764816284f) * _1339;
                float _1354 = atan((_1352 / _1349));
                bool _1357 = (_1349 < 0.0f);
                bool _1358 = (_1349 == 0.0f);
                bool _1359 = (_1352 >= 0.0f);
                bool _1360 = (_1352 < 0.0f);
                float _1369 = (((bool)(_1359 && _1358)) ? 90.0f : ((((bool)(_1360 && _1358)) ? -90.0f : (((((bool)(_1360 && _1357)) ? (_1354 + -3.1415927410125732f) : ((((bool)(_1359 && _1357)) ? (_1354 + 3.1415927410125732f) : _1354)))) * 57.2957763671875f))));
                _1374 = _1369;
                if (((_1369 < 0.0f))) {
                  _1374 = (_1369 + 360.0f);
                }
              }
              float _1376 = min((max(_1374, 0.0f)), 360.0f);
              do {
                if (((_1376 < -180.0f))) {
                  _1385 = (_1376 + 360.0f);
                } else {
                  _1385 = _1376;
                  if (((_1376 > 180.0f))) {
                    _1385 = (_1376 + -360.0f);
                  }
                }
                _1424 = 0.0f;
                do {
                  if ((((bool)((_1385 > -67.5f))) && ((bool)((_1385 < 67.5f))))) {
                    float _1391 = (_1385 + 67.5f) * 0.029629629105329514f;
                    int _1392 = int(1392);
                    float _1394 = _1391 - (float(_1392));
                    float _1395 = _1394 * _1394;
                    float _1396 = _1395 * _1394;
                    if (((_1392 == 3))) {
                      _1424 = (((0.1666666716337204f - (_1394 * 0.5f)) + (_1395 * 0.5f)) - (_1396 * 0.1666666716337204f));
                    } else {
                      if (((_1392 == 2))) {
                        _1424 = ((0.6666666865348816f - _1395) + (_1396 * 0.5f));
                      } else {
                        if (((_1392 == 1))) {
                          _1424 = (((_1396 * -0.5f) + 0.1666666716337204f) + ((_1395 + _1394) * 0.5f));
                        } else {
                          _1424 = ((((bool)((_1392 == 0))) ? (_1396 * 0.1666666716337204f) : 0.0f));
                        }
                      }
                    }
                  }
                  float _1433 = min((max(((((_1298 * 0.27000001072883606f) * (0.029999999329447746f - _1340)) * _1424) + _1340), 0.0f)), 65535.0f);
                  float _1434 = min((max(_1341, 0.0f)), 65535.0f);
                  float _1435 = min((max(_1342, 0.0f)), 65535.0f);
                  float _1448 = min((max((mad(-0.21492856740951538f, _1435, (mad(-0.2365107536315918f, _1434, (_1433 * 1.4514392614364624f))))), 0.0f)), 65504.0f);
                  float _1449 = min((max((mad(-0.09967592358589172f, _1435, (mad(1.17622971534729f, _1434, (_1433 * -0.07655377686023712f))))), 0.0f)), 65504.0f);
                  float _1450 = min((max((mad(0.9977163076400757f, _1435, (mad(-0.006032449658960104f, _1434, (_1433 * 0.008316148072481155f))))), 0.0f)), 65504.0f);
                  float _1451 = dot(float3(_1448, _1449, _1450), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
                  float _1462 = log2((max((((_1448 - _1451) * 0.9599999785423279f) + _1451), 1.000000013351432e-10f)));
                  float _1463 = _1462 * 0.3010300099849701f;
                  float _1464 = log2((cb0_007x));
                  float _1465 = _1464 * 0.3010300099849701f;
                  do {
                    if (!(!(_1463 <= _1465))) {
                      _1534 = ((log2((cb0_007y))) * 0.3010300099849701f);
                    } else {
                      float _1472 = log2((cb0_008x));
                      float _1473 = _1472 * 0.3010300099849701f;
                      if ((((bool)((_1463 > _1465))) && ((bool)((_1463 < _1473))))) {
                        float _1481 = ((_1462 - _1464) * 0.9030900001525879f) / ((_1472 - _1464) * 0.3010300099849701f);
                        int _1482 = int(1482);
                        float _1484 = _1481 - (float(_1482));
                        float _1486 = _12[_1482];
                        float _1489 = _12[(_1482 + 1)];
                        float _1494 = _1486 * 0.5f;
                        _1534 = (dot(float3((_1484 * _1484), _1484, 1.0f), float3((mad((_12[(_1482 + 2)]), 0.5f, (mad(_1489, -1.0f, _1494)))), (_1489 - _1486), (mad(_1489, 0.5f, _1494)))));
                      } else {
                        float _1502 = log2((cb0_007z));
                        if ((((bool)((_1463 >= _1473))) && ((bool)((_1463 < (_1502 * 0.3010300099849701f)))))) {
                          float _1511 = ((_1462 - _1472) * 0.9030900001525879f) / ((_1502 - _1472) * 0.3010300099849701f);
                          int _1512 = int(1512);
                          float _1514 = _1511 - (float(_1512));
                          float _1516 = _13[_1512];
                          float _1519 = _13[(_1512 + 1)];
                          float _1524 = _1516 * 0.5f;
                          _1534 = (dot(float3((_1514 * _1514), _1514, 1.0f), float3((mad((_13[(_1512 + 2)]), 0.5f, (mad(_1519, -1.0f, _1524)))), (_1519 - _1516), (mad(_1519, 0.5f, _1524)))));
                        } else {
                          _1534 = ((log2((cb0_007w))) * 0.3010300099849701f);
                        }
                      }
                    }
                    float _1538 = log2((max((((_1449 - _1451) * 0.9599999785423279f) + _1451), 1.000000013351432e-10f)));
                    float _1539 = _1538 * 0.3010300099849701f;
                    do {
                      if (!(!(_1539 <= _1465))) {
                        _1608 = ((log2((cb0_007y))) * 0.3010300099849701f);
                      } else {
                        float _1546 = log2((cb0_008x));
                        float _1547 = _1546 * 0.3010300099849701f;
                        if ((((bool)((_1539 > _1465))) && ((bool)((_1539 < _1547))))) {
                          float _1555 = ((_1538 - _1464) * 0.9030900001525879f) / ((_1546 - _1464) * 0.3010300099849701f);
                          int _1556 = int(1556);
                          float _1558 = _1555 - (float(_1556));
                          float _1560 = _12[_1556];
                          float _1563 = _12[(_1556 + 1)];
                          float _1568 = _1560 * 0.5f;
                          _1608 = (dot(float3((_1558 * _1558), _1558, 1.0f), float3((mad((_12[(_1556 + 2)]), 0.5f, (mad(_1563, -1.0f, _1568)))), (_1563 - _1560), (mad(_1563, 0.5f, _1568)))));
                        } else {
                          float _1576 = log2((cb0_007z));
                          if ((((bool)((_1539 >= _1547))) && ((bool)((_1539 < (_1576 * 0.3010300099849701f)))))) {
                            float _1585 = ((_1538 - _1546) * 0.9030900001525879f) / ((_1576 - _1546) * 0.3010300099849701f);
                            int _1586 = int(1586);
                            float _1588 = _1585 - (float(_1586));
                            float _1590 = _13[_1586];
                            float _1593 = _13[(_1586 + 1)];
                            float _1598 = _1590 * 0.5f;
                            _1608 = (dot(float3((_1588 * _1588), _1588, 1.0f), float3((mad((_13[(_1586 + 2)]), 0.5f, (mad(_1593, -1.0f, _1598)))), (_1593 - _1590), (mad(_1593, 0.5f, _1598)))));
                          } else {
                            _1608 = ((log2((cb0_007w))) * 0.3010300099849701f);
                          }
                        }
                      }
                      float _1612 = log2((max((((_1450 - _1451) * 0.9599999785423279f) + _1451), 1.000000013351432e-10f)));
                      float _1613 = _1612 * 0.3010300099849701f;
                      do {
                        if (!(!(_1613 <= _1465))) {
                          _1682 = ((log2((cb0_007y))) * 0.3010300099849701f);
                        } else {
                          float _1620 = log2((cb0_008x));
                          float _1621 = _1620 * 0.3010300099849701f;
                          if ((((bool)((_1613 > _1465))) && ((bool)((_1613 < _1621))))) {
                            float _1629 = ((_1612 - _1464) * 0.9030900001525879f) / ((_1620 - _1464) * 0.3010300099849701f);
                            int _1630 = int(1630);
                            float _1632 = _1629 - (float(_1630));
                            float _1634 = _12[_1630];
                            float _1637 = _12[(_1630 + 1)];
                            float _1642 = _1634 * 0.5f;
                            _1682 = (dot(float3((_1632 * _1632), _1632, 1.0f), float3((mad((_12[(_1630 + 2)]), 0.5f, (mad(_1637, -1.0f, _1642)))), (_1637 - _1634), (mad(_1637, 0.5f, _1642)))));
                          } else {
                            float _1650 = log2((cb0_007z));
                            if ((((bool)((_1613 >= _1621))) && ((bool)((_1613 < (_1650 * 0.3010300099849701f)))))) {
                              float _1659 = ((_1612 - _1620) * 0.9030900001525879f) / ((_1650 - _1620) * 0.3010300099849701f);
                              int _1660 = int(1660);
                              float _1662 = _1659 - (float(_1660));
                              float _1664 = _13[_1660];
                              float _1667 = _13[(_1660 + 1)];
                              float _1672 = _1664 * 0.5f;
                              _1682 = (dot(float3((_1662 * _1662), _1662, 1.0f), float3((mad((_13[(_1660 + 2)]), 0.5f, (mad(_1667, -1.0f, _1672)))), (_1667 - _1664), (mad(_1667, 0.5f, _1672)))));
                            } else {
                              _1682 = ((log2((cb0_007w))) * 0.3010300099849701f);
                            }
                          }
                        }
                        float _1686 = (cb0_007w) - (cb0_007y);
                        float _1687 = ((exp2((_1534 * 3.321928024291992f))) - (cb0_007y)) / _1686;
                        float _1689 = ((exp2((_1608 * 3.321928024291992f))) - (cb0_007y)) / _1686;
                        float _1691 = ((exp2((_1682 * 3.321928024291992f))) - (cb0_007y)) / _1686;
                        float _1694 = mad(0.15618768334388733f, _1691, (mad(0.13400420546531677f, _1689, (_1687 * 0.6624541878700256f))));
                        float _1697 = mad(0.053689517080783844f, _1691, (mad(0.6740817427635193f, _1689, (_1687 * 0.2722287178039551f))));
                        float _1700 = mad(1.0103391408920288f, _1691, (mad(0.00406073359772563f, _1689, (_1687 * -0.005574649665504694f))));
                        float _1713 = min((max((mad(-0.23642469942569733f, _1700, (mad(-0.32480329275131226f, _1697, (_1694 * 1.6410233974456787f))))), 0.0f)), 1.0f);
                        float _1714 = min((max((mad(0.016756348311901093f, _1700, (mad(1.6153316497802734f, _1697, (_1694 * -0.663662850856781f))))), 0.0f)), 1.0f);
                        float _1715 = min((max((mad(0.9883948564529419f, _1700, (mad(-0.008284442126750946f, _1697, (_1694 * 0.011721894145011902f))))), 0.0f)), 1.0f);
                        float _1718 = mad(0.15618768334388733f, _1715, (mad(0.13400420546531677f, _1714, (_1713 * 0.6624541878700256f))));
                        float _1721 = mad(0.053689517080783844f, _1715, (mad(0.6740817427635193f, _1714, (_1713 * 0.2722287178039551f))));
                        float _1724 = mad(1.0103391408920288f, _1715, (mad(0.00406073359772563f, _1714, (_1713 * -0.005574649665504694f))));
                        float _1746 = min((max(((min((max((mad(-0.23642469942569733f, _1724, (mad(-0.32480329275131226f, _1721, (_1718 * 1.6410233974456787f))))), 0.0f)), 65535.0f)) * (cb0_007w)), 0.0f)), 65535.0f);
                        float _1747 = min((max(((min((max((mad(0.016756348311901093f, _1724, (mad(1.6153316497802734f, _1721, (_1718 * -0.663662850856781f))))), 0.0f)), 65535.0f)) * (cb0_007w)), 0.0f)), 65535.0f);
                        float _1748 = min((max(((min((max((mad(0.9883948564529419f, _1724, (mad(-0.008284442126750946f, _1721, (_1718 * 0.011721894145011902f))))), 0.0f)), 65535.0f)) * (cb0_007w)), 0.0f)), 65535.0f);
                        _1760 = _1746;
                        _1761 = _1747;
                        _1762 = _1748;
                        do {
                          if (!_1146) {
                            _1760 = (mad(_41, _1748, (mad(_40, _1747, (_1746 * _39)))));
                            _1761 = (mad(_44, _1748, (mad(_43, _1747, (_1746 * _42)))));
                            _1762 = (mad(_47, _1748, (mad(_46, _1747, (_1746 * _45)))));
                          }
                          float _1772 = exp2(((log2((_1760 * 9.999999747378752e-05f))) * 0.1593017578125f));
                          float _1773 = exp2(((log2((_1761 * 9.999999747378752e-05f))) * 0.1593017578125f));
                          float _1774 = exp2(((log2((_1762 * 9.999999747378752e-05f))) * 0.1593017578125f));
                          _2573 = (exp2(((log2(((1.0f / ((_1772 * 18.6875f) + 1.0f)) * ((_1772 * 18.8515625f) + 0.8359375f)))) * 78.84375f)));
                          _2574 = (exp2(((log2(((1.0f / ((_1773 * 18.6875f) + 1.0f)) * ((_1773 * 18.8515625f) + 0.8359375f)))) * 78.84375f)));
                          _2575 = (exp2(((log2(((1.0f / ((_1774 * 18.6875f) + 1.0f)) * ((_1774 * 18.8515625f) + 0.8359375f)))) * 78.84375f)));
                        } while (false);
                      } while (false);
                    } while (false);
                  } while (false);
                } while (false);
              } while (false);
            } while (false);
          } while (false);
        } while (false);
      } else {
        if ((((((uint)(cb0_039w)) & -3) == 4))) {
          _10[0] = (cb0_009x);
          _10[1] = (cb0_009y);
          _10[2] = (cb0_009z);
          _10[3] = (cb0_009w);
          _10[4] = (cb0_011x);
          _10[5] = (cb0_011x);
          _11[0] = (cb0_010x);
          _11[1] = (cb0_010y);
          _11[2] = (cb0_010z);
          _11[3] = (cb0_010w);
          _11[4] = (cb0_011y);
          _11[5] = (cb0_011y);
          float _1843 = (cb0_011z) * _1019;
          float _1844 = (cb0_011z) * _1022;
          float _1845 = (cb0_011z) * _1025;
          float _1848 = mad(0.17733481526374817f, _1845, (mad(0.38297808170318604f, _1844, (_1843 * 0.43970081210136414f))));
          float _1851 = mad(0.09676162153482437f, _1845, (mad(0.8134231567382812f, _1844, (_1843 * 0.08979231864213943f))));
          float _1854 = mad(0.870704174041748f, _1845, (mad(0.11154405772686005f, _1844, (_1843 * 0.017543988302350044f))));
          float _1857 = mad(-0.21492856740951538f, _1854, (mad(-0.2365107536315918f, _1851, (_1848 * 1.4514392614364624f))));
          float _1860 = mad(-0.09967592358589172f, _1854, (mad(1.17622971534729f, _1851, (_1848 * -0.07655377686023712f))));
          float _1863 = mad(0.9977163076400757f, _1854, (mad(-0.006032449658960104f, _1851, (_1848 * 0.008316148072481155f))));
          float _1865 = max(_1857, (max(_1860, _1863)));
          _1933 = _1857;
          _1934 = _1860;
          _1935 = _1863;
          do {
            if (!(((bool)(((bool)(((bool)((_1848 < 0.0f))) || ((bool)((_1851 < 0.0f))))) || ((bool)((_1854 < 0.0f))))) || ((bool)((_1865 < 1.000000013351432e-10f))))) {
              float _1875 = abs(_1865);
              float _1876 = (_1865 - _1857) / _1875;
              float _1878 = (_1865 - _1860) / _1875;
              float _1880 = (_1865 - _1863) / _1875;
              _1895 = _1876;
              do {
                if (!((_1876 < 0.8149999976158142f))) {
                  float _1883 = _1876 + -0.8149999976158142f;
                  _1895 = ((_1883 / (exp2(((log2(((exp2(((log2((_1883 * 3.0552830696105957f))) * 1.2000000476837158f))) + 1.0f))) * 0.8333333134651184f)))) + 0.8149999976158142f);
                }
                _1910 = _1878;
                do {
                  if (!((_1878 < 0.8029999732971191f))) {
                    float _1898 = _1878 + -0.8029999732971191f;
                    _1910 = ((_1898 / (exp2(((log2(((exp2(((log2((_1898 * 3.4972610473632812f))) * 1.2000000476837158f))) + 1.0f))) * 0.8333333134651184f)))) + 0.8029999732971191f);
                  }
                  _1925 = _1880;
                  do {
                    if (!((_1880 < 0.8799999952316284f))) {
                      float _1913 = _1880 + -0.8799999952316284f;
                      _1925 = ((_1913 / (exp2(((log2(((exp2(((log2((_1913 * 6.810994625091553f))) * 1.2000000476837158f))) + 1.0f))) * 0.8333333134651184f)))) + 0.8799999952316284f);
                    }
                    _1933 = (_1865 - (_1875 * _1895));
                    _1934 = (_1865 - (_1875 * _1910));
                    _1935 = (_1865 - (_1875 * _1925));
                  } while (false);
                } while (false);
              } while (false);
            }
            float _1938 = mad(0.16386906802654266f, _1935, (mad(0.14067870378494263f, _1934, (_1933 * 0.6954522132873535f))));
            float _1945 = ((_1938 - _1848) * (cb0_011w)) + _1848;
            float _1946 = ((_1938 - _1851) * (cb0_011w)) + _1851;
            float _1947 = ((_1938 - _1854) * (cb0_011w)) + _1854;
            float _1951 = max((max(_1945, _1946)), _1947);
            float _1956 = ((max(_1951, 1.000000013351432e-10f)) - (max((min((min(_1945, _1946)), _1947)), 1.000000013351432e-10f))) / (max(_1951, 0.009999999776482582f));
            float _1969 = ((_1947 + _1946) + _1945) + ((sqrt(((((_1947 - _1946) * _1947) + ((_1946 - _1945) * _1946)) + ((_1945 - _1947) * _1945)))) * 1.75f);
            float _1970 = _1969 * 0.3333333432674408f;
            float _1971 = _1956 + -0.4000000059604645f;
            float _1972 = _1971 * 5.0f;
            float _1976 = max((1.0f - (abs((_1971 * 2.5f)))), 0.0f);
            float _1987 = (((float(((int(((bool)((_1972 > 0.0f))))) - (int(((bool)((_1972 < 0.0f)))))))) * (1.0f - (_1976 * _1976))) + 1.0f) * 0.02500000037252903f;
            _1996 = _1987;
            do {
              if ((!(_1970 <= 0.0533333346247673f))) {
                _1996 = 0.0f;
                if ((!(_1970 >= 0.1599999964237213f))) {
                  _1996 = (((0.23999999463558197f / _1969) + -0.5f) * _1987);
                }
              }
              float _1997 = _1996 + 1.0f;
              float _1998 = _1997 * _1945;
              float _1999 = _1997 * _1946;
              float _2000 = _1997 * _1947;
              _2032 = 0.0f;
              do {
                if (!(((bool)((_1998 == _1999))) && ((bool)((_1999 == _2000))))) {
                  float _2007 = ((_1998 * 2.0f) - _1999) - _2000;
                  float _2010 = ((_1946 - _1947) * 1.7320507764816284f) * _1997;
                  float _2012 = atan((_2010 / _2007));
                  bool _2015 = (_2007 < 0.0f);
                  bool _2016 = (_2007 == 0.0f);
                  bool _2017 = (_2010 >= 0.0f);
                  bool _2018 = (_2010 < 0.0f);
                  float _2027 = (((bool)(_2017 && _2016)) ? 90.0f : ((((bool)(_2018 && _2016)) ? -90.0f : (((((bool)(_2018 && _2015)) ? (_2012 + -3.1415927410125732f) : ((((bool)(_2017 && _2015)) ? (_2012 + 3.1415927410125732f) : _2012)))) * 57.2957763671875f))));
                  _2032 = _2027;
                  if (((_2027 < 0.0f))) {
                    _2032 = (_2027 + 360.0f);
                  }
                }
                float _2034 = min((max(_2032, 0.0f)), 360.0f);
                do {
                  if (((_2034 < -180.0f))) {
                    _2043 = (_2034 + 360.0f);
                  } else {
                    _2043 = _2034;
                    if (((_2034 > 180.0f))) {
                      _2043 = (_2034 + -360.0f);
                    }
                  }
                  _2082 = 0.0f;
                  do {
                    if ((((bool)((_2043 > -67.5f))) && ((bool)((_2043 < 67.5f))))) {
                      float _2049 = (_2043 + 67.5f) * 0.029629629105329514f;
                      int _2050 = int(2050);
                      float _2052 = _2049 - (float(_2050));
                      float _2053 = _2052 * _2052;
                      float _2054 = _2053 * _2052;
                      if (((_2050 == 3))) {
                        _2082 = (((0.1666666716337204f - (_2052 * 0.5f)) + (_2053 * 0.5f)) - (_2054 * 0.1666666716337204f));
                      } else {
                        if (((_2050 == 2))) {
                          _2082 = ((0.6666666865348816f - _2053) + (_2054 * 0.5f));
                        } else {
                          if (((_2050 == 1))) {
                            _2082 = (((_2054 * -0.5f) + 0.1666666716337204f) + ((_2053 + _2052) * 0.5f));
                          } else {
                            _2082 = ((((bool)((_2050 == 0))) ? (_2054 * 0.1666666716337204f) : 0.0f));
                          }
                        }
                      }
                    }
                    float _2091 = min((max(((((_1956 * 0.27000001072883606f) * (0.029999999329447746f - _1998)) * _2082) + _1998), 0.0f)), 65535.0f);
                    float _2092 = min((max(_1999, 0.0f)), 65535.0f);
                    float _2093 = min((max(_2000, 0.0f)), 65535.0f);
                    float _2106 = min((max((mad(-0.21492856740951538f, _2093, (mad(-0.2365107536315918f, _2092, (_2091 * 1.4514392614364624f))))), 0.0f)), 65504.0f);
                    float _2107 = min((max((mad(-0.09967592358589172f, _2093, (mad(1.17622971534729f, _2092, (_2091 * -0.07655377686023712f))))), 0.0f)), 65504.0f);
                    float _2108 = min((max((mad(0.9977163076400757f, _2093, (mad(-0.006032449658960104f, _2092, (_2091 * 0.008316148072481155f))))), 0.0f)), 65504.0f);
                    float _2109 = dot(float3(_2106, _2107, _2108), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
                    float _2120 = log2((max((((_2106 - _2109) * 0.9599999785423279f) + _2109), 1.000000013351432e-10f)));
                    float _2121 = _2120 * 0.3010300099849701f;
                    float _2122 = log2((cb0_007x));
                    float _2123 = _2122 * 0.3010300099849701f;
                    do {
                      if (!(!(_2121 <= _2123))) {
                        _2192 = ((log2((cb0_007y))) * 0.3010300099849701f);
                      } else {
                        float _2130 = log2((cb0_008x));
                        float _2131 = _2130 * 0.3010300099849701f;
                        if ((((bool)((_2121 > _2123))) && ((bool)((_2121 < _2131))))) {
                          float _2139 = ((_2120 - _2122) * 0.9030900001525879f) / ((_2130 - _2122) * 0.3010300099849701f);
                          int _2140 = int(2140);
                          float _2142 = _2139 - (float(_2140));
                          float _2144 = _10[_2140];
                          float _2147 = _10[(_2140 + 1)];
                          float _2152 = _2144 * 0.5f;
                          _2192 = (dot(float3((_2142 * _2142), _2142, 1.0f), float3((mad((_10[(_2140 + 2)]), 0.5f, (mad(_2147, -1.0f, _2152)))), (_2147 - _2144), (mad(_2147, 0.5f, _2152)))));
                        } else {
                          float _2160 = log2((cb0_007z));
                          if ((((bool)((_2121 >= _2131))) && ((bool)((_2121 < (_2160 * 0.3010300099849701f)))))) {
                            float _2169 = ((_2120 - _2130) * 0.9030900001525879f) / ((_2160 - _2130) * 0.3010300099849701f);
                            int _2170 = int(2170);
                            float _2172 = _2169 - (float(_2170));
                            float _2174 = _11[_2170];
                            float _2177 = _11[(_2170 + 1)];
                            float _2182 = _2174 * 0.5f;
                            _2192 = (dot(float3((_2172 * _2172), _2172, 1.0f), float3((mad((_11[(_2170 + 2)]), 0.5f, (mad(_2177, -1.0f, _2182)))), (_2177 - _2174), (mad(_2177, 0.5f, _2182)))));
                          } else {
                            _2192 = ((log2((cb0_007w))) * 0.3010300099849701f);
                          }
                        }
                      }
                      float _2196 = log2((max((((_2107 - _2109) * 0.9599999785423279f) + _2109), 1.000000013351432e-10f)));
                      float _2197 = _2196 * 0.3010300099849701f;
                      do {
                        if (!(!(_2197 <= _2123))) {
                          _2266 = ((log2((cb0_007y))) * 0.3010300099849701f);
                        } else {
                          float _2204 = log2((cb0_008x));
                          float _2205 = _2204 * 0.3010300099849701f;
                          if ((((bool)((_2197 > _2123))) && ((bool)((_2197 < _2205))))) {
                            float _2213 = ((_2196 - _2122) * 0.9030900001525879f) / ((_2204 - _2122) * 0.3010300099849701f);
                            int _2214 = int(2214);
                            float _2216 = _2213 - (float(_2214));
                            float _2218 = _10[_2214];
                            float _2221 = _10[(_2214 + 1)];
                            float _2226 = _2218 * 0.5f;
                            _2266 = (dot(float3((_2216 * _2216), _2216, 1.0f), float3((mad((_10[(_2214 + 2)]), 0.5f, (mad(_2221, -1.0f, _2226)))), (_2221 - _2218), (mad(_2221, 0.5f, _2226)))));
                          } else {
                            float _2234 = log2((cb0_007z));
                            if ((((bool)((_2197 >= _2205))) && ((bool)((_2197 < (_2234 * 0.3010300099849701f)))))) {
                              float _2243 = ((_2196 - _2204) * 0.9030900001525879f) / ((_2234 - _2204) * 0.3010300099849701f);
                              int _2244 = int(2244);
                              float _2246 = _2243 - (float(_2244));
                              float _2248 = _11[_2244];
                              float _2251 = _11[(_2244 + 1)];
                              float _2256 = _2248 * 0.5f;
                              _2266 = (dot(float3((_2246 * _2246), _2246, 1.0f), float3((mad((_11[(_2244 + 2)]), 0.5f, (mad(_2251, -1.0f, _2256)))), (_2251 - _2248), (mad(_2251, 0.5f, _2256)))));
                            } else {
                              _2266 = ((log2((cb0_007w))) * 0.3010300099849701f);
                            }
                          }
                        }
                        float _2270 = log2((max((((_2108 - _2109) * 0.9599999785423279f) + _2109), 1.000000013351432e-10f)));
                        float _2271 = _2270 * 0.3010300099849701f;
                        do {
                          if (!(!(_2271 <= _2123))) {
                            _2340 = ((log2((cb0_007y))) * 0.3010300099849701f);
                          } else {
                            float _2278 = log2((cb0_008x));
                            float _2279 = _2278 * 0.3010300099849701f;
                            if ((((bool)((_2271 > _2123))) && ((bool)((_2271 < _2279))))) {
                              float _2287 = ((_2270 - _2122) * 0.9030900001525879f) / ((_2278 - _2122) * 0.3010300099849701f);
                              int _2288 = int(2288);
                              float _2290 = _2287 - (float(_2288));
                              float _2292 = _10[_2288];
                              float _2295 = _10[(_2288 + 1)];
                              float _2300 = _2292 * 0.5f;
                              _2340 = (dot(float3((_2290 * _2290), _2290, 1.0f), float3((mad((_10[(_2288 + 2)]), 0.5f, (mad(_2295, -1.0f, _2300)))), (_2295 - _2292), (mad(_2295, 0.5f, _2300)))));
                            } else {
                              float _2308 = log2((cb0_007z));
                              if ((((bool)((_2271 >= _2279))) && ((bool)((_2271 < (_2308 * 0.3010300099849701f)))))) {
                                float _2317 = ((_2270 - _2278) * 0.9030900001525879f) / ((_2308 - _2278) * 0.3010300099849701f);
                                int _2318 = int(2318);
                                float _2320 = _2317 - (float(_2318));
                                float _2322 = _11[_2318];
                                float _2325 = _11[(_2318 + 1)];
                                float _2330 = _2322 * 0.5f;
                                _2340 = (dot(float3((_2320 * _2320), _2320, 1.0f), float3((mad((_11[(_2318 + 2)]), 0.5f, (mad(_2325, -1.0f, _2330)))), (_2325 - _2322), (mad(_2325, 0.5f, _2330)))));
                              } else {
                                _2340 = ((log2((cb0_007w))) * 0.3010300099849701f);
                              }
                            }
                          }
                          float _2344 = (cb0_007w) - (cb0_007y);
                          float _2345 = ((exp2((_2192 * 3.321928024291992f))) - (cb0_007y)) / _2344;
                          float _2347 = ((exp2((_2266 * 3.321928024291992f))) - (cb0_007y)) / _2344;
                          float _2349 = ((exp2((_2340 * 3.321928024291992f))) - (cb0_007y)) / _2344;
                          float _2352 = mad(0.15618768334388733f, _2349, (mad(0.13400420546531677f, _2347, (_2345 * 0.6624541878700256f))));
                          float _2355 = mad(0.053689517080783844f, _2349, (mad(0.6740817427635193f, _2347, (_2345 * 0.2722287178039551f))));
                          float _2358 = mad(1.0103391408920288f, _2349, (mad(0.00406073359772563f, _2347, (_2345 * -0.005574649665504694f))));
                          float _2371 = min((max((mad(-0.23642469942569733f, _2358, (mad(-0.32480329275131226f, _2355, (_2352 * 1.6410233974456787f))))), 0.0f)), 1.0f);
                          float _2372 = min((max((mad(0.016756348311901093f, _2358, (mad(1.6153316497802734f, _2355, (_2352 * -0.663662850856781f))))), 0.0f)), 1.0f);
                          float _2373 = min((max((mad(0.9883948564529419f, _2358, (mad(-0.008284442126750946f, _2355, (_2352 * 0.011721894145011902f))))), 0.0f)), 1.0f);
                          float _2376 = mad(0.15618768334388733f, _2373, (mad(0.13400420546531677f, _2372, (_2371 * 0.6624541878700256f))));
                          float _2379 = mad(0.053689517080783844f, _2373, (mad(0.6740817427635193f, _2372, (_2371 * 0.2722287178039551f))));
                          float _2382 = mad(1.0103391408920288f, _2373, (mad(0.00406073359772563f, _2372, (_2371 * -0.005574649665504694f))));
                          float _2404 = min((max(((min((max((mad(-0.23642469942569733f, _2382, (mad(-0.32480329275131226f, _2379, (_2376 * 1.6410233974456787f))))), 0.0f)), 65535.0f)) * (cb0_007w)), 0.0f)), 65535.0f);
                          float _2405 = min((max(((min((max((mad(0.016756348311901093f, _2382, (mad(1.6153316497802734f, _2379, (_2376 * -0.663662850856781f))))), 0.0f)), 65535.0f)) * (cb0_007w)), 0.0f)), 65535.0f);
                          float _2406 = min((max(((min((max((mad(0.9883948564529419f, _2382, (mad(-0.008284442126750946f, _2379, (_2376 * 0.011721894145011902f))))), 0.0f)), 65535.0f)) * (cb0_007w)), 0.0f)), 65535.0f);
                          _2418 = _2404;
                          _2419 = _2405;
                          _2420 = _2406;
                          do {
                            if (!((((uint)(cb0_039w)) == 6))) {
                              _2418 = (mad(_41, _2406, (mad(_40, _2405, (_2404 * _39)))));
                              _2419 = (mad(_44, _2406, (mad(_43, _2405, (_2404 * _42)))));
                              _2420 = (mad(_47, _2406, (mad(_46, _2405, (_2404 * _45)))));
                            }
                            float _2430 = exp2(((log2((_2418 * 9.999999747378752e-05f))) * 0.1593017578125f));
                            float _2431 = exp2(((log2((_2419 * 9.999999747378752e-05f))) * 0.1593017578125f));
                            float _2432 = exp2(((log2((_2420 * 9.999999747378752e-05f))) * 0.1593017578125f));
                            _2573 = (exp2(((log2(((1.0f / ((_2430 * 18.6875f) + 1.0f)) * ((_2430 * 18.8515625f) + 0.8359375f)))) * 78.84375f)));
                            _2574 = (exp2(((log2(((1.0f / ((_2431 * 18.6875f) + 1.0f)) * ((_2431 * 18.8515625f) + 0.8359375f)))) * 78.84375f)));
                            _2575 = (exp2(((log2(((1.0f / ((_2432 * 18.6875f) + 1.0f)) * ((_2432 * 18.8515625f) + 0.8359375f)))) * 78.84375f)));
                          } while (false);
                        } while (false);
                      } while (false);
                    } while (false);
                  } while (false);
                } while (false);
              } while (false);
            } while (false);
          } while (false);
        } else {
          if (((((uint)(cb0_039w)) == 7))) {
            float _2465 = mad(0.04736635088920593f, _1025, (mad(0.3395121395587921f, _1022, (_1019 * 0.613191545009613f))));
            float _2468 = mad(0.01345000695437193f, _1025, (mad(0.9163357615470886f, _1022, (_1019 * 0.07020691782236099f))));
            float _2471 = mad(0.8696067929267883f, _1025, (mad(0.1095672994852066f, _1022, (_1019 * 0.020618872717022896f))));
            float _2490 = exp2(((log2(((mad(_41, _2471, (mad(_40, _2468, (_2465 * _39))))) * 9.999999747378752e-05f))) * 0.1593017578125f));
            float _2491 = exp2(((log2(((mad(_44, _2471, (mad(_43, _2468, (_2465 * _42))))) * 9.999999747378752e-05f))) * 0.1593017578125f));
            float _2492 = exp2(((log2(((mad(_47, _2471, (mad(_46, _2468, (_2465 * _45))))) * 9.999999747378752e-05f))) * 0.1593017578125f));
            _2573 = (exp2(((log2(((1.0f / ((_2490 * 18.6875f) + 1.0f)) * ((_2490 * 18.8515625f) + 0.8359375f)))) * 78.84375f)));
            _2574 = (exp2(((log2(((1.0f / ((_2491 * 18.6875f) + 1.0f)) * ((_2491 * 18.8515625f) + 0.8359375f)))) * 78.84375f)));
            _2575 = (exp2(((log2(((1.0f / ((_2492 * 18.6875f) + 1.0f)) * ((_2492 * 18.8515625f) + 0.8359375f)))) * 78.84375f)));
          } else {
            _2573 = _1019;
            _2574 = _1022;
            _2575 = _1025;
            if (!((((uint)(cb0_039w)) == 8))) {
              if (((((uint)(cb0_039w)) == 9))) {
                float _2527 = mad(0.04736635088920593f, _1046, (mad(0.3395121395587921f, _1045, (_1044 * 0.613191545009613f))));
                float _2530 = mad(0.01345000695437193f, _1046, (mad(0.9163357615470886f, _1045, (_1044 * 0.07020691782236099f))));
                float _2533 = mad(0.8696067929267883f, _1046, (mad(0.1095672994852066f, _1045, (_1044 * 0.020618872717022896f))));
                _2573 = (mad(_41, _2533, (mad(_40, _2530, (_2527 * _39)))));
                _2574 = (mad(_44, _2533, (mad(_43, _2530, (_2527 * _42)))));
                _2575 = (mad(_47, _2533, (mad(_46, _2530, (_2527 * _45)))));
              } else {
                float _2546 = mad(0.04736635088920593f, _1060, (mad(0.3395121395587921f, _1059, (_1058 * 0.613191545009613f))));
                float _2549 = mad(0.01345000695437193f, _1060, (mad(0.9163357615470886f, _1059, (_1058 * 0.07020691782236099f))));
                float _2552 = mad(0.8696067929267883f, _1060, (mad(0.1095672994852066f, _1059, (_1058 * 0.020618872717022896f))));
                _2573 = (exp2(((log2((mad(_41, _2552, (mad(_40, _2549, (_2546 * _39))))))) * (cb0_039z))));
                _2574 = (exp2(((log2((mad(_44, _2552, (mad(_43, _2549, (_2546 * _42))))))) * (cb0_039z))));
                _2575 = (exp2(((log2((mad(_47, _2552, (mad(_46, _2549, (_2546 * _45))))))) * (cb0_039z))));
              }
            }
          }
        }
      }
    }
  }
  SV_Target.x = (_2573 * 0.9523810148239136f);
  SV_Target.y = (_2574 * 0.9523810148239136f);
  SV_Target.z = (_2575 * 0.9523810148239136f);
  SV_Target.w = 0.0f;
  return SV_Target;
}
