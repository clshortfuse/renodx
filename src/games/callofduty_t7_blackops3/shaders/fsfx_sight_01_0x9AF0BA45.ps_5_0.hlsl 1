// ---- Created with 3Dmigoto v1.3.16 on Wed Aug 06 00:44:13 2025

#include "../common.hlsl"

Texture2D<float4> t7 : register(t7);

Texture2D<float4> t6 : register(t6);

struct t4_t {
  float val[6];
};
StructuredBuffer<t4_t> t4 : register(t4);

struct t0_t {
  float val[96];
};
StructuredBuffer<t0_t> t0 : register(t0);

SamplerState s2_s : register(s2);

SamplerState s1_s : register(s1);

cbuffer cb1 : register(b1)
{
  float4 cb1[86];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[14];
}




// 3Dmigoto declarations
#define cmp -


void main(
  float4 v0 : SV_POSITION0,
  float2 v1 : TEXCOORD0,
  float2 w1 : TEXCOORD1,
  float4 v2 : TEXCOORD2,
  nointerpolation uint v3 : TEXCOORD3,
  out float4 o0 : SV_TARGET0)
{
  float4 r0,r1,r2,r3;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xy = cmp(w1.xy < float2(0,0));
  r0.zw = cmp(float2(1,1) < w1.xy);
  r0.x = (int)r0.z | (int)r0.x;
  r0.x = (int)r0.y | (int)r0.x;
  r0.x = (int)r0.w | (int)r0.x;
  r0.yzw = t7.Sample(s2_s, w1.xy).xyz;
  r0.xyz = r0.xxx ? float3(0,0,0) : r0.yzw;
  r0.y = log2(abs(r0.y));
  r0.y = cb0[11].y * r0.y;
  r0.y = exp2(r0.y);
  r1.xyz = cb0[10].xyz * r0.yyy;
  r1.xyz = cb0[13].xxx * r1.xyz;
  r0.yw = cb0[10].ww * v1.xy;
  r0.y = t6.Sample(s1_s, r0.yw, int2(0, 0)).x;
  r1.xyz = r1.xyz * r0.yyy;
  r0.y = -cb0[11].z * r0.y + 1;
  r2.xyz = cb0[12].xyz * r0.xxx;
  r3.w = cb0[11].w * r0.z;
  r0.xzw = cb0[12].www * r2.xyz;
  r3.xyz = r0.xzw * r0.yyy + r1.xyz;
  r0.x = t4[v3.x].val[4/4];
  r0.y = t0[r0.x].val[132/4];
  r0.x = t0[r0.x].val[140/4];
  r0.x = saturate(r0.x + r0.x);
  r0.y = 1 + -r0.y;
  r1.xyzw = r3.xyzw * r0.yyyy;
  r0.xyzw = r1.xyzw * r0.xxxx;
  r1.xyz = saturate(r0.xyz);
  r1.xyz = float3(32768,32768,32768) * r1.xyz;
  r1.w = cmp(0 < cb1[85].w);
  o0.xyz = r1.www ? r1.xyz : r0.xyz;

  o0.xyz = Tradeoff_PrepareFullWidthFsfx(o0.xyz);
  o0.w = r0.w;
  return;
}