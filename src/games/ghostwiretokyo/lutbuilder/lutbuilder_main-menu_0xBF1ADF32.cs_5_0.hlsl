#include "./filmiclutbuilder.hlsli"

static const float4 _368[17] = { float4(-4.0f, -0.718548238277435302734375f, -4.97062206268310546875f, 0.80891323089599609375f), float4(-4.0f, 2.0810306072235107421875f, -3.0293781757354736328125f, 1.19108676910400390625f), float4(-3.1573765277862548828125f, 3.66812419891357421875f, -2.1261999607086181640625f, 1.5683000087738037109375f), float4(-0.485249996185302734375f, 4.0f, -1.5104999542236328125f, 1.94830000400543212890625f), float4(1.84773242473602294921875f, 4.0f, -1.0578000545501708984375f, 2.308300018310546875f), float4(1.84773242473602294921875f, 4.0f, -0.4668000042438507080078125f, 2.63840007781982421875f), float4(-2.3010299205780029296875f, 0.801995217800140380859375f, 0.11937999725341796875f, 2.85949993133544921875f), float4(-2.3010299205780029296875f, 1.19800484180450439453125f, 0.7088134288787841796875f, 2.9872608184814453125f), float4(-1.9312000274658203125f, 1.5943000316619873046875f, 1.2911865711212158203125f, 3.0127391815185546875f), float4(-1.5204999446868896484375f, 1.99730002880096435546875f, 1.2911865711212158203125f, 3.0127391815185546875f), float4(-1.0578000545501708984375f, 2.3782999515533447265625f, 0.0f, 0.0f), float4(-0.4668000042438507080078125f, 2.7683999538421630859375f, 0.0f, 0.0f), float4(0.11937999725341796875f, 3.0515000820159912109375f, 0.0f, 0.0f), float4(0.7088134288787841796875f, 3.2746293544769287109375f, 0.0f, 0.0f), float4(1.2911865711212158203125f, 3.32743072509765625f, 0.0f, 0.0f), float4(1.2911865711212158203125f, 3.32743072509765625f, 0.0f, 0.0f), 0.0f.xxxx };

RWTexture3D<float4> u0 : register(u0);

static uint3 gl_GlobalInvocationID;
struct SPIRV_Cross_Input {
  uint3 gl_GlobalInvocationID : SV_DispatchThreadID;
};

float dp3_f32(float3 a, float3 b) {
  precise float _422 = a.x * b.x;
  return mad(a.z, b.z, mad(a.y, b.y, _422));
}

int cvt_f32_i32(float v) {
  return isnan(v) ? 0 : ((v < (-2147483648.0f)) ? int(0x80000000) : ((v > 2147483520.0f) ? 2147483647 : int(v)));
}

float dp2_f32(float2 a, float2 b) {
  precise float _398 = a.x * b.x;
  return mad(a.y, b.y, _398);
}

void comp_main() {
  float _441 = float(gl_GlobalInvocationID.z);
  float _452 = mad(float(gl_GlobalInvocationID.x) + 0.5f, asfloat(cb0_m[68u].x), -0.015625f);
  float _453 = mad(asfloat(cb0_m[68u].y), float(gl_GlobalInvocationID.y) + 0.5f, -0.015625f);
  bool _460 = output_device >= 3u;
  float _467 = exp2(log2(_452 * 1.03225803375244140625f) * 0.0126833133399486541748046875f);
  float _468 = exp2(log2(_453 * 1.03225803375244140625f) * 0.0126833133399486541748046875f);
  float _469 = exp2(log2(_441 * 0.0322580635547637939453125f) * 0.0126833133399486541748046875f);

  float3 _509 = float3(_460 ? (exp2(log2(max(_467 - 0.8359375f, 0.0f) / mad(_467, -18.6875f, 18.8515625f)) * 6.277394771575927734375f) * 100.0f) : mad(exp2(mad(_452, 1.03225803375244140625f, -0.434017598628997802734375f) * 14.0f), 0.180000007152557373046875f, -0.00266771926544606685638427734375f), _460 ? (exp2(log2(max(_468 - 0.8359375f, 0.0f) / mad(_468, -18.6875f, 18.8515625f)) * 6.277394771575927734375f) * 100.0f) : mad(exp2(mad(_453, 1.03225803375244140625f, -0.434017598628997802734375f) * 14.0f), 0.180000007152557373046875f, -0.00266771926544606685638427734375f), _460 ? (exp2(log2(max(_469 - 0.8359375f, 0.0f) / mad(_469, -18.6875f, 18.8515625f)) * 6.277394771575927734375f) * 100.0f) : mad(exp2(mad(_441, 0.0322580635547637939453125f, -0.434017598628997802734375f) * 14.0f), 0.180000007152557373046875f, -0.00266771926544606685638427734375f));

#if 1  // delay output device override until after input is decoded
  ApplyLUTOutputOverrides();
#endif

float _510 = dp3_f32(float3(0.61319148540496826171875f, 0.3395120799541473388671875f, 0.0473663322627544403076171875f), _509);
  float _511 = dp3_f32(float3(0.070206902921199798583984375f, 0.9163358211517333984375f, 0.01345001161098480224609375f), _509);
  float _512 = dp3_f32(float3(0.02061887085437774658203125f, 0.109567292034626007080078125f, 0.8696067333221435546875f), _509);
  float3 _513 = float3(_510, _511, _512);
  float _514 = dp3_f32(_513, float3(0.272228717803955078125f, 0.674081742763519287109375f, 0.053689517080783843994140625f));
  float3 _521 = float3((_510 / _514) - 1.0f, (_511 / _514) - 1.0f, (_512 / _514) - 1.0f);
  float _534 = (1.0f - exp2(((_514 * _514) * asfloat(expand_gamut)) * (-4.0f))) * (1.0f - exp2(dp3_f32(_521, _521) * (-4.0f)));
  bool _546 = cb0_m[44u].y != 0u;
  float _547 = _546 ? _510 : mad(_534, dp3_f32(float3(1.37041270732879638671875f, -0.3292913138866424560546875f, -0.0636827647686004638671875f), _513) - _510, _510);
  float _548 = _546 ? _511 : mad(_534, dp3_f32(float3(-0.083434186875820159912109375f, 1.0970909595489501953125f, -0.010861572809517383575439453125f), _513) - _511, _511);
  float _549 = _546 ? _512 : mad(_534, dp3_f32(float3(-0.0257932581007480621337890625f, -0.098625637590885162353515625f, 1.20369434356689453125f), _513) - _512, _512);
  float _551 = dp3_f32(float3(_547, _548, _549), float3(0.272228717803955078125f, 0.674081742763519287109375f, 0.053689517080783843994140625f));
  float _558 = asfloat(cb0_m[45u].x);
  float _559 = asfloat(cb0_m[45u].y);
  float _560 = asfloat(cb0_m[45u].z);
  float _561 = asfloat(cb0_m[45u].w);
  float _575 = _561 * asfloat(cb0_m[50u].w);
  float _582 = asfloat(cb0_m[46u].x);
  float _583 = asfloat(cb0_m[46u].y);
  float _584 = asfloat(cb0_m[46u].z);
  float _585 = asfloat(cb0_m[46u].w);
  float _599 = _585 * asfloat(cb0_m[51u].w);
  float _606 = asfloat(cb0_m[47u].x);
  float _607 = asfloat(cb0_m[47u].y);
  float _608 = asfloat(cb0_m[47u].z);
  float _609 = asfloat(cb0_m[47u].w);
  float _623 = _609 * asfloat(cb0_m[52u].w);
  float _630 = asfloat(cb0_m[48u].x);
  float _631 = asfloat(cb0_m[48u].y);
  float _632 = asfloat(cb0_m[48u].z);
  float _633 = asfloat(cb0_m[48u].w);
  float _647 = _633 * asfloat(cb0_m[53u].w);
  float _654 = asfloat(cb0_m[49u].x);
  float _655 = asfloat(cb0_m[49u].y);
  float _656 = asfloat(cb0_m[49u].z);
  float _657 = asfloat(cb0_m[49u].w);
  float _671 = _657 + asfloat(cb0_m[54u].w);
  float _675 = _547 - _551;
  float _676 = _548 - _551;
  float _677 = _549 - _551;
  float _731 = clamp(_551 * (1.0f / asfloat(cb0_m[65u].x)), 0.0f, 1.0f);
  float _732 = mad(_731, -2.0f, 3.0f);
  float _733 = _731 * _731;
  float _735 = mad(-_732, _733, 1.0f);
  float _749 = _561 * asfloat(cb0_m[60u].w);
  float _763 = _585 * asfloat(cb0_m[61u].w);
  float _777 = _609 * asfloat(cb0_m[62u].w);
  float _791 = _633 * asfloat(cb0_m[63u].w);
  float _805 = _657 + asfloat(cb0_m[64u].w);
  float _859 = asfloat(cb0_m[65u].y);
  float _864 = clamp((_551 - _859) * (1.0f / (1.0f - _859)), 0.0f, 1.0f);
  float _865 = mad(_864, -2.0f, 3.0f);
  float _866 = _864 * _864;
  float _867 = _865 * _866;
  float _881 = _561 * asfloat(cb0_m[55u].w);
  float _895 = _585 * asfloat(cb0_m[56u].w);
  float _909 = _609 * asfloat(cb0_m[57u].w);
  float _923 = _633 * asfloat(cb0_m[58u].w);
  float _937 = _657 + asfloat(cb0_m[59u].w);
  float _992 = mad(-_865, _866, mad(_732, _733, -1.0f) + 1.0f);
  float _1002 = mad(mad(exp2((1.0f / ((_606 * asfloat(cb0_m[62u].x)) * _777)) * log2(exp2(((_582 * asfloat(cb0_m[61u].x)) * _763) * log2(max(mad(_675, (_558 * asfloat(cb0_m[60u].x)) * _749, _551), 0.0f) * 5.5555553436279296875f)) * 0.180000007152557373046875f)), (_630 * asfloat(cb0_m[63u].x)) * _791, (_654 + asfloat(cb0_m[64u].x)) + _805), _867, (mad(exp2((1.0f / ((_606 * asfloat(cb0_m[57u].x)) * _909)) * log2(exp2(((_582 * asfloat(cb0_m[56u].x)) * _895) * log2(max(mad(_675, (_558 * asfloat(cb0_m[55u].x)) * _881, _551), 0.0f) * 5.5555553436279296875f)) * 0.180000007152557373046875f)), (_630 * asfloat(cb0_m[58u].x)) * _923, (_654 + asfloat(cb0_m[59u].x)) + _937) * _992) + (mad(exp2((1.0f / ((_606 * asfloat(cb0_m[52u].x)) * _623)) * log2(exp2(((_582 * asfloat(cb0_m[51u].x)) * _599) * log2(max(mad((_558 * asfloat(cb0_m[50u].x)) * _575, _675, _551), 0.0f) * 5.5555553436279296875f)) * 0.180000007152557373046875f)), (_630 * asfloat(cb0_m[53u].x)) * _647, (_654 + asfloat(cb0_m[54u].x)) + _671) * _735));
  float _1003 = mad(_867, mad(exp2((1.0f / ((_607 * asfloat(cb0_m[62u].y)) * _777)) * log2(exp2(log2(max(mad(_676, _749 * (_559 * asfloat(cb0_m[60u].y)), _551), 0.0f) * 5.5555553436279296875f) * ((_583 * asfloat(cb0_m[61u].y)) * _763)) * 0.180000007152557373046875f)), _791 * (_631 * asfloat(cb0_m[63u].y)), (_655 + asfloat(cb0_m[64u].y)) + _805), (_992 * mad(exp2((1.0f / ((_607 * asfloat(cb0_m[57u].y)) * _909)) * log2(exp2((_895 * (_583 * asfloat(cb0_m[56u].y))) * log2(max(mad(_676, (_559 * asfloat(cb0_m[55u].y)) * _881, _551), 0.0f) * 5.5555553436279296875f)) * 0.180000007152557373046875f)), (_631 * asfloat(cb0_m[58u].y)) * _923, _937 + (_655 + asfloat(cb0_m[59u].y)))) + (_735 * mad(_647 * (_631 * asfloat(cb0_m[53u].y)), exp2(log2(exp2((_599 * (_583 * asfloat(cb0_m[51u].y))) * log2(max(mad(_575 * (_559 * asfloat(cb0_m[50u].y)), _676, _551), 0.0f) * 5.5555553436279296875f)) * 0.180000007152557373046875f) * (1.0f / ((_607 * asfloat(cb0_m[52u].y)) * _623))), (_655 + asfloat(cb0_m[54u].y)) + _671)));
  float _1004 = mad(_867, mad(exp2((1.0f / (_777 * (_608 * asfloat(cb0_m[62u].z)))) * log2(exp2(log2(max(mad(_749 * (_560 * asfloat(cb0_m[60u].z)), _677, _551), 0.0f) * 5.5555553436279296875f) * ((_584 * asfloat(cb0_m[61u].z)) * _763)) * 0.180000007152557373046875f)), _791 * (_632 * asfloat(cb0_m[63u].z)), (_656 + asfloat(cb0_m[64u].z)) + _805), (_992 * mad(exp2((1.0f / ((_608 * asfloat(cb0_m[57u].z)) * _909)) * log2(exp2((_895 * (_584 * asfloat(cb0_m[56u].z))) * log2(max(mad(_677, _881 * (_560 * asfloat(cb0_m[55u].z)), _551), 0.0f) * 5.5555553436279296875f)) * 0.180000007152557373046875f)), _923 * (_632 * asfloat(cb0_m[58u].z)), _937 + (_656 + asfloat(cb0_m[59u].z)))) + (_735 * mad(_647 * (_632 * asfloat(cb0_m[53u].z)), exp2((1.0f / (_623 * (_608 * asfloat(cb0_m[52u].z)))) * log2(exp2((_599 * (_584 * asfloat(cb0_m[51u].z))) * log2(max(mad(_575 * (_560 * asfloat(cb0_m[50u].z)), _677, _551), 0.0f) * 5.5555553436279296875f)) * 0.180000007152557373046875f)), (_656 + asfloat(cb0_m[54u].z)) + _671)));
  float3 _1005 = float3(_1002, _1003, _1004);
  float _1006 = dp3_f32(float3(1.70505154132843017578125f, -0.621790707111358642578125f, -0.083258397877216339111328125f), _1005);
  float _1007 = dp3_f32(float3(-0.13025714457035064697265625f, 1.140802860260009765625f, -0.0105485282838344573974609375f), _1005);
  float _1008 = dp3_f32(float3(-0.024003274738788604736328125f, -0.128968775272369384765625f, 1.152971744537353515625f), _1005);
  float _1474;
  float _1475;
  float _1476;
  if (_546) {
    float3 _1012 = float3(_1006, _1007, _1008);
    float _1054 = 1.0f / (dp3_f32(_1012, float3(asfloat(cb0_m[33u].x), asfloat(cb0_m[33u].y), asfloat(cb0_m[33u].z))) + 1.0f);
    float _1077 = max(dp3_f32(_1012, float3(asfloat(cb0_m[28u].x), asfloat(cb0_m[28u].y), asfloat(cb0_m[28u].z))) * mad(_1054, asfloat(cb0_m[35u].x), asfloat(cb0_m[34u].x)), 0.0f);
    float _1078 = max(dp3_f32(_1012, float3(asfloat(cb0_m[29u].x), asfloat(cb0_m[29u].y), asfloat(cb0_m[29u].z))) * mad(_1054, asfloat(cb0_m[35u].y), asfloat(cb0_m[34u].y)), 0.0f);
    float _1079 = max(dp3_f32(_1012, float3(asfloat(cb0_m[30u].x), asfloat(cb0_m[30u].y), asfloat(cb0_m[30u].z))) * mad(_1054, asfloat(cb0_m[35u].z), asfloat(cb0_m[34u].z)), 0.0f);
    float _1082 = asfloat(cb0_m[31u].x);
    float _1086 = max(_1082 - _1077, 0.0f);
    float _1087 = max(_1082 - _1078, 0.0f);
    float _1088 = max(_1082 - _1079, 0.0f);
    float _1091 = asfloat(cb0_m[31u].z);
    float _1092 = max(_1077, _1091);
    float _1093 = max(_1091, _1078);
    float _1094 = max(_1091, _1079);
    float _1100 = asfloat(cb0_m[32u].x);
    float _1103 = asfloat(cb0_m[32u].y);
    float _1109 = asfloat(cb0_m[31u].w);
    float _1118 = asfloat(cb0_m[28u].w);
    float _1124 = asfloat(cb0_m[31u].y);
    float _1133 = asfloat(cb0_m[29u].w);
    float _1139 = asfloat(cb0_m[30u].w);
    _1474 = mad(mad(_1100, _1094, _1103), 1.0f / (_1109 + _1094), mad(_1139, clamp(_1082, _1079, _1091), mad(1.0f / (_1124 + _1088), _1118 * _1088, _1133))) - 0.00200000009499490261077880859375f;
    _1475 = mad(mad(_1100, _1093, _1103), 1.0f / (_1109 + _1093), mad(_1139, clamp(_1082, _1078, _1091), mad(1.0f / (_1124 + _1087), _1118 * _1087, _1133))) - 0.00200000009499490261077880859375f;
    _1476 = mad(mad(_1092, _1100, _1103), 1.0f / (_1092 + _1109), mad(clamp(_1077, _1082, _1091), _1139, mad(_1086 * _1118, 1.0f / (_1086 + _1124), _1133))) - 0.00200000009499490261077880859375f;
  } else {
    float _1157 = asfloat(cb0_m[66u].x);
    float _1158 = mad(dp3_f32(float3(0.9386394023895263671875f, 1.0235956526827294510439969599247e-10f, 0.0613606236875057220458984375f), _1005) - _1002, _1157, _1002);
    float _1159 = mad(_1157, dp3_f32(float3(8.3600855405041585299841244705021e-11f, 0.830794155597686767578125f, 0.1692058742046356201171875f), _1005) - _1003, _1003);
    float _1160 = mad(_1157, dp3_f32(float3(2.1318736706521512758172320900485e-12f, -5.6330721337483069532936497125775e-12f, 1.0f), _1005) - _1004, _1004);
    float3 _1161 = float3(_1158, _1159, _1160);
    float _1162 = dp3_f32(float3(0.695452213287353515625f, 0.140678703784942626953125f, 0.16386906802654266357421875f), _1161);
    float _1163 = dp3_f32(float3(0.0447945632040500640869140625f, 0.859671115875244140625f, 0.095534317195415496826171875f), _1161);
    float _1164 = dp3_f32(float3(-0.005525882355868816375732421875f, 0.0040252101607620716094970703125f, 1.00150072574615478515625f), _1161);
    float _1168 = max(_1164, max(_1162, _1163));
    float _1173 = (max(_1168, 1.0000000133514319600180897396058e-10f) - max(min(_1164, min(_1162, _1163)), 1.0000000133514319600180897396058e-10f)) / max(_1168, 0.00999999977648258209228515625f);
    float _1184 = mad(sqrt(mad(_1162 - _1164, _1162, (_1163 * (_1163 - _1162)) + (_1164 * (_1164 - _1163)))), 1.75f, _1162 + (_1163 + _1164));
    float _1186 = _1173 - 0.4000000059604644775390625f;
    float _1190 = max(1.0f - abs(_1186 * 2.5f), 0.0f);
    float _1201 = mad(float(int(((_1186 < 0.0f) ? 4294967295u : 0u) + uint(_1186 > 0.0f))), mad(-_1190, _1190, 1.0f), 1.0f) * 0.02500000037252902984619140625f;
    float _1209 = ((_1184 <= 0.1599999964237213134765625f) ? _1201 : ((_1184 >= 0.4799999892711639404296875f) ? 0.0f : (_1201 * ((0.07999999821186065673828125f / (_1184 * 0.3333333432674407958984375f)) - 0.5f)))) + 1.0f;
    float _1210 = _1162 * _1209;
    float _1211 = _1163 * _1209;
    float _1212 = _1164 * _1209;
    float _1217 = (_1211 - _1212) * 1.73205077648162841796875f;
    float _1219 = (_1210 * 2.0f) - _1211;
    float _1221 = mad(-_1164, _1209, _1219);
    float _1222 = abs(_1221);
    float _1223 = abs(_1217);
    float _1227 = min(_1222, _1223) * (1.0f / max(_1222, _1223));
    float _1228 = _1227 * _1227;
    float _1232 = mad(_1228, mad(_1228, mad(_1228, mad(_1228, 0.02083509974181652069091796875f, -0.08513300120830535888671875f), 0.1801410019397735595703125f), -0.33029949665069580078125f), 0.999866008758544921875f);
    float _1242 = mad(_1227, _1232, (_1222 < _1223) ? mad(_1227 * _1232, -2.0f, 1.57079637050628662109375f) : 0.0f) + ((_1221 < mad(_1164, _1209, -_1219)) ? (-3.1415927410125732421875f) : 0.0f);
    float _1243 = min(_1217, _1221);
    float _1244 = max(_1217, _1221);
    float _1253 = ((_1212 == _1211) && (_1211 == _1210)) ? 0.0f : ((((_1243 < (-_1243)) && (_1244 >= (-_1244))) ? (-_1242) : _1242) * 57.295780181884765625f);
    float _1257 = clamp((_1253 < 0.0f) ? (_1253 + 360.0f) : _1253, 0.0f, 360.0f);
    float _1264 = max(1.0f - abs(((_1257 > 180.0f) ? (_1257 - 360.0f) : _1257) * 0.01481481455266475677490234375f), 0.0f);
    float _1267 = mad(_1264, -2.0f, 3.0f) * (_1264 * _1264);
    float3 _1275 = float3(_1210 + (((_1173 * (_1267 * _1267)) * mad(-_1162, _1209, 0.02999999932944774627685546875f)) * 0.180000007152557373046875f), _1211, _1212);
    float _1279 = max(dp3_f32(float3(1.45143926143646240234375f, -0.236510753631591796875f, -0.214928567409515380859375f), _1275), 0.0f);
    float _1280 = max(dp3_f32(float3(-0.07655377686023712158203125f, 1.1762297153472900390625f, -0.0996759235858917236328125f), _1275), 0.0f);
    float _1281 = max(dp3_f32(float3(0.0083161480724811553955078125f, -0.0060324496589601039886474609375f, 0.99771630764007568359375f), _1275), 0.0f);
    float _1283 = dp3_f32(float3(_1279, _1280, _1281), float3(0.272228717803955078125f, 0.674081742763519287109375f, 0.053689517080783843994140625f));
    float _1330 = (mad(_1279 - _1283, 0.959999978542327880859375f, _1283));
    float _1331 = (mad(_1280 - _1283, 0.959999978542327880859375f, _1283));
    float _1332 = (mad(_1281 - _1283, 0.959999978542327880859375f, _1283));

#if 0
    _1330 = log2(_1330);
    _1331 = log2(_1331);
    _1332 = log2(_1332);
    float _1292 = asfloat(cb0_m[36u].w);
    float _1297 = asfloat(cb0_m[36u].y);
    float _1298 = (_1292 + 1.0f) - _1297;
    float _1302 = asfloat(cb0_m[37u].x) + 1.0f;
    float _1305 = asfloat(cb0_m[36u].z);
    float _1306 = _1302 - _1305;
    float _1312 = asfloat(cb0_m[36u].x);
    float _1314 = (1.0f - _1297) / _1312;
    float _1315 = (_1292 + 0.180000007152557373046875f) / _1298;
    float _1325 = (_1297 > 0.800000011920928955078125f) ? (((0.819999992847442626953125f - _1297) / _1312) - 0.74472749233245849609375f) : mad(-(log2(_1315 / ((1.0f - _1315) + 1.0f)) * 0.3465735912322998046875f), _1298 / _1312, -0.74472749233245849609375f);
    float _1326 = _1314 - _1325;
    float _1329 = (_1305 / _1312) + (_1325 - _1314);
    float _1333 = _1330 * 0.3010300099849700927734375f;
    float _1334 = _1331 * 0.3010300099849700927734375f;
    float _1335 = _1332 * 0.3010300099849700927734375f;
    float _1339 = _1312 * mad(_1330, 0.3010300099849700927734375f, _1326);
    float _1340 = _1312 * mad(_1331, 0.3010300099849700927734375f, _1326);
    float _1341 = _1312 * mad(_1332, 0.3010300099849700927734375f, _1326);
    float _1342 = _1298 + _1298;
    float _1344 = (_1312 * (-2.0f)) / _1298;
    float _1346 = mad(_1330, 0.3010300099849700927734375f, -_1325);
    float _1348 = mad(_1331, 0.3010300099849700927734375f, -_1325);
    float _1350 = mad(_1332, 0.3010300099849700927734375f, -_1325);
    float _1369 = _1306 + _1306;
    float _1371 = (_1312 + _1312) / _1306;
    float _1399 = (_1333 < _1325) ? ((_1342 / (exp2((_1344 * _1346) * 1.44269502162933349609375f) + 1.0f)) - _1292) : _1339;
    float _1400 = (_1325 > _1334) ? ((_1342 / (exp2((_1344 * _1348) * 1.44269502162933349609375f) + 1.0f)) - _1292) : _1340;
    float _1401 = (_1325 > _1335) ? ((_1342 / (exp2((_1344 * _1350) * 1.44269502162933349609375f) + 1.0f)) - _1292) : _1341;
    float _1408 = _1329 - _1325;
    float _1412 = clamp(_1346 / _1408, 0.0f, 1.0f);
    float _1413 = clamp(_1348 / _1408, 0.0f, 1.0f);
    float _1414 = clamp(_1350 / _1408, 0.0f, 1.0f);
    bool _1415 = _1329 < _1325;
    float _1419 = _1415 ? (1.0f - _1412) : _1412;
    float _1420 = _1415 ? (1.0f - _1413) : _1413;
    float _1421 = _1415 ? (1.0f - _1414) : _1414;
    float _1434 = mad(mad(_1419, -2.0f, 3.0f) * (_1419 * _1419), ((_1329 < _1333) ? (_1302 - (_1369 / (exp2((_1371 * mad(_1330, 0.3010300099849700927734375f, -_1329)) * 1.44269502162933349609375f) + 1.0f))) : _1339) - _1399, _1399);
    float _1435 = mad(((_1329 < _1334) ? (_1302 - (_1369 / (exp2((_1371 * mad(_1331, 0.3010300099849700927734375f, -_1329)) * 1.44269502162933349609375f) + 1.0f))) : _1340) - _1400, (_1420 * _1420) * mad(_1420, -2.0f, 3.0f), _1400);
    float _1436 = mad(((_1329 < _1335) ? (_1302 - (_1369 / (exp2((_1371 * mad(_1332, 0.3010300099849700927734375f, -_1329)) * 1.44269502162933349609375f) + 1.0f))) : _1341) - _1401, (_1421 * _1421) * mad(_1421, -2.0f, 3.0f), _1401);
    float _1438 = dp3_f32(float3(_1434, _1435, _1436), float3(0.272228717803955078125f, 0.674081742763519287109375f, 0.053689517080783843994140625f));
    float _1453 = asfloat(cb0_m[66u].z);
    float _1454 = mad(max(mad(_1434 - _1438, 0.930000007152557373046875f, _1438), 0.0f) - _1158, _1453, _1158);
    float _1455 = mad(_1453, max(mad(_1435 - _1438, 0.930000007152557373046875f, _1438), 0.0f) - _1159, _1159);
    float _1456 = mad(_1453, max(mad(_1436 - _1438, 0.930000007152557373046875f, _1438), 0.0f) - _1160, _1160);
    float3 _1457 = float3(_1454, _1455, _1456);
    float3 _1467 = float3(mad(_1157, dp3_f32(float3(1.065374851226806640625f, 1.4467850633081980049610137939453e-06f, -0.0653710067272186279296875f), _1457) - _1454, _1454), mad(_1157, dp3_f32(float3(-3.4552559213807398919016122817993e-07f, 1.20366346836090087890625f, -0.20366771519184112548828125f), _1457) - _1455, _1455), mad(_1157, dp3_f32(float3(1.9865447953293369209859520196915e-08f, 2.1207958056379538902547210454941e-08f, 0.999999582767486572265625f), _1457) - _1456, _1456));
#else

    float preRRT_r = _1158;
    float preRRT_g = _1159;
    float preRRT_b = _1160;

    float3 _1467;
    ApplyFilmicToneMap(_1330, _1331, _1332, preRRT_r, preRRT_g, preRRT_b, _1467.r, _1467.g, _1467.b);

#endif
    // remove max(0.f)
    _1474 = (dp3_f32(float3(-0.024003274738788604736328125f, -0.128968775272369384765625f, 1.152971744537353515625f), _1467));
    _1475 = (dp3_f32(float3(-0.13025714457035064697265625f, 1.140802860260009765625f, -0.0105485282838344573974609375f), _1467));
    _1476 = (dp3_f32(float3(1.70505154132843017578125f, -0.621790707111358642578125f, -0.083258397877216339111328125f), _1467));
  }
  float _1482 = asfloat(cb0_m[26u].y);
  float _1488 = asfloat(cb0_m[26u].x);
  float _1497 = asfloat(cb0_m[26u].z);
  float _1498 = ((_1482 * _1476) + ((_1476 * _1476) * _1488)) + _1497;
  float _1499 = _1497 + ((_1488 * (_1475 * _1475)) + (_1482 * _1475));
  float _1500 = _1497 + ((_1488 * (_1474 * _1474)) + (_1482 * _1474));
  float _1506 = asfloat(cb0_m[42u].y);
  float _1507 = asfloat(cb0_m[42u].z);
  float _1508 = asfloat(cb0_m[42u].w);
  float _1517 = asfloat(cb0_m[43u].x);
  float _1518 = asfloat(cb0_m[43u].y);
  float _1519 = asfloat(cb0_m[43u].z);
  float _1528 = asfloat(cb0_m[43u].w);
  float _1532 = (_1498 * _1506) + (mad(-_1498, _1506, _1517) * _1528);
  float _1533 = (_1528 * mad(-_1507, _1499, _1518)) + (_1507 * _1499);
  float _1534 = (_1528 * mad(-_1508, _1500, _1519)) + (_1508 * _1500);

  if (GenerateOutput(_1532, _1533, _1534, u0[uint3(gl_GlobalInvocationID.xyz)], is_hdr)) {
    return;
  }

  float _1543 = asfloat(cb0_m[27u].y);
  float _1544 = log2(max(_1532, 0.0f)) * _1543;
  float _1545 = _1543 * log2(max(_1533, 0.0f));
  float _1546 = _1543 * log2(max(_1534, 0.0f));
  float _1547 = exp2(_1544);
  float _1548 = exp2(_1545);
  float _1549 = exp2(_1546);
  float _3324;
  float _3325;
  float _3326;
  if (output_device == 0u) {
    _3324 = (_1549 >= 0.00313066993840038776397705078125f) ? mad(exp2(_1546 * 0.4166666567325592041015625f), 1.05499994754791259765625f, -0.054999999701976776123046875f) : (_1549 * 12.9200000762939453125f);
    _3325 = (_1548 >= 0.00313066993840038776397705078125f) ? mad(exp2(_1545 * 0.4166666567325592041015625f), 1.05499994754791259765625f, -0.054999999701976776123046875f) : (_1548 * 12.9200000762939453125f);
    _3326 = (_1547 >= 0.00313066993840038776397705078125f) ? mad(exp2(_1544 * 0.4166666567325592041015625f), 1.05499994754791259765625f, -0.054999999701976776123046875f) : (_1547 * 12.9200000762939453125f);
  } else {
    bool _1574 = output_gamut == 1u;
    bool _1575 = output_gamut == 2u;
    bool _1576 = output_gamut == 3u;
    bool _1577 = output_gamut == 4u;
    float _1605 = _1574 ? 1.37915885448455810546875f : (_1575 ? 1.025799274444580078125f : (_1576 ? 0.695452213287353515625f : (_1577 ? 1.0f : 1.70505154132843017578125f)));
    float _1606 = _1574 ? (-0.3088507354259490966796875f) : (_1575 ? (-0.02005250938236713409423828125f) : (_1576 ? 0.140678703784942626953125f : (_1577 ? 0.0f : (-0.621790707111358642578125f))));
    float _1607 = _1574 ? (-0.0703467428684234619140625f) : (_1575 ? (-0.005771367810666561126708984375f) : (_1576 ? 0.16386906802654266357421875f : (_1577 ? 0.0f : (-0.083258397877216339111328125f))));
    float _1608 = _1574 ? (-0.06933529675006866455078125f) : (_1575 ? (-0.00223502493463456630706787109375f) : (_1576 ? 0.0447945632040500640869140625f : (_1577 ? 0.0f : (-0.13025714457035064697265625f))));
    float _1609 = _1574 ? 1.0822923183441162109375f : (_1575 ? 1.0045826435089111328125f : (_1576 ? 0.859671115875244140625f : (_1577 ? 1.0f : 1.140802860260009765625f)));
    float _1610 = _1574 ? (-0.012962051667273044586181640625f) : (_1575 ? (-0.00235231337137520313262939453125f) : (_1576 ? 0.095534317195415496826171875f : (_1577 ? 0.0f : (-0.0105485282838344573974609375f))));
    float _1611 = _1574 ? (-0.00215925858356058597564697265625f) : (_1575 ? (-0.005014003254473209381103515625f) : (_1576 ? (-0.0055258828215301036834716796875f) : (_1577 ? 0.0f : (-0.024003274738788604736328125f))));
    float _1612 = _1574 ? (-0.0454653985798358917236328125f) : (_1575 ? (-0.025293387472629547119140625f) : (_1576 ? 0.0040252101607620716094970703125f : (_1577 ? 0.0f : (-0.128968775272369384765625f))));
    float _1613 = _1574 ? 1.047759532928466796875f : (_1575 ? 1.03044021129608154296875f : (_1576 ? 1.00150072574615478515625f : (_1577 ? 1.0f : 1.152971744537353515625f)));
    float _3321;
    float _3322;
    float _3323;
    if (output_device == 1u) {
      float3 _1618 = float3(_1547, _1548, _1549);
      float3 _1623 = float3(dp3_f32(float3(0.61319148540496826171875f, 0.3395120799541473388671875f, 0.0473663322627544403076171875f), _1618), dp3_f32(float3(0.070206902921199798583984375f, 0.9163358211517333984375f, 0.01345001161098480224609375f), _1618), dp3_f32(float3(0.02061887085437774658203125f, 0.109567292034626007080078125f, 0.8696067333221435546875f), _1618));
      float _1629 = max(dp3_f32(float3(_1605, _1606, _1607), _1623), 6.1035199905745685100555419921875e-05f);
      float _1630 = max(dp3_f32(float3(_1608, _1609, _1610), _1623), 6.1035199905745685100555419921875e-05f);
      float _1631 = max(dp3_f32(float3(_1611, _1612, _1613), _1623), 6.1035199905745685100555419921875e-05f);
      _3321 = min(mad(exp2(log2(max(_1631, 0.017999999225139617919921875f)) * 0.449999988079071044921875f), 1.09899997711181640625f, -0.098999999463558197021484375f), _1631 * 4.5f);
      _3322 = min(mad(exp2(log2(max(_1630, 0.017999999225139617919921875f)) * 0.449999988079071044921875f), 1.09899997711181640625f, -0.098999999463558197021484375f), _1630 * 4.5f);
      _3323 = min(mad(exp2(log2(max(_1629, 0.017999999225139617919921875f)) * 0.449999988079071044921875f), 1.09899997711181640625f, -0.098999999463558197021484375f), _1629 * 4.5f);
    } else {
      float _1665 = (_1006 * _1506) + (_1528 * mad(-_1006, _1506, _1517));
      float _1666 = (_1528 * mad(-_1007, _1507, _1518)) + (_1007 * _1507);
      float _1667 = (_1528 * mad(-_1008, _1508, _1519)) + (_1008 * _1508);
      float _3318;
      float _3319;
      float _3320;
      if ((output_device == 3u) || (output_device == 5u)) {
        float3 _1677 = float3(_1665 * 1.5f, _1666 * 1.5f, _1667 * 1.5f);
        float _1678 = dp3_f32(float3(0.4397008121013641357421875f, 0.3829780519008636474609375f, 0.17733480036258697509765625f), _1677);
        float _1679 = dp3_f32(float3(0.089792303740978240966796875f, 0.81342315673828125f, 0.09676162898540496826171875f), _1677);
        float _1680 = dp3_f32(float3(0.01754398643970489501953125f, 0.11154405772686004638671875f, 0.870704114437103271484375f), _1677);
        float _1684 = max(_1680, max(_1678, _1679));
        float _1689 = (max(_1684, 1.0000000133514319600180897396058e-10f) - max(min(_1680, min(_1678, _1679)), 1.0000000133514319600180897396058e-10f)) / max(_1684, 0.00999999977648258209228515625f);
        float _1700 = mad(sqrt(mad(_1678, _1678 - _1680, (_1680 * (_1680 - _1679)) + (_1679 * (_1679 - _1678)))), 1.75f, _1678 + (_1679 + _1680));
        float _1702 = _1689 - 0.4000000059604644775390625f;
        float _1706 = max(1.0f - abs(_1702 * 2.5f), 0.0f);
        float _1717 = mad(float(int(((_1702 < 0.0f) ? 4294967295u : 0u) + uint(_1702 > 0.0f))), mad(-_1706, _1706, 1.0f), 1.0f) * 0.02500000037252902984619140625f;
        float _1725 = ((_1700 <= 0.1599999964237213134765625f) ? _1717 : ((_1700 >= 0.4799999892711639404296875f) ? 0.0f : (_1717 * ((0.07999999821186065673828125f / (_1700 * 0.3333333432674407958984375f)) - 0.5f)))) + 1.0f;
        float _1726 = _1678 * _1725;
        float _1727 = _1679 * _1725;
        float _1728 = _1680 * _1725;
        float _1733 = (_1727 - _1728) * 1.73205077648162841796875f;
        float _1735 = (_1726 * 2.0f) - _1727;
        float _1737 = mad(-_1680, _1725, _1735);
        float _1738 = abs(_1733);
        float _1739 = abs(_1737);
        float _1743 = min(_1738, _1739) * (1.0f / max(_1738, _1739));
        float _1744 = _1743 * _1743;
        float _1748 = mad(_1744, mad(_1744, mad(_1744, mad(_1744, 0.02083509974181652069091796875f, -0.08513300120830535888671875f), 0.1801410019397735595703125f), -0.33029949665069580078125f), 0.999866008758544921875f);
        float _1758 = mad(_1743, _1748, (_1738 > _1739) ? mad(_1743 * _1748, -2.0f, 1.57079637050628662109375f) : 0.0f) + ((_1737 < mad(_1680, _1725, -_1735)) ? (-3.1415927410125732421875f) : 0.0f);
        float _1759 = min(_1733, _1737);
        float _1760 = max(_1733, _1737);
        float _1769 = ((_1726 == _1727) && (_1728 == _1727)) ? 0.0f : ((((_1759 < (-_1759)) && (_1760 >= (-_1760))) ? (-_1758) : _1758) * 57.295780181884765625f);
        float _1773 = clamp((_1769 < 0.0f) ? (_1769 + 360.0f) : _1769, 0.0f, 360.0f);
        float _1776 = (_1773 > 180.0f) ? (_1773 - 360.0f) : _1773;
        float _1813;
        if ((_1776 > (-67.5f)) && (_1776 < 67.5f)) {
          float _1783 = _1776 + 67.5f;
          float _1784 = _1783 * 0.0296296291053295135498046875f;
          float _1788 = mad(_1783, 0.0296296291053295135498046875f, -trunc(_1784));
          float _1789 = _1788 * _1788;
          float _1790 = _1788 * _1789;
          float _1794 = _1789 * 0.5f;
          uint _1802 = uint(cvt_f32_i32(_1784));
          _1813 = (_1802 == 3u) ? (mad(_1788, -0.5f, _1794 + (_1790 * (-0.16666667163372039794921875f))) + 0.16666667163372039794921875f) : ((_1802 == 2u) ? (((_1790 * 0.5f) - _1789) + 0.666666686534881591796875f) : ((_1802 == 1u) ? (mad(_1788, 0.5f, _1794 + (_1790 * (-0.5f))) + 0.16666667163372039794921875f) : ((_1802 != 0u) ? 0.0f : (_1790 * 0.16666667163372039794921875f))));
        } else {
          _1813 = 0.0f;
        }
        float3 _1824 = float3(clamp(_1726 + ((((_1689 * _1813) * 1.5f) * mad(-_1678, _1725, 0.02999999932944774627685546875f)) * 0.180000007152557373046875f), 0.0f, 65535.0f), clamp(_1727, 0.0f, 65535.0f), clamp(_1728, 0.0f, 65535.0f));
        float _1828 = clamp(dp3_f32(float3(1.45143926143646240234375f, -0.236510753631591796875f, -0.214928567409515380859375f), _1824), 0.0f, 65535.0f);
        float _1829 = clamp(dp3_f32(float3(-0.07655377686023712158203125f, 1.1762297153472900390625f, -0.0996759235858917236328125f), _1824), 0.0f, 65535.0f);
        float _1830 = clamp(dp3_f32(float3(0.0083161480724811553955078125f, -0.0060324496589601039886474609375f, 0.99771630764007568359375f), _1824), 0.0f, 65535.0f);
        float _1832 = dp3_f32(float3(_1828, _1829, _1830), float3(0.272228717803955078125f, 0.674081742763519287109375f, 0.053689517080783843994140625f));
        float _1836 = mad(_1828 - _1832, 0.959999978542327880859375f, _1832);
        float _1837 = mad(_1829 - _1832, 0.959999978542327880859375f, _1832);
        float _1838 = mad(_1830 - _1832, 0.959999978542327880859375f, _1832);
        float _1845 = (_1836 <= 0.0f) ? (-14.0f) : log2(_1836);
        float _1846 = (_1837 <= 0.0f) ? (-14.0f) : log2(_1837);
        float _1847 = (_1838 <= 0.0f) ? (-14.0f) : log2(_1838);
        float _1935;
        if (_1845 <= (-17.4739322662353515625f)) {
          _1935 = -4.0f;
        } else {
          float _1934;
          if ((_1845 > (-17.4739322662353515625f)) && (_1845 < (-2.4739310741424560546875f))) {
            float _1860 = mad(_1845, 0.3010300099849700927734375f, 5.2601776123046875f);
            float _1861 = _1860 * 0.6643855571746826171875f;
            int _1862 = cvt_f32_i32(_1861);
            float _1865 = mad(_1860, 0.6643855571746826171875f, -trunc(_1861));
            uint _1872 = min(uint(_1862), 16u);
            uint _1879 = min(uint(_1862 + 1), 16u);
            uint _1883 = min(uint(_1862 + 2), 16u);
            float2 _1889 = float2(_368[_1872].x, _368[_1879].x);
            _1934 = dp3_f32(float3(_1865 * _1865, _1865, 1.0f), float3(dp3_f32(float3(_368[_1872].x, _368[_1883].x, _368[_1879].x), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_1889, float2(-1.0f, 1.0f)), dp2_f32(_1889, 0.5f.xx)));
          } else {
            float _1933;
            if ((_1845 >= (-2.4739310741424560546875f)) && (_1845 < 15.52606868743896484375f)) {
              float _1901 = mad(_1845, 0.3010300099849700927734375f, 0.74472749233245849609375f);
              float _1902 = _1901 * 0.55365467071533203125f;
              int _1903 = cvt_f32_i32(_1902);
              float _1906 = mad(_1901, 0.55365467071533203125f, -trunc(_1902));
              uint _1913 = min(uint(_1903), 16u);
              uint _1917 = min(uint(_1903 + 1), 16u);
              uint _1921 = min(uint(_1903 + 2), 16u);
              float2 _1927 = float2(_368[_1913].y, _368[_1917].y);
              _1933 = dp3_f32(float3(_1906 * _1906, _1906, 1.0f), float3(dp3_f32(float3(_368[_1913].y, _368[_1921].y, _368[_1917].y), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_1927, float2(-1.0f, 1.0f)), dp2_f32(_1927, 0.5f.xx)));
            } else {
              _1933 = 4.0f;
            }
            _1934 = _1933;
          }
          _1935 = _1934;
        }
        float _2019;
        if (_1846 <= (-17.4739322662353515625f)) {
          _2019 = -4.0f;
        } else {
          float _2018;
          if ((_1846 > (-17.4739322662353515625f)) && (_1846 < (-2.4739310741424560546875f))) {
            float _1947 = mad(_1846, 0.3010300099849700927734375f, 5.2601776123046875f);
            float _1948 = _1947 * 0.6643855571746826171875f;
            int _1949 = cvt_f32_i32(_1948);
            float _1952 = mad(_1947, 0.6643855571746826171875f, -trunc(_1948));
            uint _1959 = min(uint(_1949), 16u);
            uint _1963 = min(uint(_1949 + 1), 16u);
            uint _1967 = min(uint(_1949 + 2), 16u);
            float2 _1973 = float2(_368[_1959].x, _368[_1963].x);
            _2018 = dp3_f32(float3(_1952 * _1952, _1952, 1.0f), float3(dp3_f32(float3(_368[_1959].x, _368[_1967].x, _368[_1963].x), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_1973, float2(-1.0f, 1.0f)), dp2_f32(_1973, 0.5f.xx)));
          } else {
            float _2017;
            if ((_1846 >= (-2.4739310741424560546875f)) && (_1846 < 15.52606868743896484375f)) {
              float _1985 = mad(_1846, 0.3010300099849700927734375f, 0.74472749233245849609375f);
              float _1986 = _1985 * 0.55365467071533203125f;
              int _1987 = cvt_f32_i32(_1986);
              float _1990 = mad(_1985, 0.55365467071533203125f, -trunc(_1986));
              uint _1997 = min(uint(_1987), 16u);
              uint _2001 = min(uint(_1987 + 1), 16u);
              uint _2005 = min(uint(_1987 + 2), 16u);
              float2 _2011 = float2(_368[_1997].y, _368[_2001].y);
              _2017 = dp3_f32(float3(_1990 * _1990, _1990, 1.0f), float3(dp3_f32(float3(_368[_1997].y, _368[_2005].y, _368[_2001].y), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_2011, float2(-1.0f, 1.0f)), dp2_f32(_2011, 0.5f.xx)));
            } else {
              _2017 = 4.0f;
            }
            _2018 = _2017;
          }
          _2019 = _2018;
        }
        float _2103;
        if (_1847 <= (-17.4739322662353515625f)) {
          _2103 = -4.0f;
        } else {
          float _2102;
          if ((_1847 > (-17.4739322662353515625f)) && (_1847 < (-2.4739310741424560546875f))) {
            float _2031 = mad(_1847, 0.3010300099849700927734375f, 5.2601776123046875f);
            float _2032 = _2031 * 0.6643855571746826171875f;
            int _2033 = cvt_f32_i32(_2032);
            float _2036 = mad(_2031, 0.6643855571746826171875f, -trunc(_2032));
            uint _2043 = min(uint(_2033), 16u);
            uint _2047 = min(uint(_2033 + 1), 16u);
            uint _2051 = min(uint(_2033 + 2), 16u);
            float2 _2057 = float2(_368[_2043].x, _368[_2047].x);
            _2102 = dp3_f32(float3(_2036 * _2036, _2036, 1.0f), float3(dp3_f32(float3(_368[_2043].x, _368[_2051].x, _368[_2047].x), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_2057, float2(-1.0f, 1.0f)), dp2_f32(_2057, 0.5f.xx)));
          } else {
            float _2101;
            if ((_1847 >= (-2.4739310741424560546875f)) && (_1847 < 15.52606868743896484375f)) {
              float _2069 = mad(_1847, 0.3010300099849700927734375f, 0.74472749233245849609375f);
              float _2070 = _2069 * 0.55365467071533203125f;
              int _2071 = cvt_f32_i32(_2070);
              float _2074 = mad(_2069, 0.55365467071533203125f, -trunc(_2070));
              uint _2081 = min(uint(_2071), 16u);
              uint _2085 = min(uint(_2071 + 1), 16u);
              uint _2089 = min(uint(_2071 + 2), 16u);
              float2 _2095 = float2(_368[_2081].y, _368[_2085].y);
              _2101 = dp3_f32(float3(_2074 * _2074, _2074, 1.0f), float3(dp3_f32(float3(_368[_2081].y, _368[_2089].y, _368[_2085].y), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_2095, float2(-1.0f, 1.0f)), dp2_f32(_2095, 0.5f.xx)));
            } else {
              _2101 = 4.0f;
            }
            _2102 = _2101;
          }
          _2103 = _2102;
        }
        float3 _2106 = float3(exp2(_1935 * 3.3219280242919921875f), exp2(_2019 * 3.3219280242919921875f), exp2(_2103 * 3.3219280242919921875f));
        float3 _2110 = float3(dp3_f32(float3(0.695452213287353515625f, 0.140678703784942626953125f, 0.16386906802654266357421875f), _2106), dp3_f32(float3(0.0447945632040500640869140625f, 0.859671115875244140625f, 0.095534317195415496826171875f), _2106), dp3_f32(float3(-0.0055258828215301036834716796875f, 0.0040252101607620716094970703125f, 1.00150072574615478515625f), _2106));
        float _2111 = dp3_f32(float3(1.45143926143646240234375f, -0.236510753631591796875f, -0.214928567409515380859375f), _2110);
        float _2112 = dp3_f32(float3(-0.07655377686023712158203125f, 1.1762297153472900390625f, -0.0996759235858917236328125f), _2110);
        float _2113 = dp3_f32(float3(0.0083161480724811553955078125f, -0.0060324496589601039886474609375f, 0.99771630764007568359375f), _2110);
        float _2116 = (_2111 <= 0.0f) ? (-13.28771209716796875f) : log2(_2111);
        float _2201;
        if (_2116 <= (-12.78386783599853515625f)) {
          _2201 = mad(_2116, 0.903090000152587890625f, 7.54498291015625f);
        } else {
          float _2200;
          if ((_2116 > (-12.78386783599853515625f)) && (_2116 < 2.2630345821380615234375f)) {
            float _2128 = mad(_2116, 0.3010300099849700927734375f, 3.84832763671875f);
            float _2129 = _2128 * 1.54540097713470458984375f;
            int _2130 = cvt_f32_i32(_2129);
            float _2133 = mad(_2128, 1.54540097713470458984375f, -trunc(_2129));
            uint _2140 = min(uint(_2130), 16u);
            uint _2144 = min(uint(_2130 + 1), 16u);
            uint _2148 = min(uint(_2130 + 2), 16u);
            float2 _2154 = float2(_368[_2140].z, _368[_2144].z);
            _2200 = dp3_f32(float3(_2133 * _2133, _2133, 1.0f), float3(dp3_f32(float3(_368[_2140].z, _368[_2148].z, _368[_2144].z), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_2154, float2(-1.0f, 1.0f)), dp2_f32(_2154, 0.5f.xx)));
          } else {
            float _2199;
            if ((_2116 >= 2.2630345821380615234375f) && (_2116 < 12.13733673095703125f)) {
              float _2166 = mad(_2116, 0.3010300099849700927734375f, -0.6812412738800048828125f);
              float _2167 = _2166 * 2.35495090484619140625f;
              int _2168 = cvt_f32_i32(_2167);
              float _2171 = mad(_2166, 2.35495090484619140625f, -trunc(_2167));
              uint _2178 = min(uint(_2168), 16u);
              uint _2182 = min(uint(_2168 + 1), 16u);
              uint _2186 = min(uint(_2168 + 2), 16u);
              float2 _2192 = float2(_368[_2178].w, _368[_2182].w);
              _2199 = dp3_f32(float3(_2171 * _2171, _2171, 1.0f), float3(dp3_f32(float3(_368[_2178].w, _368[_2186].w, _368[_2182].w), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_2192, float2(-1.0f, 1.0f)), dp2_f32(_2192, 0.5f.xx)));
            } else {
              _2199 = mad(_2116, 0.01806179992854595184326171875f, 2.78077793121337890625f);
            }
            _2200 = _2199;
          }
          _2201 = _2200;
        }
        float _2203 = exp2(_2201 * 3.3219280242919921875f);
        float _2206 = (_2112 <= 0.0f) ? (-13.28771209716796875f) : log2(_2112);
        float _2291;
        if (_2206 <= (-12.78386783599853515625f)) {
          _2291 = mad(_2206, 0.903090000152587890625f, 7.54498291015625f);
        } else {
          float _2290;
          if ((_2206 > (-12.78386783599853515625f)) && (_2206 < 2.2630345821380615234375f)) {
            float _2218 = mad(_2206, 0.3010300099849700927734375f, 3.84832763671875f);
            float _2219 = _2218 * 1.54540097713470458984375f;
            int _2220 = cvt_f32_i32(_2219);
            float _2223 = mad(_2218, 1.54540097713470458984375f, -trunc(_2219));
            uint _2230 = min(uint(_2220), 16u);
            uint _2234 = min(uint(_2220 + 1), 16u);
            uint _2238 = min(uint(_2220 + 2), 16u);
            float2 _2244 = float2(_368[_2230].z, _368[_2234].z);
            _2290 = dp3_f32(float3(_2223 * _2223, _2223, 1.0f), float3(dp3_f32(float3(_368[_2230].z, _368[_2238].z, _368[_2234].z), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_2244, float2(-1.0f, 1.0f)), dp2_f32(_2244, 0.5f.xx)));
          } else {
            float _2289;
            if ((_2206 >= 2.2630345821380615234375f) && (_2206 < 12.13733673095703125f)) {
              float _2256 = mad(_2206, 0.3010300099849700927734375f, -0.6812412738800048828125f);
              float _2257 = _2256 * 2.35495090484619140625f;
              int _2258 = cvt_f32_i32(_2257);
              float _2261 = mad(_2256, 2.35495090484619140625f, -trunc(_2257));
              uint _2268 = min(uint(_2258), 16u);
              uint _2272 = min(uint(_2258 + 1), 16u);
              uint _2276 = min(uint(_2258 + 2), 16u);
              float2 _2282 = float2(_368[_2268].w, _368[_2272].w);
              _2289 = dp3_f32(float3(_2261 * _2261, _2261, 1.0f), float3(dp3_f32(float3(_368[_2268].w, _368[_2276].w, _368[_2272].w), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_2282, float2(-1.0f, 1.0f)), dp2_f32(_2282, 0.5f.xx)));
            } else {
              _2289 = mad(_2206, 0.01806179992854595184326171875f, 2.78077793121337890625f);
            }
            _2290 = _2289;
          }
          _2291 = _2290;
        }
        float _2293 = exp2(_2291 * 3.3219280242919921875f);
        float _2296 = (_2113 <= 0.0f) ? (-13.28771209716796875f) : log2(_2113);
        float _2381;
        if (_2296 <= (-12.78386783599853515625f)) {
          _2381 = mad(_2296, 0.903090000152587890625f, 7.54498291015625f);
        } else {
          float _2380;
          if ((_2296 > (-12.78386783599853515625f)) && (_2296 < 2.2630345821380615234375f)) {
            float _2308 = mad(_2296, 0.3010300099849700927734375f, 3.84832763671875f);
            float _2309 = _2308 * 1.54540097713470458984375f;
            int _2310 = cvt_f32_i32(_2309);
            float _2313 = mad(_2308, 1.54540097713470458984375f, -trunc(_2309));
            uint _2320 = min(uint(_2310), 16u);
            uint _2324 = min(uint(_2310 + 1), 16u);
            uint _2328 = min(uint(_2310 + 2), 16u);
            float2 _2334 = float2(_368[_2320].z, _368[_2324].z);
            _2380 = dp3_f32(float3(_2313 * _2313, _2313, 1.0f), float3(dp3_f32(float3(_368[_2320].z, _368[_2328].z, _368[_2324].z), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_2334, float2(-1.0f, 1.0f)), dp2_f32(_2334, 0.5f.xx)));
          } else {
            float _2379;
            if ((_2296 >= 2.2630345821380615234375f) && (_2296 < 12.13733673095703125f)) {
              float _2346 = mad(_2296, 0.3010300099849700927734375f, -0.6812412738800048828125f);
              float _2347 = _2346 * 2.35495090484619140625f;
              int _2348 = cvt_f32_i32(_2347);
              float _2351 = mad(_2346, 2.35495090484619140625f, -trunc(_2347));
              uint _2358 = min(uint(_2348), 16u);
              uint _2362 = min(uint(_2348 + 1), 16u);
              uint _2366 = min(uint(_2348 + 2), 16u);
              float2 _2372 = float2(_368[_2358].w, _368[_2362].w);
              _2379 = dp3_f32(float3(_2351 * _2351, _2351, 1.0f), float3(dp3_f32(float3(_368[_2358].w, _368[_2366].w, _368[_2362].w), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_2372, float2(-1.0f, 1.0f)), dp2_f32(_2372, 0.5f.xx)));
            } else {
              _2379 = mad(_2296, 0.01806179992854595184326171875f, 2.78077793121337890625f);
            }
            _2380 = _2379;
          }
          _2381 = _2380;
        }
        float _2383 = exp2(_2381 * 3.3219280242919921875f);
        float3 _2403 = float3((_1506 * (_2203 - 3.5073844628641381859779357910156e-05f)) + (_1528 * mad(_1506, 3.5073844628641381859779357910156e-05f - _2203, _1517)), (_1528 * mad(_1507, 3.5073844628641381859779357910156e-05f - _2293, _1518)) + (_1507 * (_2293 - 3.5073844628641381859779357910156e-05f)), (_1528 * mad(_1508, 3.5073844628641381859779357910156e-05f - _2383, _1519)) + (_1508 * (_2383 - 3.5073844628641381859779357910156e-05f)));
        float _2418 = exp2(log2(dp3_f32(float3(_1605, _1606, _1607), _2403) * 9.9999997473787516355514526367188e-05f) * 0.1593017578125f);
        float _2419 = exp2(log2(dp3_f32(float3(_1608, _1609, _1610), _2403) * 9.9999997473787516355514526367188e-05f) * 0.1593017578125f);
        float _2420 = exp2(log2(dp3_f32(float3(_1611, _1612, _1613), _2403) * 9.9999997473787516355514526367188e-05f) * 0.1593017578125f);
        _3318 = exp2(log2((1.0f / mad(_2420, 18.6875f, 1.0f)) * mad(_2420, 18.8515625f, 0.8359375f)) * 78.84375f);
        _3319 = exp2(log2((1.0f / mad(_2419, 18.6875f, 1.0f)) * mad(_2419, 18.8515625f, 0.8359375f)) * 78.84375f);
        _3320 = exp2(log2((1.0f / mad(_2418, 18.6875f, 1.0f)) * mad(_2418, 18.8515625f, 0.8359375f)) * 78.84375f);
      } else {
        float _3315;
        float _3316;
        float _3317;
        if ((output_device == 4u) || (output_device == 6u)) {
          float3 _2451 = float3(_1665 * 1.5f, _1666 * 1.5f, _1667 * 1.5f);
          float _2452 = dp3_f32(float3(0.4397008121013641357421875f, 0.3829780519008636474609375f, 0.17733480036258697509765625f), _2451);
          float _2453 = dp3_f32(float3(0.089792303740978240966796875f, 0.81342315673828125f, 0.09676162898540496826171875f), _2451);
          float _2454 = dp3_f32(float3(0.01754398643970489501953125f, 0.11154405772686004638671875f, 0.870704114437103271484375f), _2451);
          float _2458 = max(_2454, max(_2452, _2453));
          float _2463 = (max(_2458, 1.0000000133514319600180897396058e-10f) - max(min(_2454, min(_2452, _2453)), 1.0000000133514319600180897396058e-10f)) / max(_2458, 0.00999999977648258209228515625f);
          float _2474 = mad(sqrt(mad(_2452, _2452 - _2454, (_2454 * (_2454 - _2453)) + (_2453 * (_2453 - _2452)))), 1.75f, _2452 + (_2453 + _2454));
          float _2476 = _2463 - 0.4000000059604644775390625f;
          float _2480 = max(1.0f - abs(_2476 * 2.5f), 0.0f);
          float _2491 = mad(float(int(((_2476 < 0.0f) ? 4294967295u : 0u) + uint(_2476 > 0.0f))), mad(-_2480, _2480, 1.0f), 1.0f) * 0.02500000037252902984619140625f;
          float _2499 = ((_2474 <= 0.1599999964237213134765625f) ? _2491 : ((_2474 >= 0.4799999892711639404296875f) ? 0.0f : (_2491 * ((0.07999999821186065673828125f / (_2474 * 0.3333333432674407958984375f)) - 0.5f)))) + 1.0f;
          float _2500 = _2452 * _2499;
          float _2501 = _2453 * _2499;
          float _2502 = _2454 * _2499;
          float _2507 = (_2501 - _2502) * 1.73205077648162841796875f;
          float _2509 = (_2500 * 2.0f) - _2501;
          float _2511 = mad(-_2454, _2499, _2509);
          float _2512 = abs(_2507);
          float _2513 = abs(_2511);
          float _2517 = min(_2512, _2513) * (1.0f / max(_2512, _2513));
          float _2518 = _2517 * _2517;
          float _2522 = mad(_2518, mad(_2518, mad(_2518, mad(_2518, 0.02083509974181652069091796875f, -0.08513300120830535888671875f), 0.1801410019397735595703125f), -0.33029949665069580078125f), 0.999866008758544921875f);
          float _2532 = mad(_2517, _2522, (_2512 > _2513) ? mad(_2517 * _2522, -2.0f, 1.57079637050628662109375f) : 0.0f) + ((_2511 < mad(_2454, _2499, -_2509)) ? (-3.1415927410125732421875f) : 0.0f);
          float _2533 = min(_2507, _2511);
          float _2534 = max(_2507, _2511);
          float _2543 = ((_2500 == _2501) && (_2502 == _2501)) ? 0.0f : ((((_2533 < (-_2533)) && (_2534 >= (-_2534))) ? (-_2532) : _2532) * 57.295780181884765625f);
          float _2547 = clamp((_2543 < 0.0f) ? (_2543 + 360.0f) : _2543, 0.0f, 360.0f);
          float _2550 = (_2547 > 180.0f) ? (_2547 - 360.0f) : _2547;
          float _2587;
          if ((_2550 > (-67.5f)) && (_2550 < 67.5f)) {
            float _2557 = _2550 + 67.5f;
            float _2558 = _2557 * 0.0296296291053295135498046875f;
            float _2562 = mad(_2557, 0.0296296291053295135498046875f, -trunc(_2558));
            float _2563 = _2562 * _2562;
            float _2564 = _2562 * _2563;
            float _2568 = _2563 * 0.5f;
            uint _2576 = uint(cvt_f32_i32(_2558));
            _2587 = (_2576 == 3u) ? (mad(_2562, -0.5f, (_2564 * (-0.16666667163372039794921875f)) + _2568) + 0.16666667163372039794921875f) : ((_2576 == 2u) ? (((_2564 * 0.5f) - _2563) + 0.666666686534881591796875f) : ((_2576 == 1u) ? (mad(_2562, 0.5f, _2568 + (_2564 * (-0.5f))) + 0.16666667163372039794921875f) : ((_2576 != 0u) ? 0.0f : (_2564 * 0.16666667163372039794921875f))));
          } else {
            _2587 = 0.0f;
          }
          float3 _2598 = float3(clamp(_2500 + ((((_2463 * _2587) * 1.5f) * mad(-_2452, _2499, 0.02999999932944774627685546875f)) * 0.180000007152557373046875f), 0.0f, 65535.0f), clamp(_2501, 0.0f, 65535.0f), clamp(_2502, 0.0f, 65535.0f));
          float _2602 = clamp(dp3_f32(float3(1.45143926143646240234375f, -0.236510753631591796875f, -0.214928567409515380859375f), _2598), 0.0f, 65535.0f);
          float _2603 = clamp(dp3_f32(float3(-0.07655377686023712158203125f, 1.1762297153472900390625f, -0.0996759235858917236328125f), _2598), 0.0f, 65535.0f);
          float _2604 = clamp(dp3_f32(float3(0.0083161480724811553955078125f, -0.0060324496589601039886474609375f, 0.99771630764007568359375f), _2598), 0.0f, 65535.0f);
          float _2606 = dp3_f32(float3(_2602, _2603, _2604), float3(0.272228717803955078125f, 0.674081742763519287109375f, 0.053689517080783843994140625f));
          float _2610 = mad(_2602 - _2606, 0.959999978542327880859375f, _2606);
          float _2611 = mad(_2603 - _2606, 0.959999978542327880859375f, _2606);
          float _2612 = mad(_2604 - _2606, 0.959999978542327880859375f, _2606);
          float _2619 = (_2610 <= 0.0f) ? (-14.0f) : log2(_2610);
          float _2620 = (_2611 <= 0.0f) ? (-14.0f) : log2(_2611);
          float _2621 = (_2612 <= 0.0f) ? (-14.0f) : log2(_2612);
          float _2706;
          if (_2619 <= (-17.4739322662353515625f)) {
            _2706 = -4.0f;
          } else {
            float _2705;
            if ((_2619 > (-17.4739322662353515625f)) && (_2619 < (-2.4739310741424560546875f))) {
              float _2634 = mad(_2619, 0.3010300099849700927734375f, 5.2601776123046875f);
              float _2635 = _2634 * 0.6643855571746826171875f;
              int _2636 = cvt_f32_i32(_2635);
              float _2639 = mad(_2634, 0.6643855571746826171875f, -trunc(_2635));
              uint _2646 = min(uint(_2636), 16u);
              uint _2650 = min(uint(_2636 + 1), 16u);
              uint _2654 = min(uint(_2636 + 2), 16u);
              float2 _2660 = float2(_368[_2646].x, _368[_2650].x);
              _2705 = dp3_f32(float3(_2639 * _2639, _2639, 1.0f), float3(dp3_f32(float3(_368[_2646].x, _368[_2654].x, _368[_2650].x), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_2660, float2(-1.0f, 1.0f)), dp2_f32(_2660, 0.5f.xx)));
            } else {
              float _2704;
              if ((_2619 >= (-2.4739310741424560546875f)) && (_2619 < 15.52606868743896484375f)) {
                float _2672 = mad(_2619, 0.3010300099849700927734375f, 0.74472749233245849609375f);
                float _2673 = _2672 * 0.55365467071533203125f;
                int _2674 = cvt_f32_i32(_2673);
                float _2677 = mad(_2672, 0.55365467071533203125f, -trunc(_2673));
                uint _2684 = min(uint(_2674), 16u);
                uint _2688 = min(uint(_2674 + 1), 16u);
                uint _2692 = min(uint(_2674 + 2), 16u);
                float2 _2698 = float2(_368[_2684].y, _368[_2688].y);
                _2704 = dp3_f32(float3(_2677 * _2677, _2677, 1.0f), float3(dp3_f32(float3(_368[_2684].y, _368[_2692].y, _368[_2688].y), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_2698, float2(-1.0f, 1.0f)), dp2_f32(_2698, 0.5f.xx)));
              } else {
                _2704 = 4.0f;
              }
              _2705 = _2704;
            }
            _2706 = _2705;
          }
          float _2790;
          if (_2620 <= (-17.4739322662353515625f)) {
            _2790 = -4.0f;
          } else {
            float _2789;
            if ((_2620 > (-17.4739322662353515625f)) && (_2620 < (-2.4739310741424560546875f))) {
              float _2718 = mad(_2620, 0.3010300099849700927734375f, 5.2601776123046875f);
              float _2719 = _2718 * 0.6643855571746826171875f;
              int _2720 = cvt_f32_i32(_2719);
              float _2723 = mad(_2718, 0.6643855571746826171875f, -trunc(_2719));
              uint _2730 = min(uint(_2720), 16u);
              uint _2734 = min(uint(_2720 + 1), 16u);
              uint _2738 = min(uint(_2720 + 2), 16u);
              float2 _2744 = float2(_368[_2730].x, _368[_2734].x);
              _2789 = dp3_f32(float3(_2723 * _2723, _2723, 1.0f), float3(dp3_f32(float3(_368[_2730].x, _368[_2738].x, _368[_2734].x), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_2744, float2(-1.0f, 1.0f)), dp2_f32(_2744, 0.5f.xx)));
            } else {
              float _2788;
              if ((_2620 >= (-2.4739310741424560546875f)) && (_2620 < 15.52606868743896484375f)) {
                float _2756 = mad(_2620, 0.3010300099849700927734375f, 0.74472749233245849609375f);
                float _2757 = _2756 * 0.55365467071533203125f;
                int _2758 = cvt_f32_i32(_2757);
                float _2761 = mad(_2756, 0.55365467071533203125f, -trunc(_2757));
                uint _2768 = min(uint(_2758), 16u);
                uint _2772 = min(uint(_2758 + 1), 16u);
                uint _2776 = min(uint(_2758 + 2), 16u);
                float2 _2782 = float2(_368[_2768].y, _368[_2772].y);
                _2788 = dp3_f32(float3(_2761 * _2761, _2761, 1.0f), float3(dp3_f32(float3(_368[_2768].y, _368[_2776].y, _368[_2772].y), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_2782, float2(-1.0f, 1.0f)), dp2_f32(_2782, 0.5f.xx)));
              } else {
                _2788 = 4.0f;
              }
              _2789 = _2788;
            }
            _2790 = _2789;
          }
          float _2874;
          if (_2621 <= (-17.4739322662353515625f)) {
            _2874 = -4.0f;
          } else {
            float _2873;
            if ((_2621 > (-17.4739322662353515625f)) && (_2621 < (-2.4739310741424560546875f))) {
              float _2802 = mad(_2621, 0.3010300099849700927734375f, 5.2601776123046875f);
              float _2803 = _2802 * 0.6643855571746826171875f;
              int _2804 = cvt_f32_i32(_2803);
              float _2807 = mad(_2802, 0.6643855571746826171875f, -trunc(_2803));
              uint _2814 = min(uint(_2804), 16u);
              uint _2818 = min(uint(_2804 + 1), 16u);
              uint _2822 = min(uint(_2804 + 2), 16u);
              float2 _2828 = float2(_368[_2814].x, _368[_2818].x);
              _2873 = dp3_f32(float3(_2807 * _2807, _2807, 1.0f), float3(dp3_f32(float3(_368[_2814].x, _368[_2822].x, _368[_2818].x), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_2828, float2(-1.0f, 1.0f)), dp2_f32(_2828, 0.5f.xx)));
            } else {
              float _2872;
              if ((_2621 >= (-2.4739310741424560546875f)) && (_2621 < 15.52606868743896484375f)) {
                float _2840 = mad(_2621, 0.3010300099849700927734375f, 0.74472749233245849609375f);
                float _2841 = _2840 * 0.55365467071533203125f;
                int _2842 = cvt_f32_i32(_2841);
                float _2845 = mad(_2840, 0.55365467071533203125f, -trunc(_2841));
                uint _2852 = min(uint(_2842), 16u);
                uint _2856 = min(uint(_2842 + 1), 16u);
                uint _2860 = min(uint(_2842 + 2), 16u);
                float2 _2866 = float2(_368[_2852].y, _368[_2856].y);
                _2872 = dp3_f32(float3(_2845 * _2845, _2845, 1.0f), float3(dp3_f32(float3(_368[_2852].y, _368[_2860].y, _368[_2856].y), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_2866, float2(-1.0f, 1.0f)), dp2_f32(_2866, 0.5f.xx)));
              } else {
                _2872 = 4.0f;
              }
              _2873 = _2872;
            }
            _2874 = _2873;
          }
          float3 _2877 = float3(exp2(_2706 * 3.3219280242919921875f), exp2(_2790 * 3.3219280242919921875f), exp2(_2874 * 3.3219280242919921875f));
          float3 _2881 = float3(dp3_f32(float3(0.695452213287353515625f, 0.140678703784942626953125f, 0.16386906802654266357421875f), _2877), dp3_f32(float3(0.0447945632040500640869140625f, 0.859671115875244140625f, 0.095534317195415496826171875f), _2877), dp3_f32(float3(-0.0055258828215301036834716796875f, 0.0040252101607620716094970703125f, 1.00150072574615478515625f), _2877));
          float _2882 = dp3_f32(float3(1.45143926143646240234375f, -0.236510753631591796875f, -0.214928567409515380859375f), _2881);
          float _2883 = dp3_f32(float3(-0.07655377686023712158203125f, 1.1762297153472900390625f, -0.0996759235858917236328125f), _2881);
          float _2884 = dp3_f32(float3(0.0083161480724811553955078125f, -0.0060324496589601039886474609375f, 0.99771630764007568359375f), _2881);
          float _2887 = (_2882 <= 0.0f) ? (-13.28771209716796875f) : log2(_2882);
          float _2977;
          if (_2887 <= (-12.78386783599853515625f)) {
            _2977 = -2.3010299205780029296875f;
          } else {
            float _2976;
            if ((_2887 > (-12.78386783599853515625f)) && (_2887 < 2.2630345821380615234375f)) {
              float _2898 = mad(_2887, 0.3010300099849700927734375f, 3.84832763671875f);
              float _2899 = _2898 * 1.54540097713470458984375f;
              int _2900 = cvt_f32_i32(_2899);
              float _2903 = mad(_2898, 1.54540097713470458984375f, -trunc(_2899));
              uint _2909 = min(uint(_2900 + 6), 16u);
              uint _2915 = min(uint((_2900 + 1) + 6), 16u);
              uint _2921 = min(uint((_2900 + 2) + 6), 16u);
              float2 _2927 = float2(_368[_2909].x, _368[_2915].x);
              _2976 = dp3_f32(float3(_2903 * _2903, _2903, 1.0f), float3(dp3_f32(float3(_368[_2909].x, _368[_2921].x, _368[_2915].x), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_2927, float2(-1.0f, 1.0f)), dp2_f32(_2927, 0.5f.xx)));
            } else {
              float _2975;
              if ((_2887 >= 2.2630345821380615234375f) && (_2887 < 12.4948215484619140625f)) {
                float _2939 = mad(_2887, 0.3010300099849700927734375f, -0.6812412738800048828125f);
                float _2940 = _2939 * 2.272672176361083984375f;
                int _2941 = cvt_f32_i32(_2940);
                float _2944 = mad(_2939, 2.272672176361083984375f, -trunc(_2940));
                uint _2950 = min(uint(_2941 + 6), 16u);
                uint _2956 = min(uint((_2941 + 1) + 6), 16u);
                uint _2962 = min(uint((_2941 + 2) + 6), 16u);
                float2 _2968 = float2(_368[_2950].y, _368[_2956].y);
                _2975 = dp3_f32(float3(_2944 * _2944, _2944, 1.0f), float3(dp3_f32(float3(_368[_2950].y, _368[_2962].y, _368[_2956].y), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_2968, float2(-1.0f, 1.0f)), dp2_f32(_2968, 0.5f.xx)));
              } else {
                _2975 = mad(_2887, 0.0361235998570919036865234375f, 2.8496720790863037109375f);
              }
              _2976 = _2975;
            }
            _2977 = _2976;
          }
          float _2979 = exp2(_2977 * 3.3219280242919921875f);
          float _2982 = (_2883 <= 0.0f) ? (-13.28771209716796875f) : log2(_2883);
          float _3072;
          if (_2982 <= (-12.78386783599853515625f)) {
            _3072 = -2.3010299205780029296875f;
          } else {
            float _3071;
            if ((_2982 > (-12.78386783599853515625f)) && (_2982 < 2.2630345821380615234375f)) {
              float _2993 = mad(_2982, 0.3010300099849700927734375f, 3.84832763671875f);
              float _2994 = _2993 * 1.54540097713470458984375f;
              int _2995 = cvt_f32_i32(_2994);
              float _2998 = mad(_2993, 1.54540097713470458984375f, -trunc(_2994));
              uint _3004 = min(uint(_2995 + 6), 16u);
              uint _3010 = min(uint((_2995 + 1) + 6), 16u);
              uint _3016 = min(uint((_2995 + 2) + 6), 16u);
              float2 _3022 = float2(_368[_3004].x, _368[_3010].x);
              _3071 = dp3_f32(float3(_2998 * _2998, _2998, 1.0f), float3(dp3_f32(float3(_368[_3004].x, _368[_3016].x, _368[_3010].x), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_3022, float2(-1.0f, 1.0f)), dp2_f32(_3022, 0.5f.xx)));
            } else {
              float _3070;
              if ((_2982 >= 2.2630345821380615234375f) && (_2982 < 12.4948215484619140625f)) {
                float _3034 = mad(_2982, 0.3010300099849700927734375f, -0.6812412738800048828125f);
                float _3035 = _3034 * 2.272672176361083984375f;
                int _3036 = cvt_f32_i32(_3035);
                float _3039 = mad(_3034, 2.272672176361083984375f, -trunc(_3035));
                uint _3045 = min(uint(_3036 + 6), 16u);
                uint _3051 = min(uint((_3036 + 1) + 6), 16u);
                uint _3057 = min(uint((_3036 + 2) + 6), 16u);
                float2 _3063 = float2(_368[_3045].y, _368[_3051].y);
                _3070 = dp3_f32(float3(_3039 * _3039, _3039, 1.0f), float3(dp3_f32(float3(_368[_3045].y, _368[_3057].y, _368[_3051].y), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_3063, float2(-1.0f, 1.0f)), dp2_f32(_3063, 0.5f.xx)));
              } else {
                _3070 = mad(_2982, 0.0361235998570919036865234375f, 2.8496720790863037109375f);
              }
              _3071 = _3070;
            }
            _3072 = _3071;
          }
          float _3074 = exp2(_3072 * 3.3219280242919921875f);
          float _3077 = (_2884 <= 0.0f) ? (-13.28771209716796875f) : log2(_2884);
          float _3167;
          if (_3077 <= (-12.78386783599853515625f)) {
            _3167 = -2.3010299205780029296875f;
          } else {
            float _3166;
            if ((_3077 > (-12.78386783599853515625f)) && (_3077 < 2.2630345821380615234375f)) {
              float _3088 = mad(_3077, 0.3010300099849700927734375f, 3.84832763671875f);
              float _3089 = _3088 * 1.54540097713470458984375f;
              int _3090 = cvt_f32_i32(_3089);
              float _3093 = mad(_3088, 1.54540097713470458984375f, -trunc(_3089));
              uint _3099 = min(uint(_3090 + 6), 16u);
              uint _3105 = min(uint((_3090 + 1) + 6), 16u);
              uint _3111 = min(uint((_3090 + 2) + 6), 16u);
              float2 _3117 = float2(_368[_3099].x, _368[_3105].x);
              _3166 = dp3_f32(float3(_3093 * _3093, _3093, 1.0f), float3(dp3_f32(float3(_368[_3099].x, _368[_3111].x, _368[_3105].x), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_3117, float2(-1.0f, 1.0f)), dp2_f32(_3117, 0.5f.xx)));
            } else {
              float _3165;
              if ((_3077 >= 2.2630345821380615234375f) && (_3077 < 12.4948215484619140625f)) {
                float _3129 = mad(_3077, 0.3010300099849700927734375f, -0.6812412738800048828125f);
                float _3130 = _3129 * 2.272672176361083984375f;
                int _3131 = cvt_f32_i32(_3130);
                float _3134 = mad(_3129, 2.272672176361083984375f, -trunc(_3130));
                uint _3140 = min(uint(_3131 + 6), 16u);
                uint _3146 = min(uint((_3131 + 1) + 6), 16u);
                uint _3152 = min(uint((_3131 + 2) + 6), 16u);
                float2 _3158 = float2(_368[_3140].y, _368[_3146].y);
                _3165 = dp3_f32(float3(_3134 * _3134, _3134, 1.0f), float3(dp3_f32(float3(_368[_3140].y, _368[_3152].y, _368[_3146].y), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_3158, float2(-1.0f, 1.0f)), dp2_f32(_3158, 0.5f.xx)));
              } else {
                _3165 = mad(_3077, 0.0361235998570919036865234375f, 2.8496720790863037109375f);
              }
              _3166 = _3165;
            }
            _3167 = _3166;
          }
          float _3169 = exp2(_3167 * 3.3219280242919921875f);
          float3 _3186 = float3((_1506 * _2979) + (_1528 * mad(-_1506, _2979, _1517)), (_1528 * mad(-_1507, _3074, _1518)) + (_1507 * _3074), (_1528 * mad(-_1508, _3169, _1519)) + (_1508 * _3169));
          float _3201 = exp2(log2(dp3_f32(float3(_1605, _1606, _1607), _3186) * 9.9999997473787516355514526367188e-05f) * 0.1593017578125f);
          float _3202 = exp2(log2(dp3_f32(float3(_1608, _1609, _1610), _3186) * 9.9999997473787516355514526367188e-05f) * 0.1593017578125f);
          float _3203 = exp2(log2(dp3_f32(float3(_1611, _1612, _1613), _3186) * 9.9999997473787516355514526367188e-05f) * 0.1593017578125f);
          _3315 = exp2(log2((1.0f / mad(_3203, 18.6875f, 1.0f)) * mad(_3203, 18.8515625f, 0.8359375f)) * 78.84375f);
          _3316 = exp2(log2((1.0f / mad(_3202, 18.6875f, 1.0f)) * mad(_3202, 18.8515625f, 0.8359375f)) * 78.84375f);
          _3317 = exp2(log2(mad(_3201, 18.8515625f, 0.8359375f) * (1.0f / mad(_3201, 18.6875f, 1.0f))) * 78.84375f);
        } else {
          float _3312;
          float _3313;
          float _3314;
          if (output_device == 7u) {
            float3 _3229 = float3(_1665, _1666, _1667);
            float3 _3234 = float3(dp3_f32(float3(0.61319148540496826171875f, 0.3395120799541473388671875f, 0.0473663322627544403076171875f), _3229), dp3_f32(float3(0.070206902921199798583984375f, 0.9163358211517333984375f, 0.01345001161098480224609375f), _3229), dp3_f32(float3(0.02061887085437774658203125f, 0.109567292034626007080078125f, 0.8696067333221435546875f), _3229));
            float _3249 = exp2(log2(dp3_f32(float3(_1605, _1606, _1607), _3234) * 9.9999997473787516355514526367188e-05f) * 0.1593017578125f);
            float _3250 = exp2(log2(dp3_f32(float3(_1608, _1609, _1610), _3234) * 9.9999997473787516355514526367188e-05f) * 0.1593017578125f);
            float _3251 = exp2(log2(dp3_f32(float3(_1611, _1612, _1613), _3234) * 9.9999997473787516355514526367188e-05f) * 0.1593017578125f);
            _3312 = exp2(log2((1.0f / mad(_3251, 18.6875f, 1.0f)) * mad(_3251, 18.8515625f, 0.8359375f)) * 78.84375f);
            _3313 = exp2(log2((1.0f / mad(_3250, 18.6875f, 1.0f)) * mad(_3250, 18.8515625f, 0.8359375f)) * 78.84375f);
            _3314 = exp2(log2(mad(_3249, 18.8515625f, 0.8359375f) * (1.0f / mad(_3249, 18.6875f, 1.0f))) * 78.84375f);
          } else {
            bool _3273 = output_device == 8u;
            bool _3274 = output_device == 9u;
            float3 _3275 = float3(_1532, _1533, _1534);
            float3 _3279 = float3(_1605, _1606, _1607);
            float3 _3280 = float3(dp3_f32(float3(0.61319148540496826171875f, 0.3395120799541473388671875f, 0.0473663322627544403076171875f), _3275), dp3_f32(float3(0.070206902921199798583984375f, 0.9163358211517333984375f, 0.01345001161098480224609375f), _3275), dp3_f32(float3(0.02061887085437774658203125f, 0.109567292034626007080078125f, 0.8696067333221435546875f), _3275));
            float3 _3282 = float3(_1608, _1609, _1610);
            float3 _3284 = float3(_1611, _1612, _1613);
            float3 _3286 = float3(_1547, _1548, _1549);
            float3 _3290 = float3(dp3_f32(float3(0.61319148540496826171875f, 0.3395120799541473388671875f, 0.0473663322627544403076171875f), _3286), dp3_f32(float3(0.070206902921199798583984375f, 0.9163358211517333984375f, 0.01345001161098480224609375f), _3286), dp3_f32(float3(0.02061887085437774658203125f, 0.109567292034626007080078125f, 0.8696067333221435546875f), _3286));
            float _3299 = asfloat(cb0_m[27u].z);
            _3312 = _3273 ? _1667 : (_3274 ? dp3_f32(_3284, _3280) : exp2(log2(dp3_f32(_3284, _3290)) * _3299));
            _3313 = _3273 ? _1666 : (_3274 ? dp3_f32(_3282, _3280) : exp2(log2(dp3_f32(_3282, _3290)) * _3299));
            _3314 = _3273 ? _1665 : (_3274 ? dp3_f32(_3279, _3280) : exp2(log2(dp3_f32(_3279, _3290)) * _3299));
          }
          _3315 = _3312;
          _3316 = _3313;
          _3317 = _3314;
        }
        _3318 = _3315;
        _3319 = _3316;
        _3320 = _3317;
      }
      _3321 = _3318;
      _3322 = _3319;
      _3323 = _3320;
    }
    _3324 = _3321;
    _3325 = _3322;
    _3326 = _3323;
  }
  u0[uint3(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y, gl_GlobalInvocationID.z)] = float4(_3326 / 1.05f, _3325 / 1.05f, _3324 / 1.05f, 0.0f);
}

[numthreads(8, 8, 8)]
void main(SPIRV_Cross_Input stage_input) {
  gl_GlobalInvocationID = stage_input.gl_GlobalInvocationID;
  comp_main();
}
