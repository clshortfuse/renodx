#include "./filmiclutbuilder.hlsli"

static const float4 _445[17] = { float4(-4.0f, -0.718548238277435302734375f, -4.97062206268310546875f, 0.80891323089599609375f), float4(-4.0f, 2.0810306072235107421875f, -3.0293781757354736328125f, 1.19108676910400390625f), float4(-3.1573765277862548828125f, 3.66812419891357421875f, -2.1261999607086181640625f, 1.5683000087738037109375f), float4(-0.485249996185302734375f, 4.0f, -1.5104999542236328125f, 1.94830000400543212890625f), float4(1.84773242473602294921875f, 4.0f, -1.0578000545501708984375f, 2.308300018310546875f), float4(1.84773242473602294921875f, 4.0f, -0.4668000042438507080078125f, 2.63840007781982421875f), float4(-2.3010299205780029296875f, 0.801995217800140380859375f, 0.11937999725341796875f, 2.85949993133544921875f), float4(-2.3010299205780029296875f, 1.19800484180450439453125f, 0.7088134288787841796875f, 2.9872608184814453125f), float4(-1.9312000274658203125f, 1.5943000316619873046875f, 1.2911865711212158203125f, 3.0127391815185546875f), float4(-1.5204999446868896484375f, 1.99730002880096435546875f, 1.2911865711212158203125f, 3.0127391815185546875f), float4(-1.0578000545501708984375f, 2.3782999515533447265625f, 0.0f, 0.0f), float4(-0.4668000042438507080078125f, 2.7683999538421630859375f, 0.0f, 0.0f), float4(0.11937999725341796875f, 3.0515000820159912109375f, 0.0f, 0.0f), float4(0.7088134288787841796875f, 3.2746293544769287109375f, 0.0f, 0.0f), float4(1.2911865711212158203125f, 3.32743072509765625f, 0.0f, 0.0f), float4(1.2911865711212158203125f, 3.32743072509765625f, 0.0f, 0.0f), 0.0f.xxxx };

RWTexture3D<float4> u0 : register(u0);

static uint3 gl_GlobalInvocationID;
struct SPIRV_Cross_Input {
  uint3 gl_GlobalInvocationID : SV_DispatchThreadID;
};

float dp2_f32(float2 a, float2 b) {
  precise float _508 = a.x * b.x;
  return mad(a.y, b.y, _508);
}

float dp3_f32(float3 a, float3 b) {
  precise float _493 = a.x * b.x;
  return mad(a.z, b.z, mad(a.y, b.y, _493));
}

int cvt_f32_i32(float v) {
  return isnan(v) ? 0 : ((v < (-2147483648.0f)) ? int(0x80000000) : ((v > 2147483520.0f) ? 2147483647 : int(v)));
}

void comp_main() {
  float _524 = float(gl_GlobalInvocationID.z);
  float _535 = mad(float(gl_GlobalInvocationID.x) + 0.5f, asfloat(cb0_m[68u].x), -0.015625f);
  float _536 = mad(asfloat(cb0_m[68u].y), float(gl_GlobalInvocationID.y) + 0.5f, -0.015625f);
  bool _543 = output_device >= 3u;

  float _550 = exp2(log2(_535 * 1.03225803375244140625f) * 0.0126833133399486541748046875f);
  float _551 = exp2(log2(_536 * 1.03225803375244140625f) * 0.0126833133399486541748046875f);
  float _552 = exp2(log2(_524 * 0.0322580635547637939453125f) * 0.0126833133399486541748046875f);
  float _594 = asfloat(cb0_m[44u].z);
  float _596 = 1.0f / (_594 * 1.00055634975433349609375f);
  float _604 = (_594 <= 6996.10791015625f) ? mad(_596, mad(_596, mad(_596, -4607000064.0f, 2967800.0f), 99.1100006103515625f), 0.24406300485134124755859375f) : mad(_596, mad(_596, mad(_596, -2006400000.0f, 1901800.0f), 247.4799957275390625f), 0.23703999817371368408203125f);
  float _613 = _594 * _594;
  float _617 = mad(_613, 1.2864121856637211749330163002014e-07f, mad(_594, 0.00015411825734190642833709716796875f, 0.860117733478546142578125f)) / mad(_613, 7.0814513719597016461193561553955e-07f, mad(_594, 0.0008424202096648514270782470703125f, 1.0f));
  float _620 = mad(_613, 4.2048167614439080352894961833954e-08f, mad(_594, 4.2280626075807958841323852539063e-05f, 0.317398726940155029296875f)) / mad(_613, 1.6145605741257895715534687042236e-07f, mad(_594, -2.8974181986995972692966461181641e-05f, 1.0f));
  float _625 = mad(_620, -8.0f, _617 + _617) + 4.0f;
  float _626 = (_617 * 3.0f) / _625;
  float _627 = (_620 + _620) / _625;
  bool _628 = _594 < 4000.0f;
  float2 _631 = float2(_617, _620);
  float _633 = rsqrt(dp2_f32(_631, _631));
  float _638 = asfloat(cb0_m[44u].w);
  float _640 = mad(_638 * (_620 * _633), -0.0500000007450580596923828125f, _617);
  float _642 = mad((_617 * _633) * _638, 0.0500000007450580596923828125f, _620);
  float _646 = mad(_642, -8.0f, _640 + _640) + 4.0f;
  float _652 = (((_640 * 3.0f) / _646) - _626) + (_628 ? _626 : _604);
  float _653 = (((_642 + _642) / _646) - _627) + (_628 ? _627 : (((_604 * 2.86999988555908203125f) + ((_604 * _604) * (-3.0f))) - 0.2750000059604644775390625f));
  bool _656 = cb0_m[44u].x != 0u;
  float _657 = _656 ? _652 : 0.3127000033855438232421875f;
  float _658 = _656 ? _653 : 0.328999996185302734375f;
  float _659 = _656 ? 0.3127000033855438232421875f : _652;
  float _660 = _656 ? 0.328999996185302734375f : _653;
  float _661 = max(_658, 1.0000000133514319600180897396058e-10f);
  float _662 = max(_660, 1.0000000133514319600180897396058e-10f);
  float3 _671 = float3(_657 / _661, 1.0f, ((1.0f - _657) - _658) / _661);
  float3 _675 = float3(((1.0f - _659) - _660) / _662, _659 / _662, 1.0f);
  float _679 = dp3_f32(float3(-0.16140000522136688232421875f, 0.89509999752044677734375f, 0.2664000093936920166015625f), _675) / dp3_f32(float3(0.89509999752044677734375f, 0.2664000093936920166015625f, -0.16140000522136688232421875f), _671);
  float _680 = dp3_f32(float3(0.0366999991238117218017578125f, -0.750199973583221435546875f, 1.71350002288818359375f), _675) / dp3_f32(float3(-0.750199973583221435546875f, 1.71350002288818359375f, 0.0366999991238117218017578125f), _671);
  float _681 = dp3_f32(float3(1.02960002422332763671875f, 0.0388999991118907928466796875f, -0.06849999725818634033203125f), _675) / dp3_f32(float3(0.0388999991118907928466796875f, -0.06849999725818634033203125f, 1.02960002422332763671875f), _671);
  float3 _691 = float3(_679 * 0.89509999752044677734375f, _680 * (-0.750199973583221435546875f), _681 * 0.0388999991118907928466796875f);
  float3 _693 = float3(_679 * 0.2664000093936920166015625f, _680 * 1.71350002288818359375f, _681 * (-0.06849999725818634033203125f));
  float3 _695 = float3(_679 * (-0.16140000522136688232421875f), _680 * 0.0366999991238117218017578125f, _681 * 1.02960002422332763671875f);
  float3 _703 = float3(dp3_f32(float3(0.986992895603179931640625f, -0.14705429971218109130859375f, 0.15996269881725311279296875f), _691), dp3_f32(float3(0.986992895603179931640625f, -0.14705429971218109130859375f, 0.15996269881725311279296875f), _693), dp3_f32(float3(0.986992895603179931640625f, -0.14705429971218109130859375f, 0.15996269881725311279296875f), _695));
  float3 _707 = float3(dp3_f32(float3(0.4323053061962127685546875f, 0.518360316753387451171875f, 0.049291200935840606689453125f), _691), dp3_f32(float3(0.4323053061962127685546875f, 0.518360316753387451171875f, 0.049291200935840606689453125f), _693), dp3_f32(float3(0.4323053061962127685546875f, 0.518360316753387451171875f, 0.049291200935840606689453125f), _695));
  float3 _711 = float3(dp3_f32(float3(-0.00852870009839534759521484375f, 0.0400427989661693572998046875f, 0.968486726284027099609375f), _691), dp3_f32(float3(-0.00852870009839534759521484375f, 0.0400427989661693572998046875f, 0.968486726284027099609375f), _693), dp3_f32(float3(-0.00852870009839534759521484375f, 0.0400427989661693572998046875f, 0.968486726284027099609375f), _695));
  float3 _715 = float3(dp3_f32(_703, float3(0.41245639324188232421875f, 0.21267290413379669189453125f, 0.01933390088379383087158203125f)), dp3_f32(_707, float3(0.41245639324188232421875f, 0.21267290413379669189453125f, 0.01933390088379383087158203125f)), dp3_f32(_711, float3(0.41245639324188232421875f, 0.21267290413379669189453125f, 0.01933390088379383087158203125f)));
  float3 _717 = float3(dp3_f32(_703, float3(0.3575761020183563232421875f, 0.715152204036712646484375f, 0.119191996753215789794921875f)), dp3_f32(_707, float3(0.3575761020183563232421875f, 0.715152204036712646484375f, 0.119191996753215789794921875f)), dp3_f32(_711, float3(0.3575761020183563232421875f, 0.715152204036712646484375f, 0.119191996753215789794921875f)));
  float3 _719 = float3(dp3_f32(_703, float3(0.180437505245208740234375f, 0.072175003588199615478515625f, 0.950304090976715087890625f)), dp3_f32(_707, float3(0.180437505245208740234375f, 0.072175003588199615478515625f, 0.950304090976715087890625f)), dp3_f32(_711, float3(0.180437505245208740234375f, 0.072175003588199615478515625f, 0.950304090976715087890625f)));
  float3 _728 = float3(_543 ? (exp2(log2(max(_550 - 0.8359375f, 0.0f) / mad(_550, -18.6875f, 18.8515625f)) * 6.277394771575927734375f) * 100.0f) : mad(exp2(mad(_535, 1.03225803375244140625f, -0.434017598628997802734375f) * 14.0f), 0.180000007152557373046875f, -0.00266771926544606685638427734375f), _543 ? (exp2(log2(max(_551 - 0.8359375f, 0.0f) / mad(_551, -18.6875f, 18.8515625f)) * 6.277394771575927734375f) * 100.0f) : mad(exp2(mad(_536, 1.03225803375244140625f, -0.434017598628997802734375f) * 14.0f), 0.180000007152557373046875f, -0.00266771926544606685638427734375f), _543 ? (exp2(log2(max(_552 - 0.8359375f, 0.0f) / mad(_552, -18.6875f, 18.8515625f)) * 6.277394771575927734375f) * 100.0f) : mad(exp2(mad(_524, 0.0322580635547637939453125f, -0.434017598628997802734375f) * 14.0f), 0.180000007152557373046875f, -0.00266771926544606685638427734375f));

#if 1  // delay output device override until after input is decoded
  ApplyLUTOutputOverrides();
#endif

  float3 _734 = float3(dp3_f32(float3(dp3_f32(float3(3.2409698963165283203125f, -1.53738319873809814453125f, -0.4986107647418975830078125f), _715), dp3_f32(float3(3.2409698963165283203125f, -1.53738319873809814453125f, -0.4986107647418975830078125f), _717), dp3_f32(float3(3.2409698963165283203125f, -1.53738319873809814453125f, -0.4986107647418975830078125f), _719)), _728), dp3_f32(float3(dp3_f32(float3(-0.96924364566802978515625f, 1.875967502593994140625f, 0.0415550582110881805419921875f), _715), dp3_f32(float3(-0.96924364566802978515625f, 1.875967502593994140625f, 0.0415550582110881805419921875f), _717), dp3_f32(float3(-0.96924364566802978515625f, 1.875967502593994140625f, 0.0415550582110881805419921875f), _719)), _728), dp3_f32(float3(dp3_f32(float3(0.055630080401897430419921875f, -0.2039769589900970458984375f, 1.05697154998779296875f), _715), dp3_f32(float3(0.055630080401897430419921875f, -0.2039769589900970458984375f, 1.05697154998779296875f), _717), dp3_f32(float3(0.055630080401897430419921875f, -0.2039769589900970458984375f, 1.05697154998779296875f), _719)), _728));
  float _735 = dp3_f32(float3(0.61319148540496826171875f, 0.3395120799541473388671875f, 0.0473663322627544403076171875f), _734);
  float _736 = dp3_f32(float3(0.070206902921199798583984375f, 0.9163358211517333984375f, 0.01345001161098480224609375f), _734);
  float _737 = dp3_f32(float3(0.02061887085437774658203125f, 0.109567292034626007080078125f, 0.8696067333221435546875f), _734);
  float3 _738 = float3(_735, _736, _737);
  float _739 = dp3_f32(_738, float3(0.272228717803955078125f, 0.674081742763519287109375f, 0.053689517080783843994140625f));
  float3 _746 = float3((_735 / _739) - 1.0f, (_736 / _739) - 1.0f, (_737 / _739) - 1.0f);
  float _759 = (1.0f - exp2(dp3_f32(_746, _746) * (-4.0f))) * (1.0f - exp2(((_739 * _739) * expand_gamut) * (-4.0f)));
  bool _771 = cb0_m[44u].y != 0u;
  float _772 = _771 ? _735 : mad(_759, dp3_f32(float3(1.37041270732879638671875f, -0.3292913138866424560546875f, -0.0636827647686004638671875f), _738) - _735, _735);
  float _773 = _771 ? _736 : mad(_759, dp3_f32(float3(-0.083434186875820159912109375f, 1.0970909595489501953125f, -0.010861572809517383575439453125f), _738) - _736, _736);
  float _774 = _771 ? _737 : mad(_759, dp3_f32(float3(-0.0257932581007480621337890625f, -0.098625637590885162353515625f, 1.20369434356689453125f), _738) - _737, _737);
  float _776 = dp3_f32(float3(_772, _773, _774), float3(0.272228717803955078125f, 0.674081742763519287109375f, 0.053689517080783843994140625f));
  float _783 = asfloat(cb0_m[45u].x);
  float _784 = asfloat(cb0_m[45u].y);
  float _785 = asfloat(cb0_m[45u].z);
  float _786 = asfloat(cb0_m[45u].w);
  float _800 = _786 * asfloat(cb0_m[50u].w);
  float _807 = asfloat(cb0_m[46u].x);
  float _808 = asfloat(cb0_m[46u].y);
  float _809 = asfloat(cb0_m[46u].z);
  float _810 = asfloat(cb0_m[46u].w);
  float _824 = _810 * asfloat(cb0_m[51u].w);
  float _831 = asfloat(cb0_m[47u].x);
  float _832 = asfloat(cb0_m[47u].y);
  float _833 = asfloat(cb0_m[47u].z);
  float _834 = asfloat(cb0_m[47u].w);
  float _848 = _834 * asfloat(cb0_m[52u].w);
  float _855 = asfloat(cb0_m[48u].x);
  float _856 = asfloat(cb0_m[48u].y);
  float _857 = asfloat(cb0_m[48u].z);
  float _858 = asfloat(cb0_m[48u].w);
  float _872 = _858 * asfloat(cb0_m[53u].w);
  float _879 = asfloat(cb0_m[49u].x);
  float _880 = asfloat(cb0_m[49u].y);
  float _881 = asfloat(cb0_m[49u].z);
  float _882 = asfloat(cb0_m[49u].w);
  float _896 = _882 + asfloat(cb0_m[54u].w);
  float _900 = _772 - _776;
  float _901 = _773 - _776;
  float _902 = _774 - _776;
  float _956 = clamp(_776 * (1.0f / asfloat(cb0_m[65u].x)), 0.0f, 1.0f);
  float _957 = mad(_956, -2.0f, 3.0f);
  float _958 = _956 * _956;
  float _960 = mad(-_957, _958, 1.0f);
  float _974 = _786 * asfloat(cb0_m[60u].w);
  float _988 = _810 * asfloat(cb0_m[61u].w);
  float _1002 = _834 * asfloat(cb0_m[62u].w);
  float _1016 = _858 * asfloat(cb0_m[63u].w);
  float _1030 = _882 + asfloat(cb0_m[64u].w);
  float _1084 = asfloat(cb0_m[65u].y);
  float _1089 = clamp((_776 - _1084) * (1.0f / (1.0f - _1084)), 0.0f, 1.0f);
  float _1090 = mad(_1089, -2.0f, 3.0f);
  float _1091 = _1089 * _1089;
  float _1092 = _1090 * _1091;
  float _1106 = _786 * asfloat(cb0_m[55u].w);
  float _1120 = _810 * asfloat(cb0_m[56u].w);
  float _1134 = _834 * asfloat(cb0_m[57u].w);
  float _1148 = _858 * asfloat(cb0_m[58u].w);
  float _1162 = _882 + asfloat(cb0_m[59u].w);
  float _1217 = mad(-_1090, _1091, mad(_957, _958, -1.0f) + 1.0f);
  float _1227 = mad(mad(exp2((1.0f / ((_831 * asfloat(cb0_m[62u].x)) * _1002)) * log2(exp2(((_807 * asfloat(cb0_m[61u].x)) * _988) * log2(max(mad(_900, (_783 * asfloat(cb0_m[60u].x)) * _974, _776), 0.0f) * 5.5555553436279296875f)) * 0.180000007152557373046875f)), (_855 * asfloat(cb0_m[63u].x)) * _1016, (_879 + asfloat(cb0_m[64u].x)) + _1030), _1092, (mad(exp2((1.0f / ((_831 * asfloat(cb0_m[57u].x)) * _1134)) * log2(exp2(((_807 * asfloat(cb0_m[56u].x)) * _1120) * log2(max(mad(_900, (_783 * asfloat(cb0_m[55u].x)) * _1106, _776), 0.0f) * 5.5555553436279296875f)) * 0.180000007152557373046875f)), (_855 * asfloat(cb0_m[58u].x)) * _1148, (_879 + asfloat(cb0_m[59u].x)) + _1162) * _1217) + (mad(exp2((1.0f / ((_831 * asfloat(cb0_m[52u].x)) * _848)) * log2(exp2(((_807 * asfloat(cb0_m[51u].x)) * _824) * log2(max(mad((_783 * asfloat(cb0_m[50u].x)) * _800, _900, _776), 0.0f) * 5.5555553436279296875f)) * 0.180000007152557373046875f)), (_855 * asfloat(cb0_m[53u].x)) * _872, (_879 + asfloat(cb0_m[54u].x)) + _896) * _960));
  float _1228 = mad(_1092, mad(_1016 * (_856 * asfloat(cb0_m[63u].y)), exp2((1.0f / (_1002 * (_832 * asfloat(cb0_m[62u].y)))) * log2(exp2(((_808 * asfloat(cb0_m[61u].y)) * _988) * log2(max(mad(_901, (_784 * asfloat(cb0_m[60u].y)) * _974, _776), 0.0f) * 5.5555553436279296875f)) * 0.180000007152557373046875f)), _1030 + (_880 + asfloat(cb0_m[64u].y))), (_960 * mad(exp2((1.0f / (_848 * (_832 * asfloat(cb0_m[52u].y)))) * log2(exp2(((_808 * asfloat(cb0_m[51u].y)) * _824) * log2(max(mad(_901, (_784 * asfloat(cb0_m[50u].y)) * _800, _776), 0.0f) * 5.5555553436279296875f)) * 0.180000007152557373046875f)), (_856 * asfloat(cb0_m[53u].y)) * _872, (_880 + asfloat(cb0_m[54u].y)) + _896)) + (_1217 * mad(exp2((1.0f / (_1134 * (_832 * asfloat(cb0_m[57u].y)))) * log2(exp2((_1120 * (_808 * asfloat(cb0_m[56u].y))) * log2(max(mad(_901, _1106 * (_784 * asfloat(cb0_m[55u].y)), _776), 0.0f) * 5.5555553436279296875f)) * 0.180000007152557373046875f)), _1148 * (_856 * asfloat(cb0_m[58u].y)), (_880 + asfloat(cb0_m[59u].y)) + _1162)));
  float _1229 = mad(_1092, mad(exp2((1.0f / (_1002 * (_833 * asfloat(cb0_m[62u].z)))) * log2(exp2((_988 * (_809 * asfloat(cb0_m[61u].z))) * log2(max(mad(_902, (_785 * asfloat(cb0_m[60u].z)) * _974, _776), 0.0f) * 5.5555553436279296875f)) * 0.180000007152557373046875f)), _1016 * (_857 * asfloat(cb0_m[63u].z)), _1030 + (_881 + asfloat(cb0_m[64u].z))), (_960 * mad(exp2((1.0f / (_848 * (_833 * asfloat(cb0_m[52u].z)))) * log2(exp2((_824 * (_809 * asfloat(cb0_m[51u].z))) * log2(max(mad(_902, (_785 * asfloat(cb0_m[50u].z)) * _800, _776), 0.0f) * 5.5555553436279296875f)) * 0.180000007152557373046875f)), (_857 * asfloat(cb0_m[53u].z)) * _872, (_881 + asfloat(cb0_m[54u].z)) + _896)) + (_1217 * mad(_1148 * (_857 * asfloat(cb0_m[58u].z)), exp2(log2(exp2(log2(max(mad(_902, _1106 * (_785 * asfloat(cb0_m[55u].z)), _776), 0.0f) * 5.5555553436279296875f) * (_1120 * (_809 * asfloat(cb0_m[56u].z)))) * 0.180000007152557373046875f) * (1.0f / (_1134 * (_833 * asfloat(cb0_m[57u].z))))), (_881 + asfloat(cb0_m[59u].z)) + _1162)));
  float3 _1230 = float3(_1227, _1228, _1229);
  float _1231 = dp3_f32(float3(1.70505154132843017578125f, -0.621790707111358642578125f, -0.083258397877216339111328125f), _1230);
  float _1232 = dp3_f32(float3(-0.13025714457035064697265625f, 1.140802860260009765625f, -0.0105485282838344573974609375f), _1230);
  float _1233 = dp3_f32(float3(-0.024003274738788604736328125f, -0.128968775272369384765625f, 1.152971744537353515625f), _1230);
  float _1699;
  float _1700;
  float _1701;
  if (_771) {
    float3 _1237 = float3(_1231, _1232, _1233);
    float _1279 = 1.0f / (dp3_f32(_1237, float3(asfloat(cb0_m[33u].x), asfloat(cb0_m[33u].y), asfloat(cb0_m[33u].z))) + 1.0f);
    float _1302 = max(dp3_f32(_1237, float3(asfloat(cb0_m[28u].x), asfloat(cb0_m[28u].y), asfloat(cb0_m[28u].z))) * mad(_1279, asfloat(cb0_m[35u].x), asfloat(cb0_m[34u].x)), 0.0f);
    float _1303 = max(mad(_1279, asfloat(cb0_m[35u].y), asfloat(cb0_m[34u].y)) * dp3_f32(_1237, float3(asfloat(cb0_m[29u].x), asfloat(cb0_m[29u].y), asfloat(cb0_m[29u].z))), 0.0f);
    float _1304 = max(mad(_1279, asfloat(cb0_m[35u].z), asfloat(cb0_m[34u].z)) * dp3_f32(_1237, float3(asfloat(cb0_m[30u].x), asfloat(cb0_m[30u].y), asfloat(cb0_m[30u].z))), 0.0f);
    float _1307 = asfloat(cb0_m[31u].x);
    float _1311 = max(_1307 - _1302, 0.0f);
    float _1312 = max(_1307 - _1303, 0.0f);
    float _1313 = max(_1307 - _1304, 0.0f);
    float _1316 = asfloat(cb0_m[31u].z);
    float _1317 = max(_1302, _1316);
    float _1318 = max(_1303, _1316);
    float _1319 = max(_1304, _1316);
    float _1325 = asfloat(cb0_m[32u].x);
    float _1328 = asfloat(cb0_m[32u].y);
    float _1334 = asfloat(cb0_m[31u].w);
    float _1343 = asfloat(cb0_m[28u].w);
    float _1349 = asfloat(cb0_m[31u].y);
    float _1358 = asfloat(cb0_m[29u].w);
    float _1364 = asfloat(cb0_m[30u].w);
    _1699 = mad(1.0f / (_1319 + _1334), mad(_1319, _1325, _1328), mad(clamp(_1304, _1307, _1316), _1364, mad(1.0f / (_1313 + _1349), _1313 * _1343, _1358))) - 0.00200000009499490261077880859375f;
    _1700 = mad(mad(_1318, _1325, _1328), 1.0f / (_1318 + _1334), mad(clamp(_1303, _1307, _1316), _1364, mad(1.0f / (_1312 + _1349), _1312 * _1343, _1358))) - 0.00200000009499490261077880859375f;
    _1701 = mad(mad(_1317, _1325, _1328), 1.0f / (_1317 + _1334), mad(clamp(_1302, _1307, _1316), _1364, mad(_1311 * _1343, 1.0f / (_1311 + _1349), _1358))) - 0.00200000009499490261077880859375f;
  } else {
    float _1382 = asfloat(cb0_m[66u].x);
    float _1383 = mad(dp3_f32(float3(0.9386394023895263671875f, 1.0235956526827294510439969599247e-10f, 0.0613606236875057220458984375f), _1230) - _1227, _1382, _1227);
    float _1384 = mad(_1382, dp3_f32(float3(8.3600855405041585299841244705021e-11f, 0.830794155597686767578125f, 0.1692058742046356201171875f), _1230) - _1228, _1228);
    float _1385 = mad(_1382, dp3_f32(float3(2.1318736706521512758172320900485e-12f, -5.6330721337483069532936497125775e-12f, 1.0f), _1230) - _1229, _1229);
    float3 _1386 = float3(_1383, _1384, _1385);
    float _1387 = dp3_f32(float3(0.695452213287353515625f, 0.140678703784942626953125f, 0.16386906802654266357421875f), _1386);
    float _1388 = dp3_f32(float3(0.0447945632040500640869140625f, 0.859671115875244140625f, 0.095534317195415496826171875f), _1386);
    float _1389 = dp3_f32(float3(-0.005525882355868816375732421875f, 0.0040252101607620716094970703125f, 1.00150072574615478515625f), _1386);
    float _1393 = max(_1389, max(_1387, _1388));
    float _1398 = (max(_1393, 1.0000000133514319600180897396058e-10f) - max(min(_1389, min(_1387, _1388)), 1.0000000133514319600180897396058e-10f)) / max(_1393, 0.00999999977648258209228515625f);
    float _1409 = mad(sqrt(mad(_1387, _1387 - _1389, (_1389 * (_1389 - _1388)) + (_1388 * (_1388 - _1387)))), 1.75f, _1387 + (_1388 + _1389));
    float _1411 = _1398 - 0.4000000059604644775390625f;
    float _1415 = max(1.0f - abs(_1411 * 2.5f), 0.0f);
    float _1426 = mad(float(int(((_1411 < 0.0f) ? 4294967295u : 0u) + uint(_1411 > 0.0f))), mad(-_1415, _1415, 1.0f), 1.0f) * 0.02500000037252902984619140625f;
    float _1434 = ((_1409 <= 0.1599999964237213134765625f) ? _1426 : ((_1409 >= 0.4799999892711639404296875f) ? 0.0f : (_1426 * ((0.07999999821186065673828125f / (_1409 * 0.3333333432674407958984375f)) - 0.5f)))) + 1.0f;
    float _1435 = _1387 * _1434;
    float _1436 = _1388 * _1434;
    float _1437 = _1389 * _1434;
    float _1442 = (_1436 - _1437) * 1.73205077648162841796875f;
    float _1444 = (_1435 * 2.0f) - _1436;
    float _1446 = mad(-_1389, _1434, _1444);
    float _1447 = abs(_1446);
    float _1448 = abs(_1442);
    float _1452 = min(_1447, _1448) * (1.0f / max(_1447, _1448));
    float _1453 = _1452 * _1452;
    float _1457 = mad(_1453, mad(_1453, mad(_1453, mad(_1453, 0.02083509974181652069091796875f, -0.08513300120830535888671875f), 0.1801410019397735595703125f), -0.33029949665069580078125f), 0.999866008758544921875f);
    float _1467 = mad(_1452, _1457, (_1447 < _1448) ? mad(_1452 * _1457, -2.0f, 1.57079637050628662109375f) : 0.0f) + ((_1446 < mad(_1389, _1434, -_1444)) ? (-3.1415927410125732421875f) : 0.0f);
    float _1468 = min(_1442, _1446);
    float _1469 = max(_1442, _1446);
    float _1478 = ((_1435 == _1436) && (_1437 == _1436)) ? 0.0f : ((((_1468 < (-_1468)) && (_1469 >= (-_1469))) ? (-_1467) : _1467) * 57.295780181884765625f);
    float _1482 = clamp((_1478 < 0.0f) ? (_1478 + 360.0f) : _1478, 0.0f, 360.0f);
    float _1489 = max(1.0f - abs(((_1482 > 180.0f) ? (_1482 - 360.0f) : _1482) * 0.01481481455266475677490234375f), 0.0f);
    float _1492 = mad(_1489, -2.0f, 3.0f) * (_1489 * _1489);
    float3 _1500 = float3(_1435 + (((_1398 * (_1492 * _1492)) * mad(-_1387, _1434, 0.02999999932944774627685546875f)) * 0.180000007152557373046875f), _1436, _1437);
    float _1504 = max(dp3_f32(float3(1.45143926143646240234375f, -0.236510753631591796875f, -0.214928567409515380859375f), _1500), 0.0f);
    float _1505 = max(dp3_f32(float3(-0.07655377686023712158203125f, 1.1762297153472900390625f, -0.0996759235858917236328125f), _1500), 0.0f);
    float _1506 = max(dp3_f32(float3(0.0083161480724811553955078125f, -0.0060324496589601039886474609375f, 0.99771630764007568359375f), _1500), 0.0f);
    float _1508 = dp3_f32(float3(_1504, _1505, _1506), float3(0.272228717803955078125f, 0.674081742763519287109375f, 0.053689517080783843994140625f));
    float _1555 = (mad(_1504 - _1508, 0.959999978542327880859375f, _1508));
    float _1556 = (mad(_1505 - _1508, 0.959999978542327880859375f, _1508));
    float _1557 = (mad(_1506 - _1508, 0.959999978542327880859375f, _1508));

#if 0
    _1555 = log2(_1555);
    _1556 = log2(_1556);
    _1557 = log2(_1557);
    float _1517 = asfloat(cb0_m[36u].w);
    float _1522 = asfloat(cb0_m[36u].y);
    float _1523 = (_1517 + 1.0f) - _1522;
    float _1527 = asfloat(cb0_m[37u].x) + 1.0f;
    float _1530 = asfloat(cb0_m[36u].z);
    float _1531 = _1527 - _1530;
    float _1537 = asfloat(cb0_m[36u].x);
    float _1539 = (1.0f - _1522) / _1537;
    float _1540 = (_1517 + 0.180000007152557373046875f) / _1523;
    float _1550 = (_1522 > 0.800000011920928955078125f) ? (((0.819999992847442626953125f - _1522) / _1537) - 0.74472749233245849609375f) : mad(-(log2(_1540 / ((1.0f - _1540) + 1.0f)) * 0.3465735912322998046875f), _1523 / _1537, -0.74472749233245849609375f);
    float _1551 = _1539 - _1550;
    float _1554 = (_1530 / _1537) + (_1550 - _1539);
    float _1558 = _1555 * 0.3010300099849700927734375f;
    float _1559 = _1556 * 0.3010300099849700927734375f;
    float _1560 = _1557 * 0.3010300099849700927734375f;
    float _1564 = _1537 * mad(_1555, 0.3010300099849700927734375f, _1551);
    float _1565 = _1537 * mad(_1556, 0.3010300099849700927734375f, _1551);
    float _1566 = _1537 * mad(_1557, 0.3010300099849700927734375f, _1551);
    float _1567 = _1523 + _1523;
    float _1569 = (_1537 * (-2.0f)) / _1523;
    float _1571 = mad(_1555, 0.3010300099849700927734375f, -_1550);
    float _1573 = mad(_1556, 0.3010300099849700927734375f, -_1550);
    float _1575 = mad(_1557, 0.3010300099849700927734375f, -_1550);
    float _1594 = _1531 + _1531;
    float _1596 = (_1537 + _1537) / _1531;
    float _1624 = (_1558 < _1550) ? ((_1567 / (exp2((_1569 * _1571) * 1.44269502162933349609375f) + 1.0f)) - _1517) : _1564;
    float _1625 = (_1550 > _1559) ? ((_1567 / (exp2((_1569 * _1573) * 1.44269502162933349609375f) + 1.0f)) - _1517) : _1565;
    float _1626 = (_1550 > _1560) ? ((_1567 / (exp2((_1569 * _1575) * 1.44269502162933349609375f) + 1.0f)) - _1517) : _1566;
    float _1633 = _1554 - _1550;
    float _1637 = clamp(_1571 / _1633, 0.0f, 1.0f);
    float _1638 = clamp(_1573 / _1633, 0.0f, 1.0f);
    float _1639 = clamp(_1575 / _1633, 0.0f, 1.0f);
    bool _1640 = _1554 < _1550;
    float _1644 = _1640 ? (1.0f - _1637) : _1637;
    float _1645 = _1640 ? (1.0f - _1638) : _1638;
    float _1646 = _1640 ? (1.0f - _1639) : _1639;
    float _1659 = mad(mad(_1644, -2.0f, 3.0f) * (_1644 * _1644), ((_1554 < _1558) ? (_1527 - (_1594 / (exp2((_1596 * mad(_1555, 0.3010300099849700927734375f, -_1554)) * 1.44269502162933349609375f) + 1.0f))) : _1564) - _1624, _1624);
    float _1660 = mad(((_1554 < _1559) ? (_1527 - (_1594 / (exp2((_1596 * mad(_1556, 0.3010300099849700927734375f, -_1554)) * 1.44269502162933349609375f) + 1.0f))) : _1565) - _1625, (_1645 * _1645) * mad(_1645, -2.0f, 3.0f), _1625);
    float _1661 = mad(((_1554 < _1560) ? (_1527 - (_1594 / (exp2((_1596 * mad(_1557, 0.3010300099849700927734375f, -_1554)) * 1.44269502162933349609375f) + 1.0f))) : _1566) - _1626, (_1646 * _1646) * mad(_1646, -2.0f, 3.0f), _1626);
    float _1663 = dp3_f32(float3(_1659, _1660, _1661), float3(0.272228717803955078125f, 0.674081742763519287109375f, 0.053689517080783843994140625f));
    float _1678 = asfloat(cb0_m[66u].z);
    float _1679 = mad(max(mad(_1659 - _1663, 0.930000007152557373046875f, _1663), 0.0f) - _1383, _1678, _1383);
    float _1680 = mad(_1678, max(mad(_1660 - _1663, 0.930000007152557373046875f, _1663), 0.0f) - _1384, _1384);
    float _1681 = mad(_1678, max(mad(_1661 - _1663, 0.930000007152557373046875f, _1663), 0.0f) - _1385, _1385);
    float3 _1682 = float3(_1679, _1680, _1681);
    float3 _1692 = float3(mad(_1382, dp3_f32(float3(1.065374851226806640625f, 1.4467850633081980049610137939453e-06f, -0.0653710067272186279296875f), _1682) - _1679, _1679), mad(_1382, dp3_f32(float3(-3.4552559213807398919016122817993e-07f, 1.20366346836090087890625f, -0.20366771519184112548828125f), _1682) - _1680, _1680), mad(_1382, dp3_f32(float3(1.9865447953293369209859520196915e-08f, 2.1207958056379538902547210454941e-08f, 0.999999582767486572265625f), _1682) - _1681, _1681));
#else

    float preRRT_r = _1383;
    float preRRT_g = _1384;
    float preRRT_b = _1385;

    float3 _1692;
    ApplyFilmicToneMap(_1555, _1556, _1557, preRRT_r, preRRT_g, preRRT_b, _1692.r, _1692.g, _1692.b);

#endif
    // remove max(0.f)
    _1699 = (dp3_f32(float3(-0.024003274738788604736328125f, -0.128968775272369384765625f, 1.152971744537353515625f), _1692));
    _1700 = (dp3_f32(float3(-0.13025714457035064697265625f, 1.140802860260009765625f, -0.0105485282838344573974609375f), _1692));
    _1701 = (dp3_f32(float3(1.70505154132843017578125f, -0.621790707111358642578125f, -0.083258397877216339111328125f), _1692));
  }
  float _1707 = asfloat(cb0_m[26u].y);
  float _1713 = asfloat(cb0_m[26u].x);
  float _1722 = asfloat(cb0_m[26u].z);
  float _1723 = ((_1707 * _1701) + ((_1701 * _1701) * _1713)) + _1722;
  float _1724 = _1722 + ((_1713 * (_1700 * _1700)) + (_1707 * _1700));
  float _1725 = _1722 + ((_1713 * (_1699 * _1699)) + (_1707 * _1699));
  float _1731 = asfloat(cb0_m[42u].y);
  float _1732 = asfloat(cb0_m[42u].z);
  float _1733 = asfloat(cb0_m[42u].w);
  float _1742 = asfloat(cb0_m[43u].x);
  float _1743 = asfloat(cb0_m[43u].y);
  float _1744 = asfloat(cb0_m[43u].z);
  float _1753 = asfloat(cb0_m[43u].w);
  float _1757 = (_1723 * _1731) + (mad(-_1723, _1731, _1742) * _1753);
  float _1758 = (_1753 * mad(-_1732, _1724, _1743)) + (_1732 * _1724);
  float _1759 = (_1753 * mad(-_1733, _1725, _1744)) + (_1733 * _1725);

  if (GenerateOutput(_1757, _1758, _1759, u0[uint3(gl_GlobalInvocationID.xyz)], is_hdr)) {
    return;
  }

  float _1768 = asfloat(cb0_m[27u].y);
  float _1772 = renodx::math::SignPow(_1757, _1768);
  float _1773 = renodx::math::SignPow(_1758, _1768);
  float _1774 = renodx::math::SignPow(_1759, _1768);
  float _3549;
  float _3550;
  float _3551;
  if (output_device == 0u) {
    _3549 = renodx::color::srgb::EncodeSafe(_1774);
    _3550 = renodx::color::srgb::EncodeSafe(_1773);
    _3551 = renodx::color::srgb::EncodeSafe(_1772);

    float3 final = float3(_3551, _3550, _3549);
    final = RENODX_GAMMA_CORRECTION ? renodx::color::gamma::DecodeSafe(final, 2.2f) : renodx::color::srgb::DecodeSafe(final);
    final = renodx::color::pq::EncodeSafe(renodx::color::bt2020::from::BT709(final), RENODX_DIFFUSE_WHITE_NITS);
    _3551 = final.r, _3550 = final.g, _3549 = final.b;

  } else {
    bool _1799 = output_gamut == 1u;
    bool _1800 = output_gamut == 2u;
    bool _1801 = output_gamut == 3u;
    bool _1802 = output_gamut == 4u;
    float _1830 = _1799 ? 1.37915885448455810546875f : (_1800 ? 1.025799274444580078125f : (_1801 ? 0.695452213287353515625f : (_1802 ? 1.0f : 1.70505154132843017578125f)));
    float _1831 = _1799 ? (-0.3088507354259490966796875f) : (_1800 ? (-0.02005250938236713409423828125f) : (_1801 ? 0.140678703784942626953125f : (_1802 ? 0.0f : (-0.621790707111358642578125f))));
    float _1832 = _1799 ? (-0.0703467428684234619140625f) : (_1800 ? (-0.005771367810666561126708984375f) : (_1801 ? 0.16386906802654266357421875f : (_1802 ? 0.0f : (-0.083258397877216339111328125f))));
    float _1833 = _1799 ? (-0.06933529675006866455078125f) : (_1800 ? (-0.00223502493463456630706787109375f) : (_1801 ? 0.0447945632040500640869140625f : (_1802 ? 0.0f : (-0.13025714457035064697265625f))));
    float _1834 = _1799 ? 1.0822923183441162109375f : (_1800 ? 1.0045826435089111328125f : (_1801 ? 0.859671115875244140625f : (_1802 ? 1.0f : 1.140802860260009765625f)));
    float _1835 = _1799 ? (-0.012962051667273044586181640625f) : (_1800 ? (-0.00235231337137520313262939453125f) : (_1801 ? 0.095534317195415496826171875f : (_1802 ? 0.0f : (-0.0105485282838344573974609375f))));
    float _1836 = _1799 ? (-0.00215925858356058597564697265625f) : (_1800 ? (-0.005014003254473209381103515625f) : (_1801 ? (-0.0055258828215301036834716796875f) : (_1802 ? 0.0f : (-0.024003274738788604736328125f))));
    float _1837 = _1799 ? (-0.0454653985798358917236328125f) : (_1800 ? (-0.025293387472629547119140625f) : (_1801 ? 0.0040252101607620716094970703125f : (_1802 ? 0.0f : (-0.128968775272369384765625f))));
    float _1838 = _1799 ? 1.047759532928466796875f : (_1800 ? 1.03044021129608154296875f : (_1801 ? 1.00150072574615478515625f : (_1802 ? 1.0f : 1.152971744537353515625f)));
    float _3546;
    float _3547;
    float _3548;
    if (output_device == 1u) {
      float3 _1843 = float3(_1772, _1773, _1774);
      float3 _1848 = float3(dp3_f32(float3(0.61319148540496826171875f, 0.3395120799541473388671875f, 0.0473663322627544403076171875f), _1843), dp3_f32(float3(0.070206902921199798583984375f, 0.9163358211517333984375f, 0.01345001161098480224609375f), _1843), dp3_f32(float3(0.02061887085437774658203125f, 0.109567292034626007080078125f, 0.8696067333221435546875f), _1843));
      float _1854 = max(dp3_f32(float3(_1830, _1831, _1832), _1848), 6.1035199905745685100555419921875e-05f);
      float _1855 = max(dp3_f32(float3(_1833, _1834, _1835), _1848), 6.1035199905745685100555419921875e-05f);
      float _1856 = max(dp3_f32(float3(_1836, _1837, _1838), _1848), 6.1035199905745685100555419921875e-05f);
      _3546 = min(mad(exp2(log2(max(_1856, 0.017999999225139617919921875f)) * 0.449999988079071044921875f), 1.09899997711181640625f, -0.098999999463558197021484375f), _1856 * 4.5f);
      _3547 = min(mad(exp2(log2(max(_1855, 0.017999999225139617919921875f)) * 0.449999988079071044921875f), 1.09899997711181640625f, -0.098999999463558197021484375f), _1855 * 4.5f);
      _3548 = min(mad(exp2(log2(max(_1854, 0.017999999225139617919921875f)) * 0.449999988079071044921875f), 1.09899997711181640625f, -0.098999999463558197021484375f), _1854 * 4.5f);
    } else {
      float _1890 = (_1231 * _1731) + (_1753 * mad(-_1231, _1731, _1742));
      float _1891 = (_1753 * mad(-_1232, _1732, _1743)) + (_1232 * _1732);
      float _1892 = (_1753 * mad(-_1233, _1733, _1744)) + (_1233 * _1733);
      float _3543;
      float _3544;
      float _3545;
      if ((output_device == 3u) || (output_device == 5u)) {
        float3 _1902 = float3(_1890 * 1.5f, _1891 * 1.5f, _1892 * 1.5f);
        float _1903 = dp3_f32(float3(0.4397008121013641357421875f, 0.3829780519008636474609375f, 0.17733480036258697509765625f), _1902);
        float _1904 = dp3_f32(float3(0.089792303740978240966796875f, 0.81342315673828125f, 0.09676162898540496826171875f), _1902);
        float _1905 = dp3_f32(float3(0.01754398643970489501953125f, 0.11154405772686004638671875f, 0.870704114437103271484375f), _1902);
        float _1909 = max(_1905, max(_1903, _1904));
        float _1914 = (max(_1909, 1.0000000133514319600180897396058e-10f) - max(min(_1905, min(_1903, _1904)), 1.0000000133514319600180897396058e-10f)) / max(_1909, 0.00999999977648258209228515625f);
        float _1925 = mad(sqrt(mad(_1903, _1903 - _1905, (_1905 * (_1905 - _1904)) + (_1904 * (_1904 - _1903)))), 1.75f, _1903 + (_1904 + _1905));
        float _1927 = _1914 - 0.4000000059604644775390625f;
        float _1931 = max(1.0f - abs(_1927 * 2.5f), 0.0f);
        float _1942 = mad(float(int(((_1927 < 0.0f) ? 4294967295u : 0u) + uint(_1927 > 0.0f))), mad(-_1931, _1931, 1.0f), 1.0f) * 0.02500000037252902984619140625f;
        float _1950 = ((_1925 <= 0.1599999964237213134765625f) ? _1942 : ((_1925 >= 0.4799999892711639404296875f) ? 0.0f : (_1942 * ((0.07999999821186065673828125f / (_1925 * 0.3333333432674407958984375f)) - 0.5f)))) + 1.0f;
        float _1951 = _1903 * _1950;
        float _1952 = _1904 * _1950;
        float _1953 = _1905 * _1950;
        float _1958 = (_1952 - _1953) * 1.73205077648162841796875f;
        float _1960 = (_1951 * 2.0f) - _1952;
        float _1962 = mad(-_1905, _1950, _1960);
        float _1963 = abs(_1958);
        float _1964 = abs(_1962);
        float _1968 = min(_1963, _1964) * (1.0f / max(_1963, _1964));
        float _1969 = _1968 * _1968;
        float _1973 = mad(_1969, mad(_1969, mad(_1969, mad(_1969, 0.02083509974181652069091796875f, -0.08513300120830535888671875f), 0.1801410019397735595703125f), -0.33029949665069580078125f), 0.999866008758544921875f);
        float _1983 = mad(_1968, _1973, (_1963 > _1964) ? mad(_1968 * _1973, -2.0f, 1.57079637050628662109375f) : 0.0f) + ((_1962 < mad(_1905, _1950, -_1960)) ? (-3.1415927410125732421875f) : 0.0f);
        float _1984 = min(_1958, _1962);
        float _1985 = max(_1958, _1962);
        float _1994 = ((_1951 == _1952) && (_1953 == _1952)) ? 0.0f : ((((_1984 < (-_1984)) && (_1985 >= (-_1985))) ? (-_1983) : _1983) * 57.295780181884765625f);
        float _1998 = clamp((_1994 < 0.0f) ? (_1994 + 360.0f) : _1994, 0.0f, 360.0f);
        float _2001 = (_1998 > 180.0f) ? (_1998 - 360.0f) : _1998;
        float _2038;
        if ((_2001 > (-67.5f)) && (_2001 < 67.5f)) {
          float _2008 = _2001 + 67.5f;
          float _2009 = _2008 * 0.0296296291053295135498046875f;
          float _2013 = mad(_2008, 0.0296296291053295135498046875f, -trunc(_2009));
          float _2014 = _2013 * _2013;
          float _2015 = _2013 * _2014;
          float _2019 = _2014 * 0.5f;
          uint _2027 = uint(cvt_f32_i32(_2009));
          _2038 = (_2027 == 3u) ? (mad(_2013, -0.5f, _2019 + (_2015 * (-0.16666667163372039794921875f))) + 0.16666667163372039794921875f) : ((_2027 == 2u) ? (((_2015 * 0.5f) - _2014) + 0.666666686534881591796875f) : ((_2027 == 1u) ? (mad(_2013, 0.5f, _2019 + (_2015 * (-0.5f))) + 0.16666667163372039794921875f) : ((_2027 != 0u) ? 0.0f : (_2015 * 0.16666667163372039794921875f))));
        } else {
          _2038 = 0.0f;
        }
        float3 _2049 = float3(clamp(_1951 + ((((_1914 * _2038) * 1.5f) * mad(-_1903, _1950, 0.02999999932944774627685546875f)) * 0.180000007152557373046875f), 0.0f, 65535.0f), clamp(_1952, 0.0f, 65535.0f), clamp(_1953, 0.0f, 65535.0f));
        float _2053 = clamp(dp3_f32(float3(1.45143926143646240234375f, -0.236510753631591796875f, -0.214928567409515380859375f), _2049), 0.0f, 65535.0f);
        float _2054 = clamp(dp3_f32(float3(-0.07655377686023712158203125f, 1.1762297153472900390625f, -0.0996759235858917236328125f), _2049), 0.0f, 65535.0f);
        float _2055 = clamp(dp3_f32(float3(0.0083161480724811553955078125f, -0.0060324496589601039886474609375f, 0.99771630764007568359375f), _2049), 0.0f, 65535.0f);
        float _2057 = dp3_f32(float3(_2053, _2054, _2055), float3(0.272228717803955078125f, 0.674081742763519287109375f, 0.053689517080783843994140625f));
        float _2061 = mad(_2053 - _2057, 0.959999978542327880859375f, _2057);
        float _2062 = mad(_2054 - _2057, 0.959999978542327880859375f, _2057);
        float _2063 = mad(_2055 - _2057, 0.959999978542327880859375f, _2057);
        float _2070 = (_2061 <= 0.0f) ? (-14.0f) : log2(_2061);
        float _2071 = (_2062 <= 0.0f) ? (-14.0f) : log2(_2062);
        float _2072 = (_2063 <= 0.0f) ? (-14.0f) : log2(_2063);
        float _2160;
        if (_2070 <= (-17.4739322662353515625f)) {
          _2160 = -4.0f;
        } else {
          float _2159;
          if ((_2070 > (-17.4739322662353515625f)) && (_2070 < (-2.4739310741424560546875f))) {
            float _2085 = mad(_2070, 0.3010300099849700927734375f, 5.2601776123046875f);
            float _2086 = _2085 * 0.6643855571746826171875f;
            int _2087 = cvt_f32_i32(_2086);
            float _2090 = mad(_2085, 0.6643855571746826171875f, -trunc(_2086));
            uint _2097 = min(uint(_2087), 16u);
            uint _2104 = min(uint(_2087 + 1), 16u);
            uint _2108 = min(uint(_2087 + 2), 16u);
            float2 _2114 = float2(_445[_2097].x, _445[_2104].x);
            _2159 = dp3_f32(float3(_2090 * _2090, _2090, 1.0f), float3(dp3_f32(float3(_445[_2097].x, _445[_2108].x, _445[_2104].x), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_2114, float2(-1.0f, 1.0f)), dp2_f32(_2114, 0.5f.xx)));
          } else {
            float _2158;
            if ((_2070 >= (-2.4739310741424560546875f)) && (_2070 < 15.52606868743896484375f)) {
              float _2126 = mad(_2070, 0.3010300099849700927734375f, 0.74472749233245849609375f);
              float _2127 = _2126 * 0.55365467071533203125f;
              int _2128 = cvt_f32_i32(_2127);
              float _2131 = mad(_2126, 0.55365467071533203125f, -trunc(_2127));
              uint _2138 = min(uint(_2128), 16u);
              uint _2142 = min(uint(_2128 + 1), 16u);
              uint _2146 = min(uint(_2128 + 2), 16u);
              float2 _2152 = float2(_445[_2138].y, _445[_2142].y);
              _2158 = dp3_f32(float3(_2131 * _2131, _2131, 1.0f), float3(dp3_f32(float3(_445[_2138].y, _445[_2146].y, _445[_2142].y), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_2152, float2(-1.0f, 1.0f)), dp2_f32(_2152, 0.5f.xx)));
            } else {
              _2158 = 4.0f;
            }
            _2159 = _2158;
          }
          _2160 = _2159;
        }
        float _2244;
        if (_2071 <= (-17.4739322662353515625f)) {
          _2244 = -4.0f;
        } else {
          float _2243;
          if ((_2071 > (-17.4739322662353515625f)) && (_2071 < (-2.4739310741424560546875f))) {
            float _2172 = mad(_2071, 0.3010300099849700927734375f, 5.2601776123046875f);
            float _2173 = _2172 * 0.6643855571746826171875f;
            int _2174 = cvt_f32_i32(_2173);
            float _2177 = mad(_2172, 0.6643855571746826171875f, -trunc(_2173));
            uint _2184 = min(uint(_2174), 16u);
            uint _2188 = min(uint(_2174 + 1), 16u);
            uint _2192 = min(uint(_2174 + 2), 16u);
            float2 _2198 = float2(_445[_2184].x, _445[_2188].x);
            _2243 = dp3_f32(float3(_2177 * _2177, _2177, 1.0f), float3(dp3_f32(float3(_445[_2184].x, _445[_2192].x, _445[_2188].x), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_2198, float2(-1.0f, 1.0f)), dp2_f32(_2198, 0.5f.xx)));
          } else {
            float _2242;
            if ((_2071 >= (-2.4739310741424560546875f)) && (_2071 < 15.52606868743896484375f)) {
              float _2210 = mad(_2071, 0.3010300099849700927734375f, 0.74472749233245849609375f);
              float _2211 = _2210 * 0.55365467071533203125f;
              int _2212 = cvt_f32_i32(_2211);
              float _2215 = mad(_2210, 0.55365467071533203125f, -trunc(_2211));
              uint _2222 = min(uint(_2212), 16u);
              uint _2226 = min(uint(_2212 + 1), 16u);
              uint _2230 = min(uint(_2212 + 2), 16u);
              float2 _2236 = float2(_445[_2222].y, _445[_2226].y);
              _2242 = dp3_f32(float3(_2215 * _2215, _2215, 1.0f), float3(dp3_f32(float3(_445[_2222].y, _445[_2230].y, _445[_2226].y), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_2236, float2(-1.0f, 1.0f)), dp2_f32(_2236, 0.5f.xx)));
            } else {
              _2242 = 4.0f;
            }
            _2243 = _2242;
          }
          _2244 = _2243;
        }
        float _2328;
        if (_2072 <= (-17.4739322662353515625f)) {
          _2328 = -4.0f;
        } else {
          float _2327;
          if ((_2072 > (-17.4739322662353515625f)) && (_2072 < (-2.4739310741424560546875f))) {
            float _2256 = mad(_2072, 0.3010300099849700927734375f, 5.2601776123046875f);
            float _2257 = _2256 * 0.6643855571746826171875f;
            int _2258 = cvt_f32_i32(_2257);
            float _2261 = mad(_2256, 0.6643855571746826171875f, -trunc(_2257));
            uint _2268 = min(uint(_2258), 16u);
            uint _2272 = min(uint(_2258 + 1), 16u);
            uint _2276 = min(uint(_2258 + 2), 16u);
            float2 _2282 = float2(_445[_2268].x, _445[_2272].x);
            _2327 = dp3_f32(float3(_2261 * _2261, _2261, 1.0f), float3(dp3_f32(float3(_445[_2268].x, _445[_2276].x, _445[_2272].x), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_2282, float2(-1.0f, 1.0f)), dp2_f32(_2282, 0.5f.xx)));
          } else {
            float _2326;
            if ((_2072 >= (-2.4739310741424560546875f)) && (_2072 < 15.52606868743896484375f)) {
              float _2294 = mad(_2072, 0.3010300099849700927734375f, 0.74472749233245849609375f);
              float _2295 = _2294 * 0.55365467071533203125f;
              int _2296 = cvt_f32_i32(_2295);
              float _2299 = mad(_2294, 0.55365467071533203125f, -trunc(_2295));
              uint _2306 = min(uint(_2296), 16u);
              uint _2310 = min(uint(_2296 + 1), 16u);
              uint _2314 = min(uint(_2296 + 2), 16u);
              float2 _2320 = float2(_445[_2306].y, _445[_2310].y);
              _2326 = dp3_f32(float3(_2299 * _2299, _2299, 1.0f), float3(dp3_f32(float3(_445[_2306].y, _445[_2314].y, _445[_2310].y), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_2320, float2(-1.0f, 1.0f)), dp2_f32(_2320, 0.5f.xx)));
            } else {
              _2326 = 4.0f;
            }
            _2327 = _2326;
          }
          _2328 = _2327;
        }
        float3 _2331 = float3(exp2(_2160 * 3.3219280242919921875f), exp2(_2244 * 3.3219280242919921875f), exp2(_2328 * 3.3219280242919921875f));
        float3 _2335 = float3(dp3_f32(float3(0.695452213287353515625f, 0.140678703784942626953125f, 0.16386906802654266357421875f), _2331), dp3_f32(float3(0.0447945632040500640869140625f, 0.859671115875244140625f, 0.095534317195415496826171875f), _2331), dp3_f32(float3(-0.0055258828215301036834716796875f, 0.0040252101607620716094970703125f, 1.00150072574615478515625f), _2331));
        float _2336 = dp3_f32(float3(1.45143926143646240234375f, -0.236510753631591796875f, -0.214928567409515380859375f), _2335);
        float _2337 = dp3_f32(float3(-0.07655377686023712158203125f, 1.1762297153472900390625f, -0.0996759235858917236328125f), _2335);
        float _2338 = dp3_f32(float3(0.0083161480724811553955078125f, -0.0060324496589601039886474609375f, 0.99771630764007568359375f), _2335);
        float _2341 = (_2336 <= 0.0f) ? (-13.28771209716796875f) : log2(_2336);
        float _2426;
        if (_2341 <= (-12.78386783599853515625f)) {
          _2426 = mad(_2341, 0.903090000152587890625f, 7.54498291015625f);
        } else {
          float _2425;
          if ((_2341 > (-12.78386783599853515625f)) && (_2341 < 2.2630345821380615234375f)) {
            float _2353 = mad(_2341, 0.3010300099849700927734375f, 3.84832763671875f);
            float _2354 = _2353 * 1.54540097713470458984375f;
            int _2355 = cvt_f32_i32(_2354);
            float _2358 = mad(_2353, 1.54540097713470458984375f, -trunc(_2354));
            uint _2365 = min(uint(_2355), 16u);
            uint _2369 = min(uint(_2355 + 1), 16u);
            uint _2373 = min(uint(_2355 + 2), 16u);
            float2 _2379 = float2(_445[_2365].z, _445[_2369].z);
            _2425 = dp3_f32(float3(_2358 * _2358, _2358, 1.0f), float3(dp3_f32(float3(_445[_2365].z, _445[_2373].z, _445[_2369].z), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_2379, float2(-1.0f, 1.0f)), dp2_f32(_2379, 0.5f.xx)));
          } else {
            float _2424;
            if ((_2341 >= 2.2630345821380615234375f) && (_2341 < 12.13733673095703125f)) {
              float _2391 = mad(_2341, 0.3010300099849700927734375f, -0.6812412738800048828125f);
              float _2392 = _2391 * 2.35495090484619140625f;
              int _2393 = cvt_f32_i32(_2392);
              float _2396 = mad(_2391, 2.35495090484619140625f, -trunc(_2392));
              uint _2403 = min(uint(_2393), 16u);
              uint _2407 = min(uint(_2393 + 1), 16u);
              uint _2411 = min(uint(_2393 + 2), 16u);
              float2 _2417 = float2(_445[_2403].w, _445[_2407].w);
              _2424 = dp3_f32(float3(_2396 * _2396, _2396, 1.0f), float3(dp3_f32(float3(_445[_2403].w, _445[_2411].w, _445[_2407].w), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_2417, float2(-1.0f, 1.0f)), dp2_f32(_2417, 0.5f.xx)));
            } else {
              _2424 = mad(_2341, 0.01806179992854595184326171875f, 2.78077793121337890625f);
            }
            _2425 = _2424;
          }
          _2426 = _2425;
        }
        float _2428 = exp2(_2426 * 3.3219280242919921875f);
        float _2431 = (_2337 <= 0.0f) ? (-13.28771209716796875f) : log2(_2337);
        float _2516;
        if (_2431 <= (-12.78386783599853515625f)) {
          _2516 = mad(_2431, 0.903090000152587890625f, 7.54498291015625f);
        } else {
          float _2515;
          if ((_2431 > (-12.78386783599853515625f)) && (_2431 < 2.2630345821380615234375f)) {
            float _2443 = mad(_2431, 0.3010300099849700927734375f, 3.84832763671875f);
            float _2444 = _2443 * 1.54540097713470458984375f;
            int _2445 = cvt_f32_i32(_2444);
            float _2448 = mad(_2443, 1.54540097713470458984375f, -trunc(_2444));
            uint _2455 = min(uint(_2445), 16u);
            uint _2459 = min(uint(_2445 + 1), 16u);
            uint _2463 = min(uint(_2445 + 2), 16u);
            float2 _2469 = float2(_445[_2455].z, _445[_2459].z);
            _2515 = dp3_f32(float3(_2448 * _2448, _2448, 1.0f), float3(dp3_f32(float3(_445[_2455].z, _445[_2463].z, _445[_2459].z), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_2469, float2(-1.0f, 1.0f)), dp2_f32(_2469, 0.5f.xx)));
          } else {
            float _2514;
            if ((_2431 >= 2.2630345821380615234375f) && (_2431 < 12.13733673095703125f)) {
              float _2481 = mad(_2431, 0.3010300099849700927734375f, -0.6812412738800048828125f);
              float _2482 = _2481 * 2.35495090484619140625f;
              int _2483 = cvt_f32_i32(_2482);
              float _2486 = mad(_2481, 2.35495090484619140625f, -trunc(_2482));
              uint _2493 = min(uint(_2483), 16u);
              uint _2497 = min(uint(_2483 + 1), 16u);
              uint _2501 = min(uint(_2483 + 2), 16u);
              float2 _2507 = float2(_445[_2493].w, _445[_2497].w);
              _2514 = dp3_f32(float3(_2486 * _2486, _2486, 1.0f), float3(dp3_f32(float3(_445[_2493].w, _445[_2501].w, _445[_2497].w), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_2507, float2(-1.0f, 1.0f)), dp2_f32(_2507, 0.5f.xx)));
            } else {
              _2514 = mad(_2431, 0.01806179992854595184326171875f, 2.78077793121337890625f);
            }
            _2515 = _2514;
          }
          _2516 = _2515;
        }
        float _2518 = exp2(_2516 * 3.3219280242919921875f);
        float _2521 = (_2338 <= 0.0f) ? (-13.28771209716796875f) : log2(_2338);
        float _2606;
        if (_2521 <= (-12.78386783599853515625f)) {
          _2606 = mad(_2521, 0.903090000152587890625f, 7.54498291015625f);
        } else {
          float _2605;
          if ((_2521 > (-12.78386783599853515625f)) && (_2521 < 2.2630345821380615234375f)) {
            float _2533 = mad(_2521, 0.3010300099849700927734375f, 3.84832763671875f);
            float _2534 = _2533 * 1.54540097713470458984375f;
            int _2535 = cvt_f32_i32(_2534);
            float _2538 = mad(_2533, 1.54540097713470458984375f, -trunc(_2534));
            uint _2545 = min(uint(_2535), 16u);
            uint _2549 = min(uint(_2535 + 1), 16u);
            uint _2553 = min(uint(_2535 + 2), 16u);
            float2 _2559 = float2(_445[_2545].z, _445[_2549].z);
            _2605 = dp3_f32(float3(_2538 * _2538, _2538, 1.0f), float3(dp3_f32(float3(_445[_2545].z, _445[_2553].z, _445[_2549].z), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_2559, float2(-1.0f, 1.0f)), dp2_f32(_2559, 0.5f.xx)));
          } else {
            float _2604;
            if ((_2521 >= 2.2630345821380615234375f) && (_2521 < 12.13733673095703125f)) {
              float _2571 = mad(_2521, 0.3010300099849700927734375f, -0.6812412738800048828125f);
              float _2572 = _2571 * 2.35495090484619140625f;
              int _2573 = cvt_f32_i32(_2572);
              float _2576 = mad(_2571, 2.35495090484619140625f, -trunc(_2572));
              uint _2583 = min(uint(_2573), 16u);
              uint _2587 = min(uint(_2573 + 1), 16u);
              uint _2591 = min(uint(_2573 + 2), 16u);
              float2 _2597 = float2(_445[_2583].w, _445[_2587].w);
              _2604 = dp3_f32(float3(_2576 * _2576, _2576, 1.0f), float3(dp3_f32(float3(_445[_2583].w, _445[_2591].w, _445[_2587].w), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_2597, float2(-1.0f, 1.0f)), dp2_f32(_2597, 0.5f.xx)));
            } else {
              _2604 = mad(_2521, 0.01806179992854595184326171875f, 2.78077793121337890625f);
            }
            _2605 = _2604;
          }
          _2606 = _2605;
        }
        float _2608 = exp2(_2606 * 3.3219280242919921875f);
        float3 _2628 = float3((_1731 * (_2428 - 3.5073844628641381859779357910156e-05f)) + (_1753 * mad(_1731, 3.5073844628641381859779357910156e-05f - _2428, _1742)), (_1753 * mad(_1732, 3.5073844628641381859779357910156e-05f - _2518, _1743)) + (_1732 * (_2518 - 3.5073844628641381859779357910156e-05f)), (_1753 * mad(_1733, 3.5073844628641381859779357910156e-05f - _2608, _1744)) + (_1733 * (_2608 - 3.5073844628641381859779357910156e-05f)));
        float _2643 = exp2(log2(dp3_f32(float3(_1830, _1831, _1832), _2628) * 9.9999997473787516355514526367188e-05f) * 0.1593017578125f);
        float _2644 = exp2(log2(dp3_f32(float3(_1833, _1834, _1835), _2628) * 9.9999997473787516355514526367188e-05f) * 0.1593017578125f);
        float _2645 = exp2(log2(dp3_f32(float3(_1836, _1837, _1838), _2628) * 9.9999997473787516355514526367188e-05f) * 0.1593017578125f);
        _3543 = exp2(log2((1.0f / mad(_2645, 18.6875f, 1.0f)) * mad(_2645, 18.8515625f, 0.8359375f)) * 78.84375f);
        _3544 = exp2(log2((1.0f / mad(_2644, 18.6875f, 1.0f)) * mad(_2644, 18.8515625f, 0.8359375f)) * 78.84375f);
        _3545 = exp2(log2((1.0f / mad(_2643, 18.6875f, 1.0f)) * mad(_2643, 18.8515625f, 0.8359375f)) * 78.84375f);
      } else {
        float _3540;
        float _3541;
        float _3542;
        if ((output_device == 4u) || (output_device == 6u)) {
          float3 _2676 = float3(_1890 * 1.5f, _1891 * 1.5f, _1892 * 1.5f);
          float _2677 = dp3_f32(float3(0.4397008121013641357421875f, 0.3829780519008636474609375f, 0.17733480036258697509765625f), _2676);
          float _2678 = dp3_f32(float3(0.089792303740978240966796875f, 0.81342315673828125f, 0.09676162898540496826171875f), _2676);
          float _2679 = dp3_f32(float3(0.01754398643970489501953125f, 0.11154405772686004638671875f, 0.870704114437103271484375f), _2676);
          float _2683 = max(_2679, max(_2677, _2678));
          float _2688 = (max(_2683, 1.0000000133514319600180897396058e-10f) - max(min(_2679, min(_2677, _2678)), 1.0000000133514319600180897396058e-10f)) / max(_2683, 0.00999999977648258209228515625f);
          float _2699 = mad(sqrt(mad(_2677, _2677 - _2679, (_2679 * (_2679 - _2678)) + (_2678 * (_2678 - _2677)))), 1.75f, _2677 + (_2678 + _2679));
          float _2701 = _2688 - 0.4000000059604644775390625f;
          float _2705 = max(1.0f - abs(_2701 * 2.5f), 0.0f);
          float _2716 = mad(float(int(((_2701 < 0.0f) ? 4294967295u : 0u) + uint(_2701 > 0.0f))), mad(-_2705, _2705, 1.0f), 1.0f) * 0.02500000037252902984619140625f;
          float _2724 = ((_2699 <= 0.1599999964237213134765625f) ? _2716 : ((_2699 >= 0.4799999892711639404296875f) ? 0.0f : (_2716 * ((0.07999999821186065673828125f / (_2699 * 0.3333333432674407958984375f)) - 0.5f)))) + 1.0f;
          float _2725 = _2677 * _2724;
          float _2726 = _2678 * _2724;
          float _2727 = _2679 * _2724;
          float _2732 = (_2726 - _2727) * 1.73205077648162841796875f;
          float _2734 = (_2725 * 2.0f) - _2726;
          float _2736 = mad(-_2679, _2724, _2734);
          float _2737 = abs(_2732);
          float _2738 = abs(_2736);
          float _2742 = min(_2737, _2738) * (1.0f / max(_2737, _2738));
          float _2743 = _2742 * _2742;
          float _2747 = mad(_2743, mad(_2743, mad(_2743, mad(_2743, 0.02083509974181652069091796875f, -0.08513300120830535888671875f), 0.1801410019397735595703125f), -0.33029949665069580078125f), 0.999866008758544921875f);
          float _2757 = mad(_2742, _2747, (_2737 > _2738) ? mad(_2742 * _2747, -2.0f, 1.57079637050628662109375f) : 0.0f) + ((_2736 < mad(_2679, _2724, -_2734)) ? (-3.1415927410125732421875f) : 0.0f);
          float _2758 = min(_2732, _2736);
          float _2759 = max(_2732, _2736);
          float _2768 = ((_2725 == _2726) && (_2727 == _2726)) ? 0.0f : ((((_2758 < (-_2758)) && (_2759 >= (-_2759))) ? (-_2757) : _2757) * 57.295780181884765625f);
          float _2772 = clamp((_2768 < 0.0f) ? (_2768 + 360.0f) : _2768, 0.0f, 360.0f);
          float _2775 = (_2772 > 180.0f) ? (_2772 - 360.0f) : _2772;
          float _2812;
          if ((_2775 > (-67.5f)) && (_2775 < 67.5f)) {
            float _2782 = _2775 + 67.5f;
            float _2783 = _2782 * 0.0296296291053295135498046875f;
            float _2787 = mad(_2782, 0.0296296291053295135498046875f, -trunc(_2783));
            float _2788 = _2787 * _2787;
            float _2789 = _2787 * _2788;
            float _2793 = _2788 * 0.5f;
            uint _2801 = uint(cvt_f32_i32(_2783));
            _2812 = (_2801 == 3u) ? (mad(_2787, -0.5f, (_2789 * (-0.16666667163372039794921875f)) + _2793) + 0.16666667163372039794921875f) : ((_2801 == 2u) ? (((_2789 * 0.5f) - _2788) + 0.666666686534881591796875f) : ((_2801 == 1u) ? (mad(_2787, 0.5f, _2793 + (_2789 * (-0.5f))) + 0.16666667163372039794921875f) : ((_2801 != 0u) ? 0.0f : (_2789 * 0.16666667163372039794921875f))));
          } else {
            _2812 = 0.0f;
          }
          float3 _2823 = float3(clamp(_2725 + ((((_2688 * _2812) * 1.5f) * mad(-_2677, _2724, 0.02999999932944774627685546875f)) * 0.180000007152557373046875f), 0.0f, 65535.0f), clamp(_2726, 0.0f, 65535.0f), clamp(_2727, 0.0f, 65535.0f));
          float _2827 = clamp(dp3_f32(float3(1.45143926143646240234375f, -0.236510753631591796875f, -0.214928567409515380859375f), _2823), 0.0f, 65535.0f);
          float _2828 = clamp(dp3_f32(float3(-0.07655377686023712158203125f, 1.1762297153472900390625f, -0.0996759235858917236328125f), _2823), 0.0f, 65535.0f);
          float _2829 = clamp(dp3_f32(float3(0.0083161480724811553955078125f, -0.0060324496589601039886474609375f, 0.99771630764007568359375f), _2823), 0.0f, 65535.0f);
          float _2831 = dp3_f32(float3(_2827, _2828, _2829), float3(0.272228717803955078125f, 0.674081742763519287109375f, 0.053689517080783843994140625f));
          float _2835 = mad(_2827 - _2831, 0.959999978542327880859375f, _2831);
          float _2836 = mad(_2828 - _2831, 0.959999978542327880859375f, _2831);
          float _2837 = mad(_2829 - _2831, 0.959999978542327880859375f, _2831);
          float _2844 = (_2835 <= 0.0f) ? (-14.0f) : log2(_2835);
          float _2845 = (_2836 <= 0.0f) ? (-14.0f) : log2(_2836);
          float _2846 = (_2837 <= 0.0f) ? (-14.0f) : log2(_2837);
          float _2931;
          if (_2844 <= (-17.4739322662353515625f)) {
            _2931 = -4.0f;
          } else {
            float _2930;
            if ((_2844 > (-17.4739322662353515625f)) && (_2844 < (-2.4739310741424560546875f))) {
              float _2859 = mad(_2844, 0.3010300099849700927734375f, 5.2601776123046875f);
              float _2860 = _2859 * 0.6643855571746826171875f;
              int _2861 = cvt_f32_i32(_2860);
              float _2864 = mad(_2859, 0.6643855571746826171875f, -trunc(_2860));
              uint _2871 = min(uint(_2861), 16u);
              uint _2875 = min(uint(_2861 + 1), 16u);
              uint _2879 = min(uint(_2861 + 2), 16u);
              float2 _2885 = float2(_445[_2871].x, _445[_2875].x);
              _2930 = dp3_f32(float3(_2864 * _2864, _2864, 1.0f), float3(dp3_f32(float3(_445[_2871].x, _445[_2879].x, _445[_2875].x), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_2885, float2(-1.0f, 1.0f)), dp2_f32(_2885, 0.5f.xx)));
            } else {
              float _2929;
              if ((_2844 >= (-2.4739310741424560546875f)) && (_2844 < 15.52606868743896484375f)) {
                float _2897 = mad(_2844, 0.3010300099849700927734375f, 0.74472749233245849609375f);
                float _2898 = _2897 * 0.55365467071533203125f;
                int _2899 = cvt_f32_i32(_2898);
                float _2902 = mad(_2897, 0.55365467071533203125f, -trunc(_2898));
                uint _2909 = min(uint(_2899), 16u);
                uint _2913 = min(uint(_2899 + 1), 16u);
                uint _2917 = min(uint(_2899 + 2), 16u);
                float2 _2923 = float2(_445[_2909].y, _445[_2913].y);
                _2929 = dp3_f32(float3(_2902 * _2902, _2902, 1.0f), float3(dp3_f32(float3(_445[_2909].y, _445[_2917].y, _445[_2913].y), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_2923, float2(-1.0f, 1.0f)), dp2_f32(_2923, 0.5f.xx)));
              } else {
                _2929 = 4.0f;
              }
              _2930 = _2929;
            }
            _2931 = _2930;
          }
          float _3015;
          if (_2845 <= (-17.4739322662353515625f)) {
            _3015 = -4.0f;
          } else {
            float _3014;
            if ((_2845 > (-17.4739322662353515625f)) && (_2845 < (-2.4739310741424560546875f))) {
              float _2943 = mad(_2845, 0.3010300099849700927734375f, 5.2601776123046875f);
              float _2944 = _2943 * 0.6643855571746826171875f;
              int _2945 = cvt_f32_i32(_2944);
              float _2948 = mad(_2943, 0.6643855571746826171875f, -trunc(_2944));
              uint _2955 = min(uint(_2945), 16u);
              uint _2959 = min(uint(_2945 + 1), 16u);
              uint _2963 = min(uint(_2945 + 2), 16u);
              float2 _2969 = float2(_445[_2955].x, _445[_2959].x);
              _3014 = dp3_f32(float3(_2948 * _2948, _2948, 1.0f), float3(dp3_f32(float3(_445[_2955].x, _445[_2963].x, _445[_2959].x), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_2969, float2(-1.0f, 1.0f)), dp2_f32(_2969, 0.5f.xx)));
            } else {
              float _3013;
              if ((_2845 >= (-2.4739310741424560546875f)) && (_2845 < 15.52606868743896484375f)) {
                float _2981 = mad(_2845, 0.3010300099849700927734375f, 0.74472749233245849609375f);
                float _2982 = _2981 * 0.55365467071533203125f;
                int _2983 = cvt_f32_i32(_2982);
                float _2986 = mad(_2981, 0.55365467071533203125f, -trunc(_2982));
                uint _2993 = min(uint(_2983), 16u);
                uint _2997 = min(uint(_2983 + 1), 16u);
                uint _3001 = min(uint(_2983 + 2), 16u);
                float2 _3007 = float2(_445[_2993].y, _445[_2997].y);
                _3013 = dp3_f32(float3(_2986 * _2986, _2986, 1.0f), float3(dp3_f32(float3(_445[_2993].y, _445[_3001].y, _445[_2997].y), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_3007, float2(-1.0f, 1.0f)), dp2_f32(_3007, 0.5f.xx)));
              } else {
                _3013 = 4.0f;
              }
              _3014 = _3013;
            }
            _3015 = _3014;
          }
          float _3099;
          if (_2846 <= (-17.4739322662353515625f)) {
            _3099 = -4.0f;
          } else {
            float _3098;
            if ((_2846 > (-17.4739322662353515625f)) && (_2846 < (-2.4739310741424560546875f))) {
              float _3027 = mad(_2846, 0.3010300099849700927734375f, 5.2601776123046875f);
              float _3028 = _3027 * 0.6643855571746826171875f;
              int _3029 = cvt_f32_i32(_3028);
              float _3032 = mad(_3027, 0.6643855571746826171875f, -trunc(_3028));
              uint _3039 = min(uint(_3029), 16u);
              uint _3043 = min(uint(_3029 + 1), 16u);
              uint _3047 = min(uint(_3029 + 2), 16u);
              float2 _3053 = float2(_445[_3039].x, _445[_3043].x);
              _3098 = dp3_f32(float3(_3032 * _3032, _3032, 1.0f), float3(dp3_f32(float3(_445[_3039].x, _445[_3047].x, _445[_3043].x), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_3053, float2(-1.0f, 1.0f)), dp2_f32(_3053, 0.5f.xx)));
            } else {
              float _3097;
              if ((_2846 >= (-2.4739310741424560546875f)) && (_2846 < 15.52606868743896484375f)) {
                float _3065 = mad(_2846, 0.3010300099849700927734375f, 0.74472749233245849609375f);
                float _3066 = _3065 * 0.55365467071533203125f;
                int _3067 = cvt_f32_i32(_3066);
                float _3070 = mad(_3065, 0.55365467071533203125f, -trunc(_3066));
                uint _3077 = min(uint(_3067), 16u);
                uint _3081 = min(uint(_3067 + 1), 16u);
                uint _3085 = min(uint(_3067 + 2), 16u);
                float2 _3091 = float2(_445[_3077].y, _445[_3081].y);
                _3097 = dp3_f32(float3(_3070 * _3070, _3070, 1.0f), float3(dp3_f32(float3(_445[_3077].y, _445[_3085].y, _445[_3081].y), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_3091, float2(-1.0f, 1.0f)), dp2_f32(_3091, 0.5f.xx)));
              } else {
                _3097 = 4.0f;
              }
              _3098 = _3097;
            }
            _3099 = _3098;
          }
          float3 _3102 = float3(exp2(_2931 * 3.3219280242919921875f), exp2(_3015 * 3.3219280242919921875f), exp2(_3099 * 3.3219280242919921875f));
          float3 _3106 = float3(dp3_f32(float3(0.695452213287353515625f, 0.140678703784942626953125f, 0.16386906802654266357421875f), _3102), dp3_f32(float3(0.0447945632040500640869140625f, 0.859671115875244140625f, 0.095534317195415496826171875f), _3102), dp3_f32(float3(-0.0055258828215301036834716796875f, 0.0040252101607620716094970703125f, 1.00150072574615478515625f), _3102));
          float _3107 = dp3_f32(float3(1.45143926143646240234375f, -0.236510753631591796875f, -0.214928567409515380859375f), _3106);
          float _3108 = dp3_f32(float3(-0.07655377686023712158203125f, 1.1762297153472900390625f, -0.0996759235858917236328125f), _3106);
          float _3109 = dp3_f32(float3(0.0083161480724811553955078125f, -0.0060324496589601039886474609375f, 0.99771630764007568359375f), _3106);
          float _3112 = (_3107 <= 0.0f) ? (-13.28771209716796875f) : log2(_3107);
          float _3202;
          if (_3112 <= (-12.78386783599853515625f)) {
            _3202 = -2.3010299205780029296875f;
          } else {
            float _3201;
            if ((_3112 > (-12.78386783599853515625f)) && (_3112 < 2.2630345821380615234375f)) {
              float _3123 = mad(_3112, 0.3010300099849700927734375f, 3.84832763671875f);
              float _3124 = _3123 * 1.54540097713470458984375f;
              int _3125 = cvt_f32_i32(_3124);
              float _3128 = mad(_3123, 1.54540097713470458984375f, -trunc(_3124));
              uint _3134 = min(uint(_3125 + 6), 16u);
              uint _3140 = min(uint((_3125 + 1) + 6), 16u);
              uint _3146 = min(uint((_3125 + 2) + 6), 16u);
              float2 _3152 = float2(_445[_3134].x, _445[_3140].x);
              _3201 = dp3_f32(float3(_3128 * _3128, _3128, 1.0f), float3(dp3_f32(float3(_445[_3134].x, _445[_3146].x, _445[_3140].x), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_3152, float2(-1.0f, 1.0f)), dp2_f32(_3152, 0.5f.xx)));
            } else {
              float _3200;
              if ((_3112 >= 2.2630345821380615234375f) && (_3112 < 12.4948215484619140625f)) {
                float _3164 = mad(_3112, 0.3010300099849700927734375f, -0.6812412738800048828125f);
                float _3165 = _3164 * 2.272672176361083984375f;
                int _3166 = cvt_f32_i32(_3165);
                float _3169 = mad(_3164, 2.272672176361083984375f, -trunc(_3165));
                uint _3175 = min(uint(_3166 + 6), 16u);
                uint _3181 = min(uint((_3166 + 1) + 6), 16u);
                uint _3187 = min(uint((_3166 + 2) + 6), 16u);
                float2 _3193 = float2(_445[_3175].y, _445[_3181].y);
                _3200 = dp3_f32(float3(_3169 * _3169, _3169, 1.0f), float3(dp3_f32(float3(_445[_3175].y, _445[_3187].y, _445[_3181].y), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_3193, float2(-1.0f, 1.0f)), dp2_f32(_3193, 0.5f.xx)));
              } else {
                _3200 = mad(_3112, 0.0361235998570919036865234375f, 2.8496720790863037109375f);
              }
              _3201 = _3200;
            }
            _3202 = _3201;
          }
          float _3204 = exp2(_3202 * 3.3219280242919921875f);
          float _3207 = (_3108 <= 0.0f) ? (-13.28771209716796875f) : log2(_3108);
          float _3297;
          if (_3207 <= (-12.78386783599853515625f)) {
            _3297 = -2.3010299205780029296875f;
          } else {
            float _3296;
            if ((_3207 > (-12.78386783599853515625f)) && (_3207 < 2.2630345821380615234375f)) {
              float _3218 = mad(_3207, 0.3010300099849700927734375f, 3.84832763671875f);
              float _3219 = _3218 * 1.54540097713470458984375f;
              int _3220 = cvt_f32_i32(_3219);
              float _3223 = mad(_3218, 1.54540097713470458984375f, -trunc(_3219));
              uint _3229 = min(uint(_3220 + 6), 16u);
              uint _3235 = min(uint((_3220 + 1) + 6), 16u);
              uint _3241 = min(uint((_3220 + 2) + 6), 16u);
              float2 _3247 = float2(_445[_3229].x, _445[_3235].x);
              _3296 = dp3_f32(float3(_3223 * _3223, _3223, 1.0f), float3(dp3_f32(float3(_445[_3229].x, _445[_3241].x, _445[_3235].x), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_3247, float2(-1.0f, 1.0f)), dp2_f32(_3247, 0.5f.xx)));
            } else {
              float _3295;
              if ((_3207 >= 2.2630345821380615234375f) && (_3207 < 12.4948215484619140625f)) {
                float _3259 = mad(_3207, 0.3010300099849700927734375f, -0.6812412738800048828125f);
                float _3260 = _3259 * 2.272672176361083984375f;
                int _3261 = cvt_f32_i32(_3260);
                float _3264 = mad(_3259, 2.272672176361083984375f, -trunc(_3260));
                uint _3270 = min(uint(_3261 + 6), 16u);
                uint _3276 = min(uint((_3261 + 1) + 6), 16u);
                uint _3282 = min(uint((_3261 + 2) + 6), 16u);
                float2 _3288 = float2(_445[_3270].y, _445[_3276].y);
                _3295 = dp3_f32(float3(_3264 * _3264, _3264, 1.0f), float3(dp3_f32(float3(_445[_3270].y, _445[_3282].y, _445[_3276].y), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_3288, float2(-1.0f, 1.0f)), dp2_f32(_3288, 0.5f.xx)));
              } else {
                _3295 = mad(_3207, 0.0361235998570919036865234375f, 2.8496720790863037109375f);
              }
              _3296 = _3295;
            }
            _3297 = _3296;
          }
          float _3299 = exp2(_3297 * 3.3219280242919921875f);
          float _3302 = (_3109 <= 0.0f) ? (-13.28771209716796875f) : log2(_3109);
          float _3392;
          if (_3302 <= (-12.78386783599853515625f)) {
            _3392 = -2.3010299205780029296875f;
          } else {
            float _3391;
            if ((_3302 > (-12.78386783599853515625f)) && (_3302 < 2.2630345821380615234375f)) {
              float _3313 = mad(_3302, 0.3010300099849700927734375f, 3.84832763671875f);
              float _3314 = _3313 * 1.54540097713470458984375f;
              int _3315 = cvt_f32_i32(_3314);
              float _3318 = mad(_3313, 1.54540097713470458984375f, -trunc(_3314));
              uint _3324 = min(uint(_3315 + 6), 16u);
              uint _3330 = min(uint((_3315 + 1) + 6), 16u);
              uint _3336 = min(uint((_3315 + 2) + 6), 16u);
              float2 _3342 = float2(_445[_3324].x, _445[_3330].x);
              _3391 = dp3_f32(float3(_3318 * _3318, _3318, 1.0f), float3(dp3_f32(float3(_445[_3324].x, _445[_3336].x, _445[_3330].x), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_3342, float2(-1.0f, 1.0f)), dp2_f32(_3342, 0.5f.xx)));
            } else {
              float _3390;
              if ((_3302 >= 2.2630345821380615234375f) && (_3302 < 12.4948215484619140625f)) {
                float _3354 = mad(_3302, 0.3010300099849700927734375f, -0.6812412738800048828125f);
                float _3355 = _3354 * 2.272672176361083984375f;
                int _3356 = cvt_f32_i32(_3355);
                float _3359 = mad(_3354, 2.272672176361083984375f, -trunc(_3355));
                uint _3365 = min(uint(_3356 + 6), 16u);
                uint _3371 = min(uint((_3356 + 1) + 6), 16u);
                uint _3377 = min(uint((_3356 + 2) + 6), 16u);
                float2 _3383 = float2(_445[_3365].y, _445[_3371].y);
                _3390 = dp3_f32(float3(_3359 * _3359, _3359, 1.0f), float3(dp3_f32(float3(_445[_3365].y, _445[_3377].y, _445[_3371].y), float3(0.5f, 0.5f, -1.0f)), dp2_f32(_3383, float2(-1.0f, 1.0f)), dp2_f32(_3383, 0.5f.xx)));
              } else {
                _3390 = mad(_3302, 0.0361235998570919036865234375f, 2.8496720790863037109375f);
              }
              _3391 = _3390;
            }
            _3392 = _3391;
          }
          float _3394 = exp2(_3392 * 3.3219280242919921875f);
          float3 _3411 = float3((_1731 * _3204) + (_1753 * mad(-_1731, _3204, _1742)), (_1753 * mad(-_1732, _3299, _1743)) + (_1732 * _3299), (_1753 * mad(-_1733, _3394, _1744)) + (_1733 * _3394));
          float _3426 = exp2(log2(dp3_f32(float3(_1830, _1831, _1832), _3411) * 9.9999997473787516355514526367188e-05f) * 0.1593017578125f);
          float _3427 = exp2(log2(dp3_f32(float3(_1833, _1834, _1835), _3411) * 9.9999997473787516355514526367188e-05f) * 0.1593017578125f);
          float _3428 = exp2(log2(dp3_f32(float3(_1836, _1837, _1838), _3411) * 9.9999997473787516355514526367188e-05f) * 0.1593017578125f);
          _3540 = exp2(log2((1.0f / mad(_3428, 18.6875f, 1.0f)) * mad(_3428, 18.8515625f, 0.8359375f)) * 78.84375f);
          _3541 = exp2(log2((1.0f / mad(_3427, 18.6875f, 1.0f)) * mad(_3427, 18.8515625f, 0.8359375f)) * 78.84375f);
          _3542 = exp2(log2(mad(_3426, 18.8515625f, 0.8359375f) * (1.0f / mad(_3426, 18.6875f, 1.0f))) * 78.84375f);
        } else {
          float _3537;
          float _3538;
          float _3539;
          if (output_device == 7u) {
            float3 _3454 = float3(_1890, _1891, _1892);
            float3 _3459 = float3(dp3_f32(float3(0.61319148540496826171875f, 0.3395120799541473388671875f, 0.0473663322627544403076171875f), _3454), dp3_f32(float3(0.070206902921199798583984375f, 0.9163358211517333984375f, 0.01345001161098480224609375f), _3454), dp3_f32(float3(0.02061887085437774658203125f, 0.109567292034626007080078125f, 0.8696067333221435546875f), _3454));
            float _3474 = exp2(log2(dp3_f32(float3(_1830, _1831, _1832), _3459) * 9.9999997473787516355514526367188e-05f) * 0.1593017578125f);
            float _3475 = exp2(log2(dp3_f32(float3(_1833, _1834, _1835), _3459) * 9.9999997473787516355514526367188e-05f) * 0.1593017578125f);
            float _3476 = exp2(log2(dp3_f32(float3(_1836, _1837, _1838), _3459) * 9.9999997473787516355514526367188e-05f) * 0.1593017578125f);
            _3537 = exp2(log2((1.0f / mad(_3476, 18.6875f, 1.0f)) * mad(_3476, 18.8515625f, 0.8359375f)) * 78.84375f);
            _3538 = exp2(log2((1.0f / mad(_3475, 18.6875f, 1.0f)) * mad(_3475, 18.8515625f, 0.8359375f)) * 78.84375f);
            _3539 = exp2(log2(mad(_3474, 18.8515625f, 0.8359375f) * (1.0f / mad(_3474, 18.6875f, 1.0f))) * 78.84375f);
          } else {
            bool _3498 = output_device == 8u;
            bool _3499 = output_device == 9u;
            float3 _3500 = float3(_1757, _1758, _1759);
            float3 _3504 = float3(_1830, _1831, _1832);
            float3 _3505 = float3(dp3_f32(float3(0.61319148540496826171875f, 0.3395120799541473388671875f, 0.0473663322627544403076171875f), _3500), dp3_f32(float3(0.070206902921199798583984375f, 0.9163358211517333984375f, 0.01345001161098480224609375f), _3500), dp3_f32(float3(0.02061887085437774658203125f, 0.109567292034626007080078125f, 0.8696067333221435546875f), _3500));
            float3 _3507 = float3(_1833, _1834, _1835);
            float3 _3509 = float3(_1836, _1837, _1838);
            float3 _3511 = float3(_1772, _1773, _1774);
            float3 _3515 = float3(dp3_f32(float3(0.61319148540496826171875f, 0.3395120799541473388671875f, 0.0473663322627544403076171875f), _3511), dp3_f32(float3(0.070206902921199798583984375f, 0.9163358211517333984375f, 0.01345001161098480224609375f), _3511), dp3_f32(float3(0.02061887085437774658203125f, 0.109567292034626007080078125f, 0.8696067333221435546875f), _3511));
            float _3524 = asfloat(cb0_m[27u].z);
            _3537 = _3498 ? _1892 : (_3499 ? dp3_f32(_3509, _3505) : exp2(log2(dp3_f32(_3509, _3515)) * _3524));
            _3538 = _3498 ? _1891 : (_3499 ? dp3_f32(_3507, _3505) : exp2(log2(dp3_f32(_3507, _3515)) * _3524));
            _3539 = _3498 ? _1890 : (_3499 ? dp3_f32(_3504, _3505) : exp2(log2(dp3_f32(_3504, _3515)) * _3524));
          }
          _3540 = _3537;
          _3541 = _3538;
          _3542 = _3539;
        }
        _3543 = _3540;
        _3544 = _3541;
        _3545 = _3542;
      }
      _3546 = _3543;
      _3547 = _3544;
      _3548 = _3545;
    }
    _3549 = _3546;
    _3550 = _3547;
    _3551 = _3548;
  }

  u0[uint3(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y, gl_GlobalInvocationID.z)] = float4(float3(_3551, _3550, _3549) / 1.05f, 0.0f);
}

[numthreads(8, 8, 8)]
void main(SPIRV_Cross_Input stage_input) {
  gl_GlobalInvocationID = stage_input.gl_GlobalInvocationID;
  comp_main();
}
