// #include "../common.hlsl"
// #include "../shared.h"
#include "./lutscaling.hlsl"

Texture2D<float4> t0 : register(t0);  // SDR LUT 1

Texture2D<float4> t1 : register(t1);  // SDR LUT 2

SamplerState s0 : register(s0);

static const float _global_0[6] = { -4.0f, -4.0f, -3.157376527786255f, -0.48524999618530273f, 1.847732424736023f, 1.847732424736023f };
static const float _global_1[6] = { -0.7185482382774353f, 2.0810306072235107f, 3.668124198913574f, 4.0f, 4.0f, 4.0f };
static const float _global_2[10] = { -1.6989699602127075f, -1.6989699602127075f, -1.4779000282287598f, -1.229099988937378f, -0.864799976348877f, -0.4480000138282776f, 0.005179999861866236f, 0.45110803842544556f, 0.9113744497299194f, 0.9113744497299194f };
static const float _global_3[10] = { 0.5154386758804321f, 0.8470437526702881f, 1.1358000040054321f, 1.3802000284194946f, 1.519700050354004f, 1.5985000133514404f, 1.6467000246047974f, 1.6746091842651367f, 1.687873363494873f, 1.687873363494873f };

/** Values of DIM_OUTPUT_DEVICE (matching C++'s EDisplayOutputFormat) */
#define TONEMAPPER_OUTPUT_sRGB                 0
#define TONEMAPPER_OUTPUT_Rec709               1
#define TONEMAPPER_OUTPUT_ExplicitGammaMapping 2
#define TONEMAPPER_OUTPUT_ACES1000nitST2084    3
#define TONEMAPPER_OUTPUT_ACES2000nitST2084    4
#define TONEMAPPER_OUTPUT_ACES1000nitScRGB     5
#define TONEMAPPER_OUTPUT_ACES2000nitScRGB     6
#define TONEMAPPER_OUTPUT_LinearEXR            7
#define TONEMAPPER_OUTPUT_NoToneCurve          8
#define TONEMAPPER_OUTPUT_WithToneCurve        9

/** Values of DIM_OUTPUT_DEVICE (matching C++'s EDisplayColorGamut) */
#define TONEMAPPER_GAMUT_sRGB_D65    0
#define TONEMAPPER_GAMUT_DCIP3_D65   1
#define TONEMAPPER_GAMUT_Rec2020_D65 2
#define TONEMAPPER_GAMUT_ACES_D60    3
#define TONEMAPPER_GAMUT_ACEScg_D60  4

float4 main(
    noperspective float2 TEXCOORD: TEXCOORD,
    noperspective float4 SV_Position: SV_Position,
    nointerpolation uint SV_RenderTargetArrayIndex: SV_RenderTargetArrayIndex)
    : SV_Target {
  int output_device = cb0_068x;

  float4 SV_Target;
  float _8[6];
  float _9[6];
  float _10[6];
  float _11[6];
  float _12 = TEXCOORD.x + -0.015625f;
  float _13 = TEXCOORD.y + -0.015625f;
  float _16 = float((uint)(int)(SV_RenderTargetArrayIndex));
  float _37;
  float _38;
  float _39;
  float _40;
  float _41;
  float _42;
  float _43;
  float _44;
  float _45;
  float _102;
  float _103;
  float _104;
  float _321;
  float _334;
  float _347;
  float _393;
  float _394;
  float _395;
  float _415;
  float _428;
  float _441;
  float _932;
  float _933;
  float _934;
  float _943;
  float _953;
  float _964;
  float _988;
  float _989;
  float _990;
  float _1005;
  float _1020;
  float _1035;
  float _1109;
  float _1142;
  float _1156;
  float _1220;
  float _1499;
  float _1532;
  float _1546;
  float _1585;
  float _1678;
  float _1737;
  float _1796;
  float _1876;
  float _1938;
  float _2000;
  float _2085;
  float _2086;
  float _2087;
  float _2098;
  float _2109;
  float _2215;
  float _2248;
  float _2262;
  float _2301;
  float _2394;
  float _2453;
  float _2512;
  float _2592;
  float _2654;
  float _2716;
  float _2801;
  float _2802;
  float _2803;
  float _2983;
  float _3016;
  float _3030;
  float _3069;
  float _3174;
  float _3243;
  float _3312;
  float _3578;
  float _3611;
  float _3625;
  float _3664;
  float _3769;
  float _3838;
  float _3907;
  float _4135;
  float _4136;
  float _4137;
  if (!(cb0_068y == 1)) {
    if (!(cb0_068y == 2)) {
      if (!(cb0_068y == 3)) {
        bool _26 = (cb0_068y == 4);
        _37 = select(_26, 1.0f, 1.7050515413284302f);
        _38 = select(_26, 0.0f, -0.6217905879020691f);
        _39 = select(_26, 0.0f, -0.0832584798336029f);
        _40 = select(_26, 0.0f, -0.13025718927383423f);
        _41 = select(_26, 1.0f, 1.1408027410507202f);
        _42 = select(_26, 0.0f, -0.010548528283834457f);
        _43 = select(_26, 0.0f, -0.024003278464078903f);
        _44 = select(_26, 0.0f, -0.1289687603712082f);
        _45 = select(_26, 1.0f, 1.152971863746643f);
      } else {
        _37 = 0.6954522132873535f;
        _38 = 0.14067870378494263f;
        _39 = 0.16386906802654266f;
        _40 = 0.044794563204050064f;
        _41 = 0.8596711158752441f;
        _42 = 0.0955343171954155f;
        _43 = -0.005525882821530104f;
        _44 = 0.004025210160762072f;
        _45 = 1.0015007257461548f;
      }
    } else {  // BT2020 true (AP1D60 => BT2020D65)
      _37 = 1.02579927444458f;
      _38 = -0.020052503794431686f;
      _39 = -0.0057713985443115234f;
      _40 = -0.0022350111976265907f;
      _41 = 1.0045825242996216f;
      _42 = -0.002352306619286537f;
      _43 = -0.005014004185795784f;
      _44 = -0.025293385609984398f;
      _45 = 1.0304402112960815f;
    }
  } else {
    _37 = 1.379158854484558f;
    _38 = -0.3088507056236267f;
    _39 = -0.07034677267074585f;
    _40 = -0.06933528929948807f;
    _41 = 1.0822921991348267f;
    _42 = -0.012962047010660172f;
    _43 = -0.002159259282052517f;
    _44 = -0.045465391129255295f;
    _45 = 1.0477596521377563f;
  }
  if ((uint)output_device > (uint)2) {  // TONEMAPPER_OUTPUT_ACES1000nitST2084 (true 3)
    float _55 = exp2(log2(_12 * 1.0322580337524414f) * 0.012683313339948654f);
    float _56 = exp2(log2(_13 * 1.0322580337524414f) * 0.012683313339948654f);
    float _57 = exp2(log2(_16 * 0.032258063554763794f) * 0.012683313339948654f);
    _102 = (exp2(log2(max(0.0f, (_55 + -0.8359375f)) / (18.8515625f - (_55 * 18.6875f))) * 6.277394771575928f) * 100.0f);
    _103 = (exp2(log2(max(0.0f, (_56 + -0.8359375f)) / (18.8515625f - (_56 * 18.6875f))) * 6.277394771575928f) * 100.0f);
    _104 = (exp2(log2(max(0.0f, (_57 + -0.8359375f)) / (18.8515625f - (_57 * 18.6875f))) * 6.277394771575928f) * 100.0f);
  } else {
    _102 = ((exp2((_12 * 14.45161247253418f) + -6.07624626159668f) * 0.18000000715255737f) + -0.002667719265446067f);
    _103 = ((exp2((_13 * 14.45161247253418f) + -6.07624626159668f) * 0.18000000715255737f) + -0.002667719265446067f);
    _104 = ((exp2((_16 * 0.4516128897666931f) + -6.07624626159668f) * 0.18000000715255737f) + -0.002667719265446067f);
  }

  if (RENODX_TONE_MAP_TYPE != 0) {
    output_device = 0u;
  }

  // White Balance
  // cb0_041z = 6500
  // cb0_041w = -0.075
  // D_IlluminantChromaticity
  // PlanckianLocusChromaticity
  float _107 = cb0_041z * 1.0005563497543335f;
  float _121 = select((_107 <= 7000.0f), (((((2967800.0f - (4604438528.0f / cb0_041z)) / _107) + 99.11000061035156f) / _107) + 0.24406300485134125f), (((((1901800.0f - (2005284352.0f / cb0_041z)) / _107) + 247.47999572753906f) / _107) + 0.23703999817371368f));
  float _135 = ((((cb0_041z * 1.2864121856637212e-07f) + 0.00015411825734190643f) * cb0_041z) + 0.8601177334785461f) / ((((cb0_041z * 7.081451371959702e-07f) + 0.0008424202096648514f) * cb0_041z) + 1.0f);
  float _145 = ((((cb0_041z * 4.204816761443908e-08f) + 4.228062607580796e-05f) * cb0_041z) + 0.31739872694015503f) / ((1.0f - (cb0_041z * 2.8974181986995973e-05f)) + ((cb0_041z * cb0_041z) * 1.6145605741257896e-07f));
  float _150 = ((_135 * 2.0f) + 4.0f) - (_145 * 8.0f);
  float _151 = (_135 * 3.0f) / _150;
  float _153 = (_145 * 2.0f) / _150;
  bool _154 = (cb0_041z < 4000.0f);
  float _159 = rsqrt(dot(float2(_135, _145), float2(_135, _145)));
  float _160 = cb0_041w * 0.05000000074505806f;
  float _163 = _135 - ((_160 * _145) * _159);
  float _166 = ((_160 * _135) * _159) + _145;
  float _171 = (4.0f - (_166 * 8.0f)) + (_163 * 2.0f);
  float _177 = (((_163 * 3.0f) / _171) - _151) + select(_154, _151, _121);
  float _178 = (((_166 * 2.0f) / _171) - _153) + select(_154, _153, (((_121 * 2.869999885559082f) + -0.2750000059604645f) - ((_121 * _121) * 3.0f)));
  float _179 = max(_178, 1.000000013351432e-10f);
  float _180 = _177 / _179;
  float _183 = ((1.0f - _177) - _178) / _179;

  // Chromatic Adaptation Bradford ConeResponse
  float _193 = 0.9413792490959167f / mad(-0.16140000522136688f, _183, ((_180 * 0.8950999975204468f) + 0.266400009393692f));
  float _194 = 1.0404363870620728f / mad(0.03669999912381172f, _183, (1.7135000228881836f - (_180 * 0.7501999735832214f)));
  float _195 = 1.089766502380371f / mad(1.0296000242233276f, _183, ((_180 * 0.03889999911189079f) + -0.06849999725818634f));

  float _196 = mad(_194, -0.7501999735832214f, 0.0f);
  float _197 = mad(_194, 1.7135000228881836f, 0.0f);
  float _198 = mad(_194, 0.03669999912381172f, -0.0f);
  float _199 = mad(_195, 0.03889999911189079f, 0.0f);
  float _200 = mad(_195, -0.06849999725818634f, 0.0f);
  float _201 = mad(_195, 1.0296000242233276f, 0.0f);

  float _204 = mad(0.1599626988172531f, _199, mad(-0.1470542997121811f, _196, (_193 * 0.883457362651825f)));
  float _207 = mad(0.1599626988172531f, _200, mad(-0.1470542997121811f, _197, (_193 * 0.26293492317199707f)));
  float _210 = mad(0.1599626988172531f, _201, mad(-0.1470542997121811f, _198, (_193 * -0.15930065512657166f)));
  float _213 = mad(0.04929120093584061f, _199, mad(0.5183603167533875f, _196, (_193 * 0.38695648312568665f)));
  float _216 = mad(0.04929120093584061f, _200, mad(0.5183603167533875f, _197, (_193 * 0.11516613513231277f)));
  float _219 = mad(0.04929120093584061f, _201, mad(0.5183603167533875f, _198, (_193 * -0.0697740763425827f)));
  float _222 = mad(0.9684867262840271f, _199, mad(0.04004279896616936f, _196, (_193 * -0.007634039502590895f)));
  float _225 = mad(0.9684867262840271f, _200, mad(0.04004279896616936f, _197, (_193 * -0.0022720457054674625f)));
  float _228 = mad(0.9684867262840271f, _201, mad(0.04004279896616936f, _198, (_193 * 0.0013765322510153055f)));
  float _231 = mad(_210, 0.01933390088379383f, mad(_207, 0.2126729041337967f, (_204 * 0.4124563932418823f)));
  float _234 = mad(_210, 0.11919199675321579f, mad(_207, 0.7151522040367126f, (_204 * 0.3575761020183563f)));
  float _237 = mad(_210, 0.9503040909767151f, mad(_207, 0.07217500358819962f, (_204 * 0.18043750524520874f)));
  float _240 = mad(_219, 0.01933390088379383f, mad(_216, 0.2126729041337967f, (_213 * 0.4124563932418823f)));
  float _243 = mad(_219, 0.11919199675321579f, mad(_216, 0.7151522040367126f, (_213 * 0.3575761020183563f)));
  float _246 = mad(_219, 0.9503040909767151f, mad(_216, 0.07217500358819962f, (_213 * 0.18043750524520874f)));
  float _249 = mad(_228, 0.01933390088379383f, mad(_225, 0.2126729041337967f, (_222 * 0.4124563932418823f)));
  float _252 = mad(_228, 0.11919199675321579f, mad(_225, 0.7151522040367126f, (_222 * 0.3575761020183563f)));
  float _255 = mad(_228, 0.9503040909767151f, mad(_225, 0.07217500358819962f, (_222 * 0.18043750524520874f)));
  float _285 = mad(mad(-0.4986107647418976f, _255, mad(-1.5373831987380981f, _246, (_237 * 3.2409698963165283f))), _104, mad(mad(-0.4986107647418976f, _252, mad(-1.5373831987380981f, _243, (_234 * 3.2409698963165283f))), _103, (mad(-0.4986107647418976f, _249, mad(-1.5373831987380981f, _240, (_231 * 3.2409698963165283f))) * _102)));
  float _288 = mad(mad(0.04155505821108818f, _255, mad(1.8759675025939941f, _246, (_237 * -0.9692436456680298f))), _104, mad(mad(0.04155505821108818f, _252, mad(1.8759675025939941f, _243, (_234 * -0.9692436456680298f))), _103, (mad(0.04155505821108818f, _249, mad(1.8759675025939941f, _240, (_231 * -0.9692436456680298f))) * _102)));
  float _291 = mad(mad(1.056971549987793f, _255, mad(-0.20397695899009705f, _246, (_237 * 0.05563008040189743f))), _104, mad(mad(1.056971549987793f, _252, mad(-0.20397695899009705f, _243, (_234 * 0.05563008040189743f))), _103, (mad(1.056971549987793f, _249, mad(-0.20397695899009705f, _240, (_231 * 0.05563008040189743f))) * _102)));

  // BT709 -> AP1 (with Bradford)
  float _294 = mad(0.04736635088920593f, _291, mad(0.3395121395587921f, _288, (_285 * 0.613191545009613f)));
  float _297 = mad(0.01345000695437193f, _291, mad(0.9163357615470886f, _288, (_285 * 0.07020691782236099f)));
  float _300 = mad(0.8696067929267883f, _291, mad(0.1095672994852066f, _288, (_285 * 0.020618872717022896f)));

  float3 pre_lut_color = float3(_294, _297, _300);

  // AP1 -> ARRI Wide Gamut (with Bradford)
  float _303 = mad(0.05743134021759033f, _300, mad(-0.09624255448579788f, _297, (_294 * 1.0388120412826538f)));
  float _306 = mad(0.1847389042377472f, _300, mad(0.8598613142967224f, _297, (_294 * -0.04460305720567703f)));
  float _309 = mad(0.9583789706230164f, _300, mad(0.051399022340774536f, _297, (_294 * -0.009779874235391617f)));

  // Alexa Wide Gamut Y
  float _310 = dot(float3(_303, _306, _309), float3(0.29195401072502136f, 0.8238409757614136f, -0.11579500138759613f));

  // Custom Arri Encoding
  float3 unencoded1 = float3(_303, _306, _309);
  float3 encoded1 = CustomArriLogEncode(unencoded1);
  float _323 = encoded1.x, _336 = encoded1.y, _349 = encoded1.z;

  // sample LUT1
  if (!(cb0_067x == 0.0f)) {
    float _358 = (cb0_067x + -1.0f) / cb0_067x;
    float _362 = 0.5f / cb0_067x;
    float _364 = (_358 * saturate(_336)) + _362;
    float _366 = ((_358 * saturate(_349)) + _362) * cb0_067x;
    float _368 = floor(_366 + -0.5f);
    float _370 = (-0.5f - _368) + _366;
    float _371 = ((_358 * saturate(_323)) + _362) + _368;
    float4 _373 = t0.Sample(s0, float2((_371 / cb0_067x), _364));
    float4 _379 = t0.Sample(s0, float2(((_371 + 1.0f) / cb0_067x), _364));
    _393 = (lerp(_373.x, _379.x, _370));
    _394 = (lerp(_373.y, _379.y, _370));
    _395 = (lerp(_373.z, _379.z, _370));
  } else {
    _393 = _323;
    _394 = _336;
    _395 = _349;
  }
  float3 lut1_input_color = float3(_323, _336, _349);
  float3 lut1_output_color = float3(_393, _394, _395);
  lut1_output_color = lerp(lut1_input_color, lut1_output_color, 1.f);
  _393 = lut1_output_color.r, _394 = lut1_output_color.g, _395 = lut1_output_color.b;

  // XYZ_2_ALEXA Wide Gamut RGB (grayscale)
  float _398 = mad(-0.20007599890232086f, _310, mad(-0.4825339913368225f, _310, (_310 * 1.789065957069397f)));
  float _401 = mad(0.19443200528621674f, _310, mad(1.396399974822998f, _310, (_310 * -0.6398490071296692f)));
  float _404 = mad(0.8788679838180542f, _310, mad(0.08233500272035599f, _310, (_310 * -0.0415319986641407f)));

  // Same Custom ARRI Encoding
  float3 unencoded2 = float3(_398, _401, _404);
  float3 encoded2 = CustomArriLogEncode(unencoded2);
  float _417 = encoded2.x, _430 = encoded2.y, _443 = encoded2.z;

  float _457 = cb0_047w + cb0_053w;  // ColorOffset.w + ColorOffsetShadows.w
  float _471 = cb0_046w * cb0_052w;
  float _485 = cb0_045w * cb0_051w;
  float _499 = cb0_044w * cb0_050w;
  float _513 = cb0_043w * cb0_049w;
  float _524 = cb0_042w * cb0_048w;
  float _525 = _393 - _417;
  float _526 = _394 - _430;
  float _527 = _395 - _443;

  // not in the usual code block
  float _576 = (cb0_044x * cb0_050x) * _499;
  float _577 = (cb0_044y * cb0_050y) * _499;
  float _578 = (cb0_044z * cb0_050z) * _499;

  float _606 = saturate(_310 / cb0_066x);
  float _610 = (_606 * _606) * (3.0f - (_606 * 2.0f));
  float _611 = 1.0f - _610;
  float _620 = cb0_047w + cb0_065w;
  float _629 = cb0_046w * cb0_064w;
  float _638 = cb0_045w * cb0_063w;
  float _647 = cb0_044w * cb0_062w;
  float _656 = cb0_043w * cb0_061w;
  float _662 = cb0_042w * cb0_060w;

  // not in the usual code block
  float _711 = (cb0_044x * cb0_062x) * _647;
  float _712 = (cb0_044y * cb0_062y) * _647;
  float _713 = (cb0_044z * cb0_062z) * _647;

  float _742 = saturate((_310 - cb0_066y) / (1.0f - cb0_066y));
  float _746 = (_742 * _742) * (3.0f - (_742 * 2.0f));
  float _755 = cb0_047w + cb0_059w;
  float _764 = cb0_046w * cb0_058w;
  float _773 = cb0_045w * cb0_057w;
  float _782 = cb0_044w * cb0_056w;
  float _791 = cb0_043w * cb0_055w;
  float _797 = cb0_042w * cb0_054w;

  // not in the usual code block
  float _846 = (cb0_044x * cb0_056x) * _782;
  float _847 = (cb0_044y * cb0_056y) * _782;
  float _848 = (cb0_044z * cb0_056z) * _782;

  float _873 = _610 - _746;

  float ColorOffsetx = cb0_047x;
  float ColorOffsety = cb0_047y;
  float ColorOffsetz = cb0_047z;

  float ColorOffsetShadowsx = cb0_053x;
  float ColorOffsetShadowsy = cb0_053y;
  float ColorOffsetShadowsz = cb0_053z;

  float _884 = ((_746 * (((ColorOffsetx + cb0_065x) + _620) + (((cb0_046x * cb0_064x) * _629) * ((_711 + -1.0f) + (exp2(log2(exp2(((cb0_043x * cb0_061x) * _656) * log2(max(0.0f, ((((cb0_060x * _525) * cb0_042x) * _662) + _417)) * 5.55555534362793f)) * 0.18000000715255737f) * (1.0f / ((cb0_045x * cb0_063x) * _638))) * (2.0f - _711)))))) + (_611 * (((ColorOffsetx + ColorOffsetShadowsx) + _457) + (((cb0_046x * cb0_052x) * _471) * ((_576 + -1.0f) + (exp2(log2(exp2(((cb0_043x * cb0_049x) * _513) * log2(max(0.0f, ((((cb0_048x * _525) * cb0_042x) * _524) + _417)) * 5.55555534362793f)) * 0.18000000715255737f) * (1.0f / ((cb0_045x * cb0_051x) * _485))) * (2.0f - _576))))))) + ((((ColorOffsetx + cb0_059x) + _755) + (((cb0_046x * cb0_058x) * _764) * ((_846 + -1.0f) + (exp2(log2(exp2(((cb0_043x * cb0_055x) * _791) * log2(max(0.0f, ((((cb0_054x * _525) * cb0_042x) * _797) + _417)) * 5.55555534362793f)) * 0.18000000715255737f) * (1.0f / ((cb0_045x * cb0_057x) * _773))) * (2.0f - _846))))) * _873);
  float _886 = ((_746 * (((ColorOffsety + cb0_065y) + _620) + (((cb0_046y * cb0_064y) * _629) * ((_712 + -1.0f) + (exp2(log2(exp2(((cb0_043y * cb0_061y) * _656) * log2(max(0.0f, ((((cb0_060y * _526) * cb0_042y) * _662) + _430)) * 5.55555534362793f)) * 0.18000000715255737f) * (1.0f / ((cb0_045y * cb0_063y) * _638))) * (2.0f - _712)))))) + (_611 * (((ColorOffsety + ColorOffsetShadowsy) + _457) + (((cb0_046y * cb0_052y) * _471) * ((_577 + -1.0f) + (exp2(log2(exp2(((cb0_043y * cb0_049y) * _513) * log2(max(0.0f, ((((cb0_048y * _526) * cb0_042y) * _524) + _430)) * 5.55555534362793f)) * 0.18000000715255737f) * (1.0f / ((cb0_045y * cb0_051y) * _485))) * (2.0f - _577))))))) + ((((ColorOffsety + cb0_059y) + _755) + (((cb0_046y * cb0_058y) * _764) * ((_847 + -1.0f) + (exp2(log2(exp2(((cb0_043y * cb0_055y) * _791) * log2(max(0.0f, ((((cb0_054y * _526) * cb0_042y) * _797) + _430)) * 5.55555534362793f)) * 0.18000000715255737f) * (1.0f / ((cb0_045y * cb0_057y) * _773))) * (2.0f - _847))))) * _873);
  float _888 = ((_746 * (((ColorOffsetz + cb0_065z) + _620) + (((cb0_046z * cb0_064z) * _629) * ((_713 + -1.0f) + (exp2(log2(exp2(((cb0_043z * cb0_061z) * _656) * log2(max(0.0f, ((((cb0_060z * _527) * cb0_042z) * _662) + _443)) * 5.55555534362793f)) * 0.18000000715255737f) * (1.0f / ((cb0_045z * cb0_063z) * _638))) * (2.0f - _713)))))) + (_611 * (((ColorOffsetz + ColorOffsetShadowsz) + _457) + (((cb0_046z * cb0_052z) * _471) * ((_578 + -1.0f) + (exp2(log2(exp2(((cb0_043z * cb0_049z) * _513) * log2(max(0.0f, ((((cb0_048z * _527) * cb0_042z) * _524) + _443)) * 5.55555534362793f)) * 0.18000000715255737f) * (1.0f / ((cb0_045z * cb0_051z) * _485))) * (2.0f - _578))))))) + ((((ColorOffsetz + cb0_059z) + _755) + (((cb0_046z * cb0_058z) * _764) * ((_848 + -1.0f) + (exp2(log2(exp2(((cb0_043z * cb0_055z) * _791) * log2(max(0.0f, ((((cb0_054z * _527) * cb0_042z) * _797) + _443)) * 5.55555534362793f)) * 0.18000000715255737f) * (1.0f / ((cb0_045z * cb0_057z) * _773))) * (2.0f - _848))))) * _873);

  // _884 = encoded2.x;
  // _886 = encoded2.y;
  // _888 = encoded2.z;

  // sample LUT2
  if (!(cb0_067y == 0.0f)) {
    float _897 = (cb0_067y + -1.0f) / cb0_067y;
    float _901 = 0.5f / cb0_067y;
    float _903 = (_897 * saturate(_886)) + _901;
    float _905 = ((_897 * saturate(_888)) + _901) * cb0_067y;
    float _907 = floor(_905 + -0.5f);
    float _909 = (-0.5f - _907) + _905;
    float _910 = ((_897 * saturate(_884)) + _901) + _907;
    float4 _912 = t1.Sample(s0, float2((_910 / cb0_067y), _903));
    float4 _918 = t1.Sample(s0, float2(((_910 + 1.0f) / cb0_067y), _903));
    _932 = (lerp(_912.x, _918.x, _909));
    _933 = (lerp(_912.y, _918.y, _909));
    _934 = (lerp(_912.z, _918.z, _909));
  } else {
    _932 = _884;
    _933 = _886;
    _934 = _888;
  }
  float3 lut2_input_color = float3(_884, _886, _888);
  float3 lut2_output_color = float3(_932, _933, _934);
  lut2_output_color = lerp(lut2_input_color, lut2_output_color, 1.f);
  _932 = lut2_output_color.r, _933 = lut2_output_color.g, _934 = lut2_output_color.b;

  // Encode Blend of Encoding and grayscale to Custom ARRI (different)
  float3 unencoded3 = float3(_932, _933, _934);
  float3 encoded3 = CustomArriLogDecode(unencoded3);
  float _944 = encoded3.x, _955 = encoded3.y, _966 = encoded3.z;

  // ARRI -> AP1 with Bradford (optimized red * 0.18)
  float _969 = mad(-0.07971039414405823f, _966, mad(0.11296817660331726f, _955, (_944 * 0.17401212453842163f)));
  float _972 = mad(-0.23079706728458405f, _966, mad(1.182213306427002f, _955, (_944 * 0.008746111765503883f)));
  float _975 = mad(1.0549932718276978f, _966, mad(-0.06225089356303215f, _955, (_944 * 0.0013065641978755593f)));

  float3 lut_output_final = float3(_969, _972, _975);
  lut_output_final = LUTCorrectBlack(lut_output_final, pre_lut_color, t0, t1, s0);

  lut_output_final = lerp(pre_lut_color, lut_output_final, CUSTOM_LUT_STRENGTH);
  _969 = lut_output_final.r, _972 = lut_output_final.g, _975 = lut_output_final.b;

  float _977 = max(_969, max(_972, _975));
  if (!(_977 == 0.0f)) {
    float _981 = abs(_977);
    _988 = ((_977 - _975) / _981);
    _989 = ((_977 - _972) / _981);
    _990 = ((_977 - _969) / _981);
  } else {
    _988 = 0.0f;
    _989 = 0.0f;
    _990 = 0.0f;
  }
  if (!(_990 < 0.8149999976158142f)) {
    float _993 = _990 + -0.8149999976158142f;
    _1005 = ((_993 / exp2(log2(exp2(log2(_993 * 3.0552830696105957f) * 1.2000000476837158f) + 1.0f) * 0.8333333134651184f)) + 0.8149999976158142f);
  } else {
    _1005 = _990;
  }
  if (!(_989 < 0.8029999732971191f)) {
    float _1008 = _989 + -0.8029999732971191f;
    _1020 = ((_1008 / exp2(log2(exp2(log2(_1008 * 3.4972610473632812f) * 1.2000000476837158f) + 1.0f) * 0.8333333134651184f)) + 0.8029999732971191f);
  } else {
    _1020 = _989;
  }
  if (!(_988 < 0.8799999952316284f)) {
    float _1023 = _988 + -0.8799999952316284f;
    _1035 = ((_1023 / exp2(log2(exp2(log2(_1023 * 6.810994625091553f) * 1.2000000476837158f) + 1.0f) * 0.8333333134651184f)) + 0.8799999952316284f);
  } else {
    _1035 = _988;
  }
  float _1036 = abs(_977);
  float _1038 = _977 - (_1036 * _1005);
  float _1040 = _977 - (_1036 * _1020);
  float _1042 = _977 - (_1036 * _1035);
  float _1054 = mad(0.16386905312538147f, _1042, mad(0.14067868888378143f, _1040, (_1038 * 0.6954522132873535f)));
  float _1057 = mad(0.0955343246459961f, _1042, mad(0.8596711158752441f, _1040, (_1038 * 0.044794581830501556f)));
  float _1060 = mad(1.0015007257461548f, _1042, mad(0.004025210160762072f, _1040, (_1038 * -0.005525882821530104f)));
  float _1064 = max(max(_1054, _1057), _1060);
  float _1069 = (max(_1064, 1.000000013351432e-10f) - max(min(min(_1054, _1057), _1060), 1.000000013351432e-10f)) / max(_1064, 0.009999999776482582f);
  float _1082 = ((_1057 + _1054) + _1060) + (sqrt((((_1060 - _1057) * _1060) + ((_1057 - _1054) * _1057)) + ((_1054 - _1060) * _1054)) * 1.75f);
  float _1083 = _1082 * 0.3333333432674408f;
  float _1084 = _1069 + -0.4000000059604645f;
  float _1085 = _1084 * 5.0f;
  float _1089 = max((1.0f - abs(_1084 * 2.5f)), 0.0f);
  float _1100 = ((float((int)(((int)(uint)((bool)(_1085 > 0.0f))) - ((int)(uint)((bool)(_1085 < 0.0f))))) * (1.0f - (_1089 * _1089))) + 1.0f) * 0.02500000037252903f;
  if (!(_1083 <= 0.0533333346247673f)) {
    if (!(_1083 >= 0.1599999964237213f)) {
      _1109 = (((0.23999999463558197f / _1082) + -0.5f) * _1100);
    } else {
      _1109 = 0.0f;
    }
  } else {
    _1109 = _1100;
  }
  float _1110 = _1109 + 1.0f;
  float _1111 = _1110 * _1054;
  float _1112 = _1110 * _1057;
  float _1113 = _1110 * _1060;
  if (!((bool)(_1111 == _1112) && (bool)(_1112 == _1113))) {
    float _1120 = ((_1111 * 2.0f) - _1112) - _1113;
    float _1123 = ((_1057 - _1060) * 1.7320507764816284f) * _1110;
    float _1125 = atan(_1123 / _1120);
    bool _1128 = (_1120 < 0.0f);
    bool _1129 = (_1120 == 0.0f);
    bool _1130 = (_1123 >= 0.0f);
    bool _1131 = (_1123 < 0.0f);
    _1142 = select((_1130 && _1129), 90.0f, select((_1131 && _1129), -90.0f, (select((_1131 && _1128), (_1125 + -3.1415927410125732f), select((_1130 && _1128), (_1125 + 3.1415927410125732f), _1125)) * 57.2957763671875f)));
  } else {
    _1142 = 0.0f;
  }
  float _1147 = min(max(select((_1142 < 0.0f), (_1142 + 360.0f), _1142), 0.0f), 360.0f);
  if (_1147 < -180.0f) {
    _1156 = (_1147 + 360.0f);
  } else {
    if (_1147 > 180.0f) {
      _1156 = (_1147 + -360.0f);
    } else {
      _1156 = _1147;
    }
  }
  float _1160 = saturate(1.0f - abs(_1156 * 0.014814814552664757f));
  float _1164 = (_1160 * _1160) * (3.0f - (_1160 * 2.0f));
  float _1170 = ((_1164 * _1164) * ((_1069 * 0.18000000715255737f) * (0.029999999329447746f - _1111))) + _1111;
  float _1180 = max(0.0f, mad(-0.21492856740951538f, _1113, mad(-0.2365107536315918f, _1112, (_1170 * 1.4514392614364624f))));
  float _1181 = max(0.0f, mad(-0.09967592358589172f, _1113, mad(1.17622971534729f, _1112, (_1170 * -0.07655377686023712f))));
  float _1182 = max(0.0f, mad(0.9977163076400757f, _1113, mad(-0.006032449658960104f, _1112, (_1170 * 0.008316148072481155f))));
  float _1183 = dot(float3(_1180, _1181, _1182), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
  float _1197 = (cb0_036w + 1.0f) - cb0_036y;
  float _1200 = cb0_037x + 1.0f;
  float _1202 = _1200 - cb0_036z;
  if (cb0_036y > 0.800000011920929f) {
    _1220 = (((0.8199999928474426f - cb0_036y) / cb0_036x) + -0.7447274923324585f);
  } else {
    float _1211 = (cb0_036w + 0.18000000715255737f) / _1197;
    _1220 = (-0.7447274923324585f - ((log2(_1211 / (2.0f - _1211)) * 0.3465735912322998f) * (_1197 / cb0_036x)));
  }
  float _1223 = ((1.0f - cb0_036y) / cb0_036x) - _1220;
  float _1225 = (cb0_036z / cb0_036x) - _1223;
  float _1229 = log2(lerp(_1183, _1180, 0.9599999785423279f)) * 0.3010300099849701f;
  float _1230 = log2(lerp(_1183, _1181, 0.9599999785423279f)) * 0.3010300099849701f;
  float _1231 = log2(lerp(_1183, _1182, 0.9599999785423279f)) * 0.3010300099849701f;
  float _1235 = cb0_036x * (_1229 + _1223);
  float _1236 = cb0_036x * (_1230 + _1223);
  float _1237 = cb0_036x * (_1231 + _1223);
  float _1238 = _1197 * 2.0f;
  float _1240 = (cb0_036x * -2.0f) / _1197;
  float _1241 = _1229 - _1220;
  float _1242 = _1230 - _1220;
  float _1243 = _1231 - _1220;
  float _1262 = _1202 * 2.0f;
  float _1264 = (cb0_036x * 2.0f) / _1202;
  float _1289 = select((_1229 < _1220), ((_1238 / (exp2((_1241 * 1.4426950216293335f) * _1240) + 1.0f)) - cb0_036w), _1235);
  float _1290 = select((_1230 < _1220), ((_1238 / (exp2((_1242 * 1.4426950216293335f) * _1240) + 1.0f)) - cb0_036w), _1236);
  float _1291 = select((_1231 < _1220), ((_1238 / (exp2((_1243 * 1.4426950216293335f) * _1240) + 1.0f)) - cb0_036w), _1237);
  float _1298 = _1225 - _1220;
  float _1302 = saturate(_1241 / _1298);
  float _1303 = saturate(_1242 / _1298);
  float _1304 = saturate(_1243 / _1298);
  bool _1305 = (_1225 < _1220);
  float _1309 = select(_1305, (1.0f - _1302), _1302);
  float _1310 = select(_1305, (1.0f - _1303), _1303);
  float _1311 = select(_1305, (1.0f - _1304), _1304);
  float _1330 = (((_1309 * _1309) * (select((_1229 > _1225), (_1200 - (_1262 / (exp2(((_1229 - _1225) * 1.4426950216293335f) * _1264) + 1.0f))), _1235) - _1289)) * (3.0f - (_1309 * 2.0f))) + _1289;
  float _1331 = (((_1310 * _1310) * (select((_1230 > _1225), (_1200 - (_1262 / (exp2(((_1230 - _1225) * 1.4426950216293335f) * _1264) + 1.0f))), _1236) - _1290)) * (3.0f - (_1310 * 2.0f))) + _1290;
  float _1332 = (((_1311 * _1311) * (select((_1231 > _1225), (_1200 - (_1262 / (exp2(((_1231 - _1225) * 1.4426950216293335f) * _1264) + 1.0f))), _1237) - _1291)) * (3.0f - (_1311 * 2.0f))) + _1291;
  float _1333 = dot(float3(_1330, _1331, _1332), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
  float _1343 = max(0.0f, (lerp(_1333, _1330, 0.9300000071525574f)));
  float _1344 = max(0.0f, (lerp(_1333, _1331, 0.9300000071525574f)));
  float _1345 = max(0.0f, (lerp(_1333, _1332, 0.9300000071525574f)));
  float _1355 = max(0.0f, mad(-0.0832584798336029f, _1345, mad(-0.6217905879020691f, _1344, (_1343 * 1.7050515413284302f))));
  float _1356 = max(0.0f, mad(-0.010548528283834457f, _1345, mad(1.1408027410507202f, _1344, (_1343 * -0.13025718927383423f))));
  float _1357 = max(0.0f, mad(1.152971863746643f, _1345, mad(-0.1289687603712082f, _1344, (_1343 * -0.024003278464078903f))));
  float _1382 = cb0_037y * (((cb0_026y + (cb0_026x * _1355)) * _1355) + cb0_026z);
  float _1383 = cb0_037z * (((cb0_026y + (cb0_026x * _1356)) * _1356) + cb0_026z);
  float _1384 = cb0_037w * (((cb0_026y + (cb0_026x * _1357)) * _1357) + cb0_026z);
  float _1391 = ((cb0_038x - _1382) * cb0_038w) + _1382;
  float _1392 = ((cb0_038y - _1383) * cb0_038w) + _1383;
  float _1393 = ((cb0_038z - _1384) * cb0_038w) + _1384;
  float _1394 = cb0_037y * mad(-0.0832584798336029f, _1042, mad(-0.6217905879020691f, _1040, (_1038 * 1.7050515413284302f)));
  float _1395 = cb0_037z * mad(-0.010548528283834457f, _1042, mad(1.1408027410507202f, _1040, (_1038 * -0.13025718927383423f)));
  float _1396 = cb0_037w * mad(1.152971863746643f, _1042, mad(-0.1289687603712082f, _1040, (_1038 * -0.024003278464078903f)));
  float _1403 = ((cb0_038x - _1394) * cb0_038w) + _1394;
  float _1404 = ((cb0_038y - _1395) * cb0_038w) + _1395;
  float _1405 = ((cb0_038z - _1396) * cb0_038w) + _1396;
  float _1417 = exp2(log2(max(0.0f, _1391)) * cb0_027y);
  float _1418 = exp2(log2(max(0.0f, _1392)) * cb0_027y);
  float _1419 = exp2(log2(max(0.0f, _1393)) * cb0_027y);
  [branch]
  if (output_device == 0) {  // TONEMAPPER_OUTPUT_sRGB - SDR output
    do {
      if (cb0_041y == 1) {
        float _1437 = exp2(log2(max(0.0f, _1403)) * cb0_027y);
        float _1440 = exp2(log2(max(0.0f, _1404)) * cb0_027y) * 1.5f;
        float _1441 = exp2(log2(max(0.0f, _1405)) * cb0_027y) * 1.5f;

        // SRGB_2_AP0 (with red exposure * 1.5f )
        float _1444 = mad(0.17733481526374817f, _1441, mad(0.38297808170318604f, _1440, (_1437 * 0.659551203250885f)));
        float _1447 = mad(0.09676162153482437f, _1441, mad(0.8134231567382812f, _1440, (_1437 * 0.13468848168849945f)));
        float _1450 = mad(0.870704174041748f, _1441, mad(0.11154405772686005f, _1440, (_1437 * 0.02631598338484764f)));
        float _1454 = max(max(_1444, _1447), _1450);
        float _1459 = (max(_1454, 1.000000013351432e-10f) - max(min(min(_1444, _1447), _1450), 1.000000013351432e-10f)) / max(_1454, 0.009999999776482582f);
        float _1472 = ((_1447 + _1444) + _1450) + (sqrt((((_1450 - _1447) * _1450) + ((_1447 - _1444) * _1447)) + ((_1444 - _1450) * _1444)) * 1.75f);
        float _1473 = _1472 * 0.3333333432674408f;
        float _1474 = _1459 + -0.4000000059604645f;
        float _1475 = _1474 * 5.0f;
        float _1479 = max((1.0f - abs(_1474 * 2.5f)), 0.0f);
        float _1490 = ((float((int)(((int)(uint)((bool)(_1475 > 0.0f))) - ((int)(uint)((bool)(_1475 < 0.0f))))) * (1.0f - (_1479 * _1479))) + 1.0f) * 0.02500000037252903f;
        do {
          if (!(_1473 <= 0.0533333346247673f)) {
            if (!(_1473 >= 0.1599999964237213f)) {
              _1499 = (((0.23999999463558197f / _1472) + -0.5f) * _1490);
            } else {
              _1499 = 0.0f;
            }
          } else {
            _1499 = _1490;
          }
          float _1500 = _1499 + 1.0f;
          float _1501 = _1500 * _1444;
          float _1502 = _1500 * _1447;
          float _1503 = _1500 * _1450;
          do {
            if (!((bool)(_1501 == _1502) && (bool)(_1502 == _1503))) {
              float _1510 = ((_1501 * 2.0f) - _1502) - _1503;
              float _1513 = ((_1447 - _1450) * 1.7320507764816284f) * _1500;
              float _1515 = atan(_1513 / _1510);
              bool _1518 = (_1510 < 0.0f);
              bool _1519 = (_1510 == 0.0f);
              bool _1520 = (_1513 >= 0.0f);
              bool _1521 = (_1513 < 0.0f);
              _1532 = select((_1520 && _1519), 90.0f, select((_1521 && _1519), -90.0f, (select((_1521 && _1518), (_1515 + -3.1415927410125732f), select((_1520 && _1518), (_1515 + 3.1415927410125732f), _1515)) * 57.2957763671875f)));
            } else {
              _1532 = 0.0f;
            }
            float _1537 = min(max(select((_1532 < 0.0f), (_1532 + 360.0f), _1532), 0.0f), 360.0f);
            do {
              if (_1537 < -180.0f) {
                _1546 = (_1537 + 360.0f);
              } else {
                if (_1537 > 180.0f) {
                  _1546 = (_1537 + -360.0f);
                } else {
                  _1546 = _1537;
                }
              }
              do {
                if ((bool)(_1546 > -67.5f) && (bool)(_1546 < 67.5f)) {
                  float _1552 = (_1546 + 67.5f) * 0.029629629105329514f;
                  int _1553 = int(_1552);
                  float _1555 = _1552 - float((int)(_1553));
                  float _1556 = _1555 * _1555;
                  float _1557 = _1556 * _1555;
                  if (_1553 == 3) {
                    _1585 = (((0.1666666716337204f - (_1555 * 0.5f)) + (_1556 * 0.5f)) - (_1557 * 0.1666666716337204f));
                  } else {
                    if (_1553 == 2) {
                      _1585 = ((0.6666666865348816f - _1556) + (_1557 * 0.5f));
                    } else {
                      if (_1553 == 1) {
                        _1585 = (((_1557 * -0.5f) + 0.1666666716337204f) + ((_1556 + _1555) * 0.5f));
                      } else {
                        _1585 = select((_1553 == 0), (_1557 * 0.1666666716337204f), 0.0f);
                      }
                    }
                  }
                } else {
                  _1585 = 0.0f;
                }
                float _1594 = min(max(((((_1459 * 0.27000001072883606f) * (0.029999999329447746f - _1501)) * _1585) + _1501), 0.0f), 65535.0f);
                float _1595 = min(max(_1502, 0.0f), 65535.0f);
                float _1596 = min(max(_1503, 0.0f), 65535.0f);

                // AP0 -> AP1
                float _1609 = min(max(mad(-0.21492856740951538f, _1596, mad(-0.2365107536315918f, _1595, (_1594 * 1.4514392614364624f))), 0.0f), 65535.0f);
                float _1610 = min(max(mad(-0.09967592358589172f, _1596, mad(1.17622971534729f, _1595, (_1594 * -0.07655377686023712f))), 0.0f), 65535.0f);
                float _1611 = min(max(mad(0.9977163076400757f, _1596, mad(-0.006032449658960104f, _1595, (_1594 * 0.008316148072481155f))), 0.0f), 65535.0f);
                float _1612 = dot(float3(_1609, _1610, _1611), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
                float _1619 = ((_1609 - _1612) * 0.9599999785423279f) + _1612;
                float _1620 = ((_1610 - _1612) * 0.9599999785423279f) + _1612;
                float _1621 = ((_1611 - _1612) * 0.9599999785423279f) + _1612;

                if (RENODX_TONE_MAP_TYPE != 4.f && cb0_068x != 0u) {
                  return GenerateOutput(float3(_1619, _1620, _1621));
                }

                float _1624 = log2(select((_1619 <= 0.0f), 6.103515625e-05f, _1619));
                float _1625 = _1624 * 0.3010300099849701f;
                do {
                  if (!(_1625 <= -5.2601776123046875f)) {
                    if ((bool)(_1625 > -5.2601776123046875f) && (bool)(_1625 < -0.7447274923324585f)) {
                      float _1633 = (_1624 * 0.19999998807907104f) + 3.494786262512207f;
                      int _1634 = int(_1633);
                      float _1636 = _1633 - float((int)(_1634));
                      float _1638 = _global_0[_1634];
                      float _1641 = _global_0[(_1634 + 1)];
                      float _1646 = _1638 * 0.5f;
                      _1678 = dot(float3((_1636 * _1636), _1636, 1.0f), float3(mad((_global_0[(_1634 + 2)]), 0.5f, mad(_1641, -1.0f, _1646)), (_1641 - _1638), mad(_1641, 0.5f, _1646)));
                    } else {
                      if ((bool)(_1625 >= -0.7447274923324585f) && (bool)(_1625 < 4.673812389373779f)) {
                        float _1658 = (_1624 * 0.1666666567325592f) + 0.4123218357563019f;
                        int _1659 = int(_1658);
                        float _1661 = _1658 - float((int)(_1659));
                        float _1663 = _global_1[_1659];
                        float _1666 = _global_1[(_1659 + 1)];
                        float _1671 = _1663 * 0.5f;
                        _1678 = dot(float3((_1661 * _1661), _1661, 1.0f), float3(mad((_global_1[(_1659 + 2)]), 0.5f, mad(_1666, -1.0f, _1671)), (_1666 - _1663), mad(_1666, 0.5f, _1671)));
                      } else {
                        _1678 = 4.0f;
                      }
                    }
                  } else {
                    _1678 = -4.0f;
                  }
                  float _1680 = exp2(_1678 * 3.321928024291992f);
                  float _1683 = log2(select((_1620 <= 0.0f), 6.103515625e-05f, _1620));
                  float _1684 = _1683 * 0.3010300099849701f;
                  do {
                    if (!(_1684 <= -5.2601776123046875f)) {
                      if ((bool)(_1684 > -5.2601776123046875f) && (bool)(_1684 < -0.7447274923324585f)) {
                        float _1692 = (_1683 * 0.19999998807907104f) + 3.494786262512207f;
                        int _1693 = int(_1692);
                        float _1695 = _1692 - float((int)(_1693));
                        float _1697 = _global_0[_1693];
                        float _1700 = _global_0[(_1693 + 1)];
                        float _1705 = _1697 * 0.5f;
                        _1737 = dot(float3((_1695 * _1695), _1695, 1.0f), float3(mad((_global_0[(_1693 + 2)]), 0.5f, mad(_1700, -1.0f, _1705)), (_1700 - _1697), mad(_1700, 0.5f, _1705)));
                      } else {
                        if ((bool)(_1684 >= -0.7447274923324585f) && (bool)(_1684 < 4.673812389373779f)) {
                          float _1717 = (_1683 * 0.1666666567325592f) + 0.4123218357563019f;
                          int _1718 = int(_1717);
                          float _1720 = _1717 - float((int)(_1718));
                          float _1722 = _global_1[_1718];
                          float _1725 = _global_1[(_1718 + 1)];
                          float _1730 = _1722 * 0.5f;
                          _1737 = dot(float3((_1720 * _1720), _1720, 1.0f), float3(mad((_global_1[(_1718 + 2)]), 0.5f, mad(_1725, -1.0f, _1730)), (_1725 - _1722), mad(_1725, 0.5f, _1730)));
                        } else {
                          _1737 = 4.0f;
                        }
                      }
                    } else {
                      _1737 = -4.0f;
                    }
                    float _1739 = exp2(_1737 * 3.321928024291992f);
                    float _1742 = log2(select((_1621 <= 0.0f), 6.103515625e-05f, _1621));
                    float _1743 = _1742 * 0.3010300099849701f;
                    do {
                      if (!(_1743 <= -5.2601776123046875f)) {
                        if ((bool)(_1743 > -5.2601776123046875f) && (bool)(_1743 < -0.7447274923324585f)) {
                          float _1751 = (_1742 * 0.19999998807907104f) + 3.494786262512207f;
                          int _1752 = int(_1751);
                          float _1754 = _1751 - float((int)(_1752));
                          float _1756 = _global_0[_1752];
                          float _1759 = _global_0[(_1752 + 1)];
                          float _1764 = _1756 * 0.5f;
                          _1796 = dot(float3((_1754 * _1754), _1754, 1.0f), float3(mad((_global_0[(_1752 + 2)]), 0.5f, mad(_1759, -1.0f, _1764)), (_1759 - _1756), mad(_1759, 0.5f, _1764)));
                        } else {
                          if ((bool)(_1743 >= -0.7447274923324585f) && (bool)(_1743 < 4.673812389373779f)) {
                            float _1776 = (_1742 * 0.1666666567325592f) + 0.4123218357563019f;
                            int _1777 = int(_1776);
                            float _1779 = _1776 - float((int)(_1777));
                            float _1781 = _global_1[_1777];
                            float _1784 = _global_1[(_1777 + 1)];
                            float _1789 = _1781 * 0.5f;
                            _1796 = dot(float3((_1779 * _1779), _1779, 1.0f), float3(mad((_global_1[(_1777 + 2)]), 0.5f, mad(_1784, -1.0f, _1789)), (_1784 - _1781), mad(_1784, 0.5f, _1789)));
                          } else {
                            _1796 = 4.0f;
                          }
                        }
                      } else {
                        _1796 = -4.0f;
                      }
                      float _1798 = exp2(_1796 * 3.321928024291992f);

                      // AP1 -> AP0
                      float _1801 = mad(0.16386906802654266f, _1798, mad(0.14067870378494263f, _1739, (_1680 * 0.6954522132873535f)));
                      float _1804 = mad(0.0955343171954155f, _1798, mad(0.8596711158752441f, _1739, (_1680 * 0.044794563204050064f)));
                      float _1807 = mad(1.0015007257461548f, _1798, mad(0.004025210160762072f, _1739, (_1680 * -0.005525882821530104f)));

                      // AP0 -> AP1
                      float _1810 = mad(-0.21492856740951538f, _1807, mad(-0.2365107536315918f, _1804, (_1801 * 1.4514392614364624f)));
                      float _1813 = mad(-0.09967592358589172f, _1807, mad(1.17622971534729f, _1804, (_1801 * -0.07655377686023712f)));
                      float _1816 = mad(0.9977163076400757f, _1807, mad(-0.006032449658960104f, _1804, (_1801 * 0.008316148072481155f)));
                      float _1819 = log2(select((_1810 <= 0.0f), 9.999999747378752e-05f, _1810));
                      float _1820 = _1819 * 0.3010300099849701f;
                      do {
                        if (!(_1820 <= -2.540623664855957f)) {
                          if ((bool)(_1820 > -2.540623664855957f) && (bool)(_1820 < 0.6812411546707153f)) {
                            float _1828 = (_1819 + 8.43976879119873f) * 0.6540343165397644f;
                            int _1829 = int(_1828);
                            float _1831 = _1828 - float((int)(_1829));
                            float _1833 = _global_2[_1829];
                            float _1836 = _global_2[(_1829 + 1)];
                            float _1841 = _1833 * 0.5f;
                            _1876 = dot(float3((_1831 * _1831), _1831, 1.0f), float3(mad((_global_2[(_1829 + 2)]), 0.5f, mad(_1836, -1.0f, _1841)), (_1836 - _1833), mad(_1836, 0.5f, _1841)));
                          } else {
                            if ((bool)(_1820 >= 0.6812411546707153f) && (bool)(_1820 < 3.002476692199707f)) {
                              float _1853 = (_1819 + -2.2630341053009033f) * 0.9077967405319214f;
                              int _1854 = int(_1853);
                              float _1856 = _1853 - float((int)(_1854));
                              float _1858 = _global_3[_1854];
                              float _1861 = _global_3[(_1854 + 1)];
                              float _1866 = _1858 * 0.5f;
                              _1876 = dot(float3((_1856 * _1856), _1856, 1.0f), float3(mad((_global_3[(_1854 + 2)]), 0.5f, mad(_1861, -1.0f, _1866)), (_1861 - _1858), mad(_1861, 0.5f, _1866)));
                            } else {
                              _1876 = ((_1819 * 0.012041199952363968f) + 1.5611422061920166f);
                            }
                          }
                        } else {
                          _1876 = -1.698970079421997f;
                        }
                        float _1881 = log2(select((_1813 <= 0.0f), 9.999999747378752e-05f, _1813));
                        float _1882 = _1881 * 0.3010300099849701f;
                        do {
                          if (!(_1882 <= -2.540623664855957f)) {
                            if ((bool)(_1882 > -2.540623664855957f) && (bool)(_1882 < 0.6812411546707153f)) {
                              float _1890 = (_1881 + 8.43976879119873f) * 0.6540343165397644f;
                              int _1891 = int(_1890);
                              float _1893 = _1890 - float((int)(_1891));
                              float _1895 = _global_2[_1891];
                              float _1898 = _global_2[(_1891 + 1)];
                              float _1903 = _1895 * 0.5f;
                              _1938 = dot(float3((_1893 * _1893), _1893, 1.0f), float3(mad((_global_2[(_1891 + 2)]), 0.5f, mad(_1898, -1.0f, _1903)), (_1898 - _1895), mad(_1898, 0.5f, _1903)));
                            } else {
                              if ((bool)(_1882 >= 0.6812411546707153f) && (bool)(_1882 < 3.002476692199707f)) {
                                float _1915 = (_1881 + -2.2630341053009033f) * 0.9077967405319214f;
                                int _1916 = int(_1915);
                                float _1918 = _1915 - float((int)(_1916));
                                float _1920 = _global_3[_1916];
                                float _1923 = _global_3[(_1916 + 1)];
                                float _1928 = _1920 * 0.5f;
                                _1938 = dot(float3((_1918 * _1918), _1918, 1.0f), float3(mad((_global_3[(_1916 + 2)]), 0.5f, mad(_1923, -1.0f, _1928)), (_1923 - _1920), mad(_1923, 0.5f, _1928)));
                              } else {
                                _1938 = ((_1881 * 0.012041199952363968f) + 1.5611422061920166f);
                              }
                            }
                          } else {
                            _1938 = -1.698970079421997f;
                          }
                          float _1943 = log2(select((_1816 <= 0.0f), 9.999999747378752e-05f, _1816));
                          float _1944 = _1943 * 0.3010300099849701f;
                          do {
                            if (!(_1944 <= -2.540623664855957f)) {
                              if ((bool)(_1944 > -2.540623664855957f) && (bool)(_1944 < 0.6812411546707153f)) {
                                float _1952 = (_1943 + 8.43976879119873f) * 0.6540343165397644f;
                                int _1953 = int(_1952);
                                float _1955 = _1952 - float((int)(_1953));
                                float _1957 = _global_2[_1953];
                                float _1960 = _global_2[(_1953 + 1)];
                                float _1965 = _1957 * 0.5f;
                                _2000 = dot(float3((_1955 * _1955), _1955, 1.0f), float3(mad((_global_2[(_1953 + 2)]), 0.5f, mad(_1960, -1.0f, _1965)), (_1960 - _1957), mad(_1960, 0.5f, _1965)));
                              } else {
                                if ((bool)(_1944 >= 0.6812411546707153f) && (bool)(_1944 < 3.002476692199707f)) {
                                  float _1977 = (_1943 + -2.2630341053009033f) * 0.9077967405319214f;
                                  int _1978 = int(_1977);
                                  float _1980 = _1977 - float((int)(_1978));
                                  float _1982 = _global_3[_1978];
                                  float _1985 = _global_3[(_1978 + 1)];
                                  float _1990 = _1982 * 0.5f;
                                  _2000 = dot(float3((_1980 * _1980), _1980, 1.0f), float3(mad((_global_3[(_1978 + 2)]), 0.5f, mad(_1985, -1.0f, _1990)), (_1985 - _1982), mad(_1985, 0.5f, _1990)));
                                } else {
                                  _2000 = ((_1943 * 0.012041199952363968f) + 1.5611422061920166f);
                                }
                              }
                            } else {
                              _2000 = -1.698970079421997f;
                            }
                            float _2003 = exp2(_1876 * 3.321928024291992f) + -0.019999999552965164f;
                            float _2005 = (exp2(_1938 * 3.321928024291992f) + -0.019999999552965164f) * 0.020842017605900764f;
                            float _2007 = (exp2(_2000 * 3.321928024291992f) + -0.019999999552965164f) * 0.020842017605900764f;
                            float _2010 = mad(0.15618768334388733f, _2007, mad(0.13400420546531677f, _2005, (_2003 * 0.013806881383061409f)));
                            float _2013 = mad(0.053689517080783844f, _2007, mad(0.6740817427635193f, _2005, (_2003 * 0.005673795938491821f)));
                            float _2018 = (_2013 + _2010) + mad(1.0103391408920288f, _2007, mad(0.00406073359772563f, _2005, (_2003 * -0.00011618694406934083f)));
                            float _2020 = select((_2018 == 0.0f), 1.000000013351432e-10f, _2018);
                            float _2021 = _2010 / _2020;
                            float _2022 = _2013 / _2020;
                            float _2027 = exp2(log2(min(max(_2013, 0.0f), 65535.0f)) * 0.9811000227928162f);
                            float _2029 = max(_2022, 1.000000013351432e-10f);
                            float _2030 = (_2027 * _2021) / _2029;
                            float _2034 = (_2027 * ((1.0f - _2021) - _2022)) / _2029;

                            // AP0 -> AP1
                            float _2037 = mad(-0.23642469942569733f, _2034, mad(-0.32480329275131226f, _2027, (_2030 * 1.6410233974456787f)));
                            float _2040 = mad(0.016756348311901093f, _2034, mad(1.6153316497802734f, _2027, (_2030 * -0.663662850856781f)));
                            float _2043 = mad(0.9883948564529419f, _2034, mad(-0.008284442126750946f, _2027, (_2030 * 0.011721894145011902f)));
                            float _2044 = dot(float3(_2037, _2040, _2043), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
                            float _2051 = ((_2037 - _2044) * 0.9300000071525574f) + _2044;
                            float _2052 = ((_2040 - _2044) * 0.9300000071525574f) + _2044;
                            float _2053 = ((_2043 - _2044) * 0.9300000071525574f) + _2044;

                            float _2056 = mad(0.15618768334388733f, _2053, mad(0.13400420546531677f, _2052, (_2051 * 0.6624541878700256f)));
                            float _2059 = mad(0.053689517080783844f, _2053, mad(0.6740817427635193f, _2052, (_2051 * 0.2722287178039551f)));
                            float _2062 = mad(1.0103391408920288f, _2053, mad(0.00406073359772563f, _2052, (_2051 * -0.005574649665504694f)));
                            float _2065 = mad(0.015953300520777702f, _2062, mad(-0.006113269831985235f, _2059, (_2056 * 0.9872239828109741f)));
                            float _2068 = mad(0.005330020096153021f, _2062, mad(1.0018600225448608f, _2059, (_2056 * -0.007598360069096088f)));
                            float _2071 = mad(1.0816800594329834f, _2062, mad(-0.005095949862152338f, _2059, (_2056 * 0.003072570078074932f)));
                            _2085 = saturate(mad(-0.4986107647418976f, _2071, mad(-1.5373831987380981f, _2068, (_2065 * 3.2409698963165283f))));
                            _2086 = saturate(mad(0.04155505821108818f, _2071, mad(1.8759675025939941f, _2068, (_2065 * -0.9692436456680298f))));
                            _2087 = saturate(mad(1.056971549987793f, _2071, mad(-0.20397695899009705f, _2068, (_2065 * 0.05563008040189743f))));
                          } while (false);
                        } while (false);
                      } while (false);
                    } while (false);
                  } while (false);
                } while (false);
              } while (false);
            } while (false);
          } while (false);
        } while (false);
      } else {
        _2085 = _1417;
        _2086 = _1418;
        _2087 = _1419;
      }
      do {
        if (_2085 < 0.0031306699384003878f) {
          _2098 = (_2085 * 12.920000076293945f);
        } else {
          _2098 = (((pow(_2085, 0.4166666567325592f)) * 1.0549999475479126f) + -0.054999999701976776f);
        }
        do {
          if (_2086 < 0.0031306699384003878f) {
            _2109 = (_2086 * 12.920000076293945f);
          } else {
            _2109 = (((pow(_2086, 0.4166666567325592f)) * 1.0549999475479126f) + -0.054999999701976776f);
          }
          if (_2087 < 0.0031306699384003878f) {
            _4135 = _2098;
            _4136 = _2109;
            _4137 = (_2087 * 12.920000076293945f);
          } else {
            _4135 = _2098;
            _4136 = _2109;
            _4137 = (((pow(_2087, 0.4166666567325592f)) * 1.0549999475479126f) + -0.054999999701976776f);
          }
        } while (false);
      } while (false);
    } while (false);
  } else {
    if (output_device == 1) {
      float _2124 = mad(0.04736635088920593f, _1419, mad(0.3395121395587921f, _1418, (_1417 * 0.613191545009613f)));
      float _2127 = mad(0.01345000695437193f, _1419, mad(0.9163357615470886f, _1418, (_1417 * 0.07020691782236099f)));
      float _2130 = mad(0.8696067929267883f, _1419, mad(0.1095672994852066f, _1418, (_1417 * 0.020618872717022896f)));
      do {
        if (cb0_041y == 1) {
          float _2153 = exp2(log2(max(0.0f, _1403)) * cb0_027y);
          float _2156 = exp2(log2(max(0.0f, _1404)) * cb0_027y) * 1.5f;
          float _2157 = exp2(log2(max(0.0f, _1405)) * cb0_027y) * 1.5f;
          float _2160 = mad(0.17733481526374817f, _2157, mad(0.38297808170318604f, _2156, (_2153 * 0.659551203250885f)));
          float _2163 = mad(0.09676162153482437f, _2157, mad(0.8134231567382812f, _2156, (_2153 * 0.13468848168849945f)));
          float _2166 = mad(0.870704174041748f, _2157, mad(0.11154405772686005f, _2156, (_2153 * 0.02631598338484764f)));
          float _2170 = max(max(_2160, _2163), _2166);
          float _2175 = (max(_2170, 1.000000013351432e-10f) - max(min(min(_2160, _2163), _2166), 1.000000013351432e-10f)) / max(_2170, 0.009999999776482582f);
          float _2188 = ((_2163 + _2160) + _2166) + (sqrt((((_2166 - _2163) * _2166) + ((_2163 - _2160) * _2163)) + ((_2160 - _2166) * _2160)) * 1.75f);
          float _2189 = _2188 * 0.3333333432674408f;
          float _2190 = _2175 + -0.4000000059604645f;
          float _2191 = _2190 * 5.0f;
          float _2195 = max((1.0f - abs(_2190 * 2.5f)), 0.0f);
          float _2206 = ((float((int)(((int)(uint)((bool)(_2191 > 0.0f))) - ((int)(uint)((bool)(_2191 < 0.0f))))) * (1.0f - (_2195 * _2195))) + 1.0f) * 0.02500000037252903f;
          do {
            if (!(_2189 <= 0.0533333346247673f)) {
              if (!(_2189 >= 0.1599999964237213f)) {
                _2215 = (((0.23999999463558197f / _2188) + -0.5f) * _2206);
              } else {
                _2215 = 0.0f;
              }
            } else {
              _2215 = _2206;
            }
            float _2216 = _2215 + 1.0f;
            float _2217 = _2216 * _2160;
            float _2218 = _2216 * _2163;
            float _2219 = _2216 * _2166;
            do {
              if (!((bool)(_2217 == _2218) && (bool)(_2218 == _2219))) {
                float _2226 = ((_2217 * 2.0f) - _2218) - _2219;
                float _2229 = ((_2163 - _2166) * 1.7320507764816284f) * _2216;
                float _2231 = atan(_2229 / _2226);
                bool _2234 = (_2226 < 0.0f);
                bool _2235 = (_2226 == 0.0f);
                bool _2236 = (_2229 >= 0.0f);
                bool _2237 = (_2229 < 0.0f);
                _2248 = select((_2236 && _2235), 90.0f, select((_2237 && _2235), -90.0f, (select((_2237 && _2234), (_2231 + -3.1415927410125732f), select((_2236 && _2234), (_2231 + 3.1415927410125732f), _2231)) * 57.2957763671875f)));
              } else {
                _2248 = 0.0f;
              }
              float _2253 = min(max(select((_2248 < 0.0f), (_2248 + 360.0f), _2248), 0.0f), 360.0f);
              do {
                if (_2253 < -180.0f) {
                  _2262 = (_2253 + 360.0f);
                } else {
                  if (_2253 > 180.0f) {
                    _2262 = (_2253 + -360.0f);
                  } else {
                    _2262 = _2253;
                  }
                }
                do {
                  if ((bool)(_2262 > -67.5f) && (bool)(_2262 < 67.5f)) {
                    float _2268 = (_2262 + 67.5f) * 0.029629629105329514f;
                    int _2269 = int(_2268);
                    float _2271 = _2268 - float((int)(_2269));
                    float _2272 = _2271 * _2271;
                    float _2273 = _2272 * _2271;
                    if (_2269 == 3) {
                      _2301 = (((0.1666666716337204f - (_2271 * 0.5f)) + (_2272 * 0.5f)) - (_2273 * 0.1666666716337204f));
                    } else {
                      if (_2269 == 2) {
                        _2301 = ((0.6666666865348816f - _2272) + (_2273 * 0.5f));
                      } else {
                        if (_2269 == 1) {
                          _2301 = (((_2273 * -0.5f) + 0.1666666716337204f) + ((_2272 + _2271) * 0.5f));
                        } else {
                          _2301 = select((_2269 == 0), (_2273 * 0.1666666716337204f), 0.0f);
                        }
                      }
                    }
                  } else {
                    _2301 = 0.0f;
                  }
                  float _2310 = min(max(((((_2175 * 0.27000001072883606f) * (0.029999999329447746f - _2217)) * _2301) + _2217), 0.0f), 65535.0f);
                  float _2311 = min(max(_2218, 0.0f), 65535.0f);
                  float _2312 = min(max(_2219, 0.0f), 65535.0f);
                  float _2325 = min(max(mad(-0.21492856740951538f, _2312, mad(-0.2365107536315918f, _2311, (_2310 * 1.4514392614364624f))), 0.0f), 65535.0f);
                  float _2326 = min(max(mad(-0.09967592358589172f, _2312, mad(1.17622971534729f, _2311, (_2310 * -0.07655377686023712f))), 0.0f), 65535.0f);
                  float _2327 = min(max(mad(0.9977163076400757f, _2312, mad(-0.006032449658960104f, _2311, (_2310 * 0.008316148072481155f))), 0.0f), 65535.0f);
                  float _2328 = dot(float3(_2325, _2326, _2327), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
                  float _2335 = ((_2325 - _2328) * 0.9599999785423279f) + _2328;
                  float _2336 = ((_2326 - _2328) * 0.9599999785423279f) + _2328;
                  float _2337 = ((_2327 - _2328) * 0.9599999785423279f) + _2328;
                  float _2340 = log2(select((_2335 <= 0.0f), 6.103515625e-05f, _2335));
                  float _2341 = _2340 * 0.3010300099849701f;
                  do {
                    if (!(_2341 <= -5.2601776123046875f)) {
                      if ((bool)(_2341 > -5.2601776123046875f) && (bool)(_2341 < -0.7447274923324585f)) {
                        float _2349 = (_2340 * 0.19999998807907104f) + 3.494786262512207f;
                        int _2350 = int(_2349);
                        float _2352 = _2349 - float((int)(_2350));
                        float _2354 = _global_0[_2350];
                        float _2357 = _global_0[(_2350 + 1)];
                        float _2362 = _2354 * 0.5f;
                        _2394 = dot(float3((_2352 * _2352), _2352, 1.0f), float3(mad((_global_0[(_2350 + 2)]), 0.5f, mad(_2357, -1.0f, _2362)), (_2357 - _2354), mad(_2357, 0.5f, _2362)));
                      } else {
                        if ((bool)(_2341 >= -0.7447274923324585f) && (bool)(_2341 < 4.673812389373779f)) {
                          float _2374 = (_2340 * 0.1666666567325592f) + 0.4123218357563019f;
                          int _2375 = int(_2374);
                          float _2377 = _2374 - float((int)(_2375));
                          float _2379 = _global_1[_2375];
                          float _2382 = _global_1[(_2375 + 1)];
                          float _2387 = _2379 * 0.5f;
                          _2394 = dot(float3((_2377 * _2377), _2377, 1.0f), float3(mad((_global_1[(_2375 + 2)]), 0.5f, mad(_2382, -1.0f, _2387)), (_2382 - _2379), mad(_2382, 0.5f, _2387)));
                        } else {
                          _2394 = 4.0f;
                        }
                      }
                    } else {
                      _2394 = -4.0f;
                    }
                    float _2396 = exp2(_2394 * 3.321928024291992f);
                    float _2399 = log2(select((_2336 <= 0.0f), 6.103515625e-05f, _2336));
                    float _2400 = _2399 * 0.3010300099849701f;
                    do {
                      if (!(_2400 <= -5.2601776123046875f)) {
                        if ((bool)(_2400 > -5.2601776123046875f) && (bool)(_2400 < -0.7447274923324585f)) {
                          float _2408 = (_2399 * 0.19999998807907104f) + 3.494786262512207f;
                          int _2409 = int(_2408);
                          float _2411 = _2408 - float((int)(_2409));
                          float _2413 = _global_0[_2409];
                          float _2416 = _global_0[(_2409 + 1)];
                          float _2421 = _2413 * 0.5f;
                          _2453 = dot(float3((_2411 * _2411), _2411, 1.0f), float3(mad((_global_0[(_2409 + 2)]), 0.5f, mad(_2416, -1.0f, _2421)), (_2416 - _2413), mad(_2416, 0.5f, _2421)));
                        } else {
                          if ((bool)(_2400 >= -0.7447274923324585f) && (bool)(_2400 < 4.673812389373779f)) {
                            float _2433 = (_2399 * 0.1666666567325592f) + 0.4123218357563019f;
                            int _2434 = int(_2433);
                            float _2436 = _2433 - float((int)(_2434));
                            float _2438 = _global_1[_2434];
                            float _2441 = _global_1[(_2434 + 1)];
                            float _2446 = _2438 * 0.5f;
                            _2453 = dot(float3((_2436 * _2436), _2436, 1.0f), float3(mad((_global_1[(_2434 + 2)]), 0.5f, mad(_2441, -1.0f, _2446)), (_2441 - _2438), mad(_2441, 0.5f, _2446)));
                          } else {
                            _2453 = 4.0f;
                          }
                        }
                      } else {
                        _2453 = -4.0f;
                      }
                      float _2455 = exp2(_2453 * 3.321928024291992f);
                      float _2458 = log2(select((_2337 <= 0.0f), 6.103515625e-05f, _2337));
                      float _2459 = _2458 * 0.3010300099849701f;
                      do {
                        if (!(_2459 <= -5.2601776123046875f)) {
                          if ((bool)(_2459 > -5.2601776123046875f) && (bool)(_2459 < -0.7447274923324585f)) {
                            float _2467 = (_2458 * 0.19999998807907104f) + 3.494786262512207f;
                            int _2468 = int(_2467);
                            float _2470 = _2467 - float((int)(_2468));
                            float _2472 = _global_0[_2468];
                            float _2475 = _global_0[(_2468 + 1)];
                            float _2480 = _2472 * 0.5f;
                            _2512 = dot(float3((_2470 * _2470), _2470, 1.0f), float3(mad((_global_0[(_2468 + 2)]), 0.5f, mad(_2475, -1.0f, _2480)), (_2475 - _2472), mad(_2475, 0.5f, _2480)));
                          } else {
                            if ((bool)(_2459 >= -0.7447274923324585f) && (bool)(_2459 < 4.673812389373779f)) {
                              float _2492 = (_2458 * 0.1666666567325592f) + 0.4123218357563019f;
                              int _2493 = int(_2492);
                              float _2495 = _2492 - float((int)(_2493));
                              float _2497 = _global_1[_2493];
                              float _2500 = _global_1[(_2493 + 1)];
                              float _2505 = _2497 * 0.5f;
                              _2512 = dot(float3((_2495 * _2495), _2495, 1.0f), float3(mad((_global_1[(_2493 + 2)]), 0.5f, mad(_2500, -1.0f, _2505)), (_2500 - _2497), mad(_2500, 0.5f, _2505)));
                            } else {
                              _2512 = 4.0f;
                            }
                          }
                        } else {
                          _2512 = -4.0f;
                        }
                        float _2514 = exp2(_2512 * 3.321928024291992f);
                        float _2517 = mad(0.16386906802654266f, _2514, mad(0.14067870378494263f, _2455, (_2396 * 0.6954522132873535f)));
                        float _2520 = mad(0.0955343171954155f, _2514, mad(0.8596711158752441f, _2455, (_2396 * 0.044794563204050064f)));
                        float _2523 = mad(1.0015007257461548f, _2514, mad(0.004025210160762072f, _2455, (_2396 * -0.005525882821530104f)));
                        float _2526 = mad(-0.21492856740951538f, _2523, mad(-0.2365107536315918f, _2520, (_2517 * 1.4514392614364624f)));
                        float _2529 = mad(-0.09967592358589172f, _2523, mad(1.17622971534729f, _2520, (_2517 * -0.07655377686023712f)));
                        float _2532 = mad(0.9977163076400757f, _2523, mad(-0.006032449658960104f, _2520, (_2517 * 0.008316148072481155f)));
                        float _2535 = log2(select((_2526 <= 0.0f), 9.999999747378752e-05f, _2526));
                        float _2536 = _2535 * 0.3010300099849701f;
                        do {
                          if (!(_2536 <= -2.540623664855957f)) {
                            if ((bool)(_2536 > -2.540623664855957f) && (bool)(_2536 < 0.6812411546707153f)) {
                              float _2544 = (_2535 + 8.43976879119873f) * 0.6540343165397644f;
                              int _2545 = int(_2544);
                              float _2547 = _2544 - float((int)(_2545));
                              float _2549 = _global_2[_2545];
                              float _2552 = _global_2[(_2545 + 1)];
                              float _2557 = _2549 * 0.5f;
                              _2592 = dot(float3((_2547 * _2547), _2547, 1.0f), float3(mad((_global_2[(_2545 + 2)]), 0.5f, mad(_2552, -1.0f, _2557)), (_2552 - _2549), mad(_2552, 0.5f, _2557)));
                            } else {
                              if ((bool)(_2536 >= 0.6812411546707153f) && (bool)(_2536 < 3.002476692199707f)) {
                                float _2569 = (_2535 + -2.2630341053009033f) * 0.9077967405319214f;
                                int _2570 = int(_2569);
                                float _2572 = _2569 - float((int)(_2570));
                                float _2574 = _global_3[_2570];
                                float _2577 = _global_3[(_2570 + 1)];
                                float _2582 = _2574 * 0.5f;
                                _2592 = dot(float3((_2572 * _2572), _2572, 1.0f), float3(mad((_global_3[(_2570 + 2)]), 0.5f, mad(_2577, -1.0f, _2582)), (_2577 - _2574), mad(_2577, 0.5f, _2582)));
                              } else {
                                _2592 = ((_2535 * 0.012041199952363968f) + 1.5611422061920166f);
                              }
                            }
                          } else {
                            _2592 = -1.698970079421997f;
                          }
                          float _2597 = log2(select((_2529 <= 0.0f), 9.999999747378752e-05f, _2529));
                          float _2598 = _2597 * 0.3010300099849701f;
                          do {
                            if (!(_2598 <= -2.540623664855957f)) {
                              if ((bool)(_2598 > -2.540623664855957f) && (bool)(_2598 < 0.6812411546707153f)) {
                                float _2606 = (_2597 + 8.43976879119873f) * 0.6540343165397644f;
                                int _2607 = int(_2606);
                                float _2609 = _2606 - float((int)(_2607));
                                float _2611 = _global_2[_2607];
                                float _2614 = _global_2[(_2607 + 1)];
                                float _2619 = _2611 * 0.5f;
                                _2654 = dot(float3((_2609 * _2609), _2609, 1.0f), float3(mad((_global_2[(_2607 + 2)]), 0.5f, mad(_2614, -1.0f, _2619)), (_2614 - _2611), mad(_2614, 0.5f, _2619)));
                              } else {
                                if ((bool)(_2598 >= 0.6812411546707153f) && (bool)(_2598 < 3.002476692199707f)) {
                                  float _2631 = (_2597 + -2.2630341053009033f) * 0.9077967405319214f;
                                  int _2632 = int(_2631);
                                  float _2634 = _2631 - float((int)(_2632));
                                  float _2636 = _global_3[_2632];
                                  float _2639 = _global_3[(_2632 + 1)];
                                  float _2644 = _2636 * 0.5f;
                                  _2654 = dot(float3((_2634 * _2634), _2634, 1.0f), float3(mad((_global_3[(_2632 + 2)]), 0.5f, mad(_2639, -1.0f, _2644)), (_2639 - _2636), mad(_2639, 0.5f, _2644)));
                                } else {
                                  _2654 = ((_2597 * 0.012041199952363968f) + 1.5611422061920166f);
                                }
                              }
                            } else {
                              _2654 = -1.698970079421997f;
                            }
                            float _2659 = log2(select((_2532 <= 0.0f), 9.999999747378752e-05f, _2532));
                            float _2660 = _2659 * 0.3010300099849701f;
                            do {
                              if (!(_2660 <= -2.540623664855957f)) {
                                if ((bool)(_2660 > -2.540623664855957f) && (bool)(_2660 < 0.6812411546707153f)) {
                                  float _2668 = (_2659 + 8.43976879119873f) * 0.6540343165397644f;
                                  int _2669 = int(_2668);
                                  float _2671 = _2668 - float((int)(_2669));
                                  float _2673 = _global_2[_2669];
                                  float _2676 = _global_2[(_2669 + 1)];
                                  float _2681 = _2673 * 0.5f;
                                  _2716 = dot(float3((_2671 * _2671), _2671, 1.0f), float3(mad((_global_2[(_2669 + 2)]), 0.5f, mad(_2676, -1.0f, _2681)), (_2676 - _2673), mad(_2676, 0.5f, _2681)));
                                } else {
                                  if ((bool)(_2660 >= 0.6812411546707153f) && (bool)(_2660 < 3.002476692199707f)) {
                                    float _2693 = (_2659 + -2.2630341053009033f) * 0.9077967405319214f;
                                    int _2694 = int(_2693);
                                    float _2696 = _2693 - float((int)(_2694));
                                    float _2698 = _global_3[_2694];
                                    float _2701 = _global_3[(_2694 + 1)];
                                    float _2706 = _2698 * 0.5f;
                                    _2716 = dot(float3((_2696 * _2696), _2696, 1.0f), float3(mad((_global_3[(_2694 + 2)]), 0.5f, mad(_2701, -1.0f, _2706)), (_2701 - _2698), mad(_2701, 0.5f, _2706)));
                                  } else {
                                    _2716 = ((_2659 * 0.012041199952363968f) + 1.5611422061920166f);
                                  }
                                }
                              } else {
                                _2716 = -1.698970079421997f;
                              }
                              float _2719 = exp2(_2592 * 3.321928024291992f) + -0.019999999552965164f;
                              float _2721 = (exp2(_2654 * 3.321928024291992f) + -0.019999999552965164f) * 0.020842017605900764f;
                              float _2723 = (exp2(_2716 * 3.321928024291992f) + -0.019999999552965164f) * 0.020842017605900764f;
                              float _2726 = mad(0.15618768334388733f, _2723, mad(0.13400420546531677f, _2721, (_2719 * 0.013806881383061409f)));
                              float _2729 = mad(0.053689517080783844f, _2723, mad(0.6740817427635193f, _2721, (_2719 * 0.005673795938491821f)));
                              float _2734 = (_2729 + _2726) + mad(1.0103391408920288f, _2723, mad(0.00406073359772563f, _2721, (_2719 * -0.00011618694406934083f)));
                              float _2736 = select((_2734 == 0.0f), 1.000000013351432e-10f, _2734);
                              float _2737 = _2726 / _2736;
                              float _2738 = _2729 / _2736;
                              float _2743 = exp2(log2(min(max(_2729, 0.0f), 65535.0f)) * 0.9811000227928162f);
                              float _2745 = max(_2738, 1.000000013351432e-10f);
                              float _2746 = (_2743 * _2737) / _2745;
                              float _2750 = (_2743 * ((1.0f - _2737) - _2738)) / _2745;
                              float _2753 = mad(-0.23642469942569733f, _2750, mad(-0.32480329275131226f, _2743, (_2746 * 1.6410233974456787f)));
                              float _2756 = mad(0.016756348311901093f, _2750, mad(1.6153316497802734f, _2743, (_2746 * -0.663662850856781f)));
                              float _2759 = mad(0.9883948564529419f, _2750, mad(-0.008284442126750946f, _2743, (_2746 * 0.011721894145011902f)));
                              float _2760 = dot(float3(_2753, _2756, _2759), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
                              float _2767 = ((_2753 - _2760) * 0.9300000071525574f) + _2760;
                              float _2768 = ((_2756 - _2760) * 0.9300000071525574f) + _2760;
                              float _2769 = ((_2759 - _2760) * 0.9300000071525574f) + _2760;
                              float _2772 = mad(0.15618768334388733f, _2769, mad(0.13400420546531677f, _2768, (_2767 * 0.6624541878700256f)));
                              float _2775 = mad(0.053689517080783844f, _2769, mad(0.6740817427635193f, _2768, (_2767 * 0.2722287178039551f)));
                              float _2778 = mad(1.0103391408920288f, _2769, mad(0.00406073359772563f, _2768, (_2767 * -0.005574649665504694f)));
                              float _2781 = mad(0.015953300520777702f, _2778, mad(-0.006113269831985235f, _2775, (_2772 * 0.9872239828109741f)));
                              float _2784 = mad(0.005330020096153021f, _2778, mad(1.0018600225448608f, _2775, (_2772 * -0.007598360069096088f)));
                              float _2787 = mad(1.0816800594329834f, _2778, mad(-0.005095949862152338f, _2775, (_2772 * 0.003072570078074932f)));
                              _2801 = saturate(mad(-0.4986107647418976f, _2787, mad(-1.5373831987380981f, _2784, (_2781 * 3.2409698963165283f))));
                              _2802 = saturate(mad(0.04155505821108818f, _2787, mad(1.8759675025939941f, _2784, (_2781 * -0.9692436456680298f))));
                              _2803 = saturate(mad(1.056971549987793f, _2787, mad(-0.20397695899009705f, _2784, (_2781 * 0.05563008040189743f))));
                            } while (false);
                          } while (false);
                        } while (false);
                      } while (false);
                    } while (false);
                  } while (false);
                } while (false);
              } while (false);
            } while (false);
          } while (false);
        } else {
          _2801 = mad(_39, _2130, mad(_38, _2127, (_2124 * _37)));
          _2802 = mad(_42, _2130, mad(_41, _2127, (_2124 * _40)));
          _2803 = mad(_45, _2130, mad(_44, _2127, (_2124 * _43)));
        }
        float _2804 = max(6.103519990574569e-05f, _2801);
        float _2805 = max(6.103519990574569e-05f, _2802);
        float _2806 = max(6.103519990574569e-05f, _2803);
        _4135 = min((_2804 * 4.5f), ((exp2(log2(max(_2804, 0.017999999225139618f)) * 0.44999998807907104f) * 1.0989999771118164f) + -0.0989999994635582f));
        _4136 = min((_2805 * 4.5f), ((exp2(log2(max(_2805, 0.017999999225139618f)) * 0.44999998807907104f) * 1.0989999771118164f) + -0.0989999994635582f));
        _4137 = min((_2806 * 4.5f), ((exp2(log2(max(_2806, 0.017999999225139618f)) * 0.44999998807907104f) * 1.0989999771118164f) + -0.0989999994635582f));
      } while (false);
    } else {
      if ((bool)(output_device == 3) || (bool)(output_device == 5)) {  // TONEMAPPER_OUTPUT_ACES1000nitST2084 || GetOutputDevice() == TONEMAPPER_OUTPUT_ACES1000nitScRGB
        float _2843 = _1404 * 1.5f;
        float _2844 = _1405 * 1.5f;

        // SRGB_2_AP0 (with red exposure * 1.5f )
        float _2847 = mad(0.17733481526374817f, _2844, mad(0.38297808170318604f, _2843, (_1403 * 0.659551203250885f)));
        float _2850 = mad(0.09676162153482437f, _2844, mad(0.8134231567382812f, _2843, (_1403 * 0.13468848168849945f)));
        float _2853 = mad(0.870704174041748f, _2844, mad(0.11154405772686005f, _2843, (_1403 * 0.02631598338484764f)));
        float _2855 = log2(cb0_040x);
        float _2861 = exp2((saturate((_2855 * 0.130824014544487f) + 1.738351821899414f) * 8.5f) + -15.0f);
        float _2863 = log2(cb0_040y);
        float _2869 = exp2((saturate((_2863 * 0.12982377409934998f) + -0.7250609397888184f) * 11.5f) + 6.5f);
        float _2871 = log2(_2861 * 0.18000000715255737f);
        float _2872 = _2855 * 0.3010300099849701f;
        float _2873 = _2871 * 0.07776608318090439f;
        float _2874 = log2(cb0_041x * 4.800000190734863f);
        float _2875 = _2874 * 0.3010300099849701f;
        float _2879 = (_2875 - _2873) + -0.19238781929016113f;
        float _2890 = log2(_2869 * 0.18000000715255737f);
        float _2891 = _2890 * 0.07776608318090439f;
        float _2896 = _2890 * 0.3010300099849701f;
        float _2897 = _2890 * 0.05017166957259178f;
        float _2903 = (_2863 * 0.3010300099849701f) + (_2890 * 0.06020600348711014f);
        float _2908 = _2903 - (((_2897 + 0.12412124872207642f) + _2896) * 0.20000000298023224f);
        float _2922 = exp2(-2.473931074142456f - cb0_040w);
        _10[0] = _2872;
        _10[1] = _2872;
        _10[2] = ((((_2874 - _2855) * ((saturate((log2(_2861) + 15.0f) * 0.11764705926179886f) * 0.16999998688697815f) + 0.18000000715255737f)) + _2855) * 0.3010300099849701f);
        _10[3] = ((_2873 + 0.19238799810409546f) + _2875);
        _10[4] = _2879;
        _10[5] = _2879;
        _11[0] = ((-0.19238781929016113f - _2891) + _2875);
        _11[1] = ((_2891 + 0.19238799810409546f) + _2875);
        _11[2] = ((((_2863 - _2874) * ((saturate((log2(_2869) + -6.5f) * 0.08695652335882187f) * 0.009999990463256836f) + 0.8899999856948853f)) + _2874) * 0.3010300099849701f);
        _11[3] = (_2903 - (((-0.12412124872207642f - _2897) + _2896) * 0.20000000298023224f));
        _11[4] = _2908;
        _11[5] = _2908;
        float _2938 = max(max(_2847, _2850), _2853);
        float _2943 = (max(_2938, 1.000000013351432e-10f) - max(min(min(_2847, _2850), _2853), 1.000000013351432e-10f)) / max(_2938, 0.009999999776482582f);
        float _2956 = ((_2850 + _2847) + _2853) + (sqrt((((_2853 - _2850) * _2853) + ((_2850 - _2847) * _2850)) + ((_2847 - _2853) * _2847)) * 1.75f);
        float _2957 = _2956 * 0.3333333432674408f;
        float _2958 = _2943 + -0.4000000059604645f;
        float _2959 = _2958 * 5.0f;
        float _2963 = max((1.0f - abs(_2958 * 2.5f)), 0.0f);
        float _2974 = ((float((int)(((int)(uint)((bool)(_2959 > 0.0f))) - ((int)(uint)((bool)(_2959 < 0.0f))))) * (1.0f - (_2963 * _2963))) + 1.0f) * 0.02500000037252903f;
        do {
          if (!(_2957 <= 0.0533333346247673f)) {
            if (!(_2957 >= 0.1599999964237213f)) {
              _2983 = (((0.23999999463558197f / _2956) + -0.5f) * _2974);
            } else {
              _2983 = 0.0f;
            }
          } else {
            _2983 = _2974;
          }
          float _2984 = _2983 + 1.0f;
          float _2985 = _2984 * _2847;
          float _2986 = _2984 * _2850;
          float _2987 = _2984 * _2853;
          do {
            if (!((bool)(_2985 == _2986) && (bool)(_2986 == _2987))) {
              float _2994 = ((_2985 * 2.0f) - _2986) - _2987;
              float _2997 = ((_2850 - _2853) * 1.7320507764816284f) * _2984;
              float _2999 = atan(_2997 / _2994);
              bool _3002 = (_2994 < 0.0f);
              bool _3003 = (_2994 == 0.0f);
              bool _3004 = (_2997 >= 0.0f);
              bool _3005 = (_2997 < 0.0f);
              _3016 = select((_3004 && _3003), 90.0f, select((_3005 && _3003), -90.0f, (select((_3005 && _3002), (_2999 + -3.1415927410125732f), select((_3004 && _3002), (_2999 + 3.1415927410125732f), _2999)) * 57.2957763671875f)));
            } else {
              _3016 = 0.0f;
            }
            float _3021 = min(max(select((_3016 < 0.0f), (_3016 + 360.0f), _3016), 0.0f), 360.0f);
            do {
              if (_3021 < -180.0f) {
                _3030 = (_3021 + 360.0f);
              } else {
                if (_3021 > 180.0f) {
                  _3030 = (_3021 + -360.0f);
                } else {
                  _3030 = _3021;
                }
              }
              do {
                if ((bool)(_3030 > -67.5f) && (bool)(_3030 < 67.5f)) {
                  float _3036 = (_3030 + 67.5f) * 0.029629629105329514f;
                  int _3037 = int(_3036);
                  float _3039 = _3036 - float((int)(_3037));
                  float _3040 = _3039 * _3039;
                  float _3041 = _3040 * _3039;
                  if (_3037 == 3) {
                    _3069 = (((0.1666666716337204f - (_3039 * 0.5f)) + (_3040 * 0.5f)) - (_3041 * 0.1666666716337204f));
                  } else {
                    if (_3037 == 2) {
                      _3069 = ((0.6666666865348816f - _3040) + (_3041 * 0.5f));
                    } else {
                      if (_3037 == 1) {
                        _3069 = (((_3041 * -0.5f) + 0.1666666716337204f) + ((_3040 + _3039) * 0.5f));
                      } else {
                        _3069 = select((_3037 == 0), (_3041 * 0.1666666716337204f), 0.0f);
                      }
                    }
                  }
                } else {
                  _3069 = 0.0f;
                }
                float _3078 = min(max(((((_2943 * 0.27000001072883606f) * (0.029999999329447746f - _2985)) * _3069) + _2985), 0.0f), 65535.0f);
                float _3079 = min(max(_2986, 0.0f), 65535.0f);
                float _3080 = min(max(_2987, 0.0f), 65535.0f);
                float _3093 = min(max(mad(-0.21492856740951538f, _3080, mad(-0.2365107536315918f, _3079, (_3078 * 1.4514392614364624f))), 0.0f), 65504.0f);
                float _3094 = min(max(mad(-0.09967592358589172f, _3080, mad(1.17622971534729f, _3079, (_3078 * -0.07655377686023712f))), 0.0f), 65504.0f);
                float _3095 = min(max(mad(0.9977163076400757f, _3080, mad(-0.006032449658960104f, _3079, (_3078 * 0.008316148072481155f))), 0.0f), 65504.0f);
                float _3096 = dot(float3(_3093, _3094, _3095), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
                float _3107 = log2(max((lerp(_3096, _3093, 0.9599999785423279f)), 1.000000013351432e-10f));
                float _3108 = _3107 * 0.3010300099849701f;
                float _3109 = log2(exp2(_2871 - cb0_040z));
                float _3110 = _3109 * 0.3010300099849701f;
                do {
                  if (!(_3108 <= _3110)) {
                    float _3114 = log2(_2922);
                    float _3115 = _3114 * 0.3010300099849701f;
                    if ((bool)(_3108 > _3110) && (bool)(_3108 < _3115)) {
                      float _3123 = ((_3107 - _3109) * 0.9030900001525879f) / ((_3114 - _3109) * 0.3010300099849701f);
                      int _3124 = int(_3123);
                      float _3126 = _3123 - float((int)(_3124));
                      float _3128 = _10[_3124];
                      float _3131 = _10[(_3124 + 1)];
                      float _3136 = _3128 * 0.5f;
                      _3174 = dot(float3((_3126 * _3126), _3126, 1.0f), float3(mad((_10[(_3124 + 2)]), 0.5f, mad(_3131, -1.0f, _3136)), (_3131 - _3128), mad(_3131, 0.5f, _3136)));
                    } else {
                      if ((bool)(_3108 >= _3115) && (bool)(_3108 < _2896)) {
                        float _3151 = ((_3107 - _3114) * 0.9030900001525879f) / ((_2890 - _3114) * 0.3010300099849701f);
                        int _3152 = int(_3151);
                        float _3154 = _3151 - float((int)(_3152));
                        float _3156 = _11[_3152];
                        float _3159 = _11[(_3152 + 1)];
                        float _3164 = _3156 * 0.5f;
                        _3174 = dot(float3((_3154 * _3154), _3154, 1.0f), float3(mad((_11[(_3152 + 2)]), 0.5f, mad(_3159, -1.0f, _3164)), (_3159 - _3156), mad(_3159, 0.5f, _3164)));
                      } else {
                        _3174 = (_2903 - (_3107 * 0.06020600348711014f));
                      }
                    }
                  } else {
                    _3174 = _2872;
                  }
                  float _3178 = log2(max((lerp(_3096, _3094, 0.9599999785423279f)), 1.000000013351432e-10f));
                  float _3179 = _3178 * 0.3010300099849701f;
                  do {
                    if (!(_3179 <= _3110)) {
                      float _3183 = log2(_2922);
                      float _3184 = _3183 * 0.3010300099849701f;
                      if ((bool)(_3179 > _3110) && (bool)(_3179 < _3184)) {
                        float _3192 = ((_3178 - _3109) * 0.9030900001525879f) / ((_3183 - _3109) * 0.3010300099849701f);
                        int _3193 = int(_3192);
                        float _3195 = _3192 - float((int)(_3193));
                        float _3197 = _10[_3193];
                        float _3200 = _10[(_3193 + 1)];
                        float _3205 = _3197 * 0.5f;
                        _3243 = dot(float3((_3195 * _3195), _3195, 1.0f), float3(mad((_10[(_3193 + 2)]), 0.5f, mad(_3200, -1.0f, _3205)), (_3200 - _3197), mad(_3200, 0.5f, _3205)));
                      } else {
                        if ((bool)(_3179 >= _3184) && (bool)(_3179 < _2896)) {
                          float _3220 = ((_3178 - _3183) * 0.9030900001525879f) / ((_2890 - _3183) * 0.3010300099849701f);
                          int _3221 = int(_3220);
                          float _3223 = _3220 - float((int)(_3221));
                          float _3225 = _11[_3221];
                          float _3228 = _11[(_3221 + 1)];
                          float _3233 = _3225 * 0.5f;
                          _3243 = dot(float3((_3223 * _3223), _3223, 1.0f), float3(mad((_11[(_3221 + 2)]), 0.5f, mad(_3228, -1.0f, _3233)), (_3228 - _3225), mad(_3228, 0.5f, _3233)));
                        } else {
                          _3243 = (_2903 - (_3178 * 0.06020600348711014f));
                        }
                      }
                    } else {
                      _3243 = _2872;
                    }
                    float _3247 = log2(max((lerp(_3096, _3095, 0.9599999785423279f)), 1.000000013351432e-10f));
                    float _3248 = _3247 * 0.3010300099849701f;
                    do {
                      if (!(_3248 <= _3110)) {
                        float _3252 = log2(_2922);
                        float _3253 = _3252 * 0.3010300099849701f;
                        if ((bool)(_3248 > _3110) && (bool)(_3248 < _3253)) {
                          float _3261 = ((_3247 - _3109) * 0.9030900001525879f) / ((_3252 - _3109) * 0.3010300099849701f);
                          int _3262 = int(_3261);
                          float _3264 = _3261 - float((int)(_3262));
                          float _3266 = _10[_3262];
                          float _3269 = _10[(_3262 + 1)];
                          float _3274 = _3266 * 0.5f;
                          _3312 = dot(float3((_3264 * _3264), _3264, 1.0f), float3(mad((_10[(_3262 + 2)]), 0.5f, mad(_3269, -1.0f, _3274)), (_3269 - _3266), mad(_3269, 0.5f, _3274)));
                        } else {
                          if ((bool)(_3248 >= _3253) && (bool)(_3248 < _2896)) {
                            float _3289 = ((_3247 - _3252) * 0.9030900001525879f) / ((_2890 - _3252) * 0.3010300099849701f);
                            int _3290 = int(_3289);
                            float _3292 = _3289 - float((int)(_3290));
                            float _3294 = _11[_3290];
                            float _3297 = _11[(_3290 + 1)];
                            float _3302 = _3294 * 0.5f;
                            _3312 = dot(float3((_3292 * _3292), _3292, 1.0f), float3(mad((_11[(_3290 + 2)]), 0.5f, mad(_3297, -1.0f, _3302)), (_3297 - _3294), mad(_3297, 0.5f, _3302)));
                          } else {
                            _3312 = (_2903 - (_3247 * 0.06020600348711014f));
                          }
                        }
                      } else {
                        _3312 = _2872;
                      }

                      // ACESMinMaxData.y - ACESMinMaxData.x;
                      float _3316 = cb0_040y - cb0_040x;
                      float _3317 = (exp2(_3174 * 3.321928024291992f) - cb0_040x) / _3316;
                      float _3319 = (exp2(_3243 * 3.321928024291992f) - cb0_040x) / _3316;
                      float _3321 = (exp2(_3312 * 3.321928024291992f) - cb0_040x) / _3316;
                      float _3324 = mad(0.15618768334388733f, _3321, mad(0.13400420546531677f, _3319, (_3317 * 0.6624541878700256f)));
                      float _3327 = mad(0.053689517080783844f, _3321, mad(0.6740817427635193f, _3319, (_3317 * 0.2722287178039551f)));
                      float _3330 = mad(1.0103391408920288f, _3321, mad(0.00406073359772563f, _3319, (_3317 * -0.005574649665504694f)));
                      float _3343 = min(max(mad(-0.23642469942569733f, _3330, mad(-0.32480329275131226f, _3327, (_3324 * 1.6410233974456787f))), 0.0f), 1.0f);
                      float _3344 = min(max(mad(0.016756348311901093f, _3330, mad(1.6153316497802734f, _3327, (_3324 * -0.663662850856781f))), 0.0f), 1.0f);
                      float _3345 = min(max(mad(0.9883948564529419f, _3330, mad(-0.008284442126750946f, _3327, (_3324 * 0.011721894145011902f))), 0.0f), 1.0f);
                      float _3348 = mad(0.15618768334388733f, _3345, mad(0.13400420546531677f, _3344, (_3343 * 0.6624541878700256f)));
                      float _3351 = mad(0.053689517080783844f, _3345, mad(0.6740817427635193f, _3344, (_3343 * 0.2722287178039551f)));
                      float _3354 = mad(1.0103391408920288f, _3345, mad(0.00406073359772563f, _3344, (_3343 * -0.005574649665504694f)));
                      float _3376 = min(max((min(max(mad(-0.23642469942569733f, _3354, mad(-0.32480329275131226f, _3351, (_3348 * 1.6410233974456787f))), 0.0f), 65535.0f) * cb0_040y), 0.0f), 65535.0f);
                      float _3377 = min(max((min(max(mad(0.016756348311901093f, _3354, mad(1.6153316497802734f, _3351, (_3348 * -0.663662850856781f))), 0.0f), 65535.0f) * cb0_040y), 0.0f), 65535.0f);
                      float _3378 = min(max((min(max(mad(0.9883948564529419f, _3354, mad(-0.008284442126750946f, _3351, (_3348 * 0.011721894145011902f))), 0.0f), 65535.0f) * cb0_040y), 0.0f), 65535.0f);
                      float _3397 = exp2(log2(mad(_39, _3378, mad(_38, _3377, (_3376 * _37))) * 9.999999747378752e-05f) * 0.1593017578125f);
                      float _3398 = exp2(log2(mad(_42, _3378, mad(_41, _3377, (_3376 * _40))) * 9.999999747378752e-05f) * 0.1593017578125f);
                      float _3399 = exp2(log2(mad(_45, _3378, mad(_44, _3377, (_3376 * _43))) * 9.999999747378752e-05f) * 0.1593017578125f);
                      _4135 = exp2(log2((1.0f / ((_3397 * 18.6875f) + 1.0f)) * ((_3397 * 18.8515625f) + 0.8359375f)) * 78.84375f);
                      _4136 = exp2(log2((1.0f / ((_3398 * 18.6875f) + 1.0f)) * ((_3398 * 18.8515625f) + 0.8359375f)) * 78.84375f);
                      _4137 = exp2(log2((1.0f / ((_3399 * 18.6875f) + 1.0f)) * ((_3399 * 18.8515625f) + 0.8359375f)) * 78.84375f);
                    } while (false);
                  } while (false);
                } while (false);
              } while (false);
            } while (false);
          } while (false);
        } while (false);
      } else {
        if ((output_device & -3) == 4) {
          float _3439 = _1404 * 1.5f;
          float _3440 = _1405 * 1.5f;
          float _3443 = mad(0.17733481526374817f, _3440, mad(0.38297808170318604f, _3439, (_1403 * 0.659551203250885f)));
          float _3446 = mad(0.09676162153482437f, _3440, mad(0.8134231567382812f, _3439, (_1403 * 0.13468848168849945f)));
          float _3449 = mad(0.870704174041748f, _3440, mad(0.11154405772686005f, _3439, (_1403 * 0.02631598338484764f)));
          float _3450 = log2(cb0_040x);
          float _3456 = exp2((saturate((_3450 * 0.130824014544487f) + 1.738351821899414f) * 8.5f) + -15.0f);
          float _3458 = log2(cb0_040y);
          float _3464 = exp2((saturate((_3458 * 0.12982377409934998f) + -0.7250609397888184f) * 11.5f) + 6.5f);
          float _3466 = log2(_3456 * 0.18000000715255737f);
          float _3467 = _3450 * 0.3010300099849701f;
          float _3468 = _3466 * 0.07776608318090439f;
          float _3469 = log2(cb0_041x * 48.0f);
          float _3470 = _3469 * 0.3010300099849701f;
          float _3474 = (_3470 - _3468) + -0.19238781929016113f;
          float _3485 = log2(_3464 * 0.18000000715255737f);
          float _3486 = _3485 * 0.07776608318090439f;
          float _3491 = _3485 * 0.3010300099849701f;
          float _3492 = _3485 * 0.05017166957259178f;
          float _3498 = (_3458 * 0.3010300099849701f) + (_3485 * 0.06020600348711014f);
          float _3503 = _3498 - (((_3492 + 0.12412124872207642f) + _3491) * 0.20000000298023224f);
          float _3517 = exp2(-2.473931074142456f - cb0_040w);
          _8[0] = _3467;
          _8[1] = _3467;
          _8[2] = ((((_3469 - _3450) * ((saturate((log2(_3456) + 15.0f) * 0.11764705926179886f) * 0.16999998688697815f) + 0.18000000715255737f)) + _3450) * 0.3010300099849701f);
          _8[3] = ((_3468 + 0.19238799810409546f) + _3470);
          _8[4] = _3474;
          _8[5] = _3474;
          _9[0] = ((-0.19238781929016113f - _3486) + _3470);
          _9[1] = ((_3486 + 0.19238799810409546f) + _3470);
          _9[2] = ((((_3458 - _3469) * ((saturate((log2(_3464) + -6.5f) * 0.08695652335882187f) * 0.009999990463256836f) + 0.8899999856948853f)) + _3469) * 0.3010300099849701f);
          _9[3] = (_3498 - (((-0.12412124872207642f - _3492) + _3491) * 0.20000000298023224f));
          _9[4] = _3503;
          _9[5] = _3503;
          float _3533 = max(max(_3443, _3446), _3449);
          float _3538 = (max(_3533, 1.000000013351432e-10f) - max(min(min(_3443, _3446), _3449), 1.000000013351432e-10f)) / max(_3533, 0.009999999776482582f);
          float _3551 = ((_3446 + _3443) + _3449) + (sqrt((((_3449 - _3446) * _3449) + ((_3446 - _3443) * _3446)) + ((_3443 - _3449) * _3443)) * 1.75f);
          float _3552 = _3551 * 0.3333333432674408f;
          float _3553 = _3538 + -0.4000000059604645f;
          float _3554 = _3553 * 5.0f;
          float _3558 = max((1.0f - abs(_3553 * 2.5f)), 0.0f);
          float _3569 = ((float((int)(((int)(uint)((bool)(_3554 > 0.0f))) - ((int)(uint)((bool)(_3554 < 0.0f))))) * (1.0f - (_3558 * _3558))) + 1.0f) * 0.02500000037252903f;
          do {
            if (!(_3552 <= 0.0533333346247673f)) {
              if (!(_3552 >= 0.1599999964237213f)) {
                _3578 = (((0.23999999463558197f / _3551) + -0.5f) * _3569);
              } else {
                _3578 = 0.0f;
              }
            } else {
              _3578 = _3569;
            }
            float _3579 = _3578 + 1.0f;
            float _3580 = _3579 * _3443;
            float _3581 = _3579 * _3446;
            float _3582 = _3579 * _3449;
            do {
              if (!((bool)(_3580 == _3581) && (bool)(_3581 == _3582))) {
                float _3589 = ((_3580 * 2.0f) - _3581) - _3582;
                float _3592 = ((_3446 - _3449) * 1.7320507764816284f) * _3579;
                float _3594 = atan(_3592 / _3589);
                bool _3597 = (_3589 < 0.0f);
                bool _3598 = (_3589 == 0.0f);
                bool _3599 = (_3592 >= 0.0f);
                bool _3600 = (_3592 < 0.0f);
                _3611 = select((_3599 && _3598), 90.0f, select((_3600 && _3598), -90.0f, (select((_3600 && _3597), (_3594 + -3.1415927410125732f), select((_3599 && _3597), (_3594 + 3.1415927410125732f), _3594)) * 57.2957763671875f)));
              } else {
                _3611 = 0.0f;
              }
              float _3616 = min(max(select((_3611 < 0.0f), (_3611 + 360.0f), _3611), 0.0f), 360.0f);
              do {
                if (_3616 < -180.0f) {
                  _3625 = (_3616 + 360.0f);
                } else {
                  if (_3616 > 180.0f) {
                    _3625 = (_3616 + -360.0f);
                  } else {
                    _3625 = _3616;
                  }
                }
                do {
                  if ((bool)(_3625 > -67.5f) && (bool)(_3625 < 67.5f)) {
                    float _3631 = (_3625 + 67.5f) * 0.029629629105329514f;
                    int _3632 = int(_3631);
                    float _3634 = _3631 - float((int)(_3632));
                    float _3635 = _3634 * _3634;
                    float _3636 = _3635 * _3634;
                    if (_3632 == 3) {
                      _3664 = (((0.1666666716337204f - (_3634 * 0.5f)) + (_3635 * 0.5f)) - (_3636 * 0.1666666716337204f));
                    } else {
                      if (_3632 == 2) {
                        _3664 = ((0.6666666865348816f - _3635) + (_3636 * 0.5f));
                      } else {
                        if (_3632 == 1) {
                          _3664 = (((_3636 * -0.5f) + 0.1666666716337204f) + ((_3635 + _3634) * 0.5f));
                        } else {
                          _3664 = select((_3632 == 0), (_3636 * 0.1666666716337204f), 0.0f);
                        }
                      }
                    }
                  } else {
                    _3664 = 0.0f;
                  }
                  float _3673 = min(max(((((_3538 * 0.27000001072883606f) * (0.029999999329447746f - _3580)) * _3664) + _3580), 0.0f), 65535.0f);
                  float _3674 = min(max(_3581, 0.0f), 65535.0f);
                  float _3675 = min(max(_3582, 0.0f), 65535.0f);
                  float _3688 = min(max(mad(-0.21492856740951538f, _3675, mad(-0.2365107536315918f, _3674, (_3673 * 1.4514392614364624f))), 0.0f), 65504.0f);
                  float _3689 = min(max(mad(-0.09967592358589172f, _3675, mad(1.17622971534729f, _3674, (_3673 * -0.07655377686023712f))), 0.0f), 65504.0f);
                  float _3690 = min(max(mad(0.9977163076400757f, _3675, mad(-0.006032449658960104f, _3674, (_3673 * 0.008316148072481155f))), 0.0f), 65504.0f);
                  float _3691 = dot(float3(_3688, _3689, _3690), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
                  float _3702 = log2(max((lerp(_3691, _3688, 0.9599999785423279f)), 1.000000013351432e-10f));
                  float _3703 = _3702 * 0.3010300099849701f;
                  float _3704 = log2(exp2(_3466 - cb0_040z));
                  float _3705 = _3704 * 0.3010300099849701f;
                  do {
                    if (!(_3703 <= _3705)) {
                      float _3709 = log2(_3517);
                      float _3710 = _3709 * 0.3010300099849701f;
                      if ((bool)(_3703 > _3705) && (bool)(_3703 < _3710)) {
                        float _3718 = ((_3702 - _3704) * 0.9030900001525879f) / ((_3709 - _3704) * 0.3010300099849701f);
                        int _3719 = int(_3718);
                        float _3721 = _3718 - float((int)(_3719));
                        float _3723 = _8[_3719];
                        float _3726 = _8[(_3719 + 1)];
                        float _3731 = _3723 * 0.5f;
                        _3769 = dot(float3((_3721 * _3721), _3721, 1.0f), float3(mad((_8[(_3719 + 2)]), 0.5f, mad(_3726, -1.0f, _3731)), (_3726 - _3723), mad(_3726, 0.5f, _3731)));
                      } else {
                        if ((bool)(_3703 >= _3710) && (bool)(_3703 < _3491)) {
                          float _3746 = ((_3702 - _3709) * 0.9030900001525879f) / ((_3485 - _3709) * 0.3010300099849701f);
                          int _3747 = int(_3746);
                          float _3749 = _3746 - float((int)(_3747));
                          float _3751 = _9[_3747];
                          float _3754 = _9[(_3747 + 1)];
                          float _3759 = _3751 * 0.5f;
                          _3769 = dot(float3((_3749 * _3749), _3749, 1.0f), float3(mad((_9[(_3747 + 2)]), 0.5f, mad(_3754, -1.0f, _3759)), (_3754 - _3751), mad(_3754, 0.5f, _3759)));
                        } else {
                          _3769 = (_3498 - (_3702 * 0.06020600348711014f));
                        }
                      }
                    } else {
                      _3769 = _3467;
                    }
                    float _3773 = log2(max((lerp(_3691, _3689, 0.9599999785423279f)), 1.000000013351432e-10f));
                    float _3774 = _3773 * 0.3010300099849701f;
                    do {
                      if (!(_3774 <= _3705)) {
                        float _3778 = log2(_3517);
                        float _3779 = _3778 * 0.3010300099849701f;
                        if ((bool)(_3774 > _3705) && (bool)(_3774 < _3779)) {
                          float _3787 = ((_3773 - _3704) * 0.9030900001525879f) / ((_3778 - _3704) * 0.3010300099849701f);
                          int _3788 = int(_3787);
                          float _3790 = _3787 - float((int)(_3788));
                          float _3792 = _8[_3788];
                          float _3795 = _8[(_3788 + 1)];
                          float _3800 = _3792 * 0.5f;
                          _3838 = dot(float3((_3790 * _3790), _3790, 1.0f), float3(mad((_8[(_3788 + 2)]), 0.5f, mad(_3795, -1.0f, _3800)), (_3795 - _3792), mad(_3795, 0.5f, _3800)));
                        } else {
                          if ((bool)(_3774 >= _3779) && (bool)(_3774 < _3491)) {
                            float _3815 = ((_3773 - _3778) * 0.9030900001525879f) / ((_3485 - _3778) * 0.3010300099849701f);
                            int _3816 = int(_3815);
                            float _3818 = _3815 - float((int)(_3816));
                            float _3820 = _9[_3816];
                            float _3823 = _9[(_3816 + 1)];
                            float _3828 = _3820 * 0.5f;
                            _3838 = dot(float3((_3818 * _3818), _3818, 1.0f), float3(mad((_9[(_3816 + 2)]), 0.5f, mad(_3823, -1.0f, _3828)), (_3823 - _3820), mad(_3823, 0.5f, _3828)));
                          } else {
                            _3838 = (_3498 - (_3773 * 0.06020600348711014f));
                          }
                        }
                      } else {
                        _3838 = _3467;
                      }
                      float _3842 = log2(max((lerp(_3691, _3690, 0.9599999785423279f)), 1.000000013351432e-10f));
                      float _3843 = _3842 * 0.3010300099849701f;
                      do {
                        if (!(_3843 <= _3705)) {
                          float _3847 = log2(_3517);
                          float _3848 = _3847 * 0.3010300099849701f;
                          if ((bool)(_3843 > _3705) && (bool)(_3843 < _3848)) {
                            float _3856 = ((_3842 - _3704) * 0.9030900001525879f) / ((_3847 - _3704) * 0.3010300099849701f);
                            int _3857 = int(_3856);
                            float _3859 = _3856 - float((int)(_3857));
                            float _3861 = _8[_3857];
                            float _3864 = _8[(_3857 + 1)];
                            float _3869 = _3861 * 0.5f;
                            _3907 = dot(float3((_3859 * _3859), _3859, 1.0f), float3(mad((_8[(_3857 + 2)]), 0.5f, mad(_3864, -1.0f, _3869)), (_3864 - _3861), mad(_3864, 0.5f, _3869)));
                          } else {
                            if ((bool)(_3843 >= _3848) && (bool)(_3843 < _3491)) {
                              float _3884 = ((_3842 - _3847) * 0.9030900001525879f) / ((_3485 - _3847) * 0.3010300099849701f);
                              int _3885 = int(_3884);
                              float _3887 = _3884 - float((int)(_3885));
                              float _3889 = _9[_3885];
                              float _3892 = _9[(_3885 + 1)];
                              float _3897 = _3889 * 0.5f;
                              _3907 = dot(float3((_3887 * _3887), _3887, 1.0f), float3(mad((_9[(_3885 + 2)]), 0.5f, mad(_3892, -1.0f, _3897)), (_3892 - _3889), mad(_3892, 0.5f, _3897)));
                            } else {
                              _3907 = (_3498 - (_3842 * 0.06020600348711014f));
                            }
                          }
                        } else {
                          _3907 = _3467;
                        }
                        float _3911 = cb0_040y - cb0_040x;
                        float _3912 = (exp2(_3769 * 3.321928024291992f) - cb0_040x) / _3911;
                        float _3914 = (exp2(_3838 * 3.321928024291992f) - cb0_040x) / _3911;
                        float _3916 = (exp2(_3907 * 3.321928024291992f) - cb0_040x) / _3911;
                        float _3919 = mad(0.15618768334388733f, _3916, mad(0.13400420546531677f, _3914, (_3912 * 0.6624541878700256f)));
                        float _3922 = mad(0.053689517080783844f, _3916, mad(0.6740817427635193f, _3914, (_3912 * 0.2722287178039551f)));
                        float _3925 = mad(1.0103391408920288f, _3916, mad(0.00406073359772563f, _3914, (_3912 * -0.005574649665504694f)));
                        float _3938 = min(max(mad(-0.23642469942569733f, _3925, mad(-0.32480329275131226f, _3922, (_3919 * 1.6410233974456787f))), 0.0f), 1.0f);
                        float _3939 = min(max(mad(0.016756348311901093f, _3925, mad(1.6153316497802734f, _3922, (_3919 * -0.663662850856781f))), 0.0f), 1.0f);
                        float _3940 = min(max(mad(0.9883948564529419f, _3925, mad(-0.008284442126750946f, _3922, (_3919 * 0.011721894145011902f))), 0.0f), 1.0f);
                        float _3943 = mad(0.15618768334388733f, _3940, mad(0.13400420546531677f, _3939, (_3938 * 0.6624541878700256f)));
                        float _3946 = mad(0.053689517080783844f, _3940, mad(0.6740817427635193f, _3939, (_3938 * 0.2722287178039551f)));
                        float _3949 = mad(1.0103391408920288f, _3940, mad(0.00406073359772563f, _3939, (_3938 * -0.005574649665504694f)));
                        float _3971 = min(max((min(max(mad(-0.23642469942569733f, _3949, mad(-0.32480329275131226f, _3946, (_3943 * 1.6410233974456787f))), 0.0f), 65535.0f) * cb0_040y), 0.0f), 65535.0f);
                        float _3972 = min(max((min(max(mad(0.016756348311901093f, _3949, mad(1.6153316497802734f, _3946, (_3943 * -0.663662850856781f))), 0.0f), 65535.0f) * cb0_040y), 0.0f), 65535.0f);
                        float _3973 = min(max((min(max(mad(0.9883948564529419f, _3949, mad(-0.008284442126750946f, _3946, (_3943 * 0.011721894145011902f))), 0.0f), 65535.0f) * cb0_040y), 0.0f), 65535.0f);
                        float _3992 = exp2(log2(mad(_39, _3973, mad(_38, _3972, (_3971 * _37))) * 9.999999747378752e-05f) * 0.1593017578125f);
                        float _3993 = exp2(log2(mad(_42, _3973, mad(_41, _3972, (_3971 * _40))) * 9.999999747378752e-05f) * 0.1593017578125f);
                        float _3994 = exp2(log2(mad(_45, _3973, mad(_44, _3972, (_3971 * _43))) * 9.999999747378752e-05f) * 0.1593017578125f);
                        _4135 = exp2(log2((1.0f / ((_3992 * 18.6875f) + 1.0f)) * ((_3992 * 18.8515625f) + 0.8359375f)) * 78.84375f);
                        _4136 = exp2(log2((1.0f / ((_3993 * 18.6875f) + 1.0f)) * ((_3993 * 18.8515625f) + 0.8359375f)) * 78.84375f);
                        _4137 = exp2(log2((1.0f / ((_3994 * 18.6875f) + 1.0f)) * ((_3994 * 18.8515625f) + 0.8359375f)) * 78.84375f);
                      } while (false);
                    } while (false);
                  } while (false);
                } while (false);
              } while (false);
            } while (false);
          } while (false);
        } else {
          if (output_device == 7) {
            float _4027 = mad(0.04736635088920593f, _1405, mad(0.3395121395587921f, _1404, (_1403 * 0.613191545009613f)));
            float _4030 = mad(0.01345000695437193f, _1405, mad(0.9163357615470886f, _1404, (_1403 * 0.07020691782236099f)));
            float _4033 = mad(0.8696067929267883f, _1405, mad(0.1095672994852066f, _1404, (_1403 * 0.020618872717022896f)));
            float _4052 = exp2(log2(mad(_39, _4033, mad(_38, _4030, (_4027 * _37))) * 9.999999747378752e-05f) * 0.1593017578125f);
            float _4053 = exp2(log2(mad(_42, _4033, mad(_41, _4030, (_4027 * _40))) * 9.999999747378752e-05f) * 0.1593017578125f);
            float _4054 = exp2(log2(mad(_45, _4033, mad(_44, _4030, (_4027 * _43))) * 9.999999747378752e-05f) * 0.1593017578125f);
            _4135 = exp2(log2((1.0f / ((_4052 * 18.6875f) + 1.0f)) * ((_4052 * 18.8515625f) + 0.8359375f)) * 78.84375f);
            _4136 = exp2(log2((1.0f / ((_4053 * 18.6875f) + 1.0f)) * ((_4053 * 18.8515625f) + 0.8359375f)) * 78.84375f);
            _4137 = exp2(log2((1.0f / ((_4054 * 18.6875f) + 1.0f)) * ((_4054 * 18.8515625f) + 0.8359375f)) * 78.84375f);
          } else {
            if (!(output_device == 8)) {
              if (output_device == 9) {
                float _4089 = mad(0.04736635088920593f, _1393, mad(0.3395121395587921f, _1392, (_1391 * 0.613191545009613f)));
                float _4092 = mad(0.01345000695437193f, _1393, mad(0.9163357615470886f, _1392, (_1391 * 0.07020691782236099f)));
                float _4095 = mad(0.8696067929267883f, _1393, mad(0.1095672994852066f, _1392, (_1391 * 0.020618872717022896f)));
                _4135 = mad(_39, _4095, mad(_38, _4092, (_4089 * _37)));
                _4136 = mad(_42, _4095, mad(_41, _4092, (_4089 * _40)));
                _4137 = mad(_45, _4095, mad(_44, _4092, (_4089 * _43)));
              } else {
                float _4108 = mad(0.04736635088920593f, _1419, mad(0.3395121395587921f, _1418, (_1417 * 0.613191545009613f)));
                float _4111 = mad(0.01345000695437193f, _1419, mad(0.9163357615470886f, _1418, (_1417 * 0.07020691782236099f)));
                float _4114 = mad(0.8696067929267883f, _1419, mad(0.1095672994852066f, _1418, (_1417 * 0.020618872717022896f)));
                _4135 = exp2(log2(mad(_39, _4114, mad(_38, _4111, (_4108 * _37)))) * cb0_027z);
                _4136 = exp2(log2(mad(_42, _4114, mad(_41, _4111, (_4108 * _40)))) * cb0_027z);
                _4137 = exp2(log2(mad(_45, _4114, mad(_44, _4111, (_4108 * _43)))) * cb0_027z);
              }
            } else {
              _4135 = _1403;
              _4136 = _1404;
              _4137 = _1405;
            }
          }
        }
      }
    }
  }

  float3 output_color = float3(_4135, _4136, _4137);
  if (RENODX_TONE_MAP_TYPE != 0 && cb0_068x != 0.f) {
    output_color = renodx::color::gamma::DecodeSafe(output_color, 2.2f);
    // output_color = applyUserToneMap(output_color * 1.5f, 0.18f);
    // output_color = renodx::color::correct::GammaSafe(output_color);
    output_color = renodx::color::bt2020::from::BT709(output_color);
    output_color = renodx::color::pq::EncodeSafe(output_color, RENODX_DIFFUSE_WHITE_NITS);
  }

  SV_Target.x = (output_color.r * 0.9523810148239136f);
  SV_Target.y = (output_color.g * 0.9523810148239136f);
  SV_Target.z = (output_color.b * 0.9523810148239136f);
  SV_Target.w = 0.0f;
  return SV_Target;
}
