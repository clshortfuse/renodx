#include "./shared.h"

cbuffer cb0 : register(b0) {
  int cb0_010y : packoffset(c010.y);
  int cb0_010z : packoffset(c010.z);
  float cb0_011x : packoffset(c011.x);
  float cb0_011y : packoffset(c011.y);
  float cb0_011z : packoffset(c011.z);
  float cb0_011w : packoffset(c011.w);
};

float4 main(
    noperspective float2 TEXCOORD: TEXCOORD,
    noperspective float4 SV_Position: SV_Position,
    nointerpolation uint SV_RenderTargetArrayIndex: SV_RenderTargetArrayIndex)
    : SV_Target {
  int output_device = cb0_010y;
  float4 SV_Target;
  float _5[6];
  float _6[6];
  float _7[6];
  float _8[6];
  float _11 = (TEXCOORD.x + -0.015625f) * 1.0322580337524414f;
  float _12 = (TEXCOORD.y + -0.015625f) * 1.0322580337524414f;
  float _14 = float((uint)(int)(SV_RenderTargetArrayIndex)) * 0.032258063554763794f;

  float3 output_color = float3(_11, _12, _14);
  if (RENODX_TONE_MAP_TYPE != 0 && cb0_010y != 0u) {
    if (RENODX_GAMMA_CORRECTION_UI) {
      output_color = renodx::color::gamma::DecodeSafe(output_color, 2.2f);
    } else {
      output_color = renodx::color::srgb::DecodeSafe(output_color);
    }
    output_color = renodx::color::bt2020::from::BT709(output_color);
    output_color = renodx::color::pq::EncodeSafe(output_color, RENODX_GRAPHICS_WHITE_NITS) / 1.05f;
    return float4(output_color, 0.f);
  }

  float _34;
  float _35;
  float _36;
  float _37;
  float _38;
  float _39;
  float _40;
  float _41;
  float _42;
  float _211;
  float _244;
  float _258;
  float _297;
  float _402;
  float _471;
  float _540;
  float _795;
  float _828;
  float _842;
  float _881;
  float _986;
  float _1055;
  float _1124;
  float _1240;
  float _1241;
  float _1242;
  if (!(cb0_010z == 1)) {
    if (!(cb0_010z == 2)) {
      if (!(cb0_010z == 3)) {
        bool _23 = (cb0_010z == 4);
        _34 = select(_23, 1.0f, 1.7050515413284302f);
        _35 = select(_23, 0.0f, -0.6217905879020691f);
        _36 = select(_23, 0.0f, -0.0832584798336029f);
        _37 = select(_23, 0.0f, -0.13025718927383423f);
        _38 = select(_23, 1.0f, 1.1408027410507202f);
        _39 = select(_23, 0.0f, -0.010548528283834457f);
        _40 = select(_23, 0.0f, -0.024003278464078903f);
        _41 = select(_23, 0.0f, -0.1289687603712082f);
        _42 = select(_23, 1.0f, 1.152971863746643f);
      } else {
        _34 = 0.6954522132873535f;
        _35 = 0.14067870378494263f;
        _36 = 0.16386906802654266f;
        _37 = 0.044794563204050064f;
        _38 = 0.8596711158752441f;
        _39 = 0.0955343171954155f;
        _40 = -0.005525882821530104f;
        _41 = 0.004025210160762072f;
        _42 = 1.0015007257461548f;
      }
    } else {
      _34 = 1.02579927444458f;
      _35 = -0.020052503794431686f;
      _36 = -0.0057713985443115234f;
      _37 = -0.0022350111976265907f;
      _38 = 1.0045825242996216f;
      _39 = -0.002352306619286537f;
      _40 = -0.005014004185795784f;
      _41 = -0.025293385609984398f;
      _42 = 1.0304402112960815f;
    }
  } else {
    _34 = 1.379158854484558f;
    _35 = -0.3088507056236267f;
    _36 = -0.07034677267074585f;
    _37 = -0.06933528929948807f;
    _38 = 1.0822921991348267f;
    _39 = -0.012962047010660172f;
    _40 = -0.002159259282052517f;
    _41 = -0.045465391129255295f;
    _42 = 1.0477596521377563f;
  }
  float _43 = max(6.103519990574569e-05f, _11);
  float _44 = max(6.103519990574569e-05f, _12);
  float _45 = max(6.103519990574569e-05f, _14);
  float _67 = select((_43 > 0.040449999272823334f), exp2(log2((_43 * 0.9478672742843628f) + 0.05213269963860512f) * 2.4000000953674316f), (_43 * 0.07739938050508499f));
  float _68 = select((_44 > 0.040449999272823334f), exp2(log2((_44 * 0.9478672742843628f) + 0.05213269963860512f) * 2.4000000953674316f), (_44 * 0.07739938050508499f));
  float _69 = select((_45 > 0.040449999272823334f), exp2(log2((_45 * 0.9478672742843628f) + 0.05213269963860512f) * 2.4000000953674316f), (_45 * 0.07739938050508499f));

  // float3 output = float3(_67, _68, _69);
  // if (RENODX_TONE_MAP_TYPE != 0 && cb0_010y != 0u) {
  //   output = renodx::color::correct::GammaSafe(output);
  //   output = renodx::color::bt2020::from::BT709(output);
  //   output = renodx::color::pq::EncodeSafe(output, RENODX_GRAPHICS_WHITE_NITS);
  //   return float4(output / 1.05, 0.f);
  // }

  if ((bool)(output_device == 3) || (bool)(output_device == 5)) {
    float _80 = _68 * 1.5f;
    float _81 = _69 * 1.5f;
    float _84 = mad(0.17733481526374817f, _81, mad(0.38297808170318604f, _80, (_67 * 0.659551203250885f)));
    float _87 = mad(0.09676162153482437f, _81, mad(0.8134231567382812f, _80, (_67 * 0.13468848168849945f)));
    float _90 = mad(0.870704174041748f, _81, mad(0.11154405772686005f, _80, (_67 * 0.02631598338484764f)));
    float _91 = log2(cb0_011x);
    float _97 = exp2((saturate((_91 * 0.130824014544487f) + 1.738351821899414f) * 8.5f) + -15.0f);
    float _99 = log2(cb0_011y);
    float _105 = exp2((saturate((_99 * 0.12982377409934998f) + -0.7250609397888184f) * 11.5f) + 6.5f);
    float _107 = log2(_97 * 0.18000000715255737f);
    float _108 = _91 * 0.3010300099849701f;
    float _109 = _107 * 0.07776608318090439f;
    float _111 = 0.48885345458984375f - _109;
    float _121 = log2(_105 * 0.18000000715255737f);
    float _122 = _121 * 0.07776608318090439f;
    float _125 = _121 * 0.3010300099849701f;
    float _126 = _121 * 0.05017166957259178f;
    float _130 = _99 * 0.3010300099849701f;
    float _132 = _130 + (_121 * 0.06020600348711014f);
    float _137 = _132 - (((_126 + 0.12412124872207642f) + _125) * 0.20000000298023224f);
    float _150 = exp2(-2.473931074142456f - cb0_011w);
    _5[0] = _108;
    _5[1] = _108;
    _5[2] = (((0.6812413334846497f - _108) * ((saturate((log2(_97) + 15.0f) * 0.11764705926179886f) * 0.16999998688697815f) + 0.18000000715255737f)) + _108);
    _5[3] = (_109 + 0.8736292719841003f);
    _5[4] = _111;
    _5[5] = _111;
    _6[0] = (0.48885345458984375f - _122);
    _6[1] = (_122 + 0.8736292719841003f);
    _6[2] = (((_130 + -0.6812413334846497f) * ((saturate((log2(_105) + -6.5f) * 0.08695652335882187f) * 0.009999990463256836f) + 0.8899999856948853f)) + 0.6812413334846497f);
    _6[3] = (_132 - (((-0.12412124872207642f - _126) + _125) * 0.20000000298023224f));
    _6[4] = _137;
    _6[5] = _137;
    float _166 = max(max(_84, _87), _90);
    float _171 = (max(_166, 1.000000013351432e-10f) - max(min(min(_84, _87), _90), 1.000000013351432e-10f)) / max(_166, 0.009999999776482582f);
    float _184 = ((_87 + _84) + _90) + (sqrt((((_90 - _87) * _90) + ((_87 - _84) * _87)) + ((_84 - _90) * _84)) * 1.75f);
    float _185 = _184 * 0.3333333432674408f;
    float _186 = _171 + -0.4000000059604645f;
    float _187 = _186 * 5.0f;
    float _191 = max((1.0f - abs(_186 * 2.5f)), 0.0f);
    float _202 = ((float((int)(((int)(uint)((bool)(_187 > 0.0f))) - ((int)(uint)((bool)(_187 < 0.0f))))) * (1.0f - (_191 * _191))) + 1.0f) * 0.02500000037252903f;
    do {
      if (!(_185 <= 0.0533333346247673f)) {
        if (!(_185 >= 0.1599999964237213f)) {
          _211 = (((0.23999999463558197f / _184) + -0.5f) * _202);
        } else {
          _211 = 0.0f;
        }
      } else {
        _211 = _202;
      }
      float _212 = _211 + 1.0f;
      float _213 = _212 * _84;
      float _214 = _212 * _87;
      float _215 = _212 * _90;
      do {
        if (!((bool)(_213 == _214) && (bool)(_214 == _215))) {
          float _222 = ((_213 * 2.0f) - _214) - _215;
          float _225 = ((_87 - _90) * 1.7320507764816284f) * _212;
          float _227 = atan(_225 / _222);
          bool _230 = (_222 < 0.0f);
          bool _231 = (_222 == 0.0f);
          bool _232 = (_225 >= 0.0f);
          bool _233 = (_225 < 0.0f);
          _244 = select((_232 && _231), 90.0f, select((_233 && _231), -90.0f, (select((_233 && _230), (_227 + -3.1415927410125732f), select((_232 && _230), (_227 + 3.1415927410125732f), _227)) * 57.2957763671875f)));
        } else {
          _244 = 0.0f;
        }
        float _249 = min(max(select((_244 < 0.0f), (_244 + 360.0f), _244), 0.0f), 360.0f);
        do {
          if (_249 < -180.0f) {
            _258 = (_249 + 360.0f);
          } else {
            if (_249 > 180.0f) {
              _258 = (_249 + -360.0f);
            } else {
              _258 = _249;
            }
          }
          do {
            if ((bool)(_258 > -67.5f) && (bool)(_258 < 67.5f)) {
              float _264 = (_258 + 67.5f) * 0.029629629105329514f;
              int _265 = int(_264);
              float _267 = _264 - float((int)(_265));
              float _268 = _267 * _267;
              float _269 = _268 * _267;
              if (_265 == 3) {
                _297 = (((0.1666666716337204f - (_267 * 0.5f)) + (_268 * 0.5f)) - (_269 * 0.1666666716337204f));
              } else {
                if (_265 == 2) {
                  _297 = ((0.6666666865348816f - _268) + (_269 * 0.5f));
                } else {
                  if (_265 == 1) {
                    _297 = (((_269 * -0.5f) + 0.1666666716337204f) + ((_268 + _267) * 0.5f));
                  } else {
                    _297 = select((_265 == 0), (_269 * 0.1666666716337204f), 0.0f);
                  }
                }
              }
            } else {
              _297 = 0.0f;
            }
            float _306 = min(max(((((_171 * 0.27000001072883606f) * (0.029999999329447746f - _213)) * _297) + _213), 0.0f), 65535.0f);
            float _307 = min(max(_214, 0.0f), 65535.0f);
            float _308 = min(max(_215, 0.0f), 65535.0f);
            float _321 = min(max(mad(-0.21492856740951538f, _308, mad(-0.2365107536315918f, _307, (_306 * 1.4514392614364624f))), 0.0f), 65504.0f);
            float _322 = min(max(mad(-0.09967592358589172f, _308, mad(1.17622971534729f, _307, (_306 * -0.07655377686023712f))), 0.0f), 65504.0f);
            float _323 = min(max(mad(0.9977163076400757f, _308, mad(-0.006032449658960104f, _307, (_306 * 0.008316148072481155f))), 0.0f), 65504.0f);
            float _324 = dot(float3(_321, _322, _323), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
            float _335 = log2(max((lerp(_324, _321, 0.9599999785423279f)), 1.000000013351432e-10f));
            float _336 = _335 * 0.3010300099849701f;
            float _337 = log2(exp2(_107 - cb0_011z));
            float _338 = _337 * 0.3010300099849701f;
            do {
              if (!(_336 <= _338)) {
                float _342 = log2(_150);
                float _343 = _342 * 0.3010300099849701f;
                if ((bool)(_336 > _338) && (bool)(_336 < _343)) {
                  float _351 = ((_335 - _337) * 0.9030900001525879f) / ((_342 - _337) * 0.3010300099849701f);
                  int _352 = int(_351);
                  float _354 = _351 - float((int)(_352));
                  float _356 = _5[_352];
                  float _359 = _5[(_352 + 1)];
                  float _364 = _356 * 0.5f;
                  _402 = dot(float3((_354 * _354), _354, 1.0f), float3(mad((_5[(_352 + 2)]), 0.5f, mad(_359, -1.0f, _364)), (_359 - _356), mad(_359, 0.5f, _364)));
                } else {
                  if ((bool)(_336 >= _343) && (bool)(_336 < _125)) {
                    float _379 = ((_335 - _342) * 0.9030900001525879f) / ((_121 - _342) * 0.3010300099849701f);
                    int _380 = int(_379);
                    float _382 = _379 - float((int)(_380));
                    float _384 = _6[_380];
                    float _387 = _6[(_380 + 1)];
                    float _392 = _384 * 0.5f;
                    _402 = dot(float3((_382 * _382), _382, 1.0f), float3(mad((_6[(_380 + 2)]), 0.5f, mad(_387, -1.0f, _392)), (_387 - _384), mad(_387, 0.5f, _392)));
                  } else {
                    _402 = (_132 - (_335 * 0.06020600348711014f));
                  }
                }
              } else {
                _402 = _108;
              }
              float _406 = log2(max((lerp(_324, _322, 0.9599999785423279f)), 1.000000013351432e-10f));
              float _407 = _406 * 0.3010300099849701f;
              do {
                if (!(_407 <= _338)) {
                  float _411 = log2(_150);
                  float _412 = _411 * 0.3010300099849701f;
                  if ((bool)(_407 > _338) && (bool)(_407 < _412)) {
                    float _420 = ((_406 - _337) * 0.9030900001525879f) / ((_411 - _337) * 0.3010300099849701f);
                    int _421 = int(_420);
                    float _423 = _420 - float((int)(_421));
                    float _425 = _5[_421];
                    float _428 = _5[(_421 + 1)];
                    float _433 = _425 * 0.5f;
                    _471 = dot(float3((_423 * _423), _423, 1.0f), float3(mad((_5[(_421 + 2)]), 0.5f, mad(_428, -1.0f, _433)), (_428 - _425), mad(_428, 0.5f, _433)));
                  } else {
                    if ((bool)(_407 >= _412) && (bool)(_407 < _125)) {
                      float _448 = ((_406 - _411) * 0.9030900001525879f) / ((_121 - _411) * 0.3010300099849701f);
                      int _449 = int(_448);
                      float _451 = _448 - float((int)(_449));
                      float _453 = _6[_449];
                      float _456 = _6[(_449 + 1)];
                      float _461 = _453 * 0.5f;
                      _471 = dot(float3((_451 * _451), _451, 1.0f), float3(mad((_6[(_449 + 2)]), 0.5f, mad(_456, -1.0f, _461)), (_456 - _453), mad(_456, 0.5f, _461)));
                    } else {
                      _471 = (_132 - (_406 * 0.06020600348711014f));
                    }
                  }
                } else {
                  _471 = _108;
                }
                float _475 = log2(max((lerp(_324, _323, 0.9599999785423279f)), 1.000000013351432e-10f));
                float _476 = _475 * 0.3010300099849701f;
                do {
                  if (!(_476 <= _338)) {
                    float _480 = log2(_150);
                    float _481 = _480 * 0.3010300099849701f;
                    if ((bool)(_476 > _338) && (bool)(_476 < _481)) {
                      float _489 = ((_475 - _337) * 0.9030900001525879f) / ((_480 - _337) * 0.3010300099849701f);
                      int _490 = int(_489);
                      float _492 = _489 - float((int)(_490));
                      float _494 = _5[_490];
                      float _497 = _5[(_490 + 1)];
                      float _502 = _494 * 0.5f;
                      _540 = dot(float3((_492 * _492), _492, 1.0f), float3(mad((_5[(_490 + 2)]), 0.5f, mad(_497, -1.0f, _502)), (_497 - _494), mad(_497, 0.5f, _502)));
                    } else {
                      if ((bool)(_476 >= _481) && (bool)(_476 < _125)) {
                        float _517 = ((_475 - _480) * 0.9030900001525879f) / ((_121 - _480) * 0.3010300099849701f);
                        int _518 = int(_517);
                        float _520 = _517 - float((int)(_518));
                        float _522 = _6[_518];
                        float _525 = _6[(_518 + 1)];
                        float _530 = _522 * 0.5f;
                        _540 = dot(float3((_520 * _520), _520, 1.0f), float3(mad((_6[(_518 + 2)]), 0.5f, mad(_525, -1.0f, _530)), (_525 - _522), mad(_525, 0.5f, _530)));
                      } else {
                        _540 = (_132 - (_475 * 0.06020600348711014f));
                      }
                    }
                  } else {
                    _540 = _108;
                  }
                  float _544 = cb0_011y - cb0_011x;
                  float _545 = (exp2(_402 * 3.321928024291992f) - cb0_011x) / _544;
                  float _547 = (exp2(_471 * 3.321928024291992f) - cb0_011x) / _544;
                  float _549 = (exp2(_540 * 3.321928024291992f) - cb0_011x) / _544;
                  float _552 = mad(0.15618768334388733f, _549, mad(0.13400420546531677f, _547, (_545 * 0.6624541878700256f)));
                  float _555 = mad(0.053689517080783844f, _549, mad(0.6740817427635193f, _547, (_545 * 0.2722287178039551f)));
                  float _558 = mad(1.0103391408920288f, _549, mad(0.00406073359772563f, _547, (_545 * -0.005574649665504694f)));
                  float _571 = min(max(mad(-0.23642469942569733f, _558, mad(-0.32480329275131226f, _555, (_552 * 1.6410233974456787f))), 0.0f), 1.0f);
                  float _572 = min(max(mad(0.016756348311901093f, _558, mad(1.6153316497802734f, _555, (_552 * -0.663662850856781f))), 0.0f), 1.0f);
                  float _573 = min(max(mad(0.9883948564529419f, _558, mad(-0.008284442126750946f, _555, (_552 * 0.011721894145011902f))), 0.0f), 1.0f);
                  float _576 = mad(0.15618768334388733f, _573, mad(0.13400420546531677f, _572, (_571 * 0.6624541878700256f)));
                  float _579 = mad(0.053689517080783844f, _573, mad(0.6740817427635193f, _572, (_571 * 0.2722287178039551f)));
                  float _582 = mad(1.0103391408920288f, _573, mad(0.00406073359772563f, _572, (_571 * -0.005574649665504694f)));
                  float _604 = min(max((min(max(mad(-0.23642469942569733f, _582, mad(-0.32480329275131226f, _579, (_576 * 1.6410233974456787f))), 0.0f), 65535.0f) * cb0_011y), 0.0f), 65535.0f);
                  float _605 = min(max((min(max(mad(0.016756348311901093f, _582, mad(1.6153316497802734f, _579, (_576 * -0.663662850856781f))), 0.0f), 65535.0f) * cb0_011y), 0.0f), 65535.0f);
                  float _606 = min(max((min(max(mad(0.9883948564529419f, _582, mad(-0.008284442126750946f, _579, (_576 * 0.011721894145011902f))), 0.0f), 65535.0f) * cb0_011y), 0.0f), 65535.0f);
                  float _625 = exp2(log2(mad(_36, _606, mad(_35, _605, (_604 * _34))) * 9.999999747378752e-05f) * 0.1593017578125f);
                  float _626 = exp2(log2(mad(_39, _606, mad(_38, _605, (_604 * _37))) * 9.999999747378752e-05f) * 0.1593017578125f);
                  float _627 = exp2(log2(mad(_42, _606, mad(_41, _605, (_604 * _40))) * 9.999999747378752e-05f) * 0.1593017578125f);
                  _1240 = exp2(log2((1.0f / ((_625 * 18.6875f) + 1.0f)) * ((_625 * 18.8515625f) + 0.8359375f)) * 78.84375f);
                  _1241 = exp2(log2((1.0f / ((_626 * 18.6875f) + 1.0f)) * ((_626 * 18.8515625f) + 0.8359375f)) * 78.84375f);
                  _1242 = exp2(log2((1.0f / ((_627 * 18.6875f) + 1.0f)) * ((_627 * 18.8515625f) + 0.8359375f)) * 78.84375f);
                } while (false);
              } while (false);
            } while (false);
          } while (false);
        } while (false);
      } while (false);
    } while (false);
  } else {
    if ((output_device & -3) == 4) {
      float _664 = _68 * 1.5f;
      float _665 = _69 * 1.5f;
      float _668 = mad(0.17733481526374817f, _665, mad(0.38297808170318604f, _664, (_67 * 0.659551203250885f)));
      float _671 = mad(0.09676162153482437f, _665, mad(0.8134231567382812f, _664, (_67 * 0.13468848168849945f)));
      float _674 = mad(0.870704174041748f, _665, mad(0.11154405772686005f, _664, (_67 * 0.02631598338484764f)));
      float _675 = log2(cb0_011x);
      float _681 = exp2((saturate((_675 * 0.130824014544487f) + 1.738351821899414f) * 8.5f) + -15.0f);
      float _683 = log2(cb0_011y);
      float _689 = exp2((saturate((_683 * 0.12982377409934998f) + -0.7250609397888184f) * 11.5f) + 6.5f);
      float _691 = log2(_681 * 0.18000000715255737f);
      float _692 = _675 * 0.3010300099849701f;
      float _693 = _691 * 0.07776608318090439f;
      float _695 = 1.4888534545898438f - _693;
      float _705 = log2(_689 * 0.18000000715255737f);
      float _706 = _705 * 0.07776608318090439f;
      float _709 = _705 * 0.3010300099849701f;
      float _710 = _705 * 0.05017166957259178f;
      float _714 = _683 * 0.3010300099849701f;
      float _716 = _714 + (_705 * 0.06020600348711014f);
      float _721 = _716 - (((_710 + 0.12412124872207642f) + _709) * 0.20000000298023224f);
      float _734 = exp2(-2.473931074142456f - cb0_011w);
      _7[0] = _692;
      _7[1] = _692;
      _7[2] = (((1.6812412738800049f - _692) * ((saturate((log2(_681) + 15.0f) * 0.11764705926179886f) * 0.16999998688697815f) + 0.18000000715255737f)) + _692);
      _7[3] = (_693 + 1.8736293315887451f);
      _7[4] = _695;
      _7[5] = _695;
      _8[0] = (1.4888534545898438f - _706);
      _8[1] = (_706 + 1.8736293315887451f);
      _8[2] = (((_714 + -1.6812412738800049f) * ((saturate((log2(_689) + -6.5f) * 0.08695652335882187f) * 0.009999990463256836f) + 0.8899999856948853f)) + 1.6812412738800049f);
      _8[3] = (_716 - (((-0.12412124872207642f - _710) + _709) * 0.20000000298023224f));
      _8[4] = _721;
      _8[5] = _721;
      float _750 = max(max(_668, _671), _674);
      float _755 = (max(_750, 1.000000013351432e-10f) - max(min(min(_668, _671), _674), 1.000000013351432e-10f)) / max(_750, 0.009999999776482582f);
      float _768 = ((_671 + _668) + _674) + (sqrt((((_674 - _671) * _674) + ((_671 - _668) * _671)) + ((_668 - _674) * _668)) * 1.75f);
      float _769 = _768 * 0.3333333432674408f;
      float _770 = _755 + -0.4000000059604645f;
      float _771 = _770 * 5.0f;
      float _775 = max((1.0f - abs(_770 * 2.5f)), 0.0f);
      float _786 = ((float((int)(((int)(uint)((bool)(_771 > 0.0f))) - ((int)(uint)((bool)(_771 < 0.0f))))) * (1.0f - (_775 * _775))) + 1.0f) * 0.02500000037252903f;
      do {
        if (!(_769 <= 0.0533333346247673f)) {
          if (!(_769 >= 0.1599999964237213f)) {
            _795 = (((0.23999999463558197f / _768) + -0.5f) * _786);
          } else {
            _795 = 0.0f;
          }
        } else {
          _795 = _786;
        }
        float _796 = _795 + 1.0f;
        float _797 = _796 * _668;
        float _798 = _796 * _671;
        float _799 = _796 * _674;
        do {
          if (!((bool)(_797 == _798) && (bool)(_798 == _799))) {
            float _806 = ((_797 * 2.0f) - _798) - _799;
            float _809 = ((_671 - _674) * 1.7320507764816284f) * _796;
            float _811 = atan(_809 / _806);
            bool _814 = (_806 < 0.0f);
            bool _815 = (_806 == 0.0f);
            bool _816 = (_809 >= 0.0f);
            bool _817 = (_809 < 0.0f);
            _828 = select((_816 && _815), 90.0f, select((_817 && _815), -90.0f, (select((_817 && _814), (_811 + -3.1415927410125732f), select((_816 && _814), (_811 + 3.1415927410125732f), _811)) * 57.2957763671875f)));
          } else {
            _828 = 0.0f;
          }
          float _833 = min(max(select((_828 < 0.0f), (_828 + 360.0f), _828), 0.0f), 360.0f);
          do {
            if (_833 < -180.0f) {
              _842 = (_833 + 360.0f);
            } else {
              if (_833 > 180.0f) {
                _842 = (_833 + -360.0f);
              } else {
                _842 = _833;
              }
            }
            do {
              if ((bool)(_842 > -67.5f) && (bool)(_842 < 67.5f)) {
                float _848 = (_842 + 67.5f) * 0.029629629105329514f;
                int _849 = int(_848);
                float _851 = _848 - float((int)(_849));
                float _852 = _851 * _851;
                float _853 = _852 * _851;
                if (_849 == 3) {
                  _881 = (((0.1666666716337204f - (_851 * 0.5f)) + (_852 * 0.5f)) - (_853 * 0.1666666716337204f));
                } else {
                  if (_849 == 2) {
                    _881 = ((0.6666666865348816f - _852) + (_853 * 0.5f));
                  } else {
                    if (_849 == 1) {
                      _881 = (((_853 * -0.5f) + 0.1666666716337204f) + ((_852 + _851) * 0.5f));
                    } else {
                      _881 = select((_849 == 0), (_853 * 0.1666666716337204f), 0.0f);
                    }
                  }
                }
              } else {
                _881 = 0.0f;
              }
              float _890 = min(max(((((_755 * 0.27000001072883606f) * (0.029999999329447746f - _797)) * _881) + _797), 0.0f), 65535.0f);
              float _891 = min(max(_798, 0.0f), 65535.0f);
              float _892 = min(max(_799, 0.0f), 65535.0f);
              float _905 = min(max(mad(-0.21492856740951538f, _892, mad(-0.2365107536315918f, _891, (_890 * 1.4514392614364624f))), 0.0f), 65504.0f);
              float _906 = min(max(mad(-0.09967592358589172f, _892, mad(1.17622971534729f, _891, (_890 * -0.07655377686023712f))), 0.0f), 65504.0f);
              float _907 = min(max(mad(0.9977163076400757f, _892, mad(-0.006032449658960104f, _891, (_890 * 0.008316148072481155f))), 0.0f), 65504.0f);
              float _908 = dot(float3(_905, _906, _907), float3(0.2722287178039551f, 0.6740817427635193f, 0.053689517080783844f));
              float _919 = log2(max((lerp(_908, _905, 0.9599999785423279f)), 1.000000013351432e-10f));
              float _920 = _919 * 0.3010300099849701f;
              float _921 = log2(exp2(_691 - cb0_011z));
              float _922 = _921 * 0.3010300099849701f;
              do {
                if (!(_920 <= _922)) {
                  float _926 = log2(_734);
                  float _927 = _926 * 0.3010300099849701f;
                  if ((bool)(_920 > _922) && (bool)(_920 < _927)) {
                    float _935 = ((_919 - _921) * 0.9030900001525879f) / ((_926 - _921) * 0.3010300099849701f);
                    int _936 = int(_935);
                    float _938 = _935 - float((int)(_936));
                    float _940 = _7[_936];
                    float _943 = _7[(_936 + 1)];
                    float _948 = _940 * 0.5f;
                    _986 = dot(float3((_938 * _938), _938, 1.0f), float3(mad((_7[(_936 + 2)]), 0.5f, mad(_943, -1.0f, _948)), (_943 - _940), mad(_943, 0.5f, _948)));
                  } else {
                    if ((bool)(_920 >= _927) && (bool)(_920 < _709)) {
                      float _963 = ((_919 - _926) * 0.9030900001525879f) / ((_705 - _926) * 0.3010300099849701f);
                      int _964 = int(_963);
                      float _966 = _963 - float((int)(_964));
                      float _968 = _8[_964];
                      float _971 = _8[(_964 + 1)];
                      float _976 = _968 * 0.5f;
                      _986 = dot(float3((_966 * _966), _966, 1.0f), float3(mad((_8[(_964 + 2)]), 0.5f, mad(_971, -1.0f, _976)), (_971 - _968), mad(_971, 0.5f, _976)));
                    } else {
                      _986 = (_716 - (_919 * 0.06020600348711014f));
                    }
                  }
                } else {
                  _986 = _692;
                }
                float _990 = log2(max((lerp(_908, _906, 0.9599999785423279f)), 1.000000013351432e-10f));
                float _991 = _990 * 0.3010300099849701f;
                do {
                  if (!(_991 <= _922)) {
                    float _995 = log2(_734);
                    float _996 = _995 * 0.3010300099849701f;
                    if ((bool)(_991 > _922) && (bool)(_991 < _996)) {
                      float _1004 = ((_990 - _921) * 0.9030900001525879f) / ((_995 - _921) * 0.3010300099849701f);
                      int _1005 = int(_1004);
                      float _1007 = _1004 - float((int)(_1005));
                      float _1009 = _7[_1005];
                      float _1012 = _7[(_1005 + 1)];
                      float _1017 = _1009 * 0.5f;
                      _1055 = dot(float3((_1007 * _1007), _1007, 1.0f), float3(mad((_7[(_1005 + 2)]), 0.5f, mad(_1012, -1.0f, _1017)), (_1012 - _1009), mad(_1012, 0.5f, _1017)));
                    } else {
                      if ((bool)(_991 >= _996) && (bool)(_991 < _709)) {
                        float _1032 = ((_990 - _995) * 0.9030900001525879f) / ((_705 - _995) * 0.3010300099849701f);
                        int _1033 = int(_1032);
                        float _1035 = _1032 - float((int)(_1033));
                        float _1037 = _8[_1033];
                        float _1040 = _8[(_1033 + 1)];
                        float _1045 = _1037 * 0.5f;
                        _1055 = dot(float3((_1035 * _1035), _1035, 1.0f), float3(mad((_8[(_1033 + 2)]), 0.5f, mad(_1040, -1.0f, _1045)), (_1040 - _1037), mad(_1040, 0.5f, _1045)));
                      } else {
                        _1055 = (_716 - (_990 * 0.06020600348711014f));
                      }
                    }
                  } else {
                    _1055 = _692;
                  }
                  float _1059 = log2(max((lerp(_908, _907, 0.9599999785423279f)), 1.000000013351432e-10f));
                  float _1060 = _1059 * 0.3010300099849701f;
                  do {
                    if (!(_1060 <= _922)) {
                      float _1064 = log2(_734);
                      float _1065 = _1064 * 0.3010300099849701f;
                      if ((bool)(_1060 > _922) && (bool)(_1060 < _1065)) {
                        float _1073 = ((_1059 - _921) * 0.9030900001525879f) / ((_1064 - _921) * 0.3010300099849701f);
                        int _1074 = int(_1073);
                        float _1076 = _1073 - float((int)(_1074));
                        float _1078 = _7[_1074];
                        float _1081 = _7[(_1074 + 1)];
                        float _1086 = _1078 * 0.5f;
                        _1124 = dot(float3((_1076 * _1076), _1076, 1.0f), float3(mad((_7[(_1074 + 2)]), 0.5f, mad(_1081, -1.0f, _1086)), (_1081 - _1078), mad(_1081, 0.5f, _1086)));
                      } else {
                        if ((bool)(_1060 >= _1065) && (bool)(_1060 < _709)) {
                          float _1101 = ((_1059 - _1064) * 0.9030900001525879f) / ((_705 - _1064) * 0.3010300099849701f);
                          int _1102 = int(_1101);
                          float _1104 = _1101 - float((int)(_1102));
                          float _1106 = _8[_1102];
                          float _1109 = _8[(_1102 + 1)];
                          float _1114 = _1106 * 0.5f;
                          _1124 = dot(float3((_1104 * _1104), _1104, 1.0f), float3(mad((_8[(_1102 + 2)]), 0.5f, mad(_1109, -1.0f, _1114)), (_1109 - _1106), mad(_1109, 0.5f, _1114)));
                        } else {
                          _1124 = (_716 - (_1059 * 0.06020600348711014f));
                        }
                      }
                    } else {
                      _1124 = _692;
                    }
                    float _1128 = cb0_011y - cb0_011x;
                    float _1129 = (exp2(_986 * 3.321928024291992f) - cb0_011x) / _1128;
                    float _1131 = (exp2(_1055 * 3.321928024291992f) - cb0_011x) / _1128;
                    float _1133 = (exp2(_1124 * 3.321928024291992f) - cb0_011x) / _1128;
                    float _1136 = mad(0.15618768334388733f, _1133, mad(0.13400420546531677f, _1131, (_1129 * 0.6624541878700256f)));
                    float _1139 = mad(0.053689517080783844f, _1133, mad(0.6740817427635193f, _1131, (_1129 * 0.2722287178039551f)));
                    float _1142 = mad(1.0103391408920288f, _1133, mad(0.00406073359772563f, _1131, (_1129 * -0.005574649665504694f)));
                    float _1155 = min(max(mad(-0.23642469942569733f, _1142, mad(-0.32480329275131226f, _1139, (_1136 * 1.6410233974456787f))), 0.0f), 1.0f);
                    float _1156 = min(max(mad(0.016756348311901093f, _1142, mad(1.6153316497802734f, _1139, (_1136 * -0.663662850856781f))), 0.0f), 1.0f);
                    float _1157 = min(max(mad(0.9883948564529419f, _1142, mad(-0.008284442126750946f, _1139, (_1136 * 0.011721894145011902f))), 0.0f), 1.0f);
                    float _1160 = mad(0.15618768334388733f, _1157, mad(0.13400420546531677f, _1156, (_1155 * 0.6624541878700256f)));
                    float _1163 = mad(0.053689517080783844f, _1157, mad(0.6740817427635193f, _1156, (_1155 * 0.2722287178039551f)));
                    float _1166 = mad(1.0103391408920288f, _1157, mad(0.00406073359772563f, _1156, (_1155 * -0.005574649665504694f)));
                    float _1188 = min(max((min(max(mad(-0.23642469942569733f, _1166, mad(-0.32480329275131226f, _1163, (_1160 * 1.6410233974456787f))), 0.0f), 65535.0f) * cb0_011y), 0.0f), 65535.0f);
                    float _1189 = min(max((min(max(mad(0.016756348311901093f, _1166, mad(1.6153316497802734f, _1163, (_1160 * -0.663662850856781f))), 0.0f), 65535.0f) * cb0_011y), 0.0f), 65535.0f);
                    float _1190 = min(max((min(max(mad(0.9883948564529419f, _1166, mad(-0.008284442126750946f, _1163, (_1160 * 0.011721894145011902f))), 0.0f), 65535.0f) * cb0_011y), 0.0f), 65535.0f);
                    float _1209 = exp2(log2(mad(_36, _1190, mad(_35, _1189, (_1188 * _34))) * 9.999999747378752e-05f) * 0.1593017578125f);
                    float _1210 = exp2(log2(mad(_39, _1190, mad(_38, _1189, (_1188 * _37))) * 9.999999747378752e-05f) * 0.1593017578125f);
                    float _1211 = exp2(log2(mad(_42, _1190, mad(_41, _1189, (_1188 * _40))) * 9.999999747378752e-05f) * 0.1593017578125f);
                    _1240 = exp2(log2((1.0f / ((_1209 * 18.6875f) + 1.0f)) * ((_1209 * 18.8515625f) + 0.8359375f)) * 78.84375f);
                    _1241 = exp2(log2((1.0f / ((_1210 * 18.6875f) + 1.0f)) * ((_1210 * 18.8515625f) + 0.8359375f)) * 78.84375f);
                    _1242 = exp2(log2((1.0f / ((_1211 * 18.6875f) + 1.0f)) * ((_1211 * 18.8515625f) + 0.8359375f)) * 78.84375f);
                  } while (false);
                } while (false);
              } while (false);
            } while (false);
          } while (false);
        } while (false);
      } while (false);
    } else {
      _1240 = _11;
      _1241 = _12;
      _1242 = _14;
    }
  }

  output_color = float3(_1240, _1241, _1242);
  SV_Target.x = (output_color.r * 0.9523810148239136f);
  SV_Target.y = (output_color.g * 0.9523810148239136f);
  SV_Target.z = (output_color.b * 0.9523810148239136f);
  SV_Target.w = 0.0f;
  return SV_Target;
}
