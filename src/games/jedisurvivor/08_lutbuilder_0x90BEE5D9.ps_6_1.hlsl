#include "./shared.h"

static const float _35[6] = {-4.0f, -4.0f, -3.1573765277862548828125f, -0.485249996185302734375f, 1.84773242473602294921875f, 1.84773242473602294921875f};
static const float _42[6] = {-0.718548238277435302734375f, 2.0810306072235107421875f, 3.66812419891357421875f, 4.0f, 4.0f, 4.0f};
static const float _54[10] = {-1.69896996021270751953125f, -1.69896996021270751953125f, -1.477900028228759765625f, -1.2290999889373779296875f, -0.864799976348876953125f, -0.448000013828277587890625f, 0.0051799998618662357330322265625f, 0.451108038425445556640625f, 0.91137444972991943359375f, 0.91137444972991943359375f};
static const float _66[10] = {0.51543867588043212890625f, 0.8470437526702880859375f, 1.13580000400543212890625f, 1.38020002841949462890625f, 1.51970005035400390625f, 1.5985000133514404296875f, 1.64670002460479736328125f, 1.67460918426513671875f, 1.687873363494873046875f, 1.687873363494873046875f};

cbuffer _14_16 : register(b0, space0) {
  float4 _16_m0[69] : packoffset(c0);
};

Texture2D<float4> _8 : register(t0, space0);  // SDR LUT 1
Texture2D<float4> _9 : register(t1, space0);  // SDR LUT 2
SamplerState _19 : register(s0, space0);

static uint gl_Layer;
static float2 TEXCOORD;
static float4 SV_Target;

struct SPIRV_Cross_Input {
  noperspective float2 TEXCOORD : TEXCOORD0;
  noperspective float4 gl_FragCoord : SV_Position;
  uint gl_Layer : SV_RenderTargetArrayIndex;
};

struct SPIRV_Cross_Output {
  float4 SV_Target : SV_Target0;
};

/** Values of DIM_OUTPUT_DEVICE (matching C++'s EDisplayOutputFormat) */
#define TONEMAPPER_OUTPUT_sRGB                 0
#define TONEMAPPER_OUTPUT_Rec709               1
#define TONEMAPPER_OUTPUT_ExplicitGammaMapping 2
#define TONEMAPPER_OUTPUT_ACES1000nitST2084    3
#define TONEMAPPER_OUTPUT_ACES2000nitST2084    4
#define TONEMAPPER_OUTPUT_ACES1000nitScRGB     5
#define TONEMAPPER_OUTPUT_ACES2000nitScRGB     6
#define TONEMAPPER_OUTPUT_LinearEXR            7
#define TONEMAPPER_OUTPUT_NoToneCurve          8
#define TONEMAPPER_OUTPUT_WithToneCurve        9

/** Values of DIM_OUTPUT_DEVICE (matching C++'s EDisplayColorGamut) */
#define TONEMAPPER_GAMUT_sRGB_D65    0
#define TONEMAPPER_GAMUT_DCIP3_D65   1
#define TONEMAPPER_GAMUT_Rec2020_D65 2
#define TONEMAPPER_GAMUT_ACES_D60    3
#define TONEMAPPER_GAMUT_ACEScg_D60  4

void frag_main() {
  float3 testColor = float3(1, 1, 1);

  float _84 = TEXCOORD.x + (-0.015625f);
  float _86 = TEXCOORD.y + (-0.015625f);
  float _90 = float(uint(gl_Layer));
  uint4 _98 = asuint(_16_m0[68u]);  // uint4(3,2)
  uint _99 = _98.y;                 // 2
  // OuputGamutMappingMatrix
  float _102;
  float _107;
  float _112;
  float _117;
  float _122;
  float _127;
  float _132;
  float _137;
  float _142;
  if (_99 == 1u)  // P3_D65
  {
    _102 = 1.37915885448455810546875f;
    _107 = -0.308850705623626708984375f;
    _112 = -0.070346772670745849609375f;
    _117 = -0.069335289299488067626953125f;
    _122 = 1.08229219913482666015625f;
    _127 = -0.0129620470106601715087890625f;
    _132 = -0.002159259282052516937255859375f;
    _137 = -0.0454653911292552947998046875f;
    _142 = 1.04775965213775634765625f;
  } else {
    float frontier_phi_1_2_ladder;
    float frontier_phi_1_2_ladder_1;
    float frontier_phi_1_2_ladder_2;
    float frontier_phi_1_2_ladder_3;
    float frontier_phi_1_2_ladder_4;
    float frontier_phi_1_2_ladder_5;
    float frontier_phi_1_2_ladder_6;
    float frontier_phi_1_2_ladder_7;
    float frontier_phi_1_2_ladder_8;
    if (_99 == 2u)  // BT2020 true (AP1D60 => BT2020D65)
    {
      frontier_phi_1_2_ladder = 1.03044021129608154296875f;
      frontier_phi_1_2_ladder_1 = -0.02529338560998439788818359375f;
      frontier_phi_1_2_ladder_2 = -0.00501400418579578399658203125f;
      frontier_phi_1_2_ladder_3 = -0.00235230661928653717041015625f;
      frontier_phi_1_2_ladder_4 = 1.00458252429962158203125f;
      frontier_phi_1_2_ladder_5 = -0.002235011197626590728759765625f;
      frontier_phi_1_2_ladder_6 = -0.0057713985443115234375f;
      frontier_phi_1_2_ladder_7 = -0.0200525037944316864013671875f;
      frontier_phi_1_2_ladder_8 = 1.025799274444580078125f;
    } else {
      float frontier_phi_1_2_ladder_5_ladder;
      float frontier_phi_1_2_ladder_5_ladder_1;
      float frontier_phi_1_2_ladder_5_ladder_2;
      float frontier_phi_1_2_ladder_5_ladder_3;
      float frontier_phi_1_2_ladder_5_ladder_4;
      float frontier_phi_1_2_ladder_5_ladder_5;
      float frontier_phi_1_2_ladder_5_ladder_6;
      float frontier_phi_1_2_ladder_5_ladder_7;
      float frontier_phi_1_2_ladder_5_ladder_8;
      if (_99 == 3u) {  // AP1 => AP0
        frontier_phi_1_2_ladder_5_ladder = 1.00150072574615478515625f;
        frontier_phi_1_2_ladder_5_ladder_1 = 0.0040252101607620716094970703125f;
        frontier_phi_1_2_ladder_5_ladder_2 = -0.0055258828215301036834716796875f;
        frontier_phi_1_2_ladder_5_ladder_3 = 0.095534317195415496826171875f;
        frontier_phi_1_2_ladder_5_ladder_4 = 0.859671115875244140625f;
        frontier_phi_1_2_ladder_5_ladder_5 = 0.0447945632040500640869140625f;
        frontier_phi_1_2_ladder_5_ladder_6 = 0.16386906802654266357421875f;
        frontier_phi_1_2_ladder_5_ladder_7 = 0.140678703784942626953125f;
        frontier_phi_1_2_ladder_5_ladder_8 = 0.695452213287353515625f;
      } else {
        bool _536 = _99 == 4u;
        frontier_phi_1_2_ladder_5_ladder = _536 ? 1.0f : 1.15297186374664306640625f;
        frontier_phi_1_2_ladder_5_ladder_1 = _536 ? 0.0f : (-0.12896876037120819091796875f);
        frontier_phi_1_2_ladder_5_ladder_2 = _536 ? 0.0f : (-0.0240032784640789031982421875f);
        frontier_phi_1_2_ladder_5_ladder_3 = _536 ? 0.0f : (-0.0105485282838344573974609375f);
        frontier_phi_1_2_ladder_5_ladder_4 = _536 ? 1.0f : 1.14080274105072021484375f;
        frontier_phi_1_2_ladder_5_ladder_5 = _536 ? 0.0f : (-0.130257189273834228515625f);
        frontier_phi_1_2_ladder_5_ladder_6 = _536 ? 0.0f : (-0.0832584798336029052734375f);
        frontier_phi_1_2_ladder_5_ladder_7 = _536 ? 0.0f : (-0.621790587902069091796875f);
        frontier_phi_1_2_ladder_5_ladder_8 = _536 ? 1.0f : 1.70505154132843017578125f;
      }
      frontier_phi_1_2_ladder = frontier_phi_1_2_ladder_5_ladder;
      frontier_phi_1_2_ladder_1 = frontier_phi_1_2_ladder_5_ladder_1;
      frontier_phi_1_2_ladder_2 = frontier_phi_1_2_ladder_5_ladder_2;
      frontier_phi_1_2_ladder_3 = frontier_phi_1_2_ladder_5_ladder_3;
      frontier_phi_1_2_ladder_4 = frontier_phi_1_2_ladder_5_ladder_4;
      frontier_phi_1_2_ladder_5 = frontier_phi_1_2_ladder_5_ladder_5;
      frontier_phi_1_2_ladder_6 = frontier_phi_1_2_ladder_5_ladder_6;
      frontier_phi_1_2_ladder_7 = frontier_phi_1_2_ladder_5_ladder_7;
      frontier_phi_1_2_ladder_8 = frontier_phi_1_2_ladder_5_ladder_8;
    }
    _102 = frontier_phi_1_2_ladder_8;
    _107 = frontier_phi_1_2_ladder_7;
    _112 = frontier_phi_1_2_ladder_6;
    _117 = frontier_phi_1_2_ladder_5;
    _122 = frontier_phi_1_2_ladder_4;
    _127 = frontier_phi_1_2_ladder_3;
    _132 = frontier_phi_1_2_ladder_2;
    _137 = frontier_phi_1_2_ladder_1;
    _142 = frontier_phi_1_2_ladder;
  }

  float _217;
  float _218;
  float _219;
  if (_98.x > 2u) {  // TONEMAPPER_OUTPUT_ACES1000nitST2084 (true 3)
    float _159 = exp2(log2(_84 * 1.03225803375244140625f) * 0.0126833133399486541748046875f);
    float _160 = exp2(log2(_86 * 1.03225803375244140625f) * 0.0126833133399486541748046875f);
    float _161 = exp2(log2(_90 * 0.0322580635547637939453125f) * 0.0126833133399486541748046875f);
    _217 = exp2(log2(max(0.0f, _159 + (-0.8359375f)) / (18.8515625f - (_159 * 18.6875f))) * 6.277394771575927734375f) * 100.0f;
    _218 = exp2(log2(max(0.0f, _160 + (-0.8359375f)) / (18.8515625f - (_160 * 18.6875f))) * 6.277394771575927734375f) * 100.0f;
    _219 = exp2(log2(max(0.0f, _161 + (-0.8359375f)) / (18.8515625f - (_161 * 18.6875f))) * 6.277394771575927734375f) * 100.0f;
  } else {
    _217 = (exp2((_84 * 14.4516124725341796875f) + (-6.0762462615966796875f)) * 0.180000007152557373046875f) + (-0.00266771926544606685638427734375f);
    _218 = (exp2((_86 * 14.4516124725341796875f) + (-6.0762462615966796875f)) * 0.180000007152557373046875f) + (-0.00266771926544606685638427734375f);
    _219 = (exp2((_90 * 0.451612889766693115234375f) + (-6.0762462615966796875f)) * 0.180000007152557373046875f) + (-0.00266771926544606685638427734375f);
  }

  // White Balance
  // _16_m0[41u].z = 6500
  // _16_m0[41u].w = -0.075
  // D_IlluminantChromaticity
  // PlanckianLocusChromaticity
  float _224 = _16_m0[41u].z * 1.00055634975433349609375f;
  float _248 = (_224 <= 7000.0f)
                   ? (((((2967800.0f - (4604438528.0f / _16_m0[41u].z)) / _224) + 99.1100006103515625f) / _224) + 0.24406300485134124755859375f)
                   : (((((1901800.0f - (2005284352.0f / _16_m0[41u].z)) / _224) + 247.4799957275390625f) / _224) + 0.23703999817371368408203125f);
  float _271 = ((((_16_m0[41u].z * 1.2864121856637211749330163002014e-07f) + 0.00015411825734190642833709716796875f) * _16_m0[41u].z) + 0.860117733478546142578125f)
               / ((((_16_m0[41u].z * 7.0814513719597016461193561553955e-07f) + 0.0008424202096648514270782470703125f) * _16_m0[41u].z) + 1.0f);
  float _286 = ((((_16_m0[41u].z * 4.2048167614439080352894961833954e-08f) + 4.2280626075807958841323852539062e-05f) * _16_m0[41u].z) + 0.317398726940155029296875f)
               / ((1.0f - (_16_m0[41u].z * 2.8974181986995972692966461181641e-05f)) + ((_16_m0[41u].z * _16_m0[41u].z) * 1.6145605741257895715534687042236e-07f));
  float _293 = ((_271 * 2.0f) + 4.0f) - (_286 * 8.0f);
  float _294 = (_271 * 3.0f) / _293;
  float _296 = (_286 * 2.0f) / _293;
  bool _297 = _16_m0[41u].z < 4000.0f;
  float _305 = rsqrt(dot(float2(_271, _286), float2(_271, _286)));
  float _306 = _16_m0[41u].w * 0.0500000007450580596923828125f;
  float _310 = _271 - ((_306 * _286) * _305);
  float _313 = ((_306 * _271) * _305) + _286;
  float _318 = (4.0f - (_313 * 8.0f)) + (_310 * 2.0f);
  float _324 = (((_310 * 3.0f) / _318) - _294)
               + (_297 ? _294 : _248);
  float _325 = (((_313 * 2.0f) / _318) - _296)
               + (_297 ? _296 : (((_248 * 2.86999988555908203125f) + (-0.2750000059604644775390625f)) - ((_248 * _248) * 3.0f)));
  float _326 = max(_325, 1.0000000133514319600180897396058e-10f);
  float _328 = _324 / _326;
  float _331 = ((1.0f - _324) - _325) / _326;
  // Chromatic Adaptation Bradford ConeResponse
  float _350 = 0.941379249095916748046875f / mad(-0.16140000522136688232421875f, _331, (_328 * 0.89509999752044677734375f) + 0.2664000093936920166015625f);
  float _352 = 1.04043638706207275390625f / mad(0.0366999991238117218017578125f, _331, 1.71350002288818359375f - (_328 * 0.750199973583221435546875f));
  float _354 = 1.08976650238037109375f / mad(1.02960002422332763671875f, _331, (_328 * 0.0388999991118907928466796875f) + (-0.06849999725818634033203125f));
  float _356 = mad(_352, -0.750199973583221435546875f, 0.0f);
  float _358 = mad(_352, 1.71350002288818359375f, 0.0f);
  float _359 = mad(_352, 0.0366999991238117218017578125f, -0.0f);
  float _361 = mad(_354, 0.0388999991118907928466796875f, 0.0f);
  float _362 = mad(_354, -0.06849999725818634033203125f, 0.0f);
  float _363 = mad(_354, 1.02960002422332763671875f, 0.0f);

  float _368 = mad(0.15996269881725311279296875f, _361, mad(-0.14705429971218109130859375f, _356, _350 * 0.883457362651824951171875f));
  float _373 = mad(0.15996269881725311279296875f, _362, mad(-0.14705429971218109130859375f, _358, _350 * 0.2629349231719970703125f));
  float _377 = mad(0.15996269881725311279296875f, _363, mad(-0.14705429971218109130859375f, _359, _350 * (-0.1593006551265716552734375f)));
  float _382 = mad(0.049291200935840606689453125f, _361, mad(0.518360316753387451171875f, _356, _350 * 0.3869564831256866455078125f));
  float _387 = mad(0.049291200935840606689453125f, _362, mad(0.518360316753387451171875f, _358, _350 * 0.115166135132312774658203125f));
  float _391 = mad(0.049291200935840606689453125f, _363, mad(0.518360316753387451171875f, _359, _350 * (-0.06977407634258270263671875f)));
  float _396 = mad(0.968486726284027099609375f, _361, mad(0.0400427989661693572998046875f, _356, _350 * (-0.0076340395025908946990966796875f)));
  float _401 = mad(0.968486726284027099609375f, _362, mad(0.0400427989661693572998046875f, _358, _350 * (-0.0022720457054674625396728515625f)));
  float _405 = mad(0.968486726284027099609375f, _363, mad(0.0400427989661693572998046875f, _359, _350 * 0.00137653225101530551910400390625f));
  float _410 = mad(_377, 0.01933390088379383087158203125f, mad(_373, 0.21267290413379669189453125f, _368 * 0.41245639324188232421875f));
  float _416 = mad(_377, 0.119191996753215789794921875f, mad(_373, 0.715152204036712646484375f, _368 * 0.3575761020183563232421875f));
  float _422 = mad(_377, 0.950304090976715087890625f, mad(_373, 0.072175003588199615478515625f, _368 * 0.180437505245208740234375f));
  float _426 = mad(_391, 0.01933390088379383087158203125f, mad(_387, 0.21267290413379669189453125f, _382 * 0.41245639324188232421875f));
  float _429 = mad(_391, 0.119191996753215789794921875f, mad(_387, 0.715152204036712646484375f, _382 * 0.3575761020183563232421875f));
  float _432 = mad(_391, 0.950304090976715087890625f, mad(_387, 0.072175003588199615478515625f, _382 * 0.180437505245208740234375f));
  float _435 = mad(_405, 0.01933390088379383087158203125f, mad(_401, 0.21267290413379669189453125f, _396 * 0.41245639324188232421875f));
  float _438 = mad(_405, 0.119191996753215789794921875f, mad(_401, 0.715152204036712646484375f, _396 * 0.3575761020183563232421875f));
  float _441 = mad(_405, 0.950304090976715087890625f, mad(_401, 0.072175003588199615478515625f, _396 * 0.180437505245208740234375f));
  float _480 = mad(mad(-0.4986107647418975830078125f, _441, mad(-1.53738319873809814453125f, _432, _422 * 3.2409698963165283203125f)), _219, mad(mad(-0.4986107647418975830078125f, _438, mad(-1.53738319873809814453125f, _429, _416 * 3.2409698963165283203125f)), _218, mad(-0.4986107647418975830078125f, _435, mad(-1.53738319873809814453125f, _426, _410 * 3.2409698963165283203125f)) * _217));
  float _483 = mad(mad(0.0415550582110881805419921875f, _441, mad(1.875967502593994140625f, _432, _422 * (-0.96924364566802978515625f))), _219, mad(mad(0.0415550582110881805419921875f, _438, mad(1.875967502593994140625f, _429, _416 * (-0.96924364566802978515625f))), _218, mad(0.0415550582110881805419921875f, _435, mad(1.875967502593994140625f, _426, _410 * (-0.96924364566802978515625f))) * _217));
  float _486 = mad(mad(1.05697154998779296875f, _441, mad(-0.2039769589900970458984375f, _432, _422 * 0.055630080401897430419921875f)), _219, mad(mad(1.05697154998779296875f, _438, mad(-0.2039769589900970458984375f, _429, _416 * 0.055630080401897430419921875f)), _218, mad(1.05697154998779296875f, _435, mad(-0.2039769589900970458984375f, _426, _410 * 0.055630080401897430419921875f)) * _217));

  testColor = float3(_480, _483, _486);

  float3 untonemapped = float3(_480, _483, _486);

  // SRGB => AP1 (with Bradford)
  float _491 = mad(0.0473663508892059326171875f, _486, mad(0.3395121395587921142578125f, _483, _480 * 0.613191545009613037109375f));
  float _497 = mad(0.013450006954371929168701171875f, _486, mad(0.916335761547088623046875f, _483, _480 * 0.070206917822360992431640625f));
  float _503 = mad(0.869606792926788330078125f, _486, mad(0.10956729948520660400390625f, _483, _480 * 0.02061887271702289581298828125f));

  // AP1 => ARRI Wide Gamut (with Bradford)
  float _509 = mad(0.05743134021759033203125f, _503, mad(-0.096242554485797882080078125f, _497, _491 * 1.03881204128265380859375f));
  float _515 = mad(0.1847389042377471923828125f, _503, mad(0.859861314296722412109375f, _497, _491 * (-0.044603057205677032470703125f)));
  float _521 = mad(0.958378970623016357421875f, _503, mad(0.0513990223407745361328125f, _497, _491 * (-0.0097798742353916168212890625f)));

  // Alexa Wide Gamut Y
  float _523 = dot(float3(_509, _515, _521), float3(0.2919540107250213623046875f, 0.82384097576141357421875f, -0.11579500138759613037109375f));

  // Encode to Arri C800 (broken?)
  // spec: (x > cut) ? c * log10(a * x + b) + d : e * x + f
  // current: c * ((a * x + b) > 0.11111f ? log(a * x + b) : (x * 21.7142 - 1.18422)) + d;
  static const float ARRI_C800_CUT = 0.010591f;
  static const float ARRI_C800_A = 5.555556f;
  static const float ARRI_C800_B = 0.052272f;
  static const float ARRI_C800_C = 0.247190f;
  static const float ARRI_C800_D = 0.385537f;
  static const float ARRI_C800_E = 5.367655f;
  static const float ARRI_C800_F = 0.092809f;

  // 0.3010300099849700927734375f = log10(2)
  float _532 = (_509 * 5.555554866790771484375f) + 0.05227227509021759033203125f;  // a * x + b
  float _554;
  if (_532 > 0.111111111938953399658203125f) {
    // _554 = log10(_532)
    _554 = log2(_532) * 0.3010300099849700927734375f;
  } else {
    _554 = (_509 * 21.7147216796875f) + (-1.1842229366302490234375f);  //
  }
  float _557 = (_554 * 0.24718964099884033203125f) + 0.3855369985103607177734375f;  // * c + d

  float _560 = (_515 * 5.555554866790771484375f) + 0.05227227509021759033203125f;
  float _566;
  if (_560 > 0.111111111938953399658203125f) {
    _566 = log2(_560) * 0.3010300099849700927734375f;
  } else {
    _566 = (_515 * 21.7147216796875f) + (-1.1842229366302490234375f);
  }
  float _568 = (_566 * 0.24718964099884033203125f) + 0.3855369985103607177734375f;

  float _570 = (_521 * 5.555554866790771484375f) + 0.05227227509021759033203125f;
  float _576;
  if (_570 > 0.111111111938953399658203125f) {
    _576 = log2(_570) * 0.3010300099849700927734375f;
  } else {
    _576 = (_521 * 21.7147216796875f) + (-1.1842229366302490234375f);
  }
  float _578 = (_576 * 0.24718964099884033203125f) + 0.3855369985103607177734375f;
  float _629;
  float _630;
  float _631;

  if (_16_m0[67u].x != 0.0f) {
    float _589 = (_16_m0[67u].x + (-1.0f)) / _16_m0[67u].x;
    float _593 = 0.5f / _16_m0[67u].x;
    float _596 = (_589 * clamp(_568, 0.0f, 1.0f)) + _593;
    float _598 = ((_589 * clamp(_578, 0.0f, 1.0f)) + _593) * _16_m0[67u].x;
    float _601 = floor(_598 + (-0.5f));
    float _603 = ((-0.5f) - _601) + _598;
    float _604 = ((_589 * clamp(_557, 0.0f, 1.0f)) + _593) + _601;
    float4 _608 = _8.Sample(_19, float2(_604 / _16_m0[67u].x, _596));
    float _610 = _608.x;
    float _611 = _608.y;
    float _612 = _608.z;
    float4 _615 = _8.Sample(_19, float2((_604 + 1.0f) / _16_m0[67u].x, _596));
    _629 = ((_615.x - _610) * _603) + _610;
    _630 = ((_615.y - _611) * _603) + _611;
    _631 = ((_615.z - _612) * _603) + _612;
  } else {
    _629 = _557;
    _630 = _568;
    _631 = _578;
  }

  // testColor = float3(_557, _568, _578);
  // testColor = renodx::color::bt2020::from::BT709(testColor);
  // testColor = float3(_629, _630, _631);

  // XYZ_2_ALEXA Wide Gamut RGB
  float _636 = mad(-0.20007599890232086181640625f, _523, mad(-0.482533991336822509765625f, _523, _523 * 1.78906595706939697265625f));
  float _642 = mad(0.19443200528621673583984375f, _523, mad(1.396399974822998046875f, _523, _523 * (-0.639849007129669189453125f)));
  float _648 = mad(0.87886798381805419921875f, _523, mad(0.082335002720355987548828125f, _523, _523 * (-0.0415319986641407012939453125f)));

  // Encode to Arri C800 (broken?)
  float _651 = (_636 * 5.555554866790771484375f) + 0.05227227509021759033203125f;
  float _657;
  if (_651 > 0.111111111938953399658203125f) {
    _657 = log2(_651) * 0.3010300099849700927734375f;
  } else {
    _657 = (_636 * 21.7147216796875f) + (-1.1842229366302490234375f);
  }
  float _659 = (_657 * 0.24718964099884033203125f) + 0.3855369985103607177734375f;

  float _661 = (_642 * 5.555554866790771484375f) + 0.05227227509021759033203125f;
  float _667;
  if (_661 > 0.111111111938953399658203125f) {
    _667 = log2(_661) * 0.3010300099849700927734375f;
  } else {
    _667 = (_642 * 21.7147216796875f) + (-1.1842229366302490234375f);
  }
  float _669 = (_667 * 0.24718964099884033203125f) + 0.3855369985103607177734375f;
  float _671 = (_648 * 5.555554866790771484375f) + 0.05227227509021759033203125f;
  float _677;
  if (_671 > 0.111111111938953399658203125f) {
    _677 = log2(_671) * 0.3010300099849700927734375f;
  } else {
    _677 = (_648 * 21.7147216796875f) + (-1.1842229366302490234375f);
  }
  float _679 = (_677 * 0.24718964099884033203125f) + 0.3855369985103607177734375f;

  float _697 = _16_m0[47u].w + _16_m0[53u].w;  // 0 + 0
  float _715 = _16_m0[46u].w * _16_m0[52u].w;  // 1 * 1
  float _733 = _16_m0[45u].w * _16_m0[51u].w;  // 0.95 * 1
  float _751 = _16_m0[44u].w * _16_m0[50u].w;  // 1.03 * 1
  float _769 = _16_m0[43u].w * _16_m0[49u].w;  // 1.03 * 1
  float _784 = _16_m0[42u].w * _16_m0[48u].w;  // 1 * 1
  float _785 = _629 - _659;                    // lut_out_linear - lut_out_log r
  float _786 = _630 - _669;                    // lut_out_linear - lut_out_log g
  float _787 = _631 - _679;                    // lut_out_linear - lut_out_log b
  float _837 = (_16_m0[44u].x * _16_m0[50u].x) * _751;
  float _838 = (_16_m0[44u].y * _16_m0[50u].y) * _751;
  float _839 = (_16_m0[44u].z * _16_m0[50u].z) * _751;
  float _869 = clamp(_523 / _16_m0[66u].x, 0.0f, 1.0f);
  float _873 = (_869 * _869) * (3.0f - (_869 * 2.0f));
  float _874 = 1.0f - _873;
  float _885 = _16_m0[47u].w + _16_m0[65u].w;
  float _896 = _16_m0[46u].w * _16_m0[64u].w;
  float _907 = _16_m0[45u].w * _16_m0[63u].w;
  float _918 = _16_m0[44u].w * _16_m0[62u].w;
  float _929 = _16_m0[43u].w * _16_m0[61u].w;
  float _937 = _16_m0[42u].w * _16_m0[60u].w;
  float _986 = (_16_m0[44u].x * _16_m0[62u].x) * _918;
  float _987 = (_16_m0[44u].y * _16_m0[62u].y) * _918;
  float _988 = (_16_m0[44u].z * _16_m0[62u].z) * _918;
  float _1017 = clamp((_523 - _16_m0[66u].y) / (1.0f - _16_m0[66u].y), 0.0f, 1.0f);
  float _1021 = (_1017 * _1017) * (3.0f - (_1017 * 2.0f));
  float _1032 = _16_m0[47u].w + _16_m0[59u].w;
  float _1043 = _16_m0[46u].w * _16_m0[58u].w;
  float _1054 = _16_m0[45u].w * _16_m0[57u].w;
  float _1065 = _16_m0[44u].w * _16_m0[56u].w;
  float _1076 = _16_m0[43u].w * _16_m0[55u].w;
  float _1084 = _16_m0[42u].w * _16_m0[54u].w;
  float _1133 = (_16_m0[44u].x * _16_m0[56u].x) * _1065;
  float _1134 = (_16_m0[44u].y * _16_m0[56u].y) * _1065;
  float _1135 = (_16_m0[44u].z * _16_m0[56u].z) * _1065;
  float _1160 = _873 - _1021;
  float _1161 = _874 * (((_16_m0[47u].x + _16_m0[53u].x) + _697) + (((_16_m0[46u].x * _16_m0[52u].x) * _715) * ((_837 + (-1.0f)) + (exp2(log2(exp2(((_16_m0[43u].x * _16_m0[49u].x) * _769) * log2(max(0.0f, (((_16_m0[48u].x * _785) * _16_m0[42u].x) * _784) + _659) * 5.5555553436279296875f)) * 0.180000007152557373046875f) * (1.0f / ((_16_m0[45u].x * _16_m0[51u].x) * _733))) * (2.0f - _837)))));
  float _1162 = _874 * (((_16_m0[47u].y + _16_m0[53u].y) + _697) + (((_16_m0[46u].y * _16_m0[52u].y) * _715) * ((_838 + (-1.0f)) + (exp2(log2(exp2(((_16_m0[43u].y * _16_m0[49u].y) * _769) * log2(max(0.0f, (((_16_m0[48u].y * _786) * _16_m0[42u].y) * _784) + _669) * 5.5555553436279296875f)) * 0.180000007152557373046875f) * (1.0f / ((_16_m0[45u].y * _16_m0[51u].y) * _733))) * (2.0f - _838)))));
  float _1163 = _874 * (((_16_m0[47u].z + _16_m0[53u].z) + _697) + (((_16_m0[46u].z * _16_m0[52u].z) * _715) * ((_839 + (-1.0f)) + (exp2(log2(exp2(((_16_m0[43u].z * _16_m0[49u].z) * _769) * log2(max(0.0f, (((_16_m0[48u].z * _787) * _16_m0[42u].z) * _784) + _679) * 5.5555553436279296875f)) * 0.180000007152557373046875f) * (1.0f / ((_16_m0[45u].z * _16_m0[51u].z) * _733))) * (2.0f - _839)))));
  float _1164 = (((_16_m0[47u].x + _16_m0[59u].x) + _1032) + (((_16_m0[46u].x * _16_m0[58u].x) * _1043) * ((_1133 + (-1.0f)) + (exp2(log2(exp2(((_16_m0[43u].x * _16_m0[55u].x) * _1076) * log2(max(0.0f, (((_16_m0[54u].x * _785) * _16_m0[42u].x) * _1084) + _659) * 5.5555553436279296875f)) * 0.180000007152557373046875f) * (1.0f / ((_16_m0[45u].x * _16_m0[57u].x) * _1054))) * (2.0f - _1133))))) * _1160;
  float _1165 = (((_16_m0[47u].y + _16_m0[59u].y) + _1032) + (((_16_m0[46u].y * _16_m0[58u].y) * _1043) * ((_1134 + (-1.0f)) + (exp2(log2(exp2(((_16_m0[43u].y * _16_m0[55u].y) * _1076) * log2(max(0.0f, (((_16_m0[54u].y * _786) * _16_m0[42u].y) * _1084) + _669) * 5.5555553436279296875f)) * 0.180000007152557373046875f) * (1.0f / ((_16_m0[45u].y * _16_m0[57u].y) * _1054))) * (2.0f - _1134))))) * _1160;
  float _1166 = (((_16_m0[47u].z + _16_m0[59u].z) + _1032) + (((_16_m0[46u].z * _16_m0[58u].z) * _1043) * ((_1135 + (-1.0f)) + (exp2(log2(exp2(((_16_m0[43u].z * _16_m0[55u].z) * _1076) * log2(max(0.0f, (((_16_m0[54u].z * _787) * _16_m0[42u].z) * _1084) + _679) * 5.5555553436279296875f)) * 0.180000007152557373046875f) * (1.0f / ((_16_m0[45u].z * _16_m0[57u].z) * _1054))) * (2.0f - _1135))))) * _1160;
  float _1167 = _1021 * (((_16_m0[47u].x + _16_m0[65u].x) + _885) + (((_16_m0[46u].x * _16_m0[64u].x) * _896) * ((_986 + (-1.0f)) + (exp2(log2(exp2(((_16_m0[43u].x * _16_m0[61u].x) * _929) * log2(max(0.0f, (((_16_m0[60u].x * _785) * _16_m0[42u].x) * _937) + _659) * 5.5555553436279296875f)) * 0.180000007152557373046875f) * (1.0f / ((_16_m0[45u].x * _16_m0[63u].x) * _907))) * (2.0f - _986)))));
  float _1168 = _1021 * (((_16_m0[47u].y + _16_m0[65u].y) + _885) + (((_16_m0[46u].y * _16_m0[64u].y) * _896) * ((_987 + (-1.0f)) + (exp2(log2(exp2(((_16_m0[43u].y * _16_m0[61u].y) * _929) * log2(max(0.0f, (((_16_m0[60u].y * _786) * _16_m0[42u].y) * _937) + _669) * 5.5555553436279296875f)) * 0.180000007152557373046875f) * (1.0f / ((_16_m0[45u].y * _16_m0[63u].y) * _907))) * (2.0f - _987)))));
  float _1169 = _1021 * (((_16_m0[47u].z + _16_m0[65u].z) + _885) + (((_16_m0[46u].z * _16_m0[64u].z) * _896) * ((_988 + (-1.0f)) + (exp2(log2(exp2(((_16_m0[43u].z * _16_m0[61u].z) * _929) * log2(max(0.0f, (((_16_m0[60u].z * _787) * _16_m0[42u].z) * _937) + _679) * 5.5555553436279296875f)) * 0.180000007152557373046875f) * (1.0f / ((_16_m0[45u].z * _16_m0[63u].z) * _907))) * (2.0f - _988)))));
  float _1171 = (_1167 + _1161) + _1164;
  float _1173 = (_1168 + _1162) + _1165;
  float _1175 = (_1169 + _1163) + _1166;
  float _1221;
  float _1222;
  float _1223;
  if (_16_m0[67u].y != 0.0f) {
    float _1184 = (_16_m0[67u].y + (-1.0f)) / _16_m0[67u].y;
    float _1188 = 0.5f / _16_m0[67u].y;
    float _1190 = (_1184 * clamp(_1173, 0.0f, 1.0f)) + _1188;
    float _1192 = ((_1184 * clamp(_1175, 0.0f, 1.0f)) + _1188) * _16_m0[67u].y;
    float _1194 = floor(_1192 + (-0.5f));
    float _1196 = ((-0.5f) - _1194) + _1192;
    float _1197 = ((_1184 * clamp(_1171, 0.0f, 1.0f)) + _1188) + _1194;
    float4 _1200 = _9.Sample(_19, float2(_1197 / _16_m0[67u].y, _1190));
    float _1202 = _1200.x;
    float _1203 = _1200.y;
    float _1204 = _1200.z;
    float4 _1207 = _9.Sample(_19, float2((_1197 + 1.0f) / _16_m0[67u].y, _1190));
    _1221 = ((_1207.x - _1202) * _1196) + _1202;
    _1222 = ((_1207.y - _1203) * _1196) + _1203;
    _1223 = ((_1207.z - _1204) * _1196) + _1204;
  } else {
    _1221 = _1171;
    _1222 = _1173;
    _1223 = _1175;
  }

  // testColor = float3(_1221, _1222, _1223);

  // log2lin(t)
  // correct: (t > e * cut + f) ? (pow(10, (t - d) / c) - b) / a : (t - f) / e
  // current: z = t-d; (z * 1.035 + 0.35524 > 0.1111 ? pow(10, z) : z * 1.035 + 0.35524)      - b)
  // ARRI_C800_CUT = 0.010591f;
  // ARRI_C800_A = 5.555556f;
  // ARRI_C800_B = 0.052272f;
  // ARRI_C800_C = 0.247190f;
  // ARRI_C800_D = 0.385537f;
  // ARRI_C800_E = 5.367655f;
  // ARRI_C800_F = 0.092809f;
  float _1224 = _1221 + (-0.3855369985103607177734375f);                            // t - d
  float _1228 = (_1224 * 1.035006046295166015625f) + 0.3552471697330474853515625f;  // (t - d)
  float _1234;
  if (_1228 > 0.111111111938953399658203125f) {
    _1234 = exp2(_1224 * 13.43878269195556640625f);
  } else {
    _1234 = _1228;
  }
  float _1235 = _1234 + (-0.05227227509021759033203125f);  // - b

  float _1237 = _1222 + (-0.3855369985103607177734375f);
  float _1239 = (_1237 * 1.035006046295166015625f) + 0.3552471697330474853515625f;
  float _1243;
  if (_1239 > 0.111111111938953399658203125f) {
    _1243 = exp2(_1237 * 13.43878269195556640625f);
  } else {
    _1243 = _1239;
  }
  float _1245 = (_1243 + (-0.05227227509021759033203125f)) * 0.18000002205371856689453125f;
  float _1247 = _1223 + (-0.3855369985103607177734375f);
  float _1249 = (_1247 * 1.035006046295166015625f) + 0.3552471697330474853515625f;
  float _1253;
  if (_1249 > 0.111111111938953399658203125f) {
    _1253 = exp2(_1247 * 13.43878269195556640625f);
  } else {
    _1253 = _1249;
  }
  float _1255 = (_1253 + (-0.05227227509021759033203125f)) * 0.18000002205371856689453125f;

  // ARRI => AP1 with Bradford (optimized red * 0.18)
  float _1260 = mad(-0.0797103941440582275390625f, _1255, mad(0.1129681766033172607421875f, _1245, _1235 * 0.174012124538421630859375f));
  float _1266 = mad(-0.23079706728458404541015625f, _1255, mad(1.182213306427001953125f, _1245, _1235 * 0.00874611176550388336181640625f));
  float _1272 = mad(1.05499327182769775390625f, _1255, mad(-0.0622508935630321502685546875f, _1245, _1235 * 0.001306564197875559329986572265625f));

  // max ap1 channel
  float _1275 = max(_1260, max(_1266, _1272));

  // testColor = (_1260, _1266, _1272);

  float _1277;
  float _1279;
  float _1281;
  if (_1275 == 0.0f) {
    _1277 = 0.0f;
    _1279 = 0.0f;
    _1281 = 0.0f;
  } else {
    float _1286 = abs(_1275);
    _1277 = (_1275 - _1272) / _1286;
    _1279 = (_1275 - _1266) / _1286;
    _1281 = (_1275 - _1260) / _1286;
  }

  float _1289;
  if (_1281 < 0.814999997615814208984375f) {
    _1289 = _1281;
  } else {
    float _1293 = _1281 + (-0.814999997615814208984375f);
    _1289 = (_1293 / exp2(log2(exp2(log2(_1293 * 3.055283069610595703125f) * 1.2000000476837158203125f) + 1.0f) * 0.833333313465118408203125f)) + 0.814999997615814208984375f;
  }
  float _1307;
  if (_1279 < 0.802999973297119140625f) {
    _1307 = _1279;
  } else {
    float _1311 = _1279 + (-0.802999973297119140625f);
    _1307 = (_1311 / exp2(log2(exp2(log2(_1311 * 3.49726104736328125f) * 1.2000000476837158203125f) + 1.0f) * 0.833333313465118408203125f)) + 0.802999973297119140625f;
  }
  float _1323;
  if (_1277 < 0.87999999523162841796875f) {
    _1323 = _1277;
  } else {
    float _1403 = _1277 + (-0.87999999523162841796875f);
    _1323 = (_1403 / exp2(log2(exp2(log2(_1403 * 6.810994625091552734375f) * 1.2000000476837158203125f) + 1.0f) * 0.833333313465118408203125f)) + 0.87999999523162841796875f;
  }
  float _1325 = abs(_1275);
  float _1327 = _1275 - (_1325 * _1289);
  float _1329 = _1275 - (_1325 * _1307);
  float _1331 = _1275 - (_1325 * _1323);

  // AP1 to AP0
  float _1344 = mad(0.1638690531253814697265625f, _1331, mad(0.14067868888378143310546875f, _1329, _1327 * 0.695452213287353515625f));
  float _1349 = mad(0.09553432464599609375f, _1331, mad(0.859671115875244140625f, _1329, _1327 * 0.044794581830501556396484375f));
  float _1353 = mad(1.00150072574615478515625f, _1331, mad(0.0040252101607620716094970703125f, _1329, _1327 * (-0.0055258828215301036834716796875f)));

  // RRT Sweeteners now?

  // rgb_2_saturation
  float _1357 = max(max(_1344, _1349), _1353);
  float _1363 = (max(_1357, 1.0000000133514319600180897396058e-10f) - max(min(min(_1344, _1349), _1353), 1.0000000133514319600180897396058e-10f)) / max(_1357, 0.00999999977648258209228515625f);
  // rgb_2_yc
  float _1377 = ((_1349 + _1344) + _1353) + (sqrt((((_1353 - _1349) * _1353) + ((_1349 - _1344) * _1349)) + ((_1344 - _1353) * _1344)) * 1.75f);
  float _1378 = _1377 * 0.3333333432674407958984375f;

  // sigmoid_shaper
  float _1380 = _1363 + (-0.4000000059604644775390625f);
  float _1382 = _1380 * 5.0f;
  float _1388 = max(1.0f - abs(_1380 * 2.5f), 0.0f);
  float _1399 = ((float(int(uint(_1382 > 0.0f) - uint(_1382 < 0.0f))) * (1.0f - (_1388 * _1388))) + 1.0f) * 0.02500000037252902984619140625f;
  float _1417;
  // glow_fwd
  if (_1378 > 0.053333334624767303466796875f) {
    float frontier_phi_45_44_ladder;
    if (_1378 < 0.1599999964237213134765625f) {
      frontier_phi_45_44_ladder = ((0.23999999463558197021484375f / _1377) + (-0.5f)) * _1399;
    } else {
      frontier_phi_45_44_ladder = 0.0f;
    }
    _1417 = frontier_phi_45_44_ladder;
  } else {
    _1417 = _1399;
  }
  float _1419 = _1417 + 1.0f;

  // aces * glow
  float _1420 = _1419 * _1344;
  float _1421 = _1419 * _1349;
  float _1422 = _1419 * _1353;

  // rgb_2_hue
  float _1429;
  if ((_1420 == _1421) && (_1421 == _1422)) {
    _1429 = 0.0f;
  } else {
    float _1441 = ((_1420 * 2.0f) - _1421) - _1422;
    float _1445 = ((_1349 - _1353) * 1.73205077648162841796875f) * _1419;
    float _1447 = atan(_1445 / _1441);
    bool _1452 = _1441 < 0.0f;
    bool _1453 = _1441 == 0.0f;
    bool _1454 = _1445 >= 0.0f;
    bool _1455 = _1445 < 0.0f;
    _1429 = (_1454 && _1453) ? 90.0f : ((_1455 && _1453) ? (-90.0f) : (((_1455 && _1452) ? (_1447 + (-3.1415927410125732421875f)) : ((_1454 && _1452) ? (_1447 + 3.1415927410125732421875f) : _1447)) * 57.2957763671875f));
  }

  // center_hue
  float _1436 = min(max((_1429 < 0.0f) ? (_1429 + 360.0f) : _1429, 0.0f), 360.0f);
  float _1470;
  if (_1436 < (-180.0f)) {
    _1470 = _1436 + 360.0f;
  } else {
    float frontier_phi_51_50_ladder;
    if (_1436 > 180.0f) {
      frontier_phi_51_50_ladder = _1436 + (-360.0f);
    } else {
      frontier_phi_51_50_ladder = _1436;
    }
    _1470 = frontier_phi_51_50_ladder;
  }

  // cubic_basis_shaper modified? (unreal's smoothstep?)
  float _1476 = clamp(1.0f - abs(_1470 * 0.01481481455266475677490234375f), 0.0f, 1.0f);
  float _1480 = (_1476 * _1476) * (3.0f - (_1476 * 2.0f));

  // saturate reds
  float _1487 = ((_1480 * _1480) * ((_1363 * 0.180000007152557373046875f) * (0.02999999932944774627685546875f - _1420))) + _1420;

  // AP0 => AP1 + clamped
  float _1506 = max(0.0f, mad(-0.214928567409515380859375f, _1422, mad(-0.236510753631591796875f, _1421, _1487 * 1.45143926143646240234375f)));
  float _1507 = max(0.0f, mad(-0.0996759235858917236328125f, _1422, mad(1.1762297153472900390625f, _1421, _1487 * (-0.07655377686023712158203125f))));
  float _1508 = max(0.0f, mad(0.99771630764007568359375f, _1422, mad(-0.0060324496589601039886474609375f, _1421, _1487 * 0.0083161480724811553955078125f)));

  // AP1_RGB2Y
  float _1509 = dot(float3(_1506, _1507, _1508), float3(0.272228717803955078125f, 0.674081742763519287109375f, 0.053689517080783843994140625f));

  // end of rrt sweeteners

  // custom ?

  // _16_m0[36u].x = 0.88
  // _16_m0[36u].y = 0.55
  // _16_m0[36u].z = 0.26
  // _16_m0[36u].w = 0
  // _16_m0[37u].x = 0.04

  float _1531 = (_16_m0[36u].w + 1.0f) - _16_m0[36u].y;
  float _1536 = _16_m0[37u].x + 1.0f;
  float _1538 = _1536 - _16_m0[36u].z;

  // (1.04 - 0.26)

  //
  float _1558;
  if (_16_m0[36u].y > 0.800000011920928955078125f) {
    _1558 = ((0.819999992847442626953125f - _16_m0[36u].y) / _16_m0[36u].x) + (-0.74472749233245849609375f);
  } else {
    float _1549 = (_16_m0[36u].w + 0.180000007152557373046875f) / _1531;
    _1558 = (-0.74472749233245849609375f) - ((log2(_1549 / (2.0f - _1549)) * 0.3465735912322998046875f) * (_1531 / _16_m0[36u].x));
  }
  float _1561 = ((1.0f - _16_m0[36u].y) / _16_m0[36u].x) - _1558;
  float _1563 = (_16_m0[36u].z / _16_m0[36u].x) - _1561;

  // RRT_SAT_FACTOR = 0.96
  float _1567 = log2(((_1506 - _1509) * 0.959999978542327880859375f) + _1509) * 0.3010300099849700927734375f;
  float _1568 = log2(((_1507 - _1509) * 0.959999978542327880859375f) + _1509) * 0.3010300099849700927734375f;
  float _1569 = log2(((_1508 - _1509) * 0.959999978542327880859375f) + _1509) * 0.3010300099849700927734375f;

  float _1573 = _16_m0[36u].x * (_1567 + _1561);
  float _1574 = _16_m0[36u].x * (_1568 + _1561);
  float _1575 = _16_m0[36u].x * (_1569 + _1561);
  float _1576 = _1531 * 2.0f;
  float _1579 = (_16_m0[36u].x * (-2.0f)) / _1531;
  float _1580 = _1567 - _1558;
  float _1581 = _1568 - _1558;
  float _1582 = _1569 - _1558;
  float _1602 = _1538 * 2.0f;
  float _1604 = (_16_m0[36u].x * 2.0f) / _1538;
  float _1629 = (_1567 < _1558) ? ((_1576 / (exp2((_1580 * 1.44269502162933349609375f) * _1579) + 1.0f)) - _16_m0[36u].w) : _1573;
  float _1630 = (_1568 < _1558) ? ((_1576 / (exp2((_1581 * 1.44269502162933349609375f) * _1579) + 1.0f)) - _16_m0[36u].w) : _1574;
  float _1631 = (_1569 < _1558) ? ((_1576 / (exp2((_1582 * 1.44269502162933349609375f) * _1579) + 1.0f)) - _16_m0[36u].w) : _1575;
  float _1638 = _1563 - _1558;
  float _1642 = clamp(_1580 / _1638, 0.0f, 1.0f);
  float _1643 = clamp(_1581 / _1638, 0.0f, 1.0f);
  float _1644 = clamp(_1582 / _1638, 0.0f, 1.0f);
  bool _1645 = _1563 < _1558;
  float _1649 = _1645 ? (1.0f - _1642) : _1642;
  float _1650 = _1645 ? (1.0f - _1643) : _1643;
  float _1651 = _1645 ? (1.0f - _1644) : _1644;
  float _1670 = (((_1649 * _1649) * (((_1567 > _1563) ? (_1536 - (_1602 / (exp2(((_1567 - _1563) * 1.44269502162933349609375f) * _1604) + 1.0f))) : _1573) - _1629)) * (3.0f - (_1649 * 2.0f))) + _1629;
  float _1671 = (((_1650 * _1650) * (((_1568 > _1563) ? (_1536 - (_1602 / (exp2(((_1568 - _1563) * 1.44269502162933349609375f) * _1604) + 1.0f))) : _1574) - _1630)) * (3.0f - (_1650 * 2.0f))) + _1630;
  float _1672 = (((_1651 * _1651) * (((_1569 > _1563) ? (_1536 - (_1602 / (exp2(((_1569 - _1563) * 1.44269502162933349609375f) * _1604) + 1.0f))) : _1575) - _1631)) * (3.0f - (_1651 * 2.0f))) + _1631;
  float _1673 = dot(float3(_1670, _1671, _1672), float3(0.272228717803955078125f, 0.674081742763519287109375f, 0.053689517080783843994140625f));
  float _1686 = max(0.0f, ((_1670 - _1673) * 0.930000007152557373046875f) + _1673);
  float _1687 = max(0.0f, ((_1671 - _1673) * 0.930000007152557373046875f) + _1673);
  float _1688 = max(0.0f, ((_1672 - _1673) * 0.930000007152557373046875f) + _1673);

  // AP1 => BT709
  float _1698 = max(0.0f, mad(-0.0832584798336029052734375f, _1688, mad(-0.621790587902069091796875f, _1687, _1686 * 1.70505154132843017578125f)));
  float _1699 = max(0.0f, mad(-0.0105485282838344573974609375f, _1688, mad(1.14080274105072021484375f, _1687, _1686 * (-0.130257189273834228515625f))));
  float _1700 = max(0.0f, mad(1.15297186374664306640625f, _1688, mad(-0.12896876037120819091796875f, _1687, _1686 * (-0.0240032784640789031982421875f))));

  // BT709 Color Matrix (none)
  float _1729 = _16_m0[37u].y * (((_16_m0[26u].y + (_16_m0[26u].x * _1698)) * _1698) + _16_m0[26u].z);
  float _1730 = _16_m0[37u].z * (((_16_m0[26u].y + (_16_m0[26u].x * _1699)) * _1699) + _16_m0[26u].z);
  float _1731 = _16_m0[37u].w * (((_16_m0[26u].y + (_16_m0[26u].x * _1700)) * _1700) + _16_m0[26u].z);

  // BT709 Color Blend (none)
  float _1738 = ((_16_m0[38u].x - _1729) * _16_m0[38u].w) + _1729;
  float _1739 = ((_16_m0[38u].y - _1730) * _16_m0[38u].w) + _1730;
  float _1740 = ((_16_m0[38u].z - _1731) * _16_m0[38u].w) + _1731;

  // AP1 => BT709 (No RRT)
  float _1741 = _16_m0[37u].y * mad(-0.0832584798336029052734375f, _1331, mad(-0.621790587902069091796875f, _1329, _1327 * 1.70505154132843017578125f));
  float _1742 = _16_m0[37u].z * mad(-0.0105485282838344573974609375f, _1331, mad(1.14080274105072021484375f, _1329, _1327 * (-0.130257189273834228515625f)));
  float _1743 = _16_m0[37u].w * mad(1.15297186374664306640625f, _1331, mad(-0.12896876037120819091796875f, _1329, _1327 * (-0.0240032784640789031982421875f)));

  // BT709 Color Blend (none) (No RRT)
  float _1750 = ((_16_m0[38u].x - _1741) * _16_m0[38u].w) + _1741;
  float _1751 = ((_16_m0[38u].y - _1742) * _16_m0[38u].w) + _1742;
  float _1752 = ((_16_m0[38u].z - _1743) * _16_m0[38u].w) + _1743;

  // _16_m0[27u].y = 0.454545
  // BT709 => Gamma 2.2 (With RRT)
  float _1766 = exp2(log2(max(0.0f, _1738)) * _16_m0[27u].y);
  float _1767 = exp2(log2(max(0.0f, _1739)) * _16_m0[27u].y);
  float _1768 = exp2(log2(max(0.0f, _1740)) * _16_m0[27u].y);

  uint4 _1771 = asuint(_16_m0[68u]);
  uint _1772 = _1771.x;  // 3 TONEMAPPER_OUTPUT_ACES1000nitST2084
  float _2228;
  float _2234;
  float _2241;

  testColor = float3(_1750, _1751, _1752);
  // testColor = untonemapped;

  float renoDRTHighlights = 1.20f;
  float renoDRTShadows = 1.0f;
  float renoDRTContrast = 1.80f;
  float renoDRTSaturation = 1.40f;
  float renoDRTDechroma = 0.60f;
  float renoDRTFlare = 0.f;

  float vanillaMidGray = 0.18 * 1.5f;

  testColor = renodx::tonemap::config::Apply(
      testColor,
      renodx::tonemap::config::Create(
          injectedData.toneMapType,
          injectedData.toneMapPeakNits,
          injectedData.toneMapGameNits,
          injectedData.toneMapGammaCorrection,
          injectedData.colorGradeExposure,
          injectedData.colorGradeHighlights,
          injectedData.colorGradeShadows,
          injectedData.colorGradeContrast,
          injectedData.colorGradeSaturation,
          vanillaMidGray,
          vanillaMidGray * 100.f,
          renoDRTHighlights,
          renoDRTShadows,
          renoDRTContrast,
          renoDRTSaturation,
          renoDRTDechroma,
          renoDRTFlare)
      // renodx::lut::config::Create(
      //     _19,
      //     injectedData.colorGradeLUTStrength,
      //     injectedData.colorGradeLUTScaling,
      //     renodx::lut::config::type::ARRI_C800,
      //     renodx::lut::config::type::ARRI_C800,
      //     _16_m0[67u].y),
      // _8
  );
  testColor = renodx::color::bt2020::from::BT709(testColor);
  testColor = renodx::color::pq::Encode(testColor, injectedData.toneMapGameNits);
  // if (injectedData.toneMapType == 0.f) {
  //   // testColor = untonemapped;
  //   testColor = renodx::color::bt2020::from::BT709(testColor);
  // } else if (injectedData.toneMapType == 2.f) {
  //   float hdrScale = (injectedData.toneMapPeakNits / injectedData.toneMapGameNits);
  //   testColor = renodx::tonemap::aces::RGCAndRRTAndODT(
  //                   testColor,
  //                   0.0001f / (injectedData.toneMapGameNits / 48.f),
  //                   48.f * hdrScale,
  //                   renodx::color::AP1_TO_BT2020_MAT)
  //               / 48.f;
  //   // testColor = renodx::color::bt2020::from::BT709(testColor);
  // }

  // _16_m0[41u].y = 1u
  if (injectedData.toneMapType == 1.f) {
    if (_1772 == 0u) {  // TONEMAPPER_OUTPUT_sRGB
      float _1854;
      float _1856;
      float _1858;
      if (asuint(_16_m0[41u]).y == 1u) {
        float _1789 = exp2(log2(max(0.0f, _1750)) * _16_m0[27u].y);
        float _1792 = exp2(log2(max(0.0f, _1751)) * _16_m0[27u].y) * 1.5f;
        float _1794 = exp2(log2(max(0.0f, _1752)) * _16_m0[27u].y) * 1.5f;

        float _1799 = mad(0.1773348152637481689453125f, _1794, mad(0.38297808170318603515625f, _1792, _1789 * 0.659551203250885009765625f));
        float _1805 = mad(0.096761621534824371337890625f, _1794, mad(0.81342315673828125f, _1792, _1789 * 0.13468848168849945068359375f));
        float _1811 = mad(0.870704174041748046875f, _1794, mad(0.11154405772686004638671875f, _1792, _1789 * 0.0263159833848476409912109375f));
        float _1816 = max(max(_1799, _1805), _1811);
        float _1821 = (max(_1816, 1.0000000133514319600180897396058e-10f) - max(min(min(_1799, _1805), _1811), 1.0000000133514319600180897396058e-10f)) / max(_1816, 0.00999999977648258209228515625f);
        float _1834 = ((_1805 + _1799) + _1811) + (sqrt((((_1811 - _1805) * _1811) + ((_1805 - _1799) * _1805)) + ((_1799 - _1811) * _1799)) * 1.75f);
        float _1835 = _1834 * 0.3333333432674407958984375f;
        float _1836 = _1821 + (-0.4000000059604644775390625f);
        float _1837 = _1836 * 5.0f;
        float _1841 = max(1.0f - abs(_1836 * 2.5f), 0.0f);
        float _1852 = ((float(int(uint(_1837 > 0.0f) - uint(_1837 < 0.0f))) * (1.0f - (_1841 * _1841))) + 1.0f) * 0.02500000037252902984619140625f;
        float _1890;
        if (_1835 > 0.053333334624767303466796875f) {
          float frontier_phi_63_62_ladder;
          if (_1835 < 0.1599999964237213134765625f) {
            frontier_phi_63_62_ladder = ((0.23999999463558197021484375f / _1834) + (-0.5f)) * _1852;
          } else {
            frontier_phi_63_62_ladder = 0.0f;
          }
          _1890 = frontier_phi_63_62_ladder;
        } else {
          _1890 = _1852;
        }
        float _1892 = _1890 + 1.0f;
        float _1893 = _1892 * _1799;
        float _1894 = _1892 * _1805;
        float _1895 = _1892 * _1811;
        float _2186;
        if ((_1893 == _1894) && (_1894 == _1895)) {
          _2186 = 0.0f;
        } else {
          float _2196 = ((_1893 * 2.0f) - _1894) - _1895;
          float _2199 = ((_1805 - _1811) * 1.73205077648162841796875f) * _1892;
          float _2201 = atan(_2199 / _2196);
          bool _2204 = _2196 < 0.0f;
          bool _2205 = _2196 == 0.0f;
          bool _2206 = _2199 >= 0.0f;
          bool _2207 = _2199 < 0.0f;
          _2186 = (_2206 && _2205) ? 90.0f : ((_2207 && _2205) ? (-90.0f) : (((_2207 && _2204) ? (_2201 + (-3.1415927410125732421875f)) : ((_2206 && _2204) ? (_2201 + 3.1415927410125732421875f) : _2201)) * 57.2957763671875f));
        }
        float _2192 = min(max((_2186 < 0.0f) ? (_2186 + 360.0f) : _2186, 0.0f), 360.0f);
        float _2555;
        if (_2192 < (-180.0f)) {
          _2555 = _2192 + 360.0f;
        } else {
          float frontier_phi_95_82_ladder;
          if (_2192 > 180.0f) {
            frontier_phi_95_82_ladder = _2192 + (-360.0f);
          } else {
            frontier_phi_95_82_ladder = _2192;
          }
          _2555 = frontier_phi_95_82_ladder;
        }
        float _2610;
        if ((_2555 > (-67.5f)) && (_2555 < 67.5f)) {
          float _2602 = (_2555 + 67.5f) * 0.0296296291053295135498046875f;
          uint _2604 = uint(int(_2602));
          float _2606 = _2602 - float(int(_2604));
          float _2607 = _2606 * _2606;
          float _2608 = _2607 * _2606;
          float frontier_phi_107_106_ladder;
          if (_2604 == 3u) {
            frontier_phi_107_106_ladder = ((0.16666667163372039794921875f - (_2606 * 0.5f)) + (_2607 * 0.5f)) - (_2608 * 0.16666667163372039794921875f);
          } else {
            float frontier_phi_107_106_ladder_119_ladder;
            if (_2604 == 2u) {
              frontier_phi_107_106_ladder_119_ladder = (0.666666686534881591796875f - _2607) + (_2608 * 0.5f);
            } else {
              float frontier_phi_107_106_ladder_119_ladder_129_ladder;
              if (_2604 == 1u) {
                frontier_phi_107_106_ladder_119_ladder_129_ladder = ((_2608 * (-0.5f)) + 0.16666667163372039794921875f) + ((_2607 + _2606) * 0.5f);
              } else {
                frontier_phi_107_106_ladder_119_ladder_129_ladder = (_2604 == 0u) ? (_2608 * 0.16666667163372039794921875f) : 0.0f;
              }
              frontier_phi_107_106_ladder_119_ladder = frontier_phi_107_106_ladder_119_ladder_129_ladder;
            }
            frontier_phi_107_106_ladder = frontier_phi_107_106_ladder_119_ladder;
          }
          _2610 = frontier_phi_107_106_ladder;
        } else {
          _2610 = 0.0f;
        }
        float _2624 = min(max((((_1821 * 0.2700000107288360595703125f) * (0.02999999932944774627685546875f - _1893)) * _2610) + _1893, 0.0f), 65535.0f);
        float _2626 = min(max(_1894, 0.0f), 65535.0f);
        float _2627 = min(max(_1895, 0.0f), 65535.0f);
        // AP0 => AP1 + clamp
        float _2640 = min(max(mad(-0.214928567409515380859375f, _2627, mad(-0.236510753631591796875f, _2626, _2624 * 1.45143926143646240234375f)), 0.0f), 65535.0f);
        float _2641 = min(max(mad(-0.0996759235858917236328125f, _2627, mad(1.1762297153472900390625f, _2626, _2624 * (-0.07655377686023712158203125f))), 0.0f), 65535.0f);
        float _2642 = min(max(mad(0.99771630764007568359375f, _2627, mad(-0.0060324496589601039886474609375f, _2626, _2624 * 0.0083161480724811553955078125f)), 0.0f), 65535.0f);
        float _2643 = dot(float3(_2640, _2641, _2642), float3(0.272228717803955078125f, 0.674081742763519287109375f, 0.053689517080783843994140625f));
        float _2652 = ((_2640 - _2643) * 0.959999978542327880859375f) + _2643;
        float _2653 = ((_2641 - _2643) * 0.959999978542327880859375f) + _2643;
        float _2654 = ((_2642 - _2643) * 0.959999978542327880859375f) + _2643;
        float _2658 = log2((_2652 <= 0.0f) ? 6.103515625e-05f : _2652);
        float _2659 = _2658 * 0.3010300099849700927734375f;
        float _2728;
        if (_2659 > (-5.2601776123046875f)) {
          float frontier_phi_121_120_ladder;
          if ((_2659 > (-5.2601776123046875f)) && (_2659 < (-0.74472749233245849609375f))) {
            float _2864 = (_2658 * 0.199999988079071044921875f) + 3.49478626251220703125f;
            uint _2866 = uint(int(_2864));
            float _2868 = _2864 - float(int(_2866));
            uint _2872 = _2866 + 1u;
            float _2879 = _35[_2866] * 0.5f;
            frontier_phi_121_120_ladder = dot(float3(_2868 * _2868, _2868, 1.0f), float3(mad(_35[_2866 + 2u], 0.5f, mad(_35[_2872], -1.0f, _2879)), _35[_2872] - _35[_2866], mad(_35[_2872], 0.5f, _2879)));
          } else {
            float frontier_phi_121_120_ladder_131_ladder;
            if ((_2659 >= (-0.74472749233245849609375f)) && (_2659 < 4.673812389373779296875f)) {
              float _3008 = (_2658 * 0.1666666567325592041015625f) + 0.4123218357563018798828125f;
              uint _3010 = uint(int(_3008));
              float _3012 = _3008 - float(int(_3010));
              uint _3015 = _3010 + 1u;
              float _3022 = _42[_3010] * 0.5f;
              frontier_phi_121_120_ladder_131_ladder = dot(float3(_3012 * _3012, _3012, 1.0f), float3(mad(_42[_3010 + 2u], 0.5f, mad(_42[_3015], -1.0f, _3022)), _42[_3015] - _42[_3010], mad(_42[_3015], 0.5f, _3022)));
            } else {
              frontier_phi_121_120_ladder_131_ladder = 4.0f;
            }
            frontier_phi_121_120_ladder = frontier_phi_121_120_ladder_131_ladder;
          }
          _2728 = frontier_phi_121_120_ladder;
        } else {
          _2728 = -4.0f;
        }
        float _2733 = exp2(_2728 * 3.3219280242919921875f);
        float _2736 = log2((_2653 <= 0.0f) ? 6.103515625e-05f : _2653);
        float _2737 = _2736 * 0.3010300099849700927734375f;
        float _2893;
        if (_2737 > (-5.2601776123046875f)) {
          float frontier_phi_133_132_ladder;
          if ((_2737 > (-5.2601776123046875f)) && (_2737 < (-0.74472749233245849609375f))) {
            float _3030 = (_2736 * 0.199999988079071044921875f) + 3.49478626251220703125f;
            uint _3031 = uint(int(_3030));
            float _3033 = _3030 - float(int(_3031));
            uint _3036 = _3031 + 1u;
            float _3043 = _35[_3031] * 0.5f;
            frontier_phi_133_132_ladder = dot(float3(_3033 * _3033, _3033, 1.0f), float3(mad(_35[_3031 + 2u], 0.5f, mad(_35[_3036], -1.0f, _3043)), _35[_3036] - _35[_3031], mad(_35[_3036], 0.5f, _3043)));
          } else {
            float frontier_phi_133_132_ladder_148_ladder;
            if ((_2737 >= (-0.74472749233245849609375f)) && (_2737 < 4.673812389373779296875f)) {
              float _3193 = (_2736 * 0.1666666567325592041015625f) + 0.4123218357563018798828125f;
              uint _3194 = uint(int(_3193));
              float _3196 = _3193 - float(int(_3194));
              uint _3199 = _3194 + 1u;
              float _3206 = _42[_3194] * 0.5f;
              frontier_phi_133_132_ladder_148_ladder = dot(float3(_3196 * _3196, _3196, 1.0f), float3(mad(_42[_3194 + 2u], 0.5f, mad(_42[_3199], -1.0f, _3206)), _42[_3199] - _42[_3194], mad(_42[_3199], 0.5f, _3206)));
            } else {
              frontier_phi_133_132_ladder_148_ladder = 4.0f;
            }
            frontier_phi_133_132_ladder = frontier_phi_133_132_ladder_148_ladder;
          }
          _2893 = frontier_phi_133_132_ladder;
        } else {
          _2893 = -4.0f;
        }
        float _2897 = exp2(_2893 * 3.3219280242919921875f);
        float _2900 = log2((_2654 <= 0.0f) ? 6.103515625e-05f : _2654);
        float _2901 = _2900 * 0.3010300099849700927734375f;
        float _3056;
        if (_2901 > (-5.2601776123046875f)) {
          float frontier_phi_150_149_ladder;
          if ((_2901 > (-5.2601776123046875f)) && (_2901 < (-0.74472749233245849609375f))) {
            float _3214 = (_2900 * 0.199999988079071044921875f) + 3.49478626251220703125f;
            uint _3215 = uint(int(_3214));
            float _3217 = _3214 - float(int(_3215));
            uint _3220 = _3215 + 1u;
            float _3227 = _35[_3215] * 0.5f;
            frontier_phi_150_149_ladder = dot(float3(_3217 * _3217, _3217, 1.0f), float3(mad(_35[_3215 + 2u], 0.5f, mad(_35[_3220], -1.0f, _3227)), _35[_3220] - _35[_3215], mad(_35[_3220], 0.5f, _3227)));
          } else {
            float frontier_phi_150_149_ladder_169_ladder;
            if ((_2901 >= (-0.74472749233245849609375f)) && (_2901 < 4.673812389373779296875f)) {
              float _3574 = (_2900 * 0.1666666567325592041015625f) + 0.4123218357563018798828125f;
              uint _3575 = uint(int(_3574));
              float _3577 = _3574 - float(int(_3575));
              uint _3580 = _3575 + 1u;
              float _3587 = _42[_3575] * 0.5f;
              frontier_phi_150_149_ladder_169_ladder = dot(float3(_3577 * _3577, _3577, 1.0f), float3(mad(_42[_3575 + 2u], 0.5f, mad(_42[_3580], -1.0f, _3587)), _42[_3580] - _42[_3575], mad(_42[_3580], 0.5f, _3587)));
            } else {
              frontier_phi_150_149_ladder_169_ladder = 4.0f;
            }
            frontier_phi_150_149_ladder = frontier_phi_150_149_ladder_169_ladder;
          }
          _3056 = frontier_phi_150_149_ladder;
        } else {
          _3056 = -4.0f;
        }
        float _3060 = exp2(_3056 * 3.3219280242919921875f);
        // AP1 => AP0
        float _3063 = mad(0.16386906802654266357421875f, _3060, mad(0.140678703784942626953125f, _2897, _2733 * 0.695452213287353515625f));
        float _3066 = mad(0.095534317195415496826171875f, _3060, mad(0.859671115875244140625f, _2897, _2733 * 0.0447945632040500640869140625f));
        float _3069 = mad(1.00150072574615478515625f, _3060, mad(0.0040252101607620716094970703125f, _2897, _2733 * (-0.0055258828215301036834716796875f)));
        // AP0 => AP1
        float _3072 = mad(-0.214928567409515380859375f, _3069, mad(-0.236510753631591796875f, _3066, _3063 * 1.45143926143646240234375f));
        float _3075 = mad(-0.0996759235858917236328125f, _3069, mad(1.1762297153472900390625f, _3066, _3063 * (-0.07655377686023712158203125f)));
        float _3078 = mad(0.99771630764007568359375f, _3069, mad(-0.0060324496589601039886474609375f, _3066, _3063 * 0.0083161480724811553955078125f));

        float _3081 = log2((_3072 <= 0.0f) ? 9.9999997473787516355514526367188e-05f : _3072);
        float _3082 = _3081 * 0.3010300099849700927734375f;
        float _3241;
        if (_3082 > (-2.54062366485595703125f)) {
          float frontier_phi_171_170_ladder;
          if ((_3082 > (-2.54062366485595703125f)) && (_3082 < 0.68124115467071533203125f)) {
            float _3596 = (_3081 + 8.43976879119873046875f) * 0.654034316539764404296875f;
            uint _3598 = uint(int(_3596));
            float _3600 = _3596 - float(int(_3598));
            uint _3603 = _3598 + 1u;
            float _3610 = _54[_3598] * 0.5f;
            frontier_phi_171_170_ladder = dot(float3(_3600 * _3600, _3600, 1.0f), float3(mad(_54[_3598 + 2u], 0.5f, mad(_54[_3603], -1.0f, _3610)), _54[_3603] - _54[_3598], mad(_54[_3603], 0.5f, _3610)));
          } else {
            float frontier_phi_171_170_ladder_195_ladder;
            if ((_3082 >= 0.68124115467071533203125f) && (_3082 < 3.00247669219970703125f)) {
              float _3926 = (_3081 + (-2.2630341053009033203125f)) * 0.90779674053192138671875f;
              uint _3928 = uint(int(_3926));
              float _3930 = _3926 - float(int(_3928));
              uint _3933 = _3928 + 1u;
              float _3940 = _66[_3928] * 0.5f;
              frontier_phi_171_170_ladder_195_ladder = dot(float3(_3930 * _3930, _3930, 1.0f), float3(mad(_66[_3928 + 2u], 0.5f, mad(_66[_3933], -1.0f, _3940)), _66[_3933] - _66[_3928], mad(_66[_3933], 0.5f, _3940)));
            } else {
              frontier_phi_171_170_ladder_195_ladder = (_3081 * 0.0120411999523639678955078125f) + 1.5611422061920166015625f;
            }
            frontier_phi_171_170_ladder = frontier_phi_171_170_ladder_195_ladder;
          }
          _3241 = frontier_phi_171_170_ladder;
        } else {
          _3241 = -1.6989700794219970703125f;
        }
        float _3250 = log2((_3075 <= 0.0f) ? 9.9999997473787516355514526367188e-05f : _3075);
        float _3251 = _3250 * 0.3010300099849700927734375f;
        float _3624;
        if (_3251 > (-2.54062366485595703125f)) {
          float frontier_phi_197_196_ladder;
          if ((_3251 > (-2.54062366485595703125f)) && (_3251 < 0.68124115467071533203125f)) {
            float _3951 = (_3250 + 8.43976879119873046875f) * 0.654034316539764404296875f;
            uint _3952 = uint(int(_3951));
            float _3954 = _3951 - float(int(_3952));
            uint _3957 = _3952 + 1u;
            float _3964 = _54[_3952] * 0.5f;
            frontier_phi_197_196_ladder = dot(float3(_3954 * _3954, _3954, 1.0f), float3(mad(_54[_3952 + 2u], 0.5f, mad(_54[_3957], -1.0f, _3964)), _54[_3957] - _54[_3952], mad(_54[_3957], 0.5f, _3964)));
          } else {
            float frontier_phi_197_196_ladder_218_ladder;
            if ((_3251 >= 0.68124115467071533203125f) && (_3251 < 3.00247669219970703125f)) {
              float _4215 = (_3250 + (-2.2630341053009033203125f)) * 0.90779674053192138671875f;
              uint _4216 = uint(int(_4215));
              float _4218 = _4215 - float(int(_4216));
              uint _4221 = _4216 + 1u;
              float _4228 = _66[_4216] * 0.5f;
              frontier_phi_197_196_ladder_218_ladder = dot(float3(_4218 * _4218, _4218, 1.0f), float3(mad(_66[_4216 + 2u], 0.5f, mad(_66[_4221], -1.0f, _4228)), _66[_4221] - _66[_4216], mad(_66[_4221], 0.5f, _4228)));
            } else {
              frontier_phi_197_196_ladder_218_ladder = (_3250 * 0.0120411999523639678955078125f) + 1.5611422061920166015625f;
            }
            frontier_phi_197_196_ladder = frontier_phi_197_196_ladder_218_ladder;
          }
          _3624 = frontier_phi_197_196_ladder;
        } else {
          _3624 = -1.6989700794219970703125f;
        }
        float _3632 = log2((_3078 <= 0.0f) ? 9.9999997473787516355514526367188e-05f : _3078);
        float _3633 = _3632 * 0.3010300099849700927734375f;
        float _3977;
        if (_3633 > (-2.54062366485595703125f)) {
          float frontier_phi_220_219_ladder;
          if ((_3633 > (-2.54062366485595703125f)) && (_3633 < 0.68124115467071533203125f)) {
            float _4237 = (_3632 + 8.43976879119873046875f) * 0.654034316539764404296875f;
            uint _4238 = uint(int(_4237));
            float _4240 = _4237 - float(int(_4238));
            uint _4243 = _4238 + 1u;
            float _4250 = _54[_4238] * 0.5f;
            frontier_phi_220_219_ladder = dot(float3(_4240 * _4240, _4240, 1.0f), float3(mad(_54[_4238 + 2u], 0.5f, mad(_54[_4243], -1.0f, _4250)), _54[_4243] - _54[_4238], mad(_54[_4243], 0.5f, _4250)));
          } else {
            float frontier_phi_220_219_ladder_235_ladder;
            if ((_3633 >= 0.68124115467071533203125f) && (_3633 < 3.00247669219970703125f)) {
              float _4421 = (_3632 + (-2.2630341053009033203125f)) * 0.90779674053192138671875f;
              uint _4422 = uint(int(_4421));
              float _4424 = _4421 - float(int(_4422));
              uint _4427 = _4422 + 1u;
              float _4434 = _66[_4422] * 0.5f;
              frontier_phi_220_219_ladder_235_ladder = dot(float3(_4424 * _4424, _4424, 1.0f), float3(mad(_66[_4422 + 2u], 0.5f, mad(_66[_4427], -1.0f, _4434)), _66[_4427] - _66[_4422], mad(_66[_4427], 0.5f, _4434)));
            } else {
              frontier_phi_220_219_ladder_235_ladder = (_3632 * 0.0120411999523639678955078125f) + 1.5611422061920166015625f;
            }
            frontier_phi_220_219_ladder = frontier_phi_220_219_ladder_235_ladder;
          }
          _3977 = frontier_phi_220_219_ladder;
        } else {
          _3977 = -1.6989700794219970703125f;
        }
        float _3983 = exp2(_3241 * 3.3219280242919921875f) + (-0.0199999995529651641845703125f);
        float _3986 = (exp2(_3624 * 3.3219280242919921875f) + (-0.0199999995529651641845703125f)) * 0.02084201760590076446533203125f;
        float _3989 = (exp2(_3977 * 3.3219280242919921875f) + (-0.0199999995529651641845703125f)) * 0.02084201760590076446533203125f;
        float _3993 = mad(0.1561876833438873291015625f, _3989, mad(0.1340042054653167724609375f, _3986, _3983 * 0.01380688138306140899658203125f));
        float _3997 = mad(0.053689517080783843994140625f, _3989, mad(0.674081742763519287109375f, _3986, _3983 * 0.0056737959384918212890625f));
        float _4003 = (_3997 + _3993) + mad(1.01033914089202880859375f, _3989, mad(0.0040607335977256298065185546875f, _3986, _3983 * (-0.00011618694406934082508087158203125f)));
        float _4005 = (_4003 == 0.0f) ? 1.0000000133514319600180897396058e-10f : _4003;
        float _4006 = _3993 / _4005;
        float _4007 = _3997 / _4005;
        float _4013 = exp2(log2(min(max(_3997, 0.0f), 65535.0f)) * 0.981100022792816162109375f);
        float _4015 = max(_4007, 1.0000000133514319600180897396058e-10f);
        float _4016 = (_4013 * _4006) / _4015;
        float _4020 = (_4013 * ((1.0f - _4006) - _4007)) / _4015;
        float _4023 = mad(-0.23642469942569732666015625f, _4020, mad(-0.324803292751312255859375f, _4013, _4016 * 1.6410233974456787109375f));
        float _4026 = mad(0.016756348311901092529296875f, _4020, mad(1.6153316497802734375f, _4013, _4016 * (-0.663662850856781005859375f)));
        float _4029 = mad(0.98839485645294189453125f, _4020, mad(-0.008284442126750946044921875f, _4013, _4016 * 0.01172189414501190185546875f));
        float _4030 = dot(float3(_4023, _4026, _4029), float3(0.272228717803955078125f, 0.674081742763519287109375f, 0.053689517080783843994140625f));
        float _4039 = ((_4023 - _4030) * 0.930000007152557373046875f) + _4030;
        float _4040 = ((_4026 - _4030) * 0.930000007152557373046875f) + _4030;
        float _4041 = ((_4029 - _4030) * 0.930000007152557373046875f) + _4030;
        float _4044 = mad(0.1561876833438873291015625f, _4041, mad(0.1340042054653167724609375f, _4040, _4039 * 0.662454187870025634765625f));
        float _4047 = mad(0.053689517080783843994140625f, _4041, mad(0.674081742763519287109375f, _4040, _4039 * 0.272228717803955078125f));
        float _4050 = mad(1.01033914089202880859375f, _4041, mad(0.0040607335977256298065185546875f, _4040, _4039 * (-0.0055746496655046939849853515625f)));
        float _4055 = mad(0.01595330052077770233154296875f, _4050, mad(-0.0061132698319852352142333984375f, _4047, _4044 * 0.98722398281097412109375f));
        float _4061 = mad(0.0053300200961530208587646484375f, _4050, mad(1.00186002254486083984375f, _4047, _4044 * (-0.007598360069096088409423828125f)));
        float _4067 = mad(1.0816800594329833984375f, _4050, mad(-0.0050959498621523380279541015625f, _4047, _4044 * 0.003072570078074932098388671875f));
        _1854 = clamp(mad(-0.4986107647418975830078125f, _4067, mad(-1.53738319873809814453125f, _4061, _4055 * 3.2409698963165283203125f)), 0.0f, 1.0f);
        _1856 = clamp(mad(0.0415550582110881805419921875f, _4067, mad(1.875967502593994140625f, _4061, _4055 * (-0.96924364566802978515625f))), 0.0f, 1.0f);
        _1858 = clamp(mad(1.05697154998779296875f, _4067, mad(-0.2039769589900970458984375f, _4061, _4055 * 0.055630080401897430419921875f)), 0.0f, 1.0f);
      } else {
        _1854 = _1766;
        _1856 = _1767;
        _1858 = _1768;
      }
      float _2216;
      if (_1854 < 0.00313066993840038776397705078125f) {
        _2216 = _1854 * 12.9200000762939453125f;
      } else {
        _2216 = (exp2(log2(_1854) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f);
      }
      float _2240;
      if (_1856 < 0.00313066993840038776397705078125f) {
        _2240 = _1856 * 12.9200000762939453125f;
      } else {
        _2240 = (exp2(log2(_1856) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f);
      }
      float frontier_phi_76_97_ladder;
      float frontier_phi_76_97_ladder_1;
      float frontier_phi_76_97_ladder_2;
      if (_1858 < 0.00313066993840038776397705078125f) {
        frontier_phi_76_97_ladder = _2216;
        frontier_phi_76_97_ladder_1 = _1858 * 12.9200000762939453125f;
        frontier_phi_76_97_ladder_2 = _2240;
      } else {
        frontier_phi_76_97_ladder = _2216;
        frontier_phi_76_97_ladder_1 = (exp2(log2(_1858) * 0.4166666567325592041015625f) * 1.05499994754791259765625f) + (-0.054999999701976776123046875f);
        frontier_phi_76_97_ladder_2 = _2240;
      }
      _2228 = frontier_phi_76_97_ladder;
      _2234 = frontier_phi_76_97_ladder_2;
      _2241 = frontier_phi_76_97_ladder_1;
    } else {
      float frontier_phi_76_57_ladder;
      float frontier_phi_76_57_ladder_1;
      float frontier_phi_76_57_ladder_2;
      if (_1772 == 1u) {  // TONEMAPPER_OUTPUT_Rec709
        float _1864 = mad(0.0473663508892059326171875f, _1768, mad(0.3395121395587921142578125f, _1767, _1766 * 0.613191545009613037109375f));
        float _1867 = mad(0.013450006954371929168701171875f, _1768, mad(0.916335761547088623046875f, _1767, _1766 * 0.070206917822360992431640625f));
        float _1870 = mad(0.869606792926788330078125f, _1768, mad(0.10956729948520660400390625f, _1767, _1766 * 0.02061887271702289581298828125f));
        float _1973;
        float _1975;
        float _1977;
        if (asuint(_16_m0[41u]).y == 1u) {
          float _1918 = exp2(log2(max(0.0f, _1750)) * _16_m0[27u].y);
          float _1921 = exp2(log2(max(0.0f, _1751)) * _16_m0[27u].y) * 1.5f;
          float _1922 = exp2(log2(max(0.0f, _1752)) * _16_m0[27u].y) * 1.5f;
          float _1925 = mad(0.1773348152637481689453125f, _1922, mad(0.38297808170318603515625f, _1921, _1918 * 0.659551203250885009765625f));
          float _1928 = mad(0.096761621534824371337890625f, _1922, mad(0.81342315673828125f, _1921, _1918 * 0.13468848168849945068359375f));
          float _1931 = mad(0.870704174041748046875f, _1922, mad(0.11154405772686004638671875f, _1921, _1918 * 0.0263159833848476409912109375f));
          float _1935 = max(max(_1925, _1928), _1931);
          float _1940 = (max(_1935, 1.0000000133514319600180897396058e-10f) - max(min(min(_1925, _1928), _1931), 1.0000000133514319600180897396058e-10f)) / max(_1935, 0.00999999977648258209228515625f);
          float _1953 = ((_1928 + _1925) + _1931) + (sqrt((((_1931 - _1928) * _1931) + ((_1928 - _1925) * _1928)) + ((_1925 - _1931) * _1925)) * 1.75f);
          float _1954 = _1953 * 0.3333333432674407958984375f;
          float _1955 = _1940 + (-0.4000000059604644775390625f);
          float _1956 = _1955 * 5.0f;
          float _1960 = max(1.0f - abs(_1955 * 2.5f), 0.0f);
          float _1971 = ((float(int(uint(_1956 > 0.0f) - uint(_1956 < 0.0f))) * (1.0f - (_1960 * _1960))) + 1.0f) * 0.02500000037252902984619140625f;
          float _2219;
          if (_1954 > 0.053333334624767303466796875f) {
            float frontier_phi_75_74_ladder;
            if (_1954 < 0.1599999964237213134765625f) {
              frontier_phi_75_74_ladder = ((0.23999999463558197021484375f / _1953) + (-0.5f)) * _1971;
            } else {
              frontier_phi_75_74_ladder = 0.0f;
            }
            _2219 = frontier_phi_75_74_ladder;
          } else {
            _2219 = _1971;
          }
          float _2221 = _2219 + 1.0f;
          float _2222 = _2221 * _1925;
          float _2223 = _2221 * _1928;
          float _2224 = _2221 * _1931;
          float _2423;
          if ((_2222 == _2223) && (_2223 == _2224)) {
            _2423 = 0.0f;
          } else {
            float _2433 = ((_2222 * 2.0f) - _2223) - _2224;
            float _2436 = ((_1928 - _1931) * 1.73205077648162841796875f) * _2221;
            float _2438 = atan(_2436 / _2433);
            bool _2441 = _2433 < 0.0f;
            bool _2442 = _2433 == 0.0f;
            bool _2443 = _2436 >= 0.0f;
            bool _2444 = _2436 < 0.0f;
            _2423 = (_2443 && _2442) ? 90.0f : ((_2444 && _2442) ? (-90.0f) : (((_2444 && _2441) ? (_2438 + (-3.1415927410125732421875f)) : ((_2443 && _2441) ? (_2438 + 3.1415927410125732421875f) : _2438)) * 57.2957763671875f));
          }
          float _2429 = min(max((_2423 < 0.0f) ? (_2423 + 360.0f) : _2423, 0.0f), 360.0f);
          float _2666;
          if (_2429 < (-180.0f)) {
            _2666 = _2429 + 360.0f;
          } else {
            float frontier_phi_110_99_ladder;
            if (_2429 > 180.0f) {
              frontier_phi_110_99_ladder = _2429 + (-360.0f);
            } else {
              frontier_phi_110_99_ladder = _2429;
            }
            _2666 = frontier_phi_110_99_ladder;
          }
          float _2747;
          if ((_2666 > (-67.5f)) && (_2666 < 67.5f)) {
            float _2740 = (_2666 + 67.5f) * 0.0296296291053295135498046875f;
            uint _2741 = uint(int(_2740));
            float _2743 = _2740 - float(int(_2741));
            float _2744 = _2743 * _2743;
            float _2745 = _2744 * _2743;
            float frontier_phi_123_122_ladder;
            if (_2741 == 3u) {
              frontier_phi_123_122_ladder = ((0.16666667163372039794921875f - (_2743 * 0.5f)) + (_2744 * 0.5f)) - (_2745 * 0.16666667163372039794921875f);
            } else {
              float frontier_phi_123_122_ladder_135_ladder;
              if (_2741 == 2u) {
                frontier_phi_123_122_ladder_135_ladder = (0.666666686534881591796875f - _2744) + (_2745 * 0.5f);
              } else {
                float frontier_phi_123_122_ladder_135_ladder_152_ladder;
                if (_2741 == 1u) {
                  frontier_phi_123_122_ladder_135_ladder_152_ladder = ((_2745 * (-0.5f)) + 0.16666667163372039794921875f) + ((_2744 + _2743) * 0.5f);
                } else {
                  frontier_phi_123_122_ladder_135_ladder_152_ladder = (_2741 == 0u) ? (_2745 * 0.16666667163372039794921875f) : 0.0f;
                }
                frontier_phi_123_122_ladder_135_ladder = frontier_phi_123_122_ladder_135_ladder_152_ladder;
              }
              frontier_phi_123_122_ladder = frontier_phi_123_122_ladder_135_ladder;
            }
            _2747 = frontier_phi_123_122_ladder;
          } else {
            _2747 = 0.0f;
          }
          float _2760 = min(max((((_1940 * 0.2700000107288360595703125f) * (0.02999999932944774627685546875f - _2222)) * _2747) + _2222, 0.0f), 65535.0f);
          float _2761 = min(max(_2223, 0.0f), 65535.0f);
          float _2762 = min(max(_2224, 0.0f), 65535.0f);
          // AP0 => AP1 + clamp
          float _2775 = min(max(mad(-0.214928567409515380859375f, _2762, mad(-0.236510753631591796875f, _2761, _2760 * 1.45143926143646240234375f)), 0.0f), 65535.0f);
          float _2776 = min(max(mad(-0.0996759235858917236328125f, _2762, mad(1.1762297153472900390625f, _2761, _2760 * (-0.07655377686023712158203125f))), 0.0f), 65535.0f);
          float _2777 = min(max(mad(0.99771630764007568359375f, _2762, mad(-0.0060324496589601039886474609375f, _2761, _2760 * 0.0083161480724811553955078125f)), 0.0f), 65535.0f);
          float _2778 = dot(float3(_2775, _2776, _2777), float3(0.272228717803955078125f, 0.674081742763519287109375f, 0.053689517080783843994140625f));
          float _2787 = ((_2775 - _2778) * 0.959999978542327880859375f) + _2778;
          float _2788 = ((_2776 - _2778) * 0.959999978542327880859375f) + _2778;
          float _2789 = ((_2777 - _2778) * 0.959999978542327880859375f) + _2778;
          float _2792 = log2((_2787 <= 0.0f) ? 6.103515625e-05f : _2787);
          float _2793 = _2792 * 0.3010300099849700927734375f;
          float _2912;
          if (_2793 > (-5.2601776123046875f)) {
            float frontier_phi_137_136_ladder;
            if ((_2793 > (-5.2601776123046875f)) && (_2793 < (-0.74472749233245849609375f))) {
              float _3089 = (_2792 * 0.199999988079071044921875f) + 3.49478626251220703125f;
              uint _3090 = uint(int(_3089));
              float _3092 = _3089 - float(int(_3090));
              uint _3095 = _3090 + 1u;
              float _3102 = _35[_3090] * 0.5f;
              frontier_phi_137_136_ladder = dot(float3(_3092 * _3092, _3092, 1.0f), float3(mad(_35[_3090 + 2u], 0.5f, mad(_35[_3095], -1.0f, _3102)), _35[_3095] - _35[_3090], mad(_35[_3095], 0.5f, _3102)));
            } else {
              float frontier_phi_137_136_ladder_154_ladder;
              if ((_2793 >= (-0.74472749233245849609375f)) && (_2793 < 4.673812389373779296875f)) {
                float _3260 = (_2792 * 0.1666666567325592041015625f) + 0.4123218357563018798828125f;
                uint _3261 = uint(int(_3260));
                float _3263 = _3260 - float(int(_3261));
                uint _3266 = _3261 + 1u;
                float _3273 = _42[_3261] * 0.5f;
                frontier_phi_137_136_ladder_154_ladder = dot(float3(_3263 * _3263, _3263, 1.0f), float3(mad(_42[_3261 + 2u], 0.5f, mad(_42[_3266], -1.0f, _3273)), _42[_3266] - _42[_3261], mad(_42[_3266], 0.5f, _3273)));
              } else {
                frontier_phi_137_136_ladder_154_ladder = 4.0f;
              }
              frontier_phi_137_136_ladder = frontier_phi_137_136_ladder_154_ladder;
            }
            _2912 = frontier_phi_137_136_ladder;
          } else {
            _2912 = -4.0f;
          }
          float _2916 = exp2(_2912 * 3.3219280242919921875f);
          float _2919 = log2((_2788 <= 0.0f) ? 6.103515625e-05f : _2788);
          float _2920 = _2919 * 0.3010300099849700927734375f;
          float _3115;
          if (_2920 > (-5.2601776123046875f)) {
            float frontier_phi_156_155_ladder;
            if ((_2920 > (-5.2601776123046875f)) && (_2920 < (-0.74472749233245849609375f))) {
              float _3281 = (_2919 * 0.199999988079071044921875f) + 3.49478626251220703125f;
              uint _3282 = uint(int(_3281));
              float _3284 = _3281 - float(int(_3282));
              uint _3287 = _3282 + 1u;
              float _3294 = _35[_3282] * 0.5f;
              frontier_phi_156_155_ladder = dot(float3(_3284 * _3284, _3284, 1.0f), float3(mad(_35[_3282 + 2u], 0.5f, mad(_35[_3287], -1.0f, _3294)), _35[_3287] - _35[_3282], mad(_35[_3287], 0.5f, _3294)));
            } else {
              float frontier_phi_156_155_ladder_176_ladder;
              if ((_2920 >= (-0.74472749233245849609375f)) && (_2920 < 4.673812389373779296875f)) {
                float _3636 = (_2919 * 0.1666666567325592041015625f) + 0.4123218357563018798828125f;
                uint _3637 = uint(int(_3636));
                float _3639 = _3636 - float(int(_3637));
                uint _3642 = _3637 + 1u;
                float _3649 = _42[_3637] * 0.5f;
                frontier_phi_156_155_ladder_176_ladder = dot(float3(_3639 * _3639, _3639, 1.0f), float3(mad(_42[_3637 + 2u], 0.5f, mad(_42[_3642], -1.0f, _3649)), _42[_3642] - _42[_3637], mad(_42[_3642], 0.5f, _3649)));
              } else {
                frontier_phi_156_155_ladder_176_ladder = 4.0f;
              }
              frontier_phi_156_155_ladder = frontier_phi_156_155_ladder_176_ladder;
            }
            _3115 = frontier_phi_156_155_ladder;
          } else {
            _3115 = -4.0f;
          }
          float _3119 = exp2(_3115 * 3.3219280242919921875f);
          float _3122 = log2((_2789 <= 0.0f) ? 6.103515625e-05f : _2789);
          float _3123 = _3122 * 0.3010300099849700927734375f;
          float _3307;
          if (_3123 > (-5.2601776123046875f)) {
            float frontier_phi_178_177_ladder;
            if ((_3123 > (-5.2601776123046875f)) && (_3123 < (-0.74472749233245849609375f))) {
              float _3657 = (_3122 * 0.199999988079071044921875f) + 3.49478626251220703125f;
              uint _3658 = uint(int(_3657));
              float _3660 = _3657 - float(int(_3658));
              uint _3663 = _3658 + 1u;
              float _3670 = _35[_3658] * 0.5f;
              frontier_phi_178_177_ladder = dot(float3(_3660 * _3660, _3660, 1.0f), float3(mad(_35[_3658 + 2u], 0.5f, mad(_35[_3663], -1.0f, _3670)), _35[_3663] - _35[_3658], mad(_35[_3663], 0.5f, _3670)));
            } else {
              float frontier_phi_178_177_ladder_200_ladder;
              if ((_3123 >= (-0.74472749233245849609375f)) && (_3123 < 4.673812389373779296875f)) {
                float _4079 = (_3122 * 0.1666666567325592041015625f) + 0.4123218357563018798828125f;
                uint _4080 = uint(int(_4079));
                float _4082 = _4079 - float(int(_4080));
                uint _4085 = _4080 + 1u;
                float _4092 = _42[_4080] * 0.5f;
                frontier_phi_178_177_ladder_200_ladder = dot(float3(_4082 * _4082, _4082, 1.0f), float3(mad(_42[_4080 + 2u], 0.5f, mad(_42[_4085], -1.0f, _4092)), _42[_4085] - _42[_4080], mad(_42[_4085], 0.5f, _4092)));
              } else {
                frontier_phi_178_177_ladder_200_ladder = 4.0f;
              }
              frontier_phi_178_177_ladder = frontier_phi_178_177_ladder_200_ladder;
            }
            _3307 = frontier_phi_178_177_ladder;
          } else {
            _3307 = -4.0f;
          }
          float _3311 = exp2(_3307 * 3.3219280242919921875f);
          float _3314 = mad(0.16386906802654266357421875f, _3311, mad(0.140678703784942626953125f, _3119, _2916 * 0.695452213287353515625f));
          float _3317 = mad(0.095534317195415496826171875f, _3311, mad(0.859671115875244140625f, _3119, _2916 * 0.0447945632040500640869140625f));
          float _3320 = mad(1.00150072574615478515625f, _3311, mad(0.0040252101607620716094970703125f, _3119, _2916 * (-0.0055258828215301036834716796875f)));
          // AP0 => AP1 + clamp
          float _3323 = mad(-0.214928567409515380859375f, _3320, mad(-0.236510753631591796875f, _3317, _3314 * 1.45143926143646240234375f));
          float _3326 = mad(-0.0996759235858917236328125f, _3320, mad(1.1762297153472900390625f, _3317, _3314 * (-0.07655377686023712158203125f)));
          float _3329 = mad(0.99771630764007568359375f, _3320, mad(-0.0060324496589601039886474609375f, _3317, _3314 * 0.0083161480724811553955078125f));
          float _3332 = log2((_3323 <= 0.0f) ? 9.9999997473787516355514526367188e-05f : _3323);
          float _3333 = _3332 * 0.3010300099849700927734375f;
          float _3683;
          if (_3333 > (-2.54062366485595703125f)) {
            float frontier_phi_202_201_ladder;
            if ((_3333 > (-2.54062366485595703125f)) && (_3333 < 0.68124115467071533203125f)) {
              float _4100 = (_3332 + 8.43976879119873046875f) * 0.654034316539764404296875f;
              uint _4101 = uint(int(_4100));
              float _4103 = _4100 - float(int(_4101));
              uint _4106 = _4101 + 1u;
              float _4113 = _54[_4101] * 0.5f;
              frontier_phi_202_201_ladder = dot(float3(_4103 * _4103, _4103, 1.0f), float3(mad(_54[_4101 + 2u], 0.5f, mad(_54[_4106], -1.0f, _4113)), _54[_4106] - _54[_4101], mad(_54[_4106], 0.5f, _4113)));
            } else {
              float frontier_phi_202_201_ladder_223_ladder;
              if ((_3333 >= 0.68124115467071533203125f) && (_3333 < 3.00247669219970703125f)) {
                float _4261 = (_3332 + (-2.2630341053009033203125f)) * 0.90779674053192138671875f;
                uint _4262 = uint(int(_4261));
                float _4264 = _4261 - float(int(_4262));
                uint _4267 = _4262 + 1u;
                float _4274 = _66[_4262] * 0.5f;
                frontier_phi_202_201_ladder_223_ladder = dot(float3(_4264 * _4264, _4264, 1.0f), float3(mad(_66[_4262 + 2u], 0.5f, mad(_66[_4267], -1.0f, _4274)), _66[_4267] - _66[_4262], mad(_66[_4267], 0.5f, _4274)));
              } else {
                frontier_phi_202_201_ladder_223_ladder = (_3332 * 0.0120411999523639678955078125f) + 1.5611422061920166015625f;
              }
              frontier_phi_202_201_ladder = frontier_phi_202_201_ladder_223_ladder;
            }
            _3683 = frontier_phi_202_201_ladder;
          } else {
            _3683 = -1.6989700794219970703125f;
          }
          float _3691 = log2((_3326 <= 0.0f) ? 9.9999997473787516355514526367188e-05f : _3326);
          float _3692 = _3691 * 0.3010300099849700927734375f;
          float _4126;
          if (_3692 > (-2.54062366485595703125f)) {
            float frontier_phi_225_224_ladder;
            if ((_3692 > (-2.54062366485595703125f)) && (_3692 < 0.68124115467071533203125f)) {
              float _4283 = (_3691 + 8.43976879119873046875f) * 0.654034316539764404296875f;
              uint _4284 = uint(int(_4283));
              float _4286 = _4283 - float(int(_4284));
              uint _4289 = _4284 + 1u;
              float _4296 = _54[_4284] * 0.5f;
              frontier_phi_225_224_ladder = dot(float3(_4286 * _4286, _4286, 1.0f), float3(mad(_54[_4284 + 2u], 0.5f, mad(_54[_4289], -1.0f, _4296)), _54[_4289] - _54[_4284], mad(_54[_4289], 0.5f, _4296)));
            } else {
              float frontier_phi_225_224_ladder_239_ladder;
              if ((_3692 >= 0.68124115467071533203125f) && (_3692 < 3.00247669219970703125f)) {
                float _4443 = (_3691 + (-2.2630341053009033203125f)) * 0.90779674053192138671875f;
                uint _4444 = uint(int(_4443));
                float _4446 = _4443 - float(int(_4444));
                uint _4449 = _4444 + 1u;
                float _4456 = _66[_4444] * 0.5f;
                frontier_phi_225_224_ladder_239_ladder = dot(float3(_4446 * _4446, _4446, 1.0f), float3(mad(_66[_4444 + 2u], 0.5f, mad(_66[_4449], -1.0f, _4456)), _66[_4449] - _66[_4444], mad(_66[_4449], 0.5f, _4456)));
              } else {
                frontier_phi_225_224_ladder_239_ladder = (_3691 * 0.0120411999523639678955078125f) + 1.5611422061920166015625f;
              }
              frontier_phi_225_224_ladder = frontier_phi_225_224_ladder_239_ladder;
            }
            _4126 = frontier_phi_225_224_ladder;
          } else {
            _4126 = -1.6989700794219970703125f;
          }
          float _4134 = log2((_3329 <= 0.0f) ? 9.9999997473787516355514526367188e-05f : _3329);
          float _4135 = _4134 * 0.3010300099849700927734375f;
          float _4309;
          if (_4135 > (-2.54062366485595703125f)) {
            float frontier_phi_241_240_ladder;
            if ((_4135 > (-2.54062366485595703125f)) && (_4135 < 0.68124115467071533203125f)) {
              float _4465 = (_4134 + 8.43976879119873046875f) * 0.654034316539764404296875f;
              uint _4466 = uint(int(_4465));
              float _4468 = _4465 - float(int(_4466));
              uint _4471 = _4466 + 1u;
              float _4478 = _54[_4466] * 0.5f;
              frontier_phi_241_240_ladder = dot(float3(_4468 * _4468, _4468, 1.0f), float3(mad(_54[_4466 + 2u], 0.5f, mad(_54[_4471], -1.0f, _4478)), _54[_4471] - _54[_4466], mad(_54[_4471], 0.5f, _4478)));
            } else {
              float frontier_phi_241_240_ladder_249_ladder;
              if ((_4135 >= 0.68124115467071533203125f) && (_4135 < 3.00247669219970703125f)) {
                float _4489 = (_4134 + (-2.2630341053009033203125f)) * 0.90779674053192138671875f;
                uint _4490 = uint(int(_4489));
                float _4492 = _4489 - float(int(_4490));
                uint _4495 = _4490 + 1u;
                float _4502 = _66[_4490] * 0.5f;
                frontier_phi_241_240_ladder_249_ladder = dot(float3(_4492 * _4492, _4492, 1.0f), float3(mad(_66[_4490 + 2u], 0.5f, mad(_66[_4495], -1.0f, _4502)), _66[_4495] - _66[_4490], mad(_66[_4495], 0.5f, _4502)));
              } else {
                frontier_phi_241_240_ladder_249_ladder = (_4134 * 0.0120411999523639678955078125f) + 1.5611422061920166015625f;
              }
              frontier_phi_241_240_ladder = frontier_phi_241_240_ladder_249_ladder;
            }
            _4309 = frontier_phi_241_240_ladder;
          } else {
            _4309 = -1.6989700794219970703125f;
          }
          float _4315 = exp2(_3683 * 3.3219280242919921875f) + (-0.0199999995529651641845703125f);
          float _4317 = (exp2(_4126 * 3.3219280242919921875f) + (-0.0199999995529651641845703125f)) * 0.02084201760590076446533203125f;
          float _4319 = (exp2(_4309 * 3.3219280242919921875f) + (-0.0199999995529651641845703125f)) * 0.02084201760590076446533203125f;
          float _4322 = mad(0.1561876833438873291015625f, _4319, mad(0.1340042054653167724609375f, _4317, _4315 * 0.01380688138306140899658203125f));
          float _4325 = mad(0.053689517080783843994140625f, _4319, mad(0.674081742763519287109375f, _4317, _4315 * 0.0056737959384918212890625f));
          float _4330 = (_4325 + _4322) + mad(1.01033914089202880859375f, _4319, mad(0.0040607335977256298065185546875f, _4317, _4315 * (-0.00011618694406934082508087158203125f)));
          float _4332 = (_4330 == 0.0f) ? 1.0000000133514319600180897396058e-10f : _4330;
          float _4333 = _4322 / _4332;
          float _4334 = _4325 / _4332;
          float _4339 = exp2(log2(min(max(_4325, 0.0f), 65535.0f)) * 0.981100022792816162109375f);
          float _4341 = max(_4334, 1.0000000133514319600180897396058e-10f);
          float _4342 = (_4339 * _4333) / _4341;
          float _4346 = (_4339 * ((1.0f - _4333) - _4334)) / _4341;
          float _4349 = mad(-0.23642469942569732666015625f, _4346, mad(-0.324803292751312255859375f, _4339, _4342 * 1.6410233974456787109375f));
          float _4352 = mad(0.016756348311901092529296875f, _4346, mad(1.6153316497802734375f, _4339, _4342 * (-0.663662850856781005859375f)));
          float _4355 = mad(0.98839485645294189453125f, _4346, mad(-0.008284442126750946044921875f, _4339, _4342 * 0.01172189414501190185546875f));
          float _4356 = dot(float3(_4349, _4352, _4355), float3(0.272228717803955078125f, 0.674081742763519287109375f, 0.053689517080783843994140625f));
          float _4365 = ((_4349 - _4356) * 0.930000007152557373046875f) + _4356;
          float _4366 = ((_4352 - _4356) * 0.930000007152557373046875f) + _4356;
          float _4367 = ((_4355 - _4356) * 0.930000007152557373046875f) + _4356;
          float _4370 = mad(0.1561876833438873291015625f, _4367, mad(0.1340042054653167724609375f, _4366, _4365 * 0.662454187870025634765625f));
          float _4373 = mad(0.053689517080783843994140625f, _4367, mad(0.674081742763519287109375f, _4366, _4365 * 0.272228717803955078125f));
          float _4376 = mad(1.01033914089202880859375f, _4367, mad(0.0040607335977256298065185546875f, _4366, _4365 * (-0.0055746496655046939849853515625f)));
          float _4379 = mad(0.01595330052077770233154296875f, _4376, mad(-0.0061132698319852352142333984375f, _4373, _4370 * 0.98722398281097412109375f));
          float _4382 = mad(0.0053300200961530208587646484375f, _4376, mad(1.00186002254486083984375f, _4373, _4370 * (-0.007598360069096088409423828125f)));
          float _4385 = mad(1.0816800594329833984375f, _4376, mad(-0.0050959498621523380279541015625f, _4373, _4370 * 0.003072570078074932098388671875f));
          _1973 = clamp(mad(-0.4986107647418975830078125f, _4385, mad(-1.53738319873809814453125f, _4382, _4379 * 3.2409698963165283203125f)), 0.0f, 1.0f);
          _1975 = clamp(mad(0.0415550582110881805419921875f, _4385, mad(1.875967502593994140625f, _4382, _4379 * (-0.96924364566802978515625f))), 0.0f, 1.0f);
          _1977 = clamp(mad(1.05697154998779296875f, _4385, mad(-0.2039769589900970458984375f, _4382, _4379 * 0.055630080401897430419921875f)), 0.0f, 1.0f);
        } else {
          _1973 = mad(_112, _1870, mad(_107, _1867, _1864 * _102));
          _1975 = mad(_127, _1870, mad(_122, _1867, _1864 * _117));
          _1977 = mad(_142, _1870, mad(_137, _1867, _1864 * _132));
        }
        float _1979 = max(6.1035199905745685100555419921875e-05f, _1973);
        float _1981 = max(6.1035199905745685100555419921875e-05f, _1975);
        float _1982 = max(6.1035199905745685100555419921875e-05f, _1977);
        frontier_phi_76_57_ladder = min(_1979 * 4.5f, (exp2(log2(max(_1979, 0.017999999225139617919921875f)) * 0.449999988079071044921875f) * 1.09899997711181640625f) + (-0.098999999463558197021484375f));
        frontier_phi_76_57_ladder_1 = min(_1982 * 4.5f, (exp2(log2(max(_1982, 0.017999999225139617919921875f)) * 0.449999988079071044921875f) * 1.09899997711181640625f) + (-0.098999999463558197021484375f));
        frontier_phi_76_57_ladder_2 = min(_1981 * 4.5f, (exp2(log2(max(_1981, 0.017999999225139617919921875f)) * 0.449999988079071044921875f) * 1.09899997711181640625f) + (-0.098999999463558197021484375f));
      } else {
        float frontier_phi_76_57_ladder_61_ladder;
        float frontier_phi_76_57_ladder_61_ladder_1;
        float frontier_phi_76_57_ladder_61_ladder_2;
        if ((_1772 == 3u) || (_1772 == 5u)) {  // TONEMAPPER_OUTPUT_ACES1000nitST2084 || GetOutputDevice() == TONEMAPPER_OUTPUT_ACES1000nitScRGB
          // exposure * 1.5f
          float _2022 = _1751 * 1.5f;
          float _2023 = _1752 * 1.5f;
          // testColor.r = mad(_112, testColor.b, mad(_107, testColor.g, testColor.r * _102));
          // testColor.g = mad(_142, testColor.b, mad(_137, testColor.g, testColor.r * _132));
          // testColor.b = mad(_127, testColor.b, mad(_122, testColor.g, testColor.r * _117));

          // SRGB_2_AP0 (with red exposure * 1.5f )
          float _2026 = mad(0.1773348152637481689453125f, _2023, mad(0.38297808170318603515625f, _2022, _1750 * 0.659551203250885009765625f));
          float _2029 = mad(0.096761621534824371337890625f, _2023, mad(0.81342315673828125f, _2022, _1750 * 0.13468848168849945068359375f));
          float _2032 = mad(0.870704174041748046875f, _2023, mad(0.11154405772686004638671875f, _2022, _1750 * 0.0263159833848476409912109375f));

          // _16_m0[40u].x = 0.01f
          // _16_m0[40u].x = 1499f
          float _2035 = log2(_16_m0[40u].x);
          float _2045 = exp2((clamp((_2035 * 0.13082401454448699951171875f) + 1.7383518218994140625f, 0.0f, 1.0f) * 8.5f) + (-15.0f));
          float _2047 = log2(_16_m0[40u].y);
          float _2057 = exp2((clamp((_2047 * 0.1298237740993499755859375f) + (-0.725060939788818359375f), 0.0f, 1.0f) * 11.5f) + 6.5f);
          float _2059 = log2(_2045 * 0.180000007152557373046875f);
          float _2060 = _2035 * 0.3010300099849700927734375f;
          float _2061 = _2059 * 0.077766083180904388427734375f;
          float _2063 = log2(_16_m0[41u].x * 4.80000019073486328125f);
          float _2064 = _2063 * 0.3010300099849700927734375f;
          float _2069 = (_2064 - _2061) + (-0.1923878192901611328125f);
          float _2084 = log2(_2057 * 0.180000007152557373046875f);
          float _2085 = _2084 * 0.077766083180904388427734375f;
          float _2090 = _2084 * 0.3010300099849700927734375f;
          float _2091 = _2084 * 0.0501716695725917816162109375f;
          float _2101 = (_2047 * 0.3010300099849700927734375f) + (_2084 * 0.060206003487110137939453125f);
          float _2107 = _2101 - (((_2091 + 0.124121248722076416015625f) + _2090) * 0.20000000298023223876953125f);
          float _2126 = exp2((-2.4739310741424560546875f) - _16_m0[40u].w);
          float _82[6];
          _82[0u] = _2060;
          _82[1u] = _2060;
          _82[2u] = (((_2063 - _2035) * ((clamp((log2(_2045) + 15.0f) * 0.117647059261798858642578125f, 0.0f, 1.0f) * 0.1699999868869781494140625f) + 0.180000007152557373046875f)) + _2035) * 0.3010300099849700927734375f;
          _82[3u] = (_2061 + 0.192387998104095458984375f) + _2064;
          _82[4u] = _2069;
          _82[5u] = _2069;
          float _83[6];
          _83[0u] = ((-0.1923878192901611328125f) - _2085) + _2064;
          _83[1u] = (_2085 + 0.192387998104095458984375f) + _2064;
          _83[2u] = (((_2047 - _2063) * ((clamp((log2(_2057) + (-6.5f)) * 0.086956523358821868896484375f, 0.0f, 1.0f) * 0.0099999904632568359375f) + 0.88999998569488525390625f)) + _2063) * 0.3010300099849700927734375f;
          _83[3u] = _2101 - ((((-0.124121248722076416015625f) - _2091) + _2090) * 0.20000000298023223876953125f);
          _83[4u] = _2107;
          _83[5u] = _2107;
          float _2143 = max(max(_2026, _2029), _2032);
          float _2148 = (max(_2143, 1.0000000133514319600180897396058e-10f) - max(min(min(_2026, _2029), _2032), 1.0000000133514319600180897396058e-10f)) / max(_2143, 0.00999999977648258209228515625f);
          float _2161 = ((_2029 + _2026) + _2032) + (sqrt((((_2032 - _2029) * _2032) + ((_2029 - _2026) * _2029)) + ((_2026 - _2032) * _2026)) * 1.75f);
          float _2162 = _2161 * 0.3333333432674407958984375f;
          float _2163 = _2148 + (-0.4000000059604644775390625f);
          float _2164 = _2163 * 5.0f;
          float _2168 = max(1.0f - abs(_2163 * 2.5f), 0.0f);
          float _2179 = ((float(int(uint(_2164 > 0.0f) - uint(_2164 < 0.0f))) * (1.0f - (_2168 * _2168))) + 1.0f) * 0.02500000037252902984619140625f;
          float _2259;
          if (_2162 > 0.053333334624767303466796875f) {
            float frontier_phi_78_77_ladder;
            if (_2162 < 0.1599999964237213134765625f) {
              frontier_phi_78_77_ladder = ((0.23999999463558197021484375f / _2161) + (-0.5f)) * _2179;
            } else {
              frontier_phi_78_77_ladder = 0.0f;
            }
            _2259 = frontier_phi_78_77_ladder;
          } else {
            _2259 = _2179;
          }
          float _2261 = _2259 + 1.0f;
          float _2262 = _2261 * _2026;
          float _2263 = _2261 * _2029;
          float _2264 = _2261 * _2032;
          float _2455;
          if ((_2262 == _2263) && (_2263 == _2264)) {
            _2455 = 0.0f;
          } else {
            float _2465 = ((_2262 * 2.0f) - _2263) - _2264;
            float _2468 = ((_2029 - _2032) * 1.73205077648162841796875f) * _2261;
            float _2470 = atan(_2468 / _2465);
            bool _2473 = _2465 < 0.0f;
            bool _2474 = _2465 == 0.0f;
            bool _2475 = _2468 >= 0.0f;
            bool _2476 = _2468 < 0.0f;
            _2455 = (_2475 && _2474) ? 90.0f : ((_2476 && _2474) ? (-90.0f) : (((_2476 && _2473) ? (_2470 + (-3.1415927410125732421875f)) : ((_2475 && _2473) ? (_2470 + 3.1415927410125732421875f) : _2470)) * 57.2957763671875f));
          }
          float _2461 = min(max((_2455 < 0.0f) ? (_2455 + 360.0f) : _2455, 0.0f), 360.0f);
          float _2671;
          if (_2461 < (-180.0f)) {
            _2671 = _2461 + 360.0f;
          } else {
            float frontier_phi_112_101_ladder;
            if (_2461 > 180.0f) {
              frontier_phi_112_101_ladder = _2461 + (-360.0f);
            } else {
              frontier_phi_112_101_ladder = _2461;
            }
            _2671 = frontier_phi_112_101_ladder;
          }
          float _2803;
          if ((_2671 > (-67.5f)) && (_2671 < 67.5f)) {
            float _2796 = (_2671 + 67.5f) * 0.0296296291053295135498046875f;
            uint _2797 = uint(int(_2796));
            float _2799 = _2796 - float(int(_2797));
            float _2800 = _2799 * _2799;
            float _2801 = _2800 * _2799;
            float frontier_phi_125_124_ladder;
            if (_2797 == 3u) {
              frontier_phi_125_124_ladder = ((0.16666667163372039794921875f - (_2799 * 0.5f)) + (_2800 * 0.5f)) - (_2801 * 0.16666667163372039794921875f);
            } else {
              float frontier_phi_125_124_ladder_139_ladder;
              if (_2797 == 2u) {
                frontier_phi_125_124_ladder_139_ladder = (0.666666686534881591796875f - _2800) + (_2801 * 0.5f);
              } else {
                float frontier_phi_125_124_ladder_139_ladder_158_ladder;
                if (_2797 == 1u) {
                  frontier_phi_125_124_ladder_139_ladder_158_ladder = ((_2801 * (-0.5f)) + 0.16666667163372039794921875f) + ((_2800 + _2799) * 0.5f);
                } else {
                  frontier_phi_125_124_ladder_139_ladder_158_ladder = (_2797 == 0u) ? (_2801 * 0.16666667163372039794921875f) : 0.0f;
                }
                frontier_phi_125_124_ladder_139_ladder = frontier_phi_125_124_ladder_139_ladder_158_ladder;
              }
              frontier_phi_125_124_ladder = frontier_phi_125_124_ladder_139_ladder;
            }
            _2803 = frontier_phi_125_124_ladder;
          } else {
            _2803 = 0.0f;
          }
          float _2816 = min(max((((_2148 * 0.2700000107288360595703125f) * (0.02999999932944774627685546875f - _2262)) * _2803) + _2262, 0.0f), 65535.0f);
          float _2817 = min(max(_2263, 0.0f), 65535.0f);
          float _2818 = min(max(_2264, 0.0f), 65535.0f);
          // AP0 => AP1 + clamp
          float _2831 = min(max(mad(-0.214928567409515380859375f, _2818, mad(-0.236510753631591796875f, _2817, _2816 * 1.45143926143646240234375f)), 0.0f), 65504.0f);
          float _2833 = min(max(mad(-0.0996759235858917236328125f, _2818, mad(1.1762297153472900390625f, _2817, _2816 * (-0.07655377686023712158203125f))), 0.0f), 65504.0f);
          float _2834 = min(max(mad(0.99771630764007568359375f, _2818, mad(-0.0060324496589601039886474609375f, _2817, _2816 * 0.0083161480724811553955078125f)), 0.0f), 65504.0f);

          float _2835 = dot(float3(_2831, _2833, _2834), float3(0.272228717803955078125f, 0.674081742763519287109375f, 0.053689517080783843994140625f));
          float _2848 = log2(max(((_2831 - _2835) * 0.959999978542327880859375f) + _2835, 1.0000000133514319600180897396058e-10f));
          float _2849 = _2848 * 0.3010300099849700927734375f;
          float _2850 = log2(exp2(_2059 - _16_m0[40u].z));
          float _2851 = _2850 * 0.3010300099849700927734375f;
          float _2933;
          if (_2849 > _2851) {
            float _2929 = log2(_2126);
            float _2930 = _2929 * 0.3010300099849700927734375f;
            float frontier_phi_141_140_ladder;
            if ((_2849 > _2851) && (_2849 < _2930)) {
              float _3133 = ((_2848 - _2850) * 0.903090000152587890625f) / ((_2929 - _2850) * 0.3010300099849700927734375f);
              uint _3134 = uint(int(_3133));
              float _3136 = _3133 - float(int(_3134));
              uint _3139 = _3134 + 1u;
              float _3146 = _82[_3134] * 0.5f;
              frontier_phi_141_140_ladder = dot(float3(_3136 * _3136, _3136, 1.0f), float3(mad(_82[_3134 + 2u], 0.5f, mad(_82[_3139], -1.0f, _3146)), _82[_3139] - _82[_3134], mad(_82[_3139], 0.5f, _3146)));
            } else {
              float frontier_phi_141_140_ladder_160_ladder;
              if ((_2849 >= _2930) && (_2849 < _2090)) {
                float _3345 = ((_2848 - _2929) * 0.903090000152587890625f) / ((_2084 - _2929) * 0.3010300099849700927734375f);
                uint _3346 = uint(int(_3345));
                float _3348 = _3345 - float(int(_3346));
                uint _3351 = _3346 + 1u;
                float _3358 = _83[_3346] * 0.5f;
                frontier_phi_141_140_ladder_160_ladder = dot(float3(_3348 * _3348, _3348, 1.0f), float3(mad(_83[_3346 + 2u], 0.5f, mad(_83[_3351], -1.0f, _3358)), _83[_3351] - _83[_3346], mad(_83[_3351], 0.5f, _3358)));
              } else {
                frontier_phi_141_140_ladder_160_ladder = _2101 - (_2848 * 0.060206003487110137939453125f);
              }
              frontier_phi_141_140_ladder = frontier_phi_141_140_ladder_160_ladder;
            }
            _2933 = frontier_phi_141_140_ladder;
          } else {
            _2933 = _2060;
          }
          float _2940 = log2(max(((_2833 - _2835) * 0.959999978542327880859375f) + _2835, 1.0000000133514319600180897396058e-10f));
          float _2941 = _2940 * 0.3010300099849700927734375f;
          float _3161;
          if (_2941 > _2851) {
            float _3157 = log2(_2126);
            float _3158 = _3157 * 0.3010300099849700927734375f;
            float frontier_phi_162_161_ladder;
            if ((_2941 > _2851) && (_2941 < _3158)) {
              float _3370 = ((_2940 - _2850) * 0.903090000152587890625f) / ((_3157 - _2850) * 0.3010300099849700927734375f);
              uint _3371 = uint(int(_3370));
              float _3373 = _3370 - float(int(_3371));
              uint _3376 = _3371 + 1u;
              float _3383 = _82[_3371] * 0.5f;
              frontier_phi_162_161_ladder = dot(float3(_3373 * _3373, _3373, 1.0f), float3(mad(_82[_3371 + 2u], 0.5f, mad(_82[_3376], -1.0f, _3383)), _82[_3376] - _82[_3371], mad(_82[_3376], 0.5f, _3383)));
            } else {
              float frontier_phi_162_161_ladder_184_ladder;
              if ((_2941 >= _3158) && (_2941 < _2090)) {
                float _3698 = ((_2940 - _3157) * 0.903090000152587890625f) / ((_2084 - _3157) * 0.3010300099849700927734375f);
                uint _3699 = uint(int(_3698));
                float _3701 = _3698 - float(int(_3699));
                uint _3704 = _3699 + 1u;
                float _3711 = _83[_3699] * 0.5f;
                frontier_phi_162_161_ladder_184_ladder = dot(float3(_3701 * _3701, _3701, 1.0f), float3(mad(_83[_3699 + 2u], 0.5f, mad(_83[_3704], -1.0f, _3711)), _83[_3704] - _83[_3699], mad(_83[_3704], 0.5f, _3711)));
              } else {
                frontier_phi_162_161_ladder_184_ladder = _2101 - (_2940 * 0.060206003487110137939453125f);
              }
              frontier_phi_162_161_ladder = frontier_phi_162_161_ladder_184_ladder;
            }
            _3161 = frontier_phi_162_161_ladder;
          } else {
            _3161 = _2060;
          }
          float _3168 = log2(max(((_2834 - _2835) * 0.959999978542327880859375f) + _2835, 1.0000000133514319600180897396058e-10f));
          float _3169 = _3168 * 0.3010300099849700927734375f;
          float _3398;
          if (_3169 > _2851) {
            float _3394 = log2(_2126);
            float _3395 = _3394 * 0.3010300099849700927734375f;
            float frontier_phi_186_185_ladder;
            if ((_3169 > _2851) && (_3169 < _3395)) {
              float _3723 = ((_3168 - _2850) * 0.903090000152587890625f) / ((_3394 - _2850) * 0.3010300099849700927734375f);
              uint _3724 = uint(int(_3723));
              float _3726 = _3723 - float(int(_3724));
              uint _3729 = _3724 + 1u;
              float _3736 = _82[_3724] * 0.5f;
              frontier_phi_186_185_ladder = dot(float3(_3726 * _3726, _3726, 1.0f), float3(mad(_82[_3724 + 2u], 0.5f, mad(_82[_3729], -1.0f, _3736)), _82[_3729] - _82[_3724], mad(_82[_3729], 0.5f, _3736)));
            } else {
              float frontier_phi_186_185_ladder_206_ladder;
              if ((_3169 >= _3395) && (_3169 < _2090)) {
                float _4141 = ((_3168 - _3394) * 0.903090000152587890625f) / ((_2084 - _3394) * 0.3010300099849700927734375f);
                uint _4142 = uint(int(_4141));
                float _4144 = _4141 - float(int(_4142));
                uint _4147 = _4142 + 1u;
                float _4154 = _83[_4142] * 0.5f;
                frontier_phi_186_185_ladder_206_ladder = dot(float3(_4144 * _4144, _4144, 1.0f), float3(mad(_83[_4142 + 2u], 0.5f, mad(_83[_4147], -1.0f, _4154)), _83[_4147] - _83[_4142], mad(_83[_4147], 0.5f, _4154)));
              } else {
                frontier_phi_186_185_ladder_206_ladder = _2101 - (_3168 * 0.060206003487110137939453125f);
              }
              frontier_phi_186_185_ladder = frontier_phi_186_185_ladder_206_ladder;
            }
            _3398 = frontier_phi_186_185_ladder;
          } else {
            _3398 = _2060;
          }
          float _3405 = _16_m0[40u].y - _16_m0[40u].x;  // 1499 - 0.01
          float _3406 = (exp2(_2933 * 3.3219280242919921875f) - _16_m0[40u].x) / _3405;
          float _3408 = (exp2(_3161 * 3.3219280242919921875f) - _16_m0[40u].x) / _3405;
          float _3410 = (exp2(_3398 * 3.3219280242919921875f) - _16_m0[40u].x) / _3405;

          // AP1_TO_XYZ_MAT
          float _3415 = mad(0.1561876833438873291015625f, _3410, mad(0.1340042054653167724609375f, _3408, _3406 * 0.662454187870025634765625f));
          float _3419 = mad(0.053689517080783843994140625f, _3410, mad(0.674081742763519287109375f, _3408, _3406 * 0.272228717803955078125f));
          float _3424 = mad(1.01033914089202880859375f, _3410, mad(0.0040607335977256298065185546875f, _3408, _3406 * (-0.0055746496655046939849853515625f)));

          // XYZ_TO_AP1_MAT
          float _3447 = min(max(mad(-0.23642469942569732666015625f, _3424, mad(-0.324803292751312255859375f, _3419, _3415 * 1.6410233974456787109375f)), 0.0f), 1.0f);
          float _3448 = min(max(mad(0.016756348311901092529296875f, _3424, mad(1.6153316497802734375f, _3419, _3415 * (-0.663662850856781005859375f))), 0.0f), 1.0f);
          float _3449 = min(max(mad(0.98839485645294189453125f, _3424, mad(-0.008284442126750946044921875f, _3419, _3415 * 0.01172189414501190185546875f)), 0.0f), 1.0f);

          // AP1_TO_XYZ_MAT
          float _3452 = mad(0.1561876833438873291015625f, _3449, mad(0.1340042054653167724609375f, _3448, _3447 * 0.662454187870025634765625f));
          float _3455 = mad(0.053689517080783843994140625f, _3449, mad(0.674081742763519287109375f, _3448, _3447 * 0.272228717803955078125f));
          float _3458 = mad(1.01033914089202880859375f, _3449, mad(0.0040607335977256298065185546875f, _3448, _3447 * (-0.0055746496655046939849853515625f)));

          // XYZ_TO_AP1_MAT
          float _3480 = min(max(min(max(mad(-0.23642469942569732666015625f, _3458, mad(-0.324803292751312255859375f, _3455, _3452 * 1.6410233974456787109375f)), 0.0f), 65535.0f) * _16_m0[40u].y, 0.0f), 65535.0f);
          float _3481 = min(max(min(max(mad(0.016756348311901092529296875f, _3458, mad(1.6153316497802734375f, _3455, _3452 * (-0.663662850856781005859375f))), 0.0f), 65535.0f) * _16_m0[40u].y, 0.0f), 65535.0f);
          float _3482 = min(max(min(max(mad(0.98839485645294189453125f, _3458, mad(-0.008284442126750946044921875f, _3455, _3452 * 0.01172189414501190185546875f)), 0.0f), 65535.0f) * _16_m0[40u].y, 0.0f), 65535.0f);

          // AP1 => Output Matrix (BT2020)
          float _3501 = exp2(log2(mad(_112, _3482, mad(_107, _3481, _3480 * _102)) * 9.9999997473787516355514526367188e-05f) * 0.1593017578125f);
          float _3502 = exp2(log2(mad(_127, _3482, mad(_122, _3481, _3480 * _117)) * 9.9999997473787516355514526367188e-05f) * 0.1593017578125f);
          float _3503 = exp2(log2(mad(_142, _3482, mad(_137, _3481, _3480 * _132)) * 9.9999997473787516355514526367188e-05f) * 0.1593017578125f);

          // Linear => PQ
          frontier_phi_76_57_ladder_61_ladder = exp2(log2((1.0f / ((_3501 * 18.6875f) + 1.0f)) * ((_3501 * 18.8515625f) + 0.8359375f)) * 78.84375f);
          frontier_phi_76_57_ladder_61_ladder_1 = exp2(log2((1.0f / ((_3503 * 18.6875f) + 1.0f)) * ((_3503 * 18.8515625f) + 0.8359375f)) * 78.84375f);
          frontier_phi_76_57_ladder_61_ladder_2 = exp2(log2((1.0f / ((_3502 * 18.6875f) + 1.0f)) * ((_3502 * 18.8515625f) + 0.8359375f)) * 78.84375f);
        } else {
          float frontier_phi_76_57_ladder_61_ladder_69_ladder;
          float frontier_phi_76_57_ladder_61_ladder_69_ladder_1;
          float frontier_phi_76_57_ladder_61_ladder_69_ladder_2;
          if ((_1772 & 4294967293u) == 4u) {
            float _2279 = _1751 * 1.5f;
            float _2280 = _1752 * 1.5f;
            float _2283 = mad(0.1773348152637481689453125f, _2280, mad(0.38297808170318603515625f, _2279, _1750 * 0.659551203250885009765625f));
            float _2286 = mad(0.096761621534824371337890625f, _2280, mad(0.81342315673828125f, _2279, _1750 * 0.13468848168849945068359375f));
            float _2289 = mad(0.870704174041748046875f, _2280, mad(0.11154405772686004638671875f, _2279, _1750 * 0.0263159833848476409912109375f));
            float _2290 = log2(_16_m0[40u].x);
            float _2296 = exp2((clamp((_2290 * 0.13082401454448699951171875f) + 1.7383518218994140625f, 0.0f, 1.0f) * 8.5f) + (-15.0f));
            float _2298 = log2(_16_m0[40u].y);
            float _2304 = exp2((clamp((_2298 * 0.1298237740993499755859375f) + (-0.725060939788818359375f), 0.0f, 1.0f) * 11.5f) + 6.5f);
            float _2306 = log2(_2296 * 0.180000007152557373046875f);
            float _2307 = _2290 * 0.3010300099849700927734375f;
            float _2308 = _2306 * 0.077766083180904388427734375f;
            float _2309 = log2(_16_m0[41u].x * 48.0f);
            float _2310 = _2309 * 0.3010300099849700927734375f;
            float _2314 = (_2310 - _2308) + (-0.1923878192901611328125f);
            float _2325 = log2(_2304 * 0.180000007152557373046875f);
            float _2326 = _2325 * 0.077766083180904388427734375f;
            float _2331 = _2325 * 0.3010300099849700927734375f;
            float _2332 = _2325 * 0.0501716695725917816162109375f;
            float _2338 = (_2298 * 0.3010300099849700927734375f) + (_2325 * 0.060206003487110137939453125f);
            float _2343 = _2338 - (((_2332 + 0.124121248722076416015625f) + _2331) * 0.20000000298023223876953125f);
            float _2357 = exp2((-2.4739310741424560546875f) - _16_m0[40u].w);
            float _80[6];
            _80[0u] = _2307;
            _80[1u] = _2307;
            _80[2u] = (((_2309 - _2290) * ((clamp((log2(_2296) + 15.0f) * 0.117647059261798858642578125f, 0.0f, 1.0f) * 0.1699999868869781494140625f) + 0.180000007152557373046875f)) + _2290) * 0.3010300099849700927734375f;
            _80[3u] = (_2308 + 0.192387998104095458984375f) + _2310;
            _80[4u] = _2314;
            _80[5u] = _2314;
            float _81[6];
            _81[0u] = ((-0.1923878192901611328125f) - _2326) + _2310;
            _81[1u] = (_2326 + 0.192387998104095458984375f) + _2310;
            _81[2u] = (((_2298 - _2309) * ((clamp((log2(_2304) + (-6.5f)) * 0.086956523358821868896484375f, 0.0f, 1.0f) * 0.0099999904632568359375f) + 0.88999998569488525390625f)) + _2309) * 0.3010300099849700927734375f;
            _81[3u] = _2338 - ((((-0.124121248722076416015625f) - _2332) + _2331) * 0.20000000298023223876953125f);
            _81[4u] = _2343;
            _81[5u] = _2343;
            float _2373 = max(max(_2283, _2286), _2289);
            float _2378 = (max(_2373, 1.0000000133514319600180897396058e-10f) - max(min(min(_2283, _2286), _2289), 1.0000000133514319600180897396058e-10f)) / max(_2373, 0.00999999977648258209228515625f);
            float _2391 = ((_2286 + _2283) + _2289) + (sqrt((((_2289 - _2286) * _2289) + ((_2286 - _2283) * _2286)) + ((_2283 - _2289) * _2283)) * 1.75f);
            float _2392 = _2391 * 0.3333333432674407958984375f;
            float _2393 = _2378 + (-0.4000000059604644775390625f);
            float _2394 = _2393 * 5.0f;
            float _2398 = max(1.0f - abs(_2393 * 2.5f), 0.0f);
            float _2409 = ((float(int(uint(_2394 > 0.0f) - uint(_2394 < 0.0f))) * (1.0f - (_2398 * _2398))) + 1.0f) * 0.02500000037252902984619140625f;
            float _2486;
            if (_2392 > 0.053333334624767303466796875f) {
              float frontier_phi_92_91_ladder;
              if (_2392 < 0.1599999964237213134765625f) {
                frontier_phi_92_91_ladder = ((0.23999999463558197021484375f / _2391) + (-0.5f)) * _2409;
              } else {
                frontier_phi_92_91_ladder = 0.0f;
              }
              _2486 = frontier_phi_92_91_ladder;
            } else {
              _2486 = _2409;
            }
            float _2488 = _2486 + 1.0f;
            float _2489 = _2488 * _2283;
            float _2490 = _2488 * _2286;
            float _2491 = _2488 * _2289;
            float _2569;
            if ((_2489 == _2490) && (_2490 == _2491)) {
              _2569 = 0.0f;
            } else {
              float _2579 = ((_2489 * 2.0f) - _2490) - _2491;
              float _2582 = ((_2286 - _2289) * 1.73205077648162841796875f) * _2488;
              float _2584 = atan(_2582 / _2579);
              bool _2587 = _2579 < 0.0f;
              bool _2588 = _2579 == 0.0f;
              bool _2589 = _2582 >= 0.0f;
              bool _2590 = _2582 < 0.0f;
              _2569 = (_2589 && _2588) ? 90.0f : ((_2590 && _2588) ? (-90.0f) : (((_2590 && _2587) ? (_2584 + (-3.1415927410125732421875f)) : ((_2589 && _2587) ? (_2584 + 3.1415927410125732421875f) : _2584)) * 57.2957763671875f));
            }
            float _2575 = min(max((_2569 < 0.0f) ? (_2569 + 360.0f) : _2569, 0.0f), 360.0f);
            float _2853;
            if (_2575 < (-180.0f)) {
              _2853 = _2575 + 360.0f;
            } else {
              float frontier_phi_126_115_ladder;
              if (_2575 > 180.0f) {
                frontier_phi_126_115_ladder = _2575 + (-360.0f);
              } else {
                frontier_phi_126_115_ladder = _2575;
              }
              _2853 = frontier_phi_126_115_ladder;
            }
            float _2951;
            if ((_2853 > (-67.5f)) && (_2853 < 67.5f)) {
              float _2944 = (_2853 + 67.5f) * 0.0296296291053295135498046875f;
              uint _2945 = uint(int(_2944));
              float _2947 = _2944 - float(int(_2945));
              float _2948 = _2947 * _2947;
              float _2949 = _2948 * _2947;
              float frontier_phi_143_142_ladder;
              if (_2945 == 3u) {
                frontier_phi_143_142_ladder = ((0.16666667163372039794921875f - (_2947 * 0.5f)) + (_2948 * 0.5f)) - (_2949 * 0.16666667163372039794921875f);
              } else {
                float frontier_phi_143_142_ladder_164_ladder;
                if (_2945 == 2u) {
                  frontier_phi_143_142_ladder_164_ladder = (0.666666686534881591796875f - _2948) + (_2949 * 0.5f);
                } else {
                  float frontier_phi_143_142_ladder_164_ladder_188_ladder;
                  if (_2945 == 1u) {
                    frontier_phi_143_142_ladder_164_ladder_188_ladder = ((_2949 * (-0.5f)) + 0.16666667163372039794921875f) + ((_2948 + _2947) * 0.5f);
                  } else {
                    frontier_phi_143_142_ladder_164_ladder_188_ladder = (_2945 == 0u) ? (_2949 * 0.16666667163372039794921875f) : 0.0f;
                  }
                  frontier_phi_143_142_ladder_164_ladder = frontier_phi_143_142_ladder_164_ladder_188_ladder;
                }
                frontier_phi_143_142_ladder = frontier_phi_143_142_ladder_164_ladder;
              }
              _2951 = frontier_phi_143_142_ladder;
            } else {
              _2951 = 0.0f;
            }
            float _2964 = min(max((((_2378 * 0.2700000107288360595703125f) * (0.02999999932944774627685546875f - _2489)) * _2951) + _2489, 0.0f), 65535.0f);
            float _2965 = min(max(_2490, 0.0f), 65535.0f);
            float _2966 = min(max(_2491, 0.0f), 65535.0f);
            // AP0 => AP1 + clamp
            float _2979 = min(max(mad(-0.214928567409515380859375f, _2966, mad(-0.236510753631591796875f, _2965, _2964 * 1.45143926143646240234375f)), 0.0f), 65504.0f);
            float _2980 = min(max(mad(-0.0996759235858917236328125f, _2966, mad(1.1762297153472900390625f, _2965, _2964 * (-0.07655377686023712158203125f))), 0.0f), 65504.0f);
            float _2981 = min(max(mad(0.99771630764007568359375f, _2966, mad(-0.0060324496589601039886474609375f, _2965, _2964 * 0.0083161480724811553955078125f)), 0.0f), 65504.0f);
            float _2982 = dot(float3(_2979, _2980, _2981), float3(0.272228717803955078125f, 0.674081742763519287109375f, 0.053689517080783843994140625f));
            float _2995 = log2(max(((_2979 - _2982) * 0.959999978542327880859375f) + _2982, 1.0000000133514319600180897396058e-10f));
            float _2996 = _2995 * 0.3010300099849700927734375f;
            float _2997 = log2(exp2(_2306 - _16_m0[40u].z));
            float _2998 = _2997 * 0.3010300099849700927734375f;
            float _3182;
            if (_2996 > _2998) {
              float _3178 = log2(_2357);
              float _3179 = _3178 * 0.3010300099849700927734375f;
              float frontier_phi_166_165_ladder;
              if ((_2996 > _2998) && (_2996 < _3179)) {
                float _3535 = ((_2995 - _2997) * 0.903090000152587890625f) / ((_3178 - _2997) * 0.3010300099849700927734375f);
                uint _3536 = uint(int(_3535));
                float _3538 = _3535 - float(int(_3536));
                uint _3541 = _3536 + 1u;
                float _3548 = _80[_3536] * 0.5f;
                frontier_phi_166_165_ladder = dot(float3(_3538 * _3538, _3538, 1.0f), float3(mad(_80[_3536 + 2u], 0.5f, mad(_80[_3541], -1.0f, _3548)), _80[_3541] - _80[_3536], mad(_80[_3541], 0.5f, _3548)));
              } else {
                float frontier_phi_166_165_ladder_190_ladder;
                if ((_2996 >= _3179) && (_2996 < _2331)) {
                  float _3756 = ((_2995 - _3178) * 0.903090000152587890625f) / ((_2325 - _3178) * 0.3010300099849700927734375f);
                  uint _3757 = uint(int(_3756));
                  float _3759 = _3756 - float(int(_3757));
                  uint _3762 = _3757 + 1u;
                  float _3769 = _81[_3757] * 0.5f;
                  frontier_phi_166_165_ladder_190_ladder = dot(float3(_3759 * _3759, _3759, 1.0f), float3(mad(_81[_3757 + 2u], 0.5f, mad(_81[_3762], -1.0f, _3769)), _81[_3762] - _81[_3757], mad(_81[_3762], 0.5f, _3769)));
                } else {
                  frontier_phi_166_165_ladder_190_ladder = _2338 - (_2995 * 0.060206003487110137939453125f);
                }
                frontier_phi_166_165_ladder = frontier_phi_166_165_ladder_190_ladder;
              }
              _3182 = frontier_phi_166_165_ladder;
            } else {
              _3182 = _2307;
            }
            float _3189 = log2(max(((_2980 - _2982) * 0.959999978542327880859375f) + _2982, 1.0000000133514319600180897396058e-10f));
            float _3190 = _3189 * 0.3010300099849700927734375f;
            float _3563;
            if (_3190 > _2998) {
              float _3559 = log2(_2357);
              float _3560 = _3559 * 0.3010300099849700927734375f;
              float frontier_phi_192_191_ladder;
              if ((_3190 > _2998) && (_3190 < _3560)) {
                float _3781 = ((_3189 - _2997) * 0.903090000152587890625f) / ((_3559 - _2997) * 0.3010300099849700927734375f);
                uint _3782 = uint(int(_3781));
                float _3784 = _3781 - float(int(_3782));
                uint _3787 = _3782 + 1u;
                float _3794 = _80[_3782] * 0.5f;
                frontier_phi_192_191_ladder = dot(float3(_3784 * _3784, _3784, 1.0f), float3(mad(_80[_3782 + 2u], 0.5f, mad(_80[_3787], -1.0f, _3794)), _80[_3787] - _80[_3782], mad(_80[_3787], 0.5f, _3794)));
              } else {
                float frontier_phi_192_191_ladder_212_ladder;
                if ((_3190 >= _3560) && (_3190 < _2331)) {
                  float _4166 = ((_3189 - _3559) * 0.903090000152587890625f) / ((_2325 - _3559) * 0.3010300099849700927734375f);
                  uint _4167 = uint(int(_4166));
                  float _4169 = _4166 - float(int(_4167));
                  uint _4172 = _4167 + 1u;
                  float _4179 = _81[_4167] * 0.5f;
                  frontier_phi_192_191_ladder_212_ladder = dot(float3(_4169 * _4169, _4169, 1.0f), float3(mad(_81[_4167 + 2u], 0.5f, mad(_81[_4172], -1.0f, _4179)), _81[_4172] - _81[_4167], mad(_81[_4172], 0.5f, _4179)));
                } else {
                  frontier_phi_192_191_ladder_212_ladder = _2338 - (_3189 * 0.060206003487110137939453125f);
                }
                frontier_phi_192_191_ladder = frontier_phi_192_191_ladder_212_ladder;
              }
              _3563 = frontier_phi_192_191_ladder;
            } else {
              _3563 = _2307;
            }
            float _3570 = log2(max(((_2981 - _2982) * 0.959999978542327880859375f) + _2982, 1.0000000133514319600180897396058e-10f));
            float _3571 = _3570 * 0.3010300099849700927734375f;
            float _3809;
            if (_3571 > _2998) {
              float _3805 = log2(_2357);
              float _3806 = _3805 * 0.3010300099849700927734375f;
              float frontier_phi_214_213_ladder;
              if ((_3571 > _2998) && (_3571 < _3806)) {
                float _4191 = ((_3570 - _2997) * 0.903090000152587890625f) / ((_3805 - _2997) * 0.3010300099849700927734375f);
                uint _4192 = uint(int(_4191));
                float _4194 = _4191 - float(int(_4192));
                uint _4197 = _4192 + 1u;
                float _4204 = _80[_4192] * 0.5f;
                frontier_phi_214_213_ladder = dot(float3(_4194 * _4194, _4194, 1.0f), float3(mad(_80[_4192 + 2u], 0.5f, mad(_80[_4197], -1.0f, _4204)), _80[_4197] - _80[_4192], mad(_80[_4197], 0.5f, _4204)));
              } else {
                float frontier_phi_214_213_ladder_231_ladder;
                if ((_3571 >= _3806) && (_3571 < _2331)) {
                  float _4399 = ((_3570 - _3805) * 0.903090000152587890625f) / ((_2325 - _3805) * 0.3010300099849700927734375f);
                  uint _4400 = uint(int(_4399));
                  float _4402 = _4399 - float(int(_4400));
                  uint _4405 = _4400 + 1u;
                  float _4412 = _81[_4400] * 0.5f;
                  frontier_phi_214_213_ladder_231_ladder = dot(float3(_4402 * _4402, _4402, 1.0f), float3(mad(_81[_4400 + 2u], 0.5f, mad(_81[_4405], -1.0f, _4412)), _81[_4405] - _81[_4400], mad(_81[_4405], 0.5f, _4412)));
                } else {
                  frontier_phi_214_213_ladder_231_ladder = _2338 - (_3570 * 0.060206003487110137939453125f);
                }
                frontier_phi_214_213_ladder = frontier_phi_214_213_ladder_231_ladder;
              }
              _3809 = frontier_phi_214_213_ladder;
            } else {
              _3809 = _2307;
            }
            float _3816 = _16_m0[40u].y - _16_m0[40u].x;
            float _3817 = (exp2(_3182 * 3.3219280242919921875f) - _16_m0[40u].x) / _3816;
            float _3819 = (exp2(_3563 * 3.3219280242919921875f) - _16_m0[40u].x) / _3816;
            float _3821 = (exp2(_3809 * 3.3219280242919921875f) - _16_m0[40u].x) / _3816;
            float _3824 = mad(0.1561876833438873291015625f, _3821, mad(0.1340042054653167724609375f, _3819, _3817 * 0.662454187870025634765625f));
            float _3827 = mad(0.053689517080783843994140625f, _3821, mad(0.674081742763519287109375f, _3819, _3817 * 0.272228717803955078125f));
            float _3830 = mad(1.01033914089202880859375f, _3821, mad(0.0040607335977256298065185546875f, _3819, _3817 * (-0.0055746496655046939849853515625f)));
            float _3843 = min(max(mad(-0.23642469942569732666015625f, _3830, mad(-0.324803292751312255859375f, _3827, _3824 * 1.6410233974456787109375f)), 0.0f), 1.0f);
            float _3844 = min(max(mad(0.016756348311901092529296875f, _3830, mad(1.6153316497802734375f, _3827, _3824 * (-0.663662850856781005859375f))), 0.0f), 1.0f);
            float _3845 = min(max(mad(0.98839485645294189453125f, _3830, mad(-0.008284442126750946044921875f, _3827, _3824 * 0.01172189414501190185546875f)), 0.0f), 1.0f);
            float _3848 = mad(0.1561876833438873291015625f, _3845, mad(0.1340042054653167724609375f, _3844, _3843 * 0.662454187870025634765625f));
            float _3851 = mad(0.053689517080783843994140625f, _3845, mad(0.674081742763519287109375f, _3844, _3843 * 0.272228717803955078125f));
            float _3854 = mad(1.01033914089202880859375f, _3845, mad(0.0040607335977256298065185546875f, _3844, _3843 * (-0.0055746496655046939849853515625f)));
            float _3876 = min(max(min(max(mad(-0.23642469942569732666015625f, _3854, mad(-0.324803292751312255859375f, _3851, _3848 * 1.6410233974456787109375f)), 0.0f), 65535.0f) * _16_m0[40u].y, 0.0f), 65535.0f);
            float _3877 = min(max(min(max(mad(0.016756348311901092529296875f, _3854, mad(1.6153316497802734375f, _3851, _3848 * (-0.663662850856781005859375f))), 0.0f), 65535.0f) * _16_m0[40u].y, 0.0f), 65535.0f);
            float _3878 = min(max(min(max(mad(0.98839485645294189453125f, _3854, mad(-0.008284442126750946044921875f, _3851, _3848 * 0.01172189414501190185546875f)), 0.0f), 65535.0f) * _16_m0[40u].y, 0.0f), 65535.0f);
            float _3897 = exp2(log2(mad(_112, _3878, mad(_107, _3877, _3876 * _102)) * 9.9999997473787516355514526367188e-05f) * 0.1593017578125f);
            float _3898 = exp2(log2(mad(_127, _3878, mad(_122, _3877, _3876 * _117)) * 9.9999997473787516355514526367188e-05f) * 0.1593017578125f);
            float _3899 = exp2(log2(mad(_142, _3878, mad(_137, _3877, _3876 * _132)) * 9.9999997473787516355514526367188e-05f) * 0.1593017578125f);
            frontier_phi_76_57_ladder_61_ladder_69_ladder = exp2(log2((1.0f / ((_3897 * 18.6875f) + 1.0f)) * ((_3897 * 18.8515625f) + 0.8359375f)) * 78.84375f);
            frontier_phi_76_57_ladder_61_ladder_69_ladder_1 = exp2(log2((1.0f / ((_3899 * 18.6875f) + 1.0f)) * ((_3899 * 18.8515625f) + 0.8359375f)) * 78.84375f);
            frontier_phi_76_57_ladder_61_ladder_69_ladder_2 = exp2(log2((1.0f / ((_3898 * 18.6875f) + 1.0f)) * ((_3898 * 18.8515625f) + 0.8359375f)) * 78.84375f);
          } else {
            float frontier_phi_76_57_ladder_61_ladder_69_ladder_80_ladder;
            float frontier_phi_76_57_ladder_61_ladder_69_ladder_80_ladder_1;
            float frontier_phi_76_57_ladder_61_ladder_69_ladder_80_ladder_2;
            if (_1772 == 7u) {
              float _2497 = mad(0.0473663508892059326171875f, _1752, mad(0.3395121395587921142578125f, _1751, _1750 * 0.613191545009613037109375f));
              float _2500 = mad(0.013450006954371929168701171875f, _1752, mad(0.916335761547088623046875f, _1751, _1750 * 0.070206917822360992431640625f));
              float _2503 = mad(0.869606792926788330078125f, _1752, mad(0.10956729948520660400390625f, _1751, _1750 * 0.02061887271702289581298828125f));
              float _2524 = exp2(log2(mad(_112, _2503, mad(_107, _2500, _2497 * _102)) * 9.9999997473787516355514526367188e-05f) * 0.1593017578125f);
              float _2525 = exp2(log2(mad(_127, _2503, mad(_122, _2500, _2497 * _117)) * 9.9999997473787516355514526367188e-05f) * 0.1593017578125f);
              float _2526 = exp2(log2(mad(_142, _2503, mad(_137, _2500, _2497 * _132)) * 9.9999997473787516355514526367188e-05f) * 0.1593017578125f);
              frontier_phi_76_57_ladder_61_ladder_69_ladder_80_ladder = exp2(log2((1.0f / ((_2524 * 18.6875f) + 1.0f)) * ((_2524 * 18.8515625f) + 0.8359375f)) * 78.84375f);
              frontier_phi_76_57_ladder_61_ladder_69_ladder_80_ladder_1 = exp2(log2((1.0f / ((_2526 * 18.6875f) + 1.0f)) * ((_2526 * 18.8515625f) + 0.8359375f)) * 78.84375f);
              frontier_phi_76_57_ladder_61_ladder_69_ladder_80_ladder_2 = exp2(log2((1.0f / ((_2525 * 18.6875f) + 1.0f)) * ((_2525 * 18.8515625f) + 0.8359375f)) * 78.84375f);
            } else {
              float frontier_phi_76_57_ladder_61_ladder_69_ladder_80_ladder_94_ladder;
              float frontier_phi_76_57_ladder_61_ladder_69_ladder_80_ladder_94_ladder_1;
              float frontier_phi_76_57_ladder_61_ladder_69_ladder_80_ladder_94_ladder_2;
              if (_1772 == 8u) {
                frontier_phi_76_57_ladder_61_ladder_69_ladder_80_ladder_94_ladder = _1750;
                frontier_phi_76_57_ladder_61_ladder_69_ladder_80_ladder_94_ladder_1 = _1752;
                frontier_phi_76_57_ladder_61_ladder_69_ladder_80_ladder_94_ladder_2 = _1751;
              } else {
                float frontier_phi_76_57_ladder_61_ladder_69_ladder_80_ladder_94_ladder_105_ladder;
                float frontier_phi_76_57_ladder_61_ladder_69_ladder_80_ladder_94_ladder_105_ladder_1;
                float frontier_phi_76_57_ladder_61_ladder_69_ladder_80_ladder_94_ladder_105_ladder_2;
                if (_1772 == 9u) {
                  float _2680 = mad(0.0473663508892059326171875f, _1740, mad(0.3395121395587921142578125f, _1739, _1738 * 0.613191545009613037109375f));
                  float _2683 = mad(0.013450006954371929168701171875f, _1740, mad(0.916335761547088623046875f, _1739, _1738 * 0.070206917822360992431640625f));
                  float _2686 = mad(0.869606792926788330078125f, _1740, mad(0.10956729948520660400390625f, _1739, _1738 * 0.02061887271702289581298828125f));
                  frontier_phi_76_57_ladder_61_ladder_69_ladder_80_ladder_94_ladder_105_ladder = mad(_112, _2686, mad(_107, _2683, _2680 * _102));
                  frontier_phi_76_57_ladder_61_ladder_69_ladder_80_ladder_94_ladder_105_ladder_1 = mad(_142, _2686, mad(_137, _2683, _2680 * _132));
                  frontier_phi_76_57_ladder_61_ladder_69_ladder_80_ladder_94_ladder_105_ladder_2 = mad(_127, _2686, mad(_122, _2683, _2680 * _117));
                } else {
                  float _2695 = mad(0.0473663508892059326171875f, _1768, mad(0.3395121395587921142578125f, _1767, _1766 * 0.613191545009613037109375f));
                  float _2698 = mad(0.013450006954371929168701171875f, _1768, mad(0.916335761547088623046875f, _1767, _1766 * 0.070206917822360992431640625f));
                  float _2701 = mad(0.869606792926788330078125f, _1768, mad(0.10956729948520660400390625f, _1767, _1766 * 0.02061887271702289581298828125f));
                  frontier_phi_76_57_ladder_61_ladder_69_ladder_80_ladder_94_ladder_105_ladder = exp2(log2(mad(_112, _2701, mad(_107, _2698, _2695 * _102))) * _16_m0[27u].z);
                  frontier_phi_76_57_ladder_61_ladder_69_ladder_80_ladder_94_ladder_105_ladder_1 = exp2(log2(mad(_142, _2701, mad(_137, _2698, _2695 * _132))) * _16_m0[27u].z);
                  frontier_phi_76_57_ladder_61_ladder_69_ladder_80_ladder_94_ladder_105_ladder_2 = exp2(log2(mad(_127, _2701, mad(_122, _2698, _2695 * _117))) * _16_m0[27u].z);
                }
                frontier_phi_76_57_ladder_61_ladder_69_ladder_80_ladder_94_ladder = frontier_phi_76_57_ladder_61_ladder_69_ladder_80_ladder_94_ladder_105_ladder;
                frontier_phi_76_57_ladder_61_ladder_69_ladder_80_ladder_94_ladder_1 = frontier_phi_76_57_ladder_61_ladder_69_ladder_80_ladder_94_ladder_105_ladder_1;
                frontier_phi_76_57_ladder_61_ladder_69_ladder_80_ladder_94_ladder_2 = frontier_phi_76_57_ladder_61_ladder_69_ladder_80_ladder_94_ladder_105_ladder_2;
              }
              frontier_phi_76_57_ladder_61_ladder_69_ladder_80_ladder = frontier_phi_76_57_ladder_61_ladder_69_ladder_80_ladder_94_ladder;
              frontier_phi_76_57_ladder_61_ladder_69_ladder_80_ladder_1 = frontier_phi_76_57_ladder_61_ladder_69_ladder_80_ladder_94_ladder_1;
              frontier_phi_76_57_ladder_61_ladder_69_ladder_80_ladder_2 = frontier_phi_76_57_ladder_61_ladder_69_ladder_80_ladder_94_ladder_2;
            }
            frontier_phi_76_57_ladder_61_ladder_69_ladder = frontier_phi_76_57_ladder_61_ladder_69_ladder_80_ladder;
            frontier_phi_76_57_ladder_61_ladder_69_ladder_1 = frontier_phi_76_57_ladder_61_ladder_69_ladder_80_ladder_1;
            frontier_phi_76_57_ladder_61_ladder_69_ladder_2 = frontier_phi_76_57_ladder_61_ladder_69_ladder_80_ladder_2;
          }
          frontier_phi_76_57_ladder_61_ladder = frontier_phi_76_57_ladder_61_ladder_69_ladder;
          frontier_phi_76_57_ladder_61_ladder_1 = frontier_phi_76_57_ladder_61_ladder_69_ladder_1;
          frontier_phi_76_57_ladder_61_ladder_2 = frontier_phi_76_57_ladder_61_ladder_69_ladder_2;
        }
        frontier_phi_76_57_ladder = frontier_phi_76_57_ladder_61_ladder;
        frontier_phi_76_57_ladder_1 = frontier_phi_76_57_ladder_61_ladder_1;
        frontier_phi_76_57_ladder_2 = frontier_phi_76_57_ladder_61_ladder_2;
      }
      _2228 = frontier_phi_76_57_ladder;
      _2234 = frontier_phi_76_57_ladder_2;
      _2241 = frontier_phi_76_57_ladder_1;
    }
    testColor = float3(_2228, _2234, _2241);
  }

  SV_Target.x = _2228;
  SV_Target.y = _2234;
  SV_Target.z = _2241;

  SV_Target.rgb = testColor;

  // SV_Target.rgb = renodx::color::bt2020::from::AP1(SV_Target.rgb);
  SV_Target.rgb *= 0.95238101482391357421875f;
  SV_Target.w = 0.0f;
}

SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input) {
  gl_Layer = stage_input.gl_Layer;
  TEXCOORD = stage_input.TEXCOORD;
  frag_main();
  SPIRV_Cross_Output stage_output;
  stage_output.SV_Target = SV_Target;
  return stage_output;
}
